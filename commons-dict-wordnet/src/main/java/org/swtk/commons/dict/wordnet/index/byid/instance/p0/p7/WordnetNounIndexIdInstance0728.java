package org.swtk.commons.dict.wordnet.index.byid.instance.p0.p7;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0728 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("07280087", "{\"term\":\"foghorn\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03380017\", \"07280087\"]}");
	add("07280087", "{\"term\":\"fogsignal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07280087\"]}");
	add("07280214", "{\"term\":\"horn\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"02764839\", \"03399752\", \"03541941\", \"03542421\", \"14782206\", \"01328494\", \"03115320\", \"03542111\", \"07280214\", \"01328058\", \"03542265\"]}");
	add("07280324", "{\"term\":\"red flag\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00426618\", \"06895294\", \"07280324\"]}");
	add("07280494", "{\"term\":\"siren\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"01641828\", \"04231457\", \"07280494\", \"10075218\", \"10621248\"]}");
	add("07280591", "{\"term\":\"alarm bell\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07280591\"]}");
	add("07280591", "{\"term\":\"tocsin\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04451255\", \"07280591\"]}");
	add("07280695", "{\"term\":\"brake light\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07280695\"]}");
	add("07280695", "{\"term\":\"stoplight\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06887235\", \"07280695\"]}");
	add("07280883", "{\"term\":\"buoy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07280883\"]}");
	add("07281147", "{\"term\":\"acoustic buoy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07281147\"]}");
	add("07281278", "{\"term\":\"bell buoy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07281278\"]}");
	add("07281278", "{\"term\":\"gong buoy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07281278\"]}");
	add("07281370", "{\"term\":\"whistle buoy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07281370\"]}");
	add("07281370", "{\"term\":\"whistling buoy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07281370\"]}");
	add("07281481", "{\"term\":\"can\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"04453410\", \"04453655\", \"05566889\", \"07281481\", \"13788130\", \"02950393\"]}");
	add("07281481", "{\"term\":\"can buoy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07281481\"]}");
	add("07281584", "{\"term\":\"conical buoy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07281584\"]}");
	add("07281584", "{\"term\":\"nun\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06851162\", \"07281584\", \"10387708\"]}");
	add("07281584", "{\"term\":\"nun buoy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07281584\"]}");
	add("07281684", "{\"term\":\"spar buoy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07281684\"]}");
	add("07281772", "{\"term\":\"barber\u0027s pole\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07281772\"]}");
	add("07281865", "{\"term\":\"staff\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"06874910\", \"07281865\", \"15074887\", \"08304507\", \"04303399\", \"08456947\"]}");
	add("07282014", "{\"term\":\"crosier\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07282014\"]}");
	add("07282014", "{\"term\":\"crozier\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07282014\"]}");
	add("07282166", "{\"term\":\"mace\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"07282166\", \"07831270\", \"10298153\", \"14968755\"]}");
	add("07282278", "{\"term\":\"scepter\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07282278\", \"14467142\"]}");
	add("07282278", "{\"term\":\"sceptre\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07282278\", \"14467142\"]}");
	add("07282278", "{\"term\":\"verge\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04535551\", \"07282278\", \"05132458\", \"13926744\"]}");
	add("07282278", "{\"term\":\"wand\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"02812499\", \"07282278\", \"13185183\", \"04556915\"]}");
	add("07282407", "{\"term\":\"bauble\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02790458\", \"07282407\"]}");
	add("07282500", "{\"term\":\"tipstaff\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07282500\"]}");
	add("07282636", "{\"term\":\"cordon\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03112034\", \"07282636\", \"08393679\"]}");
	add("07282740", "{\"term\":\"wings\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07282740\", \"00180765\"]}");
	add("07282871", "{\"term\":\"black belt\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07282871\", \"09877571\"]}");
	add("07283007", "{\"term\":\"blue ribbon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07283007\"]}");
	add("07283007", "{\"term\":\"cordon bleu\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07283007\", \"09984954\"]}");
	add("07283118", "{\"term\":\"button\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"02932225\", \"04080537\", \"05531071\", \"07283118\", \"11552367\", \"04033499\", \"02931992\"]}");
	add("07283308", "{\"term\":\"emmy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07283308\"]}");
	add("07283464", "{\"term\":\"nobel prize\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07283464\"]}");
	add("07283672", "{\"term\":\"academy award\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07283672\"]}");
	add("07283672", "{\"term\":\"oscar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07283672\"]}");
	add("07283868", "{\"term\":\"prix de rome\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07283868\"]}");
	add("07284135", "{\"term\":\"prix goncourt\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07284135\"]}");
	add("07284257", "{\"term\":\"chevron\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03019629\", \"07284257\"]}");
	add("07284257", "{\"term\":\"grade insignia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07284257\"]}");
	add("07284257", "{\"term\":\"stripe\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"04690493\", \"05854276\", \"07284257\", \"07284463\", \"02787755\"]}");
	add("07284257", "{\"term\":\"stripes\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07284257\"]}");
	add("07284463", "{\"term\":\"stripe\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"04690493\", \"05854276\", \"07284257\", \"07284463\", \"02787755\"]}");
	add("07284621", "{\"term\":\"icon\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03564151\", \"03937282\", \"07284621\"]}");
	add("07284884", "{\"term\":\"mark\", \"synsetCount\":15, \"upperType\":\"NOUN\", \"ids\":[\"00065609\", \"04688744\", \"04701248\", \"06453473\", \"06659006\", \"06830640\", \"09940867\", \"11176933\", \"13710138\", \"06807523\", \"04683421\", \"06811608\", \"07276776\", \"07284884\", \"05745098\"]}");
	add("07284884", "{\"term\":\"marker\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03727498\", \"07284884\", \"03727288\"]}");
	add("07284884", "{\"term\":\"marking\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00264485\", \"00876655\", \"04687642\", \"07284884\"]}");
	add("07285306", "{\"term\":\"identifier\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07285306\"]}");
	add("07285423", "{\"term\":\"postmark\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07285423\"]}");
	add("07285598", "{\"term\":\"watermark\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07285598\", \"08696749\"]}");
	add("07285757", "{\"term\":\"broad arrow\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02906241\", \"06831175\", \"07285757\"]}");
	add("07285872", "{\"term\":\"milepost\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07285872\"]}");
	add("07285872", "{\"term\":\"milestone\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07433316\", \"07285872\"]}");
	add("07285985", "{\"term\":\"variable\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"07285985\", \"09492282\", \"05866043\", \"09492089\"]}");
	add("07286183", "{\"term\":\"placeholder\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07286183\", \"10506494\"]}");
	add("07286353", "{\"term\":\"unknown\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07286353\", \"10680441\", \"08649671\"]}");
	add("07286353", "{\"term\":\"unknown quantity\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07286353\", \"07343036\"]}");
	add("07286496", "{\"term\":\"peg\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"03911849\", \"03912066\", \"03912225\", \"05569340\", \"07286496\", \"03911659\"]}");
	add("07286496", "{\"term\":\"pin\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"02885888\", \"03911849\", \"03946532\", \"03947170\", \"03947289\", \"03958247\", \"05569340\", \"06900491\", \"07286496\", \"07486511\", \"03946989\"]}");
	add("07286647", "{\"term\":\"pip\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"07278026\", \"07286647\", \"11705560\", \"14226751\", \"14298407\"]}");
	add("07286647", "{\"term\":\"spot\", \"synsetCount\":14, \"upperType\":\"NOUN\", \"ids\":[\"00073081\", \"04293445\", \"04293713\", \"07286647\", \"13783547\", \"14105668\", \"00587299\", \"04293266\", \"06408111\", \"04689819\", \"04701789\", \"04739165\", \"06408287\", \"08682181\"]}");
	add("07286789", "{\"term\":\"logo\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07286789\"]}");
	add("07286789", "{\"term\":\"logotype\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07286789\"]}");
	add("07286877", "{\"term\":\"label\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"07286877\", \"14644244\", \"06864566\", \"07217239\"]}");
	add("07287121", "{\"term\":\"bookplate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07287121\"]}");
	add("07287121", "{\"term\":\"ex libris\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07287121\"]}");
	add("07287250", "{\"term\":\"gummed label\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07287250\"]}");
	add("07287250", "{\"term\":\"paster\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07287250\", \"10424743\"]}");
	add("07287250", "{\"term\":\"sticker\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03163551\", \"06798224\", \"07287250\", \"13110391\"]}");
	add("07287399", "{\"term\":\"dog tag\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07287399\", \"07287512\"]}");
	add("07287512", "{\"term\":\"dog tag\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07287399\", \"07287512\"]}");
	add("07287625", "{\"term\":\"name tag\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07287625\"]}");
	add("07287729", "{\"term\":\"price tag\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07287729\"]}");
	add("07287841", "{\"term\":\"tag\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00145844\", \"00488885\", \"04053034\", \"07288121\", \"07287841\"]}");
	add("07287841", "{\"term\":\"ticket\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"04723979\", \"06507939\", \"06570669\", \"07287841\", \"06530710\"]}");
	add("07288121", "{\"term\":\"tag\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00145844\", \"00488885\", \"04053034\", \"07288121\", \"07287841\"]}");
	add("07288321", "{\"term\":\"title bar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07288321\"]}");
	add("07288507", "{\"term\":\"cairn\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02098829\", \"07288507\"]}");
	add("07288629", "{\"term\":\"shrug\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07288629\"]}");
	add("07288732", "{\"term\":\"wafture\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07288732\"]}");
	add("07288732", "{\"term\":\"wave\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"10790734\", \"11544884\", \"13891583\", \"05266723\", \"07288732\", \"07367435\", \"07360193\", \"00346921\", \"07366790\"]}");
	add("07288732", "{\"term\":\"waving\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07288732\"]}");
	add("07288902", "{\"term\":\"v sign\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07288902\"]}");
	add("07289021", "{\"term\":\"nod\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00337256\", \"07289021\"]}");
	add("07289130", "{\"term\":\"bow\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00548802\", \"02883550\", \"07244001\", \"07289130\", \"13918793\", \"02882960\", \"02883250\", \"02882759\", \"02883431\"]}");
	add("07289130", "{\"term\":\"bowing\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00102230\", \"07289130\"]}");
	add("07289130", "{\"term\":\"obeisance\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01169636\", \"07289130\"]}");
	add("07289435", "{\"term\":\"sign of the cross\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07289435\"]}");
	add("07289595", "{\"term\":\"curtsey\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07289595\"]}");
	add("07289595", "{\"term\":\"curtsy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07289595\"]}");
	add("07289783", "{\"term\":\"genuflection\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07289783\"]}");
	add("07289783", "{\"term\":\"genuflexion\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07289783\"]}");
	add("07289980", "{\"term\":\"kotow\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07289980\"]}");
	add("07289980", "{\"term\":\"kowtow\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07289980\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }