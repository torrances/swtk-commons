package org.swtk.commons.dict.wordnet.index.name.instance.i.n.t.o;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceINTO {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"intolerance\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06214889\", \"04650103\"]}");
	add("{\"term\":\"intonation\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00545879\", \"01257272\", \"01257565\", \"07098358\"]}");
	add("{\"term\":\"intoxicant\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03586803\", \"07900542\"]}");
	add("{\"term\":\"intoxication\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07544195\", \"14042038\", \"14533314\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }