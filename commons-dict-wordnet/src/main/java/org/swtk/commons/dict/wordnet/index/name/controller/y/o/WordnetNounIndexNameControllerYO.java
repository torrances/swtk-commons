package org.swtk.commons.dict.wordnet.index.name.controller.y.o;  import java.util.Collection; import java.util.Set; import java.util.TreeSet;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  	import org.swtk.commons.dict.wordnet.index.name.instance.y.o.b.b.WordnetNounIndexNameInstanceYOBB;
	import org.swtk.commons.dict.wordnet.index.name.instance.y.o.b.i.WordnetNounIndexNameInstanceYOBI;
	import org.swtk.commons.dict.wordnet.index.name.instance.y.o.b.o.WordnetNounIndexNameInstanceYOBO;
	import org.swtk.commons.dict.wordnet.index.name.instance.y.o.d.e.WordnetNounIndexNameInstanceYODE;
	import org.swtk.commons.dict.wordnet.index.name.instance.y.o.d.h.WordnetNounIndexNameInstanceYODH;
	import org.swtk.commons.dict.wordnet.index.name.instance.y.o.g.a.WordnetNounIndexNameInstanceYOGA;
	import org.swtk.commons.dict.wordnet.index.name.instance.y.o.g.h.WordnetNounIndexNameInstanceYOGH;
	import org.swtk.commons.dict.wordnet.index.name.instance.y.o.g.i.WordnetNounIndexNameInstanceYOGI;
	import org.swtk.commons.dict.wordnet.index.name.instance.y.o.g.u.WordnetNounIndexNameInstanceYOGU;
	import org.swtk.commons.dict.wordnet.index.name.instance.y.o.k.e.WordnetNounIndexNameInstanceYOKE;
	import org.swtk.commons.dict.wordnet.index.name.instance.y.o.k.o.WordnetNounIndexNameInstanceYOKO;
	import org.swtk.commons.dict.wordnet.index.name.instance.y.o.k.u.WordnetNounIndexNameInstanceYOKU;
	import org.swtk.commons.dict.wordnet.index.name.instance.y.o.l.k.WordnetNounIndexNameInstanceYOLK;
	import org.swtk.commons.dict.wordnet.index.name.instance.y.o.r.e.WordnetNounIndexNameInstanceYORE;
	import org.swtk.commons.dict.wordnet.index.name.instance.y.o.r.k.WordnetNounIndexNameInstanceYORK;
	import org.swtk.commons.dict.wordnet.index.name.instance.y.o.r.u.WordnetNounIndexNameInstanceYORU;
	import org.swtk.commons.dict.wordnet.index.name.instance.y.o.s.e.WordnetNounIndexNameInstanceYOSE;
	import org.swtk.commons.dict.wordnet.index.name.instance.y.o.t.t.WordnetNounIndexNameInstanceYOTT;
	import org.swtk.commons.dict.wordnet.index.name.instance.y.o.u.n.WordnetNounIndexNameInstanceYOUN;
	import org.swtk.commons.dict.wordnet.index.name.instance.y.o.u.t.WordnetNounIndexNameInstanceYOUT;
	import org.swtk.commons.dict.wordnet.index.name.instance.y.o.w.l.WordnetNounIndexNameInstanceYOWL;
  import com.trimc.blogger.commons.exception.BusinessException;  public final class WordnetNounIndexNameControllerYO {  	public static Collection<IndexNoun> get(final String TERM) throws BusinessException {  		String key = TERM.substring(0, 4).toLowerCase(); 			if ("yobb".equals(key)) return WordnetNounIndexNameInstanceYOBB.get(TERM);
	if ("yobi".equals(key)) return WordnetNounIndexNameInstanceYOBI.get(TERM);
	if ("yobo".equals(key)) return WordnetNounIndexNameInstanceYOBO.get(TERM);
	if ("yode".equals(key)) return WordnetNounIndexNameInstanceYODE.get(TERM);
	if ("yodh".equals(key)) return WordnetNounIndexNameInstanceYODH.get(TERM);
	if ("yoga".equals(key)) return WordnetNounIndexNameInstanceYOGA.get(TERM);
	if ("yogh".equals(key)) return WordnetNounIndexNameInstanceYOGH.get(TERM);
	if ("yogi".equals(key)) return WordnetNounIndexNameInstanceYOGI.get(TERM);
	if ("yogu".equals(key)) return WordnetNounIndexNameInstanceYOGU.get(TERM);
	if ("yoke".equals(key)) return WordnetNounIndexNameInstanceYOKE.get(TERM);
	if ("yoko".equals(key)) return WordnetNounIndexNameInstanceYOKO.get(TERM);
	if ("yoku".equals(key)) return WordnetNounIndexNameInstanceYOKU.get(TERM);
	if ("yolk".equals(key)) return WordnetNounIndexNameInstanceYOLK.get(TERM);
	if ("yore".equals(key)) return WordnetNounIndexNameInstanceYORE.get(TERM);
	if ("york".equals(key)) return WordnetNounIndexNameInstanceYORK.get(TERM);
	if ("yoru".equals(key)) return WordnetNounIndexNameInstanceYORU.get(TERM);
	if ("yose".equals(key)) return WordnetNounIndexNameInstanceYOSE.get(TERM);
	if ("yott".equals(key)) return WordnetNounIndexNameInstanceYOTT.get(TERM);
	if ("youn".equals(key)) return WordnetNounIndexNameInstanceYOUN.get(TERM);
	if ("yout".equals(key)) return WordnetNounIndexNameInstanceYOUT.get(TERM);
	if ("yowl".equals(key)) return WordnetNounIndexNameInstanceYOWL.get(TERM);
  		throw new BusinessException("TERM not found (id = %s)", TERM); 	} 	 	public static Collection<String> terms() throws BusinessException { 		Set<String> set = new TreeSet<String>();  			set.addAll(WordnetNounIndexNameInstanceYOBB.terms());
	set.addAll(WordnetNounIndexNameInstanceYOBI.terms());
	set.addAll(WordnetNounIndexNameInstanceYOBO.terms());
	set.addAll(WordnetNounIndexNameInstanceYODE.terms());
	set.addAll(WordnetNounIndexNameInstanceYODH.terms());
	set.addAll(WordnetNounIndexNameInstanceYOGA.terms());
	set.addAll(WordnetNounIndexNameInstanceYOGH.terms());
	set.addAll(WordnetNounIndexNameInstanceYOGI.terms());
	set.addAll(WordnetNounIndexNameInstanceYOGU.terms());
	set.addAll(WordnetNounIndexNameInstanceYOKE.terms());
	set.addAll(WordnetNounIndexNameInstanceYOKO.terms());
	set.addAll(WordnetNounIndexNameInstanceYOKU.terms());
	set.addAll(WordnetNounIndexNameInstanceYOLK.terms());
	set.addAll(WordnetNounIndexNameInstanceYORE.terms());
	set.addAll(WordnetNounIndexNameInstanceYORK.terms());
	set.addAll(WordnetNounIndexNameInstanceYORU.terms());
	set.addAll(WordnetNounIndexNameInstanceYOSE.terms());
	set.addAll(WordnetNounIndexNameInstanceYOTT.terms());
	set.addAll(WordnetNounIndexNameInstanceYOUN.terms());
	set.addAll(WordnetNounIndexNameInstanceYOUT.terms());
	set.addAll(WordnetNounIndexNameInstanceYOWL.terms());
  		return set; 	} }