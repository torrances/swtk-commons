package org.swtk.commons.dict.wordnet.index.name.instance.g.u.i.l;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceGUIL {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"guild\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08244135\"]}");
	add("{\"term\":\"guilder\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13701960\", \"13702251\"]}");
	add("{\"term\":\"guildhall\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03471771\"]}");
	add("{\"term\":\"guile\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00754297\", \"04883756\", \"05628961\"]}");
	add("{\"term\":\"guillemot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02049413\"]}");
	add("{\"term\":\"guilloche\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03471879\"]}");
	add("{\"term\":\"guillotine\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03472000\", \"06679772\"]}");
	add("{\"term\":\"guilt\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07551633\", \"14014160\"]}");
	add("{\"term\":\"guiltiness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14014160\"]}");
	add("{\"term\":\"guiltlessness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14013348\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }