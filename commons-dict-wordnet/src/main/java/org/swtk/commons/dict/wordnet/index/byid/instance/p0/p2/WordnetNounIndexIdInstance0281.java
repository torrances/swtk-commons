package org.swtk.commons.dict.wordnet.index.byid.instance.p0.p2;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0281 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("02810060", "{\"term\":\"bagnio\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02810060\", \"04588881\"]}");
	add("02810060", "{\"term\":\"bathhouse\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02810060\", \"02810177\"]}");
	add("02810177", "{\"term\":\"bathhouse\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02810060\", \"02810177\"]}");
	add("02810177", "{\"term\":\"bathing machine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02810177\"]}");
	add("02810318", "{\"term\":\"bathing cap\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02810318\"]}");
	add("02810318", "{\"term\":\"swimming cap\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02810318\"]}");
	add("02810445", "{\"term\":\"bath linen\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02810445\"]}");
	add("02810586", "{\"term\":\"bath mat\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02810586\"]}");
	add("02810708", "{\"term\":\"bath oil\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02810708\"]}");
	add("02810801", "{\"term\":\"bathrobe\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02810801\"]}");
	add("02810916", "{\"term\":\"bathroom\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04453410\", \"02810916\"]}");
	add("02811158", "{\"term\":\"bathroom cleaner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02811158\"]}");
	add("02811257", "{\"term\":\"bathroom fixture\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02811257\"]}");
	add("02811345", "{\"term\":\"bath salts\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02811345\"]}");
	add("02811464", "{\"term\":\"bath towel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02811464\"]}");
	add("02811600", "{\"term\":\"bathing tub\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02811600\"]}");
	add("02811600", "{\"term\":\"bathtub\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02811600\"]}");
	add("02811600", "{\"term\":\"tub\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13793066\", \"04500676\", \"02811600\"]}");
	add("02811830", "{\"term\":\"bathometer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02811830\"]}");
	add("02811830", "{\"term\":\"bathymeter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02811830\"]}");
	add("02811964", "{\"term\":\"bathyscape\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02811964\"]}");
	add("02811964", "{\"term\":\"bathyscaph\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02811964\"]}");
	add("02811964", "{\"term\":\"bathyscaphe\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02811964\"]}");
	add("02812103", "{\"term\":\"bathysphere\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02812103\"]}");
	add("02812240", "{\"term\":\"batik\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02812240\"]}");
	add("02812376", "{\"term\":\"batiste\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02812376\"]}");
	add("02812499", "{\"term\":\"baton\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"02812626\", \"02812740\", \"02812871\", \"04498683\", \"02812499\"]}");
	add("02812499", "{\"term\":\"wand\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"02812499\", \"07282278\", \"13185183\", \"04556915\"]}");
	add("02812626", "{\"term\":\"baton\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"02812626\", \"02812740\", \"02812871\", \"04498683\", \"02812499\"]}");
	add("02812740", "{\"term\":\"baton\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"02812626\", \"02812740\", \"02812871\", \"04498683\", \"02812499\"]}");
	add("02812871", "{\"term\":\"baton\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"02812626\", \"02812740\", \"02812871\", \"04498683\", \"02812499\"]}");
	add("02813001", "{\"term\":\"baton rouge bridge\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02813001\"]}");
	add("02813143", "{\"term\":\"batten\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02813143\", \"02814065\"]}");
	add("02813274", "{\"term\":\"battering ram\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02813274\"]}");
	add("02813405", "{\"term\":\"batter\u0027s box\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02813405\"]}");
	add("02813606", "{\"term\":\"battery\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00769692\", \"00989949\", \"02813917\", \"08094013\", \"07970413\", \"02813606\", \"08406303\"]}");
	add("02813606", "{\"term\":\"electric battery\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02813606\"]}");
	add("02813917", "{\"term\":\"battery\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00769692\", \"00989949\", \"02813917\", \"08094013\", \"07970413\", \"02813606\", \"08406303\"]}");
	add("02813917", "{\"term\":\"stamp battery\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02813917\"]}");
	add("02814065", "{\"term\":\"batten\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02813143\", \"02814065\"]}");
	add("02814065", "{\"term\":\"batting\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02814065\", \"00127404\"]}");
	add("02814194", "{\"term\":\"batting cage\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02814194\"]}");
	add("02814194", "{\"term\":\"cage\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"02814194\", \"02940305\", \"10898282\", \"14022451\", \"02940098\"]}");
	add("02814339", "{\"term\":\"batting glove\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02814339\"]}");
	add("02814485", "{\"term\":\"batting helmet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02814485\"]}");
	add("02814603", "{\"term\":\"battle-ax\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09863764\", \"02814603\"]}");
	add("02814603", "{\"term\":\"battle-axe\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02814603\", \"09863764\"]}");
	add("02814753", "{\"term\":\"battle cruiser\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02814753\"]}");
	add("02814854", "{\"term\":\"battle dress\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02814854\"]}");
	add("02814977", "{\"term\":\"battle flag\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02814977\"]}");
	add("02815071", "{\"term\":\"battlement\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02815071\"]}");
	add("02815071", "{\"term\":\"crenelation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00913403\", \"02815071\"]}");
	add("02815071", "{\"term\":\"crenellation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00913403\", \"02815071\"]}");
	add("02815336", "{\"term\":\"battleship\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02815336\"]}");
	add("02815336", "{\"term\":\"battlewagon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02815336\"]}");
	add("02815477", "{\"term\":\"battle sight\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02815477\"]}");
	add("02815477", "{\"term\":\"battlesight\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02815477\"]}");
	add("02815640", "{\"term\":\"batwing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02815640\"]}");
	add("02815766", "{\"term\":\"bay\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"02391569\", \"02698907\", \"02815766\", \"02815920\", \"11724562\", \"07391436\", \"09238571\"]}");
	add("02815920", "{\"term\":\"bay\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"02391569\", \"02698907\", \"02815766\", \"02815920\", \"11724562\", \"07391436\", \"09238571\"]}");
	add("02816084", "{\"term\":\"bayonet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02816084\"]}");
	add("02816224", "{\"term\":\"bayonne bridge\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02816224\"]}");
	add("02816387", "{\"term\":\"bay rum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02816387\"]}");
	add("02816534", "{\"term\":\"bay window\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02816534\", \"05563704\"]}");
	add("02816534", "{\"term\":\"bow window\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02816534\"]}");
	add("02816679", "{\"term\":\"bazaar\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01120503\", \"02816780\", \"02816679\"]}");
	add("02816679", "{\"term\":\"bazar\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02816679\", \"02816780\"]}");
	add("02816780", "{\"term\":\"bazaar\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01120503\", \"02816780\", \"02816679\"]}");
	add("02816780", "{\"term\":\"bazar\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02816679\", \"02816780\"]}");
	add("02816887", "{\"term\":\"bazooka\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02816887\"]}");
	add("02817009", "{\"term\":\"bb\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02817009\"]}");
	add("02817009", "{\"term\":\"bb shot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02817009\"]}");
	add("02817116", "{\"term\":\"b battery\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02817116\"]}");
	add("02817251", "{\"term\":\"bb gun\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02817251\"]}");
	add("02817359", "{\"term\":\"beach ball\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02817359\"]}");
	add("02817359", "{\"term\":\"beachball\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02817359\"]}");
	add("02817473", "{\"term\":\"beach house\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02817473\"]}");
	add("02817563", "{\"term\":\"beach towel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02817563\"]}");
	add("02817668", "{\"term\":\"beach waggon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02817668\"]}");
	add("02817668", "{\"term\":\"beach wagon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02817668\"]}");
	add("02817668", "{\"term\":\"estate car\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02817668\"]}");
	add("02817668", "{\"term\":\"station waggon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02817668\"]}");
	add("02817668", "{\"term\":\"station wagon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02817668\"]}");
	add("02817668", "{\"term\":\"waggon\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02817668\", \"04550444\"]}");
	add("02817668", "{\"term\":\"wagon\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"02817668\", \"04550795\", \"09242765\", \"03984324\", \"04550444\"]}");
	add("02817909", "{\"term\":\"beachwear\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02817909\"]}");
	add("02817995", "{\"term\":\"beacon\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02817995\", \"04049010\", \"07278881\"]}");
	add("02817995", "{\"term\":\"beacon light\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02817995\"]}");
	add("02817995", "{\"term\":\"lighthouse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02817995\"]}");
	add("02817995", "{\"term\":\"pharos\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02817995\"]}");
	add("02818206", "{\"term\":\"bead\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02818372\", \"13924278\", \"02818206\"]}");
	add("02818372", "{\"term\":\"astragal\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02818372\", \"05278882\"]}");
	add("02818372", "{\"term\":\"bead\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02818372\", \"13924278\", \"02818206\"]}");
	add("02818372", "{\"term\":\"beading\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02818372\", \"02818524\"]}");
	add("02818372", "{\"term\":\"beadwork\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02818372\", \"02818524\"]}");
	add("02818524", "{\"term\":\"beading\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02818372\", \"02818524\"]}");
	add("02818524", "{\"term\":\"beadwork\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02818372\", \"02818524\"]}");
	add("02818613", "{\"term\":\"beading plane\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02818613\"]}");
	add("02818735", "{\"term\":\"beads\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02818735\"]}");
	add("02818735", "{\"term\":\"string of beads\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02818735\"]}");
	add("02818884", "{\"term\":\"beaker\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02818884\", \"02818969\"]}");
	add("02818969", "{\"term\":\"beaker\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02818884\", \"02818969\"]}");
	add("02819085", "{\"term\":\"beam\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"02780297\", \"02819516\", \"05143811\", \"11448137\", \"11448493\", \"02819085\", \"06805502\"]}");
	add("02819516", "{\"term\":\"beam\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"02780297\", \"02819516\", \"05143811\", \"11448137\", \"11448493\", \"02819085\", \"06805502\"]}");
	add("02819629", "{\"term\":\"beam balance\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02819629\"]}");
	add("02819791", "{\"term\":\"beanbag\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02819791\"]}");
	add("02819903", "{\"term\":\"beanie\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02819903\"]}");
	add("02819903", "{\"term\":\"beany\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02819903\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }