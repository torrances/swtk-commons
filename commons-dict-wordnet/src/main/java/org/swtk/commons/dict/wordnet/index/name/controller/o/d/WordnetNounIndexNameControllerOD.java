package org.swtk.commons.dict.wordnet.index.name.controller.o.d;  import java.util.Collection; import java.util.Set; import java.util.TreeSet;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  	import org.swtk.commons.dict.wordnet.index.name.instance.o.d.a.l.WordnetNounIndexNameInstanceODAL;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.d.d.b.WordnetNounIndexNameInstanceODDB;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.d.d.i.WordnetNounIndexNameInstanceODDI;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.d.d.m.WordnetNounIndexNameInstanceODDM;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.d.d.n.WordnetNounIndexNameInstanceODDN;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.d.d.s.WordnetNounIndexNameInstanceODDS;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.d.e.r.WordnetNounIndexNameInstanceODER;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.d.e.s.WordnetNounIndexNameInstanceODES;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.d.e.t.WordnetNounIndexNameInstanceODET;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.d.i.n.WordnetNounIndexNameInstanceODIN;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.d.i.o.WordnetNounIndexNameInstanceODIO;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.d.i.s.WordnetNounIndexNameInstanceODIS;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.d.i.u.WordnetNounIndexNameInstanceODIU;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.d.o.a.WordnetNounIndexNameInstanceODOA;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.d.o.b.WordnetNounIndexNameInstanceODOB;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.d.o.c.WordnetNounIndexNameInstanceODOC;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.d.o.m.WordnetNounIndexNameInstanceODOM;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.d.o.n.WordnetNounIndexNameInstanceODON;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.d.o.r.WordnetNounIndexNameInstanceODOR;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.d.o.u.WordnetNounIndexNameInstanceODOU;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.d.o.v.WordnetNounIndexNameInstanceODOV;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.d.y.n.WordnetNounIndexNameInstanceODYN;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.d.y.s.WordnetNounIndexNameInstanceODYS;
  import com.trimc.blogger.commons.exception.BusinessException;  public final class WordnetNounIndexNameControllerOD {  	public static Collection<IndexNoun> get(final String TERM) throws BusinessException {  		String key = TERM.substring(0, 4).toLowerCase(); 			if ("odal".equals(key)) return WordnetNounIndexNameInstanceODAL.get(TERM);
	if ("oddb".equals(key)) return WordnetNounIndexNameInstanceODDB.get(TERM);
	if ("oddi".equals(key)) return WordnetNounIndexNameInstanceODDI.get(TERM);
	if ("oddm".equals(key)) return WordnetNounIndexNameInstanceODDM.get(TERM);
	if ("oddn".equals(key)) return WordnetNounIndexNameInstanceODDN.get(TERM);
	if ("odds".equals(key)) return WordnetNounIndexNameInstanceODDS.get(TERM);
	if ("oder".equals(key)) return WordnetNounIndexNameInstanceODER.get(TERM);
	if ("odes".equals(key)) return WordnetNounIndexNameInstanceODES.get(TERM);
	if ("odet".equals(key)) return WordnetNounIndexNameInstanceODET.get(TERM);
	if ("odin".equals(key)) return WordnetNounIndexNameInstanceODIN.get(TERM);
	if ("odio".equals(key)) return WordnetNounIndexNameInstanceODIO.get(TERM);
	if ("odis".equals(key)) return WordnetNounIndexNameInstanceODIS.get(TERM);
	if ("odiu".equals(key)) return WordnetNounIndexNameInstanceODIU.get(TERM);
	if ("odoa".equals(key)) return WordnetNounIndexNameInstanceODOA.get(TERM);
	if ("odob".equals(key)) return WordnetNounIndexNameInstanceODOB.get(TERM);
	if ("odoc".equals(key)) return WordnetNounIndexNameInstanceODOC.get(TERM);
	if ("odom".equals(key)) return WordnetNounIndexNameInstanceODOM.get(TERM);
	if ("odon".equals(key)) return WordnetNounIndexNameInstanceODON.get(TERM);
	if ("odor".equals(key)) return WordnetNounIndexNameInstanceODOR.get(TERM);
	if ("odou".equals(key)) return WordnetNounIndexNameInstanceODOU.get(TERM);
	if ("odov".equals(key)) return WordnetNounIndexNameInstanceODOV.get(TERM);
	if ("odyn".equals(key)) return WordnetNounIndexNameInstanceODYN.get(TERM);
	if ("odys".equals(key)) return WordnetNounIndexNameInstanceODYS.get(TERM);
  		throw new BusinessException("TERM not found (id = %s)", TERM); 	} 	 	public static Collection<String> terms() throws BusinessException { 		Set<String> set = new TreeSet<String>();  			set.addAll(WordnetNounIndexNameInstanceODAL.terms());
	set.addAll(WordnetNounIndexNameInstanceODDB.terms());
	set.addAll(WordnetNounIndexNameInstanceODDI.terms());
	set.addAll(WordnetNounIndexNameInstanceODDM.terms());
	set.addAll(WordnetNounIndexNameInstanceODDN.terms());
	set.addAll(WordnetNounIndexNameInstanceODDS.terms());
	set.addAll(WordnetNounIndexNameInstanceODER.terms());
	set.addAll(WordnetNounIndexNameInstanceODES.terms());
	set.addAll(WordnetNounIndexNameInstanceODET.terms());
	set.addAll(WordnetNounIndexNameInstanceODIN.terms());
	set.addAll(WordnetNounIndexNameInstanceODIO.terms());
	set.addAll(WordnetNounIndexNameInstanceODIS.terms());
	set.addAll(WordnetNounIndexNameInstanceODIU.terms());
	set.addAll(WordnetNounIndexNameInstanceODOA.terms());
	set.addAll(WordnetNounIndexNameInstanceODOB.terms());
	set.addAll(WordnetNounIndexNameInstanceODOC.terms());
	set.addAll(WordnetNounIndexNameInstanceODOM.terms());
	set.addAll(WordnetNounIndexNameInstanceODON.terms());
	set.addAll(WordnetNounIndexNameInstanceODOR.terms());
	set.addAll(WordnetNounIndexNameInstanceODOU.terms());
	set.addAll(WordnetNounIndexNameInstanceODOV.terms());
	set.addAll(WordnetNounIndexNameInstanceODYN.terms());
	set.addAll(WordnetNounIndexNameInstanceODYS.terms());
  		return set; 	} }