package org.swtk.commons.dict.wordnet.index.byid.instance.p0.p3;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0318 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("03180123", "{\"term\":\"densitometer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03179967\", \"03180123\"]}");
	add("03180270", "{\"term\":\"dental appliance\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03180270\"]}");
	add("03180509", "{\"term\":\"dental floss\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03180509\"]}");
	add("03180509", "{\"term\":\"floss\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03180509\", \"03372391\"]}");
	add("03180649", "{\"term\":\"dental implant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03180649\"]}");
	add("03180750", "{\"term\":\"dentifrice\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03180750\"]}");
	add("03180904", "{\"term\":\"burr drill\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03180904\"]}");
	add("03180904", "{\"term\":\"dentist\u0027s drill\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03180904\"]}");
	add("03181052", "{\"term\":\"dental plate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03181052\"]}");
	add("03181052", "{\"term\":\"denture\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03181052\"]}");
	add("03181052", "{\"term\":\"plate\", \"synsetCount\":15, \"upperType\":\"NOUN\", \"ids\":[\"03181052\", \"03965995\", \"03966668\", \"03966784\", \"03967077\", \"03967244\", \"05588980\", \"07595352\", \"07673273\", \"09418350\", \"13790990\", \"03965779\", \"03966958\", \"03966230\", \"03534081\"]}");
	add("03181260", "{\"term\":\"deodorant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03181260\"]}");
	add("03181260", "{\"term\":\"deodourant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03181260\"]}");
	add("03181429", "{\"term\":\"department store\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03181429\"]}");
	add("03181429", "{\"term\":\"emporium\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03181429\"]}");
	add("03181636", "{\"term\":\"departure gate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03181636\"]}");
	add("03181725", "{\"term\":\"departure lounge\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03181725\"]}");
	add("03181831", "{\"term\":\"depilator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03181831\"]}");
	add("03181831", "{\"term\":\"depilatory\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03181831\", \"14857899\"]}");
	add("03181831", "{\"term\":\"epilator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03181831\"]}");
	add("03182015", "{\"term\":\"deposit\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00373256\", \"03182015\", \"06698605\", \"13370677\", \"13370849\", \"13402318\", \"13483394\", \"09451871\", \"11465491\"]}");
	add("03182015", "{\"term\":\"depositary\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03182015\"]}");
	add("03182015", "{\"term\":\"depository\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03182015\"]}");
	add("03182015", "{\"term\":\"repository\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04083825\", \"10541521\", \"03182015\"]}");
	add("03182374", "{\"term\":\"depressor\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03182374\", \"05484244\", \"05560100\"]}");
	add("03182522", "{\"term\":\"depth bomb\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03182522\"]}");
	add("03182522", "{\"term\":\"depth charge\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03182522\"]}");
	add("03182666", "{\"term\":\"depth finder\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03182666\"]}");
	add("03182839", "{\"term\":\"depth gage\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03182839\"]}");
	add("03182839", "{\"term\":\"depth gauge\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03182839\"]}");
	add("03182982", "{\"term\":\"dermatome\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03182982\"]}");
	add("03183096", "{\"term\":\"derrick\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03183096\", \"03183204\"]}");
	add("03183204", "{\"term\":\"derrick\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03183096\", \"03183204\"]}");
	add("03183340", "{\"term\":\"derringer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03183340\"]}");
	add("03183448", "{\"term\":\"design\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"05641230\", \"03183984\", \"05991037\", \"03183448\", \"05910921\", \"05736623\", \"00929892\"]}");
	add("03183448", "{\"term\":\"figure\", \"synsetCount\":13, \"upperType\":\"NOUN\", \"ids\":[\"00558029\", \"03183448\", \"05939172\", \"07120141\", \"05128718\", \"04683003\", \"13352649\", \"13885383\", \"10364174\", \"03340545\", \"13763162\", \"05224424\", \"07012307\"]}");
	add("03183448", "{\"term\":\"pattern\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"07018386\", \"08509757\", \"05910921\", \"05947513\", \"05675457\", \"03183448\", \"00411260\", \"05939522\"]}");
	add("03183984", "{\"term\":\"design\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"05641230\", \"03183984\", \"05991037\", \"03183448\", \"05910921\", \"05736623\", \"00929892\"]}");
	add("03184155", "{\"term\":\"designer drug\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03184155\"]}");
	add("03184367", "{\"term\":\"desk\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03184367\"]}");
	add("03184576", "{\"term\":\"desk phone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03184576\"]}");
	add("03184677", "{\"term\":\"desktop computer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03184677\"]}");
	add("03184819", "{\"term\":\"desipramine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03184819\"]}");
	add("03184946", "{\"term\":\"dessert plate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03184946\"]}");
	add("03185050", "{\"term\":\"dessert spoon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03185050\"]}");
	add("03185170", "{\"term\":\"destroyer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10028370\", \"03185170\"]}");
	add("03185170", "{\"term\":\"guided missile destroyer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03185170\"]}");
	add("03185398", "{\"term\":\"destroyer escort\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03185398\"]}");
	add("03185531", "{\"term\":\"detached house\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03185531\"]}");
	add("03185531", "{\"term\":\"single dwelling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03185531\"]}");
	add("03185635", "{\"term\":\"detector\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03185959\", \"03186167\", \"03185635\"]}");
	add("03185635", "{\"term\":\"sensing element\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03185635\"]}");
	add("03185635", "{\"term\":\"sensor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03185635\"]}");
	add("03185959", "{\"term\":\"detector\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03185959\", \"03186167\", \"03185635\"]}");
	add("03186167", "{\"term\":\"demodulator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03186167\"]}");
	add("03186167", "{\"term\":\"detector\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03185959\", \"03186167\", \"03185635\"]}");
	add("03186333", "{\"term\":\"detention camp\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03186333\"]}");
	add("03186333", "{\"term\":\"detention home\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03186333\"]}");
	add("03186333", "{\"term\":\"detention house\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03186333\"]}");
	add("03186333", "{\"term\":\"house of detention\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03186333\"]}");
	add("03186565", "{\"term\":\"detergent\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03186565\", \"15121584\"]}");
	add("03186806", "{\"term\":\"detonating fuse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03186806\"]}");
	add("03186898", "{\"term\":\"cap\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"02959683\", \"03143740\", \"06670391\", \"09328264\", \"11552802\", \"02958501\", \"03186898\", \"02958374\", \"02957776\"]}");
	add("03186898", "{\"term\":\"detonating device\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03186898\"]}");
	add("03186898", "{\"term\":\"detonator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03186898\"]}");
	add("03187172", "{\"term\":\"detour\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03187172\"]}");
	add("03187172", "{\"term\":\"roundabout way\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03187172\"]}");
	add("03187349", "{\"term\":\"detox\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03187349\"]}");
	add("03187461", "{\"term\":\"deuce\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03187461\", \"07140494\", \"13765409\", \"13970452\"]}");
	add("03187461", "{\"term\":\"two\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03187461\", \"13765409\"]}");
	add("03187578", "{\"term\":\"developer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03187578\", \"10029716\"]}");
	add("03187746", "{\"term\":\"device\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"03190246\", \"03190430\", \"00172070\", \"07082884\", \"03187746\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }