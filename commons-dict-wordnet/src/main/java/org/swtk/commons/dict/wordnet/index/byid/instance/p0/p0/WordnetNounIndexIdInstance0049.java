package org.swtk.commons.dict.wordnet.index.byid.instance.p0.p0;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0049 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("00490486", "{\"term\":\"cut\", \"synsetCount\":20, \"upperType\":\"NOUN\", \"ids\":[\"00068074\", \"00353157\", \"00360064\", \"00387723\", \"00388465\", \"00490486\", \"00566846\", \"00572481\", \"01228486\", \"03157409\", \"05758945\", \"06439886\", \"06625218\", \"06734210\", \"07669003\", \"14310615\", \"14453311\", \"03157285\", \"06630741\", \"13310182\"]}");
	add("00490486", "{\"term\":\"cutting\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"00360064\", \"00363878\", \"00388465\", \"00490486\", \"00944050\", \"06625002\", \"09285277\", \"00387723\", \"13148232\", \"00947021\"]}");
	add("00490741", "{\"term\":\"all fours\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00490741\"]}");
	add("00490741", "{\"term\":\"high-low-jack\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00490741\"]}");
	add("00490944", "{\"term\":\"baccarat\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00490944\"]}");
	add("00490944", "{\"term\":\"chemin de fer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00490944\"]}");
	add("00491166", "{\"term\":\"beggar-my-neighbor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00491166\"]}");
	add("00491166", "{\"term\":\"beggar-my-neighbour\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00491166\"]}");
	add("00491166", "{\"term\":\"strip-jack-naked\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00491166\"]}");
	add("00491361", "{\"term\":\"blackjack\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00491361\", \"02850247\", \"02850699\", \"12295380\"]}");
	add("00491361", "{\"term\":\"twenty-one\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00491361\", \"13770386\"]}");
	add("00491361", "{\"term\":\"vingt-et-un\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00491361\"]}");
	add("00491580", "{\"term\":\"bridge\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"02902540\", \"02902722\", \"02902852\", \"02902977\", \"00491580\", \"05606958\", \"13815542\", \"02903091\", \"02901994\"]}");
	add("00492048", "{\"term\":\"bridge whist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00492048\"]}");
	add("00492172", "{\"term\":\"auction\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00093186\", \"00492172\"]}");
	add("00492172", "{\"term\":\"auction bridge\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00492172\"]}");
	add("00492377", "{\"term\":\"contract\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00492377\", \"06750143\", \"06532935\"]}");
	add("00492377", "{\"term\":\"contract bridge\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00492377\"]}");
	add("00492572", "{\"term\":\"no-trump\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00492572\"]}");
	add("00492724", "{\"term\":\"casino\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00492724\", \"02981395\"]}");
	add("00492724", "{\"term\":\"cassino\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00492724\"]}");
	add("00492912", "{\"term\":\"crib\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00492912\", \"00493094\", \"03136320\", \"06358595\", \"03136225\"]}");
	add("00492912", "{\"term\":\"cribbage\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00492912\"]}");
	add("00493094", "{\"term\":\"crib\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00492912\", \"00493094\", \"03136320\", \"06358595\", \"03136225\"]}");
	add("00493206", "{\"term\":\"ecarte\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00493206\"]}");
	add("00493320", "{\"term\":\"euchre\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00493320\"]}");
	add("00493320", "{\"term\":\"five hundred\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00493320\", \"13772852\"]}");
	add("00493508", "{\"term\":\"fantan\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00493508\", \"00508898\"]}");
	add("00493508", "{\"term\":\"parliament\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00493508\", \"08336128\"]}");
	add("00493508", "{\"term\":\"sevens\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00493508\"]}");
	add("00493735", "{\"term\":\"faro\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00493735\"]}");
	add("00493882", "{\"term\":\"go fish\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00493882\"]}");
	add("00494042", "{\"term\":\"four-card monte\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00494042\"]}");
	add("00494042", "{\"term\":\"monte\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00494042\"]}");
	add("00494042", "{\"term\":\"three-card monte\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00494042\"]}");
	add("00494319", "{\"term\":\"boodle\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00494319\", \"13406389\"]}");
	add("00494319", "{\"term\":\"chicago\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00494319\", \"09105928\"]}");
	add("00494319", "{\"term\":\"michigan\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00494319\", \"09354956\", \"09122118\"]}");
	add("00494319", "{\"term\":\"newmarket\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00494319\", \"03827438\"]}");
	add("00494319", "{\"term\":\"stops\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00494319\"]}");
	add("00494753", "{\"term\":\"nap\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00494753\", \"00860015\", \"03942321\", \"04954264\", \"15298612\"]}");
	add("00494753", "{\"term\":\"napoleon\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00494753\", \"07642695\", \"11220266\"]}");
	add("00494869", "{\"term\":\"old maid\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00494869\", \"10293049\", \"11792877\", \"12054610\", \"10655886\"]}");
	add("00495111", "{\"term\":\"bezique\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00495111\"]}");
	add("00495111", "{\"term\":\"penuchle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00495111\"]}");
	add("00495111", "{\"term\":\"pinochle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00495111\"]}");
	add("00495111", "{\"term\":\"pinocle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00495111\"]}");
	add("00495304", "{\"term\":\"piquet\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00424566\", \"00495304\"]}");
	add("00495417", "{\"term\":\"pisha paysha\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00495417\"]}");
	add("00495779", "{\"term\":\"poker\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00495779\", \"03982284\"]}");
	add("00495779", "{\"term\":\"poker game\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00495779\"]}");
	add("00496114", "{\"term\":\"rouge et noir\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00496114\"]}");
	add("00496114", "{\"term\":\"trente-et-quarante\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00496114\"]}");
	add("00496342", "{\"term\":\"rum\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00496342\", \"07921278\"]}");
	add("00496342", "{\"term\":\"rummy\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00496342\", \"10057110\"]}");
	add("00496535", "{\"term\":\"patience\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00496535\", \"04647895\"]}");
	add("00496535", "{\"term\":\"solitaire\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00496535\", \"01563822\", \"01814183\", \"04266474\"]}");
	add("00496688", "{\"term\":\"canfield\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00496688\"]}");
	add("00496785", "{\"term\":\"klondike\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00496785\", \"08849712\"]}");
	add("00497178", "{\"term\":\"long whist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00497178\"]}");
	add("00497178", "{\"term\":\"short whist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00497178\"]}");
	add("00497178", "{\"term\":\"whist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00497178\"]}");
	add("00497448", "{\"term\":\"dummy whist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00497448\"]}");
	add("00497610", "{\"term\":\"black maria\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00497610\", \"03984324\"]}");
	add("00497610", "{\"term\":\"hearts\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00497610\"]}");
	add("00497771", "{\"term\":\"crapette\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00497771\"]}");
	add("00497771", "{\"term\":\"russian bank\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00497771\"]}");
	add("00497888", "{\"term\":\"gin\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00497888\", \"03120176\", \"04255961\", \"07920635\"]}");
	add("00497888", "{\"term\":\"gin rummy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00497888\"]}");
	add("00497888", "{\"term\":\"knock rummy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00497888\"]}");
	add("00498071", "{\"term\":\"basket rummy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00498071\"]}");
	add("00498071", "{\"term\":\"canasta\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00498071\"]}");
	add("00498071", "{\"term\":\"meld\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00498071\"]}");
	add("00498332", "{\"term\":\"bolivia\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00498332\", \"08871835\"]}");
	add("00498436", "{\"term\":\"samba\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00498436\", \"00538229\", \"07070935\", \"12222455\"]}");
	add("00498547", "{\"term\":\"draw\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00115856\", \"00498547\", \"00560366\", \"00573322\", \"03237949\", \"03238126\", \"07368316\", \"10052401\", \"09292788\"]}");
	add("00498547", "{\"term\":\"draw poker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00498547\"]}");
	add("00498724", "{\"term\":\"high-low\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00498724\"]}");
	add("00498830", "{\"term\":\"penny ante\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00498830\", \"01112625\"]}");
	add("00498830", "{\"term\":\"penny ante poker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00498830\"]}");
	add("00498935", "{\"term\":\"straight poker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00498935\"]}");
	add("00499097", "{\"term\":\"strip poker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00499097\"]}");
	add("00499231", "{\"term\":\"stud\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00499231\", \"02379943\", \"04150430\", \"04350424\", \"10685026\"]}");
	add("00499231", "{\"term\":\"stud poker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00499231\"]}");
	add("00499438", "{\"term\":\"cinch\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00499438\", \"03035741\", \"00576402\"]}");
	add("00499569", "{\"term\":\"auction pitch\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00499569\"]}");
	add("00499569", "{\"term\":\"pitch\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"00106924\", \"00338036\", \"00499569\", \"00574701\", \"08533915\", \"14935855\", \"05076368\", \"07263321\", \"08642231\", \"00107092\", \"04992447\"]}");
	add("00499711", "{\"term\":\"old sledge\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00499711\"]}");
	add("00499711", "{\"term\":\"seven-up\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00499711\"]}");
	add("00499839", "{\"term\":\"royal casino\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00499839\"]}");
	add("00499958", "{\"term\":\"spade casino\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00499958\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }