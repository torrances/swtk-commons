package org.swtk.commons.dict.wordnet.index.name.instance.p.r.e.v;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstancePREV {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"prevacid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14801436\"]}");
	add("{\"term\":\"prevalence\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"05129364\", \"13846326\", \"04772610\"]}");
	add("{\"term\":\"prevarication\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00753287\", \"04832614\", \"06769542\"]}");
	add("{\"term\":\"prevaricator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10276234\"]}");
	add("{\"term\":\"preventative\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03101244\", \"03525974\", \"04008384\"]}");
	add("{\"term\":\"prevention\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01079274\"]}");
	add("{\"term\":\"preventive\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03101244\", \"03525974\", \"04008384\"]}");
	add("{\"term\":\"preview\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06901556\", \"06901724\"]}");
	add("{\"term\":\"prevision\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"05783078\", \"05813285\", \"05928025\", \"05783826\"]}");
	add("{\"term\":\"prevue\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06901724\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }