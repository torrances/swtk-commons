package org.swtk.commons.dict.wordnet.index.name.instance.p.r.i.m;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstancePRIM {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"prima\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07757599\"]}");
	add("{\"term\":\"primacy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14458819\"]}");
	add("{\"term\":\"primality\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05216164\"]}");
	add("{\"term\":\"primaquine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04008810\"]}");
	add("{\"term\":\"primary\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04008987\", \"09421644\", \"02471711\", \"00183420\"]}");
	add("{\"term\":\"primate\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02472545\", \"09826498\"]}");
	add("{\"term\":\"primates\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02472219\"]}");
	add("{\"term\":\"primateship\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00598647\"]}");
	add("{\"term\":\"primatology\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06083197\"]}");
	add("{\"term\":\"primaxin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04008894\"]}");
	add("{\"term\":\"prime\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"15177369\", \"15254580\", \"15320288\", \"13615208\"]}");
	add("{\"term\":\"primer\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03365691\", \"03412032\", \"06426591\"]}");
	add("{\"term\":\"primidone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04009289\"]}");
	add("{\"term\":\"primigravida\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10491714\"]}");
	add("{\"term\":\"priming\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03365691\", \"03412032\", \"01146559\"]}");
	add("{\"term\":\"primipara\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10491859\"]}");
	add("{\"term\":\"primitive\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06305722\", \"06305894\", \"09650650\"]}");
	add("{\"term\":\"primitiveness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14496208\"]}");
	add("{\"term\":\"primitivism\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04009468\", \"14496208\"]}");
	add("{\"term\":\"primness\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04907157\", \"04908329\"]}");
	add("{\"term\":\"primo\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07044763\"]}");
	add("{\"term\":\"primogenitor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10146343\"]}");
	add("{\"term\":\"primogeniture\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13284156\"]}");
	add("{\"term\":\"primordium\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05305658\"]}");
	add("{\"term\":\"primping\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00830220\"]}");
	add("{\"term\":\"primrose\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12111407\"]}");
	add("{\"term\":\"primula\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12111407\"]}");
	add("{\"term\":\"primulaceae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12110835\"]}");
	add("{\"term\":\"primulales\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12110558\"]}");
	add("{\"term\":\"primus\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04009599\", \"10492275\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }