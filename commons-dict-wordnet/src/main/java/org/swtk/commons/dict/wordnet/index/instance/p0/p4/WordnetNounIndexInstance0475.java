package org.swtk.commons.dict.wordnet.index.instance.p0.p4;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexInstance0475 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("04750006", "{\"term\":\"distinctness\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04750006\", \"14437907\", \"04710036\"]}");
	add("04750006", "{\"term\":\"otherness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04750006\"]}");
	add("04750006", "{\"term\":\"separateness\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04750006\", \"14024698\", \"14437907\"]}");
	add("04750264", "{\"term\":\"identicalness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04750264\"]}");
	add("04750264", "{\"term\":\"identity\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04750264\", \"13808960\", \"05771409\", \"04625427\"]}");
	add("04750264", "{\"term\":\"indistinguishability\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04750264\"]}");
	add("04750610", "{\"term\":\"oneness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04750610\"]}");
	add("04750610", "{\"term\":\"unity\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04750610\", \"13764713\", \"14484149\"]}");
	add("04750726", "{\"term\":\"selfsameness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04750726\"]}");
	add("04750845", "{\"term\":\"similarity\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06261163\", \"04750845\"]}");
	add("04751272", "{\"term\":\"approximation\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00147097\", \"06796299\", \"04751272\", \"05811387\"]}");
	add("04751401", "{\"term\":\"homogeny\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04751401\"]}");
	add("04751559", "{\"term\":\"homology\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04751559\"]}");
	add("04751795", "{\"term\":\"homomorphism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04751795\"]}");
	add("04751795", "{\"term\":\"homomorphy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04751795\"]}");
	add("04751885", "{\"term\":\"isomorphism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04751885\"]}");
	add("04751885", "{\"term\":\"isomorphy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04751885\"]}");
	add("04752054", "{\"term\":\"alikeness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04752054\"]}");
	add("04752054", "{\"term\":\"likeness\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03673968\", \"04752054\"]}");
	add("04752054", "{\"term\":\"similitude\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03122590\", \"04752054\"]}");
	add("04752480", "{\"term\":\"correspondence\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"04752480\", \"05071996\", \"13839491\", \"04720704\", \"06636121\"]}");
	add("04752480", "{\"term\":\"parallelism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04752480\"]}");
	add("04752610", "{\"term\":\"uniformity\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04752610\", \"04776288\"]}");
	add("04752610", "{\"term\":\"uniformness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04752610\"]}");
	add("04752919", "{\"term\":\"homogeneity\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04776473\", \"04752919\"]}");
	add("04752919", "{\"term\":\"homogeneousness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04752919\"]}");
	add("04753172", "{\"term\":\"consistence\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04941723\", \"04753172\"]}");
	add("04753172", "{\"term\":\"consistency\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04792423\", \"14444184\", \"04753172\", \"04941723\"]}");
	add("04753374", "{\"term\":\"approach\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00574305\", \"04753374\", \"05053622\", \"07179000\", \"07325125\", \"08510971\", \"02673692\", \"00281697\", \"00942956\"]}");
	add("04753502", "{\"term\":\"sort\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"13579899\", \"10646084\", \"04753502\", \"05847533\"]}");
	add("04753670", "{\"term\":\"analog\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04753670\"]}");
	add("04753670", "{\"term\":\"analogue\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04753670\"]}");
	add("04753670", "{\"term\":\"parallel\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13903651\", \"08613276\", \"04753670\"]}");
	add("04753847", "{\"term\":\"echo\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"01023061\", \"04753847\", \"05018346\", \"07214950\", \"09572176\", \"05017985\"]}");
	add("04754082", "{\"term\":\"comparability\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04754082\"]}");
	add("04754082", "{\"term\":\"compare\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04754082\"]}");
	add("04754082", "{\"term\":\"comparison\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04754082\", \"13876005\", \"00143485\"]}");
	add("04754082", "{\"term\":\"equivalence\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04754082\", \"04755513\", \"13969940\"]}");
	add("04754355", "{\"term\":\"mirror image\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04754355\"]}");
	add("04754355", "{\"term\":\"reflection\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"05017811\", \"06779826\", \"13807616\", \"04076088\", \"04754355\", \"06893299\", \"11523478\", \"05793513\"]}");
	add("04754355", "{\"term\":\"reflexion\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"04076088\", \"04754355\", \"05017811\", \"05793513\", \"06779826\", \"06893299\", \"11523478\"]}");
	add("04754486", "{\"term\":\"naturalness\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04754486\", \"04888025\", \"04793136\"]}");
	add("04754685", "{\"term\":\"resemblance\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04754685\"]}");
	add("04754856", "{\"term\":\"spitting image\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04754856\"]}");
	add("04754950", "{\"term\":\"mutual resemblance\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04754950\"]}");
	add("04755038", "{\"term\":\"affinity\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"04695997\", \"04755038\", \"11442936\", \"13833622\", \"13834508\", \"13835495\", \"11446892\"]}");
	add("04755139", "{\"term\":\"equality\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13969940\", \"04755139\"]}");
	add("04755427", "{\"term\":\"equatability\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04755427\"]}");
	add("04755513", "{\"term\":\"equivalence\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04754082\", \"04755513\", \"13969940\"]}");
	add("04755666", "{\"term\":\"parity\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"04755666\", \"06114921\", \"13646953\", \"13812345\", \"14070653\"]}");
	add("04755738", "{\"term\":\"evenness\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04755738\", \"04776695\", \"13812704\"]}");
	add("04755894", "{\"term\":\"isometry\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04755894\", \"05138802\", \"13808399\", \"15303946\"]}");
	add("04756076", "{\"term\":\"difference\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"13751346\", \"13881504\", \"07196595\", \"07380889\", \"04756076\"]}");
	add("04756532", "{\"term\":\"differential\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03198981\", \"04756532\", \"06024079\"]}");
	add("04756661", "{\"term\":\"differentia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04756661\"]}");
	add("04756794", "{\"term\":\"distinction\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"06719080\", \"04756794\", \"14458911\", \"05756230\"]}");
	add("04756982", "{\"term\":\"disagreement\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07195447\", \"04756982\", \"14005842\"]}");
	add("04756982", "{\"term\":\"discrepancy\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07381227\", \"04756982\"]}");
	add("04756982", "{\"term\":\"divergence\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04756982\", \"05871886\", \"07380889\", \"01006014\"]}");
	add("04756982", "{\"term\":\"variance\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00195818\", \"01144471\", \"04742473\", \"04756982\", \"06034344\", \"07196502\", \"07381227\"]}");
	add("04757264", "{\"term\":\"allowance\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"01144162\", \"13391388\", \"04757264\", \"13295115\", \"13314400\", \"13307277\"]}");
	add("04757264", "{\"term\":\"leeway\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04757264\", \"13528413\"]}");
	add("04757264", "{\"term\":\"margin\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"04757264\", \"06401041\", \"13281661\", \"13372293\", \"05127983\", \"13926393\"]}");
	add("04757264", "{\"term\":\"tolerance\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"04757264\", \"06214141\", \"01073014\", \"04645280\", \"05040565\"]}");
	add("04757437", "{\"term\":\"dissimilarity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04757437\"]}");
	add("04757437", "{\"term\":\"unsimilarity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04757437\"]}");
	add("04757669", "{\"term\":\"disparateness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04757669\"]}");
	add("04757669", "{\"term\":\"distinctiveness\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04757669\", \"04771180\"]}");
	add("04757802", "{\"term\":\"heterology\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04757802\"]}");
	add("04758019", "{\"term\":\"dissimilitude\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04758019\"]}");
	add("04758019", "{\"term\":\"unlikeness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04758019\"]}");
	add("04758195", "{\"term\":\"nonuniformity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04758195\"]}");
	add("04758353", "{\"term\":\"heterogeneity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04758353\"]}");
	add("04758353", "{\"term\":\"heterogeneousness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04758353\"]}");
	add("04758560", "{\"term\":\"diverseness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04758560\"]}");
	add("04758560", "{\"term\":\"diversity\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04742951\", \"04758560\"]}");
	add("04758560", "{\"term\":\"multifariousness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04758560\"]}");
	add("04758560", "{\"term\":\"variety\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"04759289\", \"05847533\", \"07033353\", \"08118051\", \"04758560\", \"08415730\"]}");
	add("04758907", "{\"term\":\"biodiversity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04758907\"]}");
	add("04759102", "{\"term\":\"inconsistency\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04759102\", \"13880242\"]}");
	add("04759289", "{\"term\":\"change\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"04759289\", \"13408652\", \"13409284\", \"03009373\", \"03009524\", \"13408862\", \"11432841\", \"00191991\", \"13881240\", \"07311046\"]}");
	add("04759289", "{\"term\":\"variety\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"04759289\", \"05847533\", \"07033353\", \"08118051\", \"04758560\", \"08415730\"]}");
	add("04759476", "{\"term\":\"inequality\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04759476\"]}");
	add("04759669", "{\"term\":\"nonequivalence\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04759669\"]}");
	add("04759785", "{\"term\":\"disparity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04759785\"]}");
	add("04759989", "{\"term\":\"far cry\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04759989\", \"05092643\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }