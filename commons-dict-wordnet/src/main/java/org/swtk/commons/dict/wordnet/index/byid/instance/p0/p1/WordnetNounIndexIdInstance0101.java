package org.swtk.commons.dict.wordnet.index.byid.instance.p0.p1;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0101 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("01010039", "{\"term\":\"tat\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01010039\", \"04825691\"]}");
	add("01010039", "{\"term\":\"thematic apperception test\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01010039\"]}");
	add("01010213", "{\"term\":\"sub-test\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01010213\"]}");
	add("01010320", "{\"term\":\"organisation\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00237945\", \"01010320\", \"01138840\", \"04775896\", \"05734541\", \"08024893\", \"08181484\"]}");
	add("01010320", "{\"term\":\"organization\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00237945\", \"01010320\", \"04775896\", \"01138840\", \"08181484\", \"05734541\", \"08024893\"]}");
	add("01010743", "{\"term\":\"orchestration\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01010743\", \"00941634\", \"07052361\"]}");
	add("01010943", "{\"term\":\"randomisation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01010943\"]}");
	add("01010943", "{\"term\":\"randomization\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01010943\"]}");
	add("01011132", "{\"term\":\"rationalisation\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"01011132\", \"01140081\", \"01214715\", \"05802411\", \"13567372\"]}");
	add("01011132", "{\"term\":\"rationalization\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"01011132\", \"01140081\", \"01214715\", \"13567372\", \"05802411\"]}");
	add("01011132", "{\"term\":\"systematisation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01011132\"]}");
	add("01011132", "{\"term\":\"systematization\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01011132\"]}");
	add("01011449", "{\"term\":\"codification\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06680062\", \"01011449\"]}");
	add("01011579", "{\"term\":\"formalisation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01011579\"]}");
	add("01011579", "{\"term\":\"formalization\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01011579\"]}");
	add("01011813", "{\"term\":\"order\", \"synsetCount\":15, \"upperType\":\"NOUN\", \"ids\":[\"01011813\", \"04706004\", \"07294392\", \"08123900\", \"08164801\", \"13974030\", \"06665623\", \"08244135\", \"06541210\", \"06551761\", \"14520294\", \"08474004\", \"13991994\", \"05098520\", \"07183274\"]}");
	add("01011813", "{\"term\":\"ordering\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01011813\", \"08474004\"]}");
	add("01012187", "{\"term\":\"rank order\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01012187\"]}");
	add("01012276", "{\"term\":\"grading\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00876655\", \"00914407\", \"01012276\"]}");
	add("01012276", "{\"term\":\"scaling\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00326190\", \"01007226\", \"01012276\"]}");
	add("01012400", "{\"term\":\"sequence\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"07356983\", \"01012400\", \"04180233\", \"05051973\", \"08476263\"]}");
	add("01012400", "{\"term\":\"succession\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00083574\", \"13584065\", \"01012400\", \"08476919\", \"05051973\"]}");
	add("01012626", "{\"term\":\"alternation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01012626\"]}");
	add("01012843", "{\"term\":\"layout\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01012843\", \"05845595\"]}");
	add("01012970", "{\"term\":\"alphabetisation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01012970\"]}");
	add("01012970", "{\"term\":\"alphabetization\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01012970\"]}");
	add("01013108", "{\"term\":\"itemisation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01013108\"]}");
	add("01013108", "{\"term\":\"itemization\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01013108\"]}");
	add("01013108", "{\"term\":\"listing\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01013108\", \"06492991\"]}");
	add("01013367", "{\"term\":\"inventory\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"01013367\", \"05641904\", \"13433706\", \"04328672\", \"06504655\"]}");
	add("01013367", "{\"term\":\"inventorying\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01013367\"]}");
	add("01013367", "{\"term\":\"stock-taking\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01013367\", \"05755760\"]}");
	add("01013367", "{\"term\":\"stocktaking\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01013367\", \"05755760\"]}");
	add("01013662", "{\"term\":\"stock-take\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01013662\"]}");
	add("01013662", "{\"term\":\"stocktake\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01013662\"]}");
	add("01013825", "{\"term\":\"roll call\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01013825\"]}");
	add("01013972", "{\"term\":\"mail call\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01013972\"]}");
	add("01014067", "{\"term\":\"muster call\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01014067\"]}");
	add("01014199", "{\"term\":\"attendance check\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01014199\"]}");
	add("01014302", "{\"term\":\"grouping\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"05741035\", \"01014302\", \"00031563\"]}");
	add("01014550", "{\"term\":\"phrasing\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07095931\", \"01014550\"]}");
	add("01014654", "{\"term\":\"assortment\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01014654\", \"08415730\"]}");
	add("01014654", "{\"term\":\"categorisation\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01014654\", \"05740701\", \"07955878\"]}");
	add("01014654", "{\"term\":\"categorization\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01014654\", \"05740701\", \"07955878\"]}");
	add("01014654", "{\"term\":\"classification\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"01151399\", \"05740701\", \"07955878\", \"01014654\"]}");
	add("01014654", "{\"term\":\"compartmentalisation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01014654\", \"14440550\"]}");
	add("01014654", "{\"term\":\"compartmentalization\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01014654\", \"14440550\"]}");
	add("01015098", "{\"term\":\"indexing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01015098\"]}");
	add("01015258", "{\"term\":\"reclassification\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01015258\"]}");
	add("01015376", "{\"term\":\"relegation\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00209370\", \"01015376\", \"01143160\"]}");
	add("01015546", "{\"term\":\"stratification\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00921691\", \"05081859\", \"13583531\", \"13962191\", \"01015546\"]}");
	add("01015712", "{\"term\":\"taxonomy\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01015712\", \"06162674\", \"08395087\"]}");
	add("01015913", "{\"term\":\"typology\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01015913\"]}");
	add("01016008", "{\"term\":\"aggregation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01016008\", \"07968050\"]}");
	add("01016008", "{\"term\":\"assembling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01016008\"]}");
	add("01016008", "{\"term\":\"collecting\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01016008\"]}");
	add("01016008", "{\"term\":\"collection\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"01016008\", \"06525755\", \"06603723\", \"07968050\"]}");
	add("01016432", "{\"term\":\"agglomeration\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01016432\", \"07975883\"]}");
	add("01016549", "{\"term\":\"collation\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00652774\", \"01016549\", \"07592939\"]}");
	add("01016673", "{\"term\":\"compilation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01016673\", \"06605303\"]}");
	add("01016673", "{\"term\":\"compiling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01016673\"]}");
	add("01016932", "{\"term\":\"gather\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01016932\", \"03433715\"]}");
	add("01016932", "{\"term\":\"gathering\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03433715\", \"01016932\", \"01232427\", \"07991473\"]}");
	add("01017117", "{\"term\":\"centralisation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01017117\", \"01240437\"]}");
	add("01017117", "{\"term\":\"centralization\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01017117\", \"01240437\"]}");
	add("01017252", "{\"term\":\"harvest\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00923604\", \"01017252\", \"11434371\", \"13106624\"]}");
	add("01017252", "{\"term\":\"harvest home\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01017252\"]}");
	add("01017252", "{\"term\":\"harvesting\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01017252\"]}");
	add("01017419", "{\"term\":\"haying\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00923740\", \"01017419\"]}");
	add("01017493", "{\"term\":\"bottle collection\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00950858\", \"01017493\", \"07971162\"]}");
	add("01017631", "{\"term\":\"conchology\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01017631\"]}");
	add("01017631", "{\"term\":\"shell collecting\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01017631\"]}");
	add("01017785", "{\"term\":\"garbage collection\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01017785\"]}");
	add("01017785", "{\"term\":\"garbage pickup\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01017785\"]}");
	add("01017785", "{\"term\":\"trash collection\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01017785\"]}");
	add("01017785", "{\"term\":\"trash pickup\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01017785\"]}");
	add("01017938", "{\"term\":\"coin collecting\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01017938\"]}");
	add("01017938", "{\"term\":\"coin collection\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01017938\", \"07971449\"]}");
	add("01017938", "{\"term\":\"numismatics\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01017938\"]}");
	add("01017938", "{\"term\":\"numismatology\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01017938\"]}");
	add("01018143", "{\"term\":\"pickup\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00320002\", \"01018143\", \"02975399\", \"04457736\", \"05068172\", \"10451817\", \"03937015\", \"06559823\", \"03936868\"]}");
	add("01018362", "{\"term\":\"philately\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01018362\"]}");
	add("01018362", "{\"term\":\"stamp collecting\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01018362\"]}");
	add("01018362", "{\"term\":\"stamp collection\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01018362\", \"07975256\"]}");
	add("01018570", "{\"term\":\"aerophilately\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01018570\"]}");
	add("01018690", "{\"term\":\"tax collection\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01018690\"]}");
	add("01018774", "{\"term\":\"sorting\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01018774\", \"05740701\", \"13579899\"]}");
	add("01018915", "{\"term\":\"territorialisation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01018915\"]}");
	add("01018915", "{\"term\":\"territorialization\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01018915\"]}");
	add("01019109", "{\"term\":\"triage\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01019109\"]}");
	add("01019262", "{\"term\":\"support\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"13386871\", \"04366676\", \"07045239\", \"01019262\", \"04367588\", \"13386459\", \"00155253\", \"00973567\", \"05701884\", \"01215009\", \"01218392\"]}");
	add("01019262", "{\"term\":\"supporting\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01019262\"]}");
	add("01019492", "{\"term\":\"propping up\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01019492\"]}");
	add("01019492", "{\"term\":\"shoring\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01019492\", \"04211514\"]}");
	add("01019492", "{\"term\":\"shoring up\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01019492\"]}");
	add("01019643", "{\"term\":\"dangling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01019643\"]}");
	add("01019643", "{\"term\":\"hanging\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01019643\", \"01167364\", \"03496279\"]}");
	add("01019643", "{\"term\":\"suspension\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00209981\", \"01019643\", \"04373203\", \"07382856\", \"14034107\", \"15295994\", \"14615271\"]}");
	add("01019929", "{\"term\":\"continuance\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"15158440\", \"15158573\", \"01019929\"]}");
	add("01019929", "{\"term\":\"continuation\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"05059047\", \"06260338\", \"06411146\", \"01019929\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }