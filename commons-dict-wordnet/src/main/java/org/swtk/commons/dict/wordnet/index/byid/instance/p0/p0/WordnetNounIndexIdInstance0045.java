package org.swtk.commons.dict.wordnet.index.byid.instance.p0.p0;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0045 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("00450039", "{\"term\":\"skateboarding\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00450039\"]}");
	add("00450153", "{\"term\":\"speed skating\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00450153\"]}");
	add("00450280", "{\"term\":\"racing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00450280\"]}");
	add("00450502", "{\"term\":\"auto racing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00450502\"]}");
	add("00450502", "{\"term\":\"car racing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00450502\"]}");
	add("00450680", "{\"term\":\"boat racing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00450680\"]}");
	add("00450781", "{\"term\":\"hydroplane racing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00450781\"]}");
	add("00450877", "{\"term\":\"camel racing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00450877\"]}");
	add("00450962", "{\"term\":\"greyhound racing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00450962\"]}");
	add("00451055", "{\"term\":\"horse racing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00451055\"]}");
	add("00451215", "{\"term\":\"thoroughbred racing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00451215\"]}");
	add("00451320", "{\"term\":\"equitation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00451320\"]}");
	add("00451320", "{\"term\":\"horseback riding\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00300043\", \"00451320\"]}");
	add("00451320", "{\"term\":\"riding\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00300043\", \"00451320\"]}");
	add("00451686", "{\"term\":\"equestrian sport\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00451686\"]}");
	add("00451852", "{\"term\":\"pony-trekking\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00451852\"]}");
	add("00451984", "{\"term\":\"showjumping\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00451984\"]}");
	add("00451984", "{\"term\":\"stadium jumping\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00451984\"]}");
	add("00452172", "{\"term\":\"cross-country jumping\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00452172\"]}");
	add("00452172", "{\"term\":\"cross-country riding\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00452172\"]}");
	add("00452356", "{\"term\":\"cycling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00452356\"]}");
	add("00452549", "{\"term\":\"bicycling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00452549\"]}");
	add("00452621", "{\"term\":\"motorcycling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00452621\"]}");
	add("00452754", "{\"term\":\"dune cycling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00452754\"]}");
	add("00452852", "{\"term\":\"blood sport\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00452852\"]}");
	add("00453020", "{\"term\":\"bullfighting\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00453020\"]}");
	add("00453020", "{\"term\":\"tauromachy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00453020\"]}");
	add("00453138", "{\"term\":\"cockfighting\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00453138\"]}");
	add("00453279", "{\"term\":\"hunt\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"00453279\", \"00623824\", \"00947217\", \"05778254\", \"08246700\", \"11086762\", \"11086928\", \"11087037\"]}");
	add("00453279", "{\"term\":\"hunting\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00623824\", \"00947217\", \"00453279\"]}");
	add("00453758", "{\"term\":\"battue\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00225127\", \"00453758\"]}");
	add("00453888", "{\"term\":\"beagling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00453888\"]}");
	add("00453971", "{\"term\":\"canned hunt\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00453971\"]}");
	add("00454150", "{\"term\":\"coursing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00454150\"]}");
	add("00454337", "{\"term\":\"deer hunt\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00454337\"]}");
	add("00454337", "{\"term\":\"deer hunting\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00454337\"]}");
	add("00454420", "{\"term\":\"duck hunting\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00454420\"]}");
	add("00454420", "{\"term\":\"ducking\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00278413\", \"00454420\"]}");
	add("00454502", "{\"term\":\"fox hunting\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00454502\"]}");
	add("00454502", "{\"term\":\"foxhunt\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00454502\"]}");
	add("00454655", "{\"term\":\"pigsticking\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00454655\"]}");
	add("00454755", "{\"term\":\"farming\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00454755\", \"00918295\"]}");
	add("00454755", "{\"term\":\"land\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"00454755\", \"11135548\", \"08185877\", \"08183451\", \"13267561\", \"14538407\", \"08562388\", \"09357302\", \"08574028\", \"09358146\", \"13270947\"]}");
	add("00454959", "{\"term\":\"fishing\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00455145\", \"00454959\"]}");
	add("00454959", "{\"term\":\"sportfishing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00454959\"]}");
	add("00455145", "{\"term\":\"fishing\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00455145\", \"00454959\"]}");
	add("00455261", "{\"term\":\"angling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00455261\"]}");
	add("00455419", "{\"term\":\"fly-fishing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00455419\"]}");
	add("00455517", "{\"term\":\"troll\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00455517\", \"04494190\", \"07067129\", \"09525613\"]}");
	add("00455517", "{\"term\":\"trolling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00455517\"]}");
	add("00455648", "{\"term\":\"cast\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00106299\", \"00455648\", \"01248360\", \"02983121\", \"02983295\", \"04684871\", \"13936581\", \"03784903\", \"08254784\"]}");
	add("00455648", "{\"term\":\"casting\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00162423\", \"00455648\", \"00911597\", \"02983121\"]}");
	add("00455879", "{\"term\":\"bait casting\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00455879\"]}");
	add("00456007", "{\"term\":\"fly casting\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00456007\"]}");
	add("00456100", "{\"term\":\"overcast\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00456100\", \"03868962\", \"14007953\", \"14547800\"]}");
	add("00456197", "{\"term\":\"surf casting\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00456197\"]}");
	add("00456197", "{\"term\":\"surf fishing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00456197\"]}");
	add("00456372", "{\"term\":\"follow-up\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00144071\", \"00456372\", \"03382428\"]}");
	add("00456372", "{\"term\":\"followup\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00144071\", \"00456372\", \"03382428\"]}");
	add("00456623", "{\"term\":\"game\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"00514100\", \"00584126\", \"03418738\", \"05916276\", \"07666058\", \"13617478\", \"15281378\", \"02155643\", \"00431591\", \"00457223\", \"00456623\"]}");
	add("00457223", "{\"term\":\"game\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"00514100\", \"00584126\", \"03418738\", \"05916276\", \"07666058\", \"13617478\", \"15281378\", \"02155643\", \"00431591\", \"00457223\", \"00456623\"]}");
	add("00457489", "{\"term\":\"day game\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00457489\"]}");
	add("00457587", "{\"term\":\"night game\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00457587\"]}");
	add("00457714", "{\"term\":\"away game\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00457714\"]}");
	add("00457714", "{\"term\":\"road game\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00457714\"]}");
	add("00457828", "{\"term\":\"home game\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00457828\"]}");
	add("00457923", "{\"term\":\"exhibition game\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00457923\"]}");
	add("00457923", "{\"term\":\"practice game\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00457923\"]}");
	add("00458062", "{\"term\":\"follow-on\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00458062\"]}");
	add("00458252", "{\"term\":\"innings\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00458252\"]}");
	add("00458406", "{\"term\":\"play\", \"synsetCount\":17, \"upperType\":\"NOUN\", \"ids\":[\"00042206\", \"00431125\", \"00458406\", \"00512828\", \"04781750\", \"06793739\", \"07426451\", \"14017327\", \"15281726\", \"00432833\", \"00788541\", \"00949412\", \"14033234\", \"00557350\", \"00558625\", \"07032045\", \"07021061\"]}");
	add("00458406", "{\"term\":\"turn\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"00293443\", \"01229572\", \"06905066\", \"15281525\", \"15317305\", \"00346280\", \"00347358\", \"07366212\", \"07437965\", \"00458406\", \"00350856\", \"13891966\"]}");
	add("00458747", "{\"term\":\"attack\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"01223108\", \"13456721\", \"14104857\", \"00237820\", \"00775311\", \"00942956\", \"06724098\", \"00458747\", \"00974725\"]}");
	add("00458914", "{\"term\":\"chess opening\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00458914\"]}");
	add("00458914", "{\"term\":\"opening\", \"synsetCount\":13, \"upperType\":\"NOUN\", \"ids\":[\"00240097\", \"00458914\", \"03504286\", \"03854249\", \"05257118\", \"05800018\", \"06409119\", \"14508833\", \"00339467\", \"07343963\", \"00384198\", \"07467309\", \"09402023\"]}");
	add("00459118", "{\"term\":\"counterattack\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00459118\", \"00980259\"]}");
	add("00459118", "{\"term\":\"counterplay\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00459118\"]}");
	add("00459310", "{\"term\":\"down\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"05263175\", \"09292247\", \"10962136\", \"00459310\", \"01899202\"]}");
	add("00459480", "{\"term\":\"at-bat\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00459480\"]}");
	add("00459480", "{\"term\":\"bat\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"02809564\", \"03136727\", \"04299552\", \"00459480\", \"02141851\"]}");
	add("00459665", "{\"term\":\"catch\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"00089545\", \"00139776\", \"00459665\", \"02986054\", \"02986245\", \"07081800\", \"09261049\", \"09920434\", \"13777962\", \"05172200\"]}");
	add("00459824", "{\"term\":\"party game\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00459824\"]}");
	add("00459914", "{\"term\":\"computer game\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00459914\"]}");
	add("00459914", "{\"term\":\"video game\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00459914\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }