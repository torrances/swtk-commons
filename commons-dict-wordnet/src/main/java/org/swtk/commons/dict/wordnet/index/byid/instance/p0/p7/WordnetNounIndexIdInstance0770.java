package org.swtk.commons.dict.wordnet.index.byid.instance.p0.p7;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0770 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("07700034", "{\"term\":\"naan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07700034\"]}");
	add("07700034", "{\"term\":\"nan\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"07700034\", \"09387851\", \"10162267\", \"10364746\"]}");
	add("07700167", "{\"term\":\"onion bread\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07700167\"]}");
	add("07700262", "{\"term\":\"raisin bread\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07700262\"]}");
	add("07700345", "{\"term\":\"quick bread\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07700345\"]}");
	add("07700683", "{\"term\":\"banana bread\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07700683\"]}");
	add("07700776", "{\"term\":\"date bread\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07700776\"]}");
	add("07700863", "{\"term\":\"date-nut bread\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07700863\"]}");
	add("07700963", "{\"term\":\"nut bread\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07700963\"]}");
	add("07701048", "{\"term\":\"oatcake\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07701048\"]}");
	add("07701144", "{\"term\":\"irish soda bread\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07701144\"]}");
	add("07701291", "{\"term\":\"fry bread\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07701291\"]}");
	add("07701291", "{\"term\":\"skillet bread\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07701291\"]}");
	add("07701475", "{\"term\":\"rye bread\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07701475\"]}");
	add("07701663", "{\"term\":\"black bread\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07701663\"]}");
	add("07701663", "{\"term\":\"pumpernickel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07701663\"]}");
	add("07701766", "{\"term\":\"jewish rye\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07701766\"]}");
	add("07701766", "{\"term\":\"jewish rye bread\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07701766\"]}");
	add("07701947", "{\"term\":\"limpa\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07701947\"]}");
	add("07702044", "{\"term\":\"swedish rye\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07702044\"]}");
	add("07702044", "{\"term\":\"swedish rye bread\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07702044\"]}");
	add("07702206", "{\"term\":\"salt-rising bread\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07702206\"]}");
	add("07702379", "{\"term\":\"simnel\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07647281\", \"07702379\"]}");
	add("07702465", "{\"term\":\"sour bread\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07702465\"]}");
	add("07702465", "{\"term\":\"sourdough bread\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07702465\"]}");
	add("07702618", "{\"term\":\"toast\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"07900388\", \"10157456\", \"10733016\", \"07702618\"]}");
	add("07702798", "{\"term\":\"wafer\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07702798\", \"07710757\", \"14729344\"]}");
	add("07702956", "{\"term\":\"light bread\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07702956\"]}");
	add("07702956", "{\"term\":\"white bread\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07702956\"]}");
	add("07703126", "{\"term\":\"baguet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07703126\"]}");
	add("07703126", "{\"term\":\"baguette\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07703126\"]}");
	add("07703214", "{\"term\":\"french bread\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07703214\"]}");
	add("07703371", "{\"term\":\"italian bread\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07703371\"]}");
	add("07703534", "{\"term\":\"cornbread\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07703534\"]}");
	add("07703766", "{\"term\":\"corn cake\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07703766\"]}");
	add("07703875", "{\"term\":\"skillet corn bread\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07703875\"]}");
	add("07704010", "{\"term\":\"ash cake\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07704010\"]}");
	add("07704010", "{\"term\":\"ashcake\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07704010\"]}");
	add("07704010", "{\"term\":\"corn tash\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07704010\"]}");
	add("07704157", "{\"term\":\"hoecake\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07704157\"]}");
	add("07704369", "{\"term\":\"cornpone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07704369\"]}");
	add("07704369", "{\"term\":\"pone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07704369\"]}");
	add("07704502", "{\"term\":\"corn dab\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07704502\"]}");
	add("07704502", "{\"term\":\"corn dodger\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07704502\"]}");
	add("07704502", "{\"term\":\"dodger\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07704502\", \"10042484\"]}");
	add("07704643", "{\"term\":\"hush puppy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07704643\"]}");
	add("07704643", "{\"term\":\"hushpuppy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07704643\"]}");
	add("07704748", "{\"term\":\"johnny cake\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07704748\"]}");
	add("07704748", "{\"term\":\"johnnycake\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07704748\"]}");
	add("07704748", "{\"term\":\"journey cake\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07704748\"]}");
	add("07704962", "{\"term\":\"shawnee cake\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07704962\"]}");
	add("07705058", "{\"term\":\"batter bread\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07705058\"]}");
	add("07705058", "{\"term\":\"spoon bread\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07705058\"]}");
	add("07705235", "{\"term\":\"cinnamon toast\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07705235\"]}");
	add("07705369", "{\"term\":\"orange toast\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07705369\"]}");
	add("07705502", "{\"term\":\"melba toast\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07705502\"]}");
	add("07705587", "{\"term\":\"brussels biscuit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07705587\"]}");
	add("07705587", "{\"term\":\"rusk\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07705587\"]}");
	add("07705587", "{\"term\":\"twice-baked bread\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07705587\"]}");
	add("07705587", "{\"term\":\"zwieback\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07705587\"]}");
	add("07705764", "{\"term\":\"frankfurter bun\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07705764\"]}");
	add("07705764", "{\"term\":\"hotdog bun\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07705764\"]}");
	add("07705897", "{\"term\":\"hamburger bun\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07705897\"]}");
	add("07705897", "{\"term\":\"hamburger roll\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07705897\"]}");
	add("07706018", "{\"term\":\"gem\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"03601980\", \"07706018\", \"10241326\", \"14723913\", \"03437882\"]}");
	add("07706018", "{\"term\":\"muffin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07706018\"]}");
	add("07706176", "{\"term\":\"bran muffin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07706176\"]}");
	add("07706256", "{\"term\":\"corn muffin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07706256\"]}");
	add("07706330", "{\"term\":\"yorkshire pudding\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07706330\"]}");
	add("07706484", "{\"term\":\"popover\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07706484\"]}");
	add("07706637", "{\"term\":\"scone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07706637\"]}");
	add("07706836", "{\"term\":\"drop scone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07706836\"]}");
	add("07706836", "{\"term\":\"griddlecake\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07655812\", \"07706836\"]}");
	add("07706836", "{\"term\":\"scotch pancake\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07706836\"]}");
	add("07706982", "{\"term\":\"cross bun\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07706982\"]}");
	add("07706982", "{\"term\":\"hot cross bun\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07706982\"]}");
	add("07707169", "{\"term\":\"coffee ring\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07707169\"]}");
	add("07707284", "{\"term\":\"brioche\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07707284\"]}");
	add("07707395", "{\"term\":\"crescent roll\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07707395\"]}");
	add("07707395", "{\"term\":\"croissant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07707395\"]}");
	add("07707503", "{\"term\":\"hard roll\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07707503\"]}");
	add("07707503", "{\"term\":\"vienna roll\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07707503\"]}");
	add("07707608", "{\"term\":\"soft roll\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07707608\"]}");
	add("07707699", "{\"term\":\"kaiser roll\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07707699\"]}");
	add("07707859", "{\"term\":\"parker house roll\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07707859\"]}");
	add("07707993", "{\"term\":\"clover-leaf roll\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07707993\"]}");
	add("07708150", "{\"term\":\"onion roll\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07708150\"]}");
	add("07708262", "{\"term\":\"bialy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07708262\"]}");
	add("07708262", "{\"term\":\"bialystoker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07708262\"]}");
	add("07708359", "{\"term\":\"coffee roll\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07708359\"]}");
	add("07708359", "{\"term\":\"sweet roll\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07708359\"]}");
	add("07708632", "{\"term\":\"bear claw\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02158972\", \"02820030\", \"07708632\"]}");
	add("07708632", "{\"term\":\"bear paw\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07708632\"]}");
	add("07708793", "{\"term\":\"cinnamon bun\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07708793\"]}");
	add("07708793", "{\"term\":\"cinnamon roll\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07708793\"]}");
	add("07708793", "{\"term\":\"cinnamon snail\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07708793\"]}");
	add("07708968", "{\"term\":\"caramel bun\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07708968\"]}");
	add("07708968", "{\"term\":\"honey bun\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07708968\"]}");
	add("07708968", "{\"term\":\"schnecken\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07708968\"]}");
	add("07708968", "{\"term\":\"sticky bun\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07708968\"]}");
	add("07709184", "{\"term\":\"pinwheel roll\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07709184\"]}");
	add("07709335", "{\"term\":\"danish\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07709335\", \"06966788\"]}");
	add("07709335", "{\"term\":\"danish pastry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07709335\"]}");
	add("07709470", "{\"term\":\"bagel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07709470\"]}");
	add("07709470", "{\"term\":\"beigel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07709470\"]}");
	add("07709634", "{\"term\":\"onion bagel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07709634\"]}");
	add("07709717", "{\"term\":\"biscuit\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07650764\", \"07709717\"]}");
	add("07709914", "{\"term\":\"rolled biscuit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07709914\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }