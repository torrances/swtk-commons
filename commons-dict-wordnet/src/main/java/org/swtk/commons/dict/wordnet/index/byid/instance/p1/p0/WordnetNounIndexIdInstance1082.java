package org.swtk.commons.dict.wordnet.index.byid.instance.p1.p0;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance1082 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("10820913", "{\"term\":\"writer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10820913\", \"10813654\"]}");
	add("10821165", "{\"term\":\"wykehamist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10821165\"]}");
	add("10821301", "{\"term\":\"xylophonist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10821301\"]}");
	add("10821406", "{\"term\":\"yakuza\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08247827\", \"10821406\"]}");
	add("10821497", "{\"term\":\"yahoo\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06591303\", \"10821497\", \"10823706\"]}");
	add("10821647", "{\"term\":\"yachtsman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10821647\"]}");
	add("10821647", "{\"term\":\"yachtswoman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10821647\"]}");
	add("10821751", "{\"term\":\"jerker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10821751\"]}");
	add("10821751", "{\"term\":\"yanker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10821751\"]}");
	add("10821887", "{\"term\":\"northerner\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10821887\", \"10382381\"]}");
	add("10821887", "{\"term\":\"yank\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09766150\", \"10821887\"]}");
	add("10821887", "{\"term\":\"yankee\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"09766150\", \"10375641\", \"10821887\"]}");
	add("10822111", "{\"term\":\"yard bird\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09982445\", \"10822111\"]}");
	add("10822111", "{\"term\":\"yardbird\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09982445\", \"10822111\"]}");
	add("10822225", "{\"term\":\"yardie\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10822225\"]}");
	add("10822446", "{\"term\":\"yardman\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10822446\", \"10822557\"]}");
	add("10822557", "{\"term\":\"yardman\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10822446\", \"10822557\"]}");
	add("10822635", "{\"term\":\"train dispatcher\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10822635\"]}");
	add("10822635", "{\"term\":\"trainmaster\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10822635\"]}");
	add("10822635", "{\"term\":\"yardmaster\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10822635\"]}");
	add("10822797", "{\"term\":\"yawner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10822797\"]}");
	add("10822886", "{\"term\":\"yenta\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10822886\", \"10823067\"]}");
	add("10823067", "{\"term\":\"yenta\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10822886\", \"10823067\"]}");
	add("10823190", "{\"term\":\"yeoman\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10823190\", \"10823295\"]}");
	add("10823295", "{\"term\":\"beefeater\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10823295\"]}");
	add("10823295", "{\"term\":\"yeoman\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10823190\", \"10823295\"]}");
	add("10823295", "{\"term\":\"yeoman of the guard\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10823295\"]}");
	add("10823442", "{\"term\":\"yodeller\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10823442\"]}");
	add("10823582", "{\"term\":\"yogi\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10823582\", \"10868542\"]}");
	add("10823706", "{\"term\":\"bumpkin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10823706\"]}");
	add("10823706", "{\"term\":\"chawbacon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10823706\"]}");
	add("10823706", "{\"term\":\"hayseed\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10823706\"]}");
	add("10823706", "{\"term\":\"hick\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10823706\"]}");
	add("10823706", "{\"term\":\"rube\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10823706\"]}");
	add("10823706", "{\"term\":\"yahoo\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06591303\", \"10821497\", \"10823706\"]}");
	add("10823706", "{\"term\":\"yokel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10823706\"]}");
	add("10823891", "{\"term\":\"young buck\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10823891\"]}");
	add("10823891", "{\"term\":\"young man\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10823891\"]}");
	add("10824010", "{\"term\":\"spring chicken\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01795981\", \"10824010\"]}");
	add("10824010", "{\"term\":\"young person\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10824010\"]}");
	add("10824010", "{\"term\":\"younker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10824010\"]}");
	add("10824010", "{\"term\":\"youth\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"04935762\", \"15290845\", \"14449257\", \"15172673\", \"07960326\", \"10824010\"]}");
	add("10824240", "{\"term\":\"young turk\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10824240\", \"10824336\"]}");
	add("10824336", "{\"term\":\"young turk\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10824240\", \"10824336\"]}");
	add("10824527", "{\"term\":\"yuppie\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10824527\"]}");
	add("10824717", "{\"term\":\"zany\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10177319\", \"10824717\"]}");
	add("10824878", "{\"term\":\"zealot\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10421831\", \"10824878\"]}");
	add("10825105", "{\"term\":\"zionist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10825105\"]}");
	add("10825242", "{\"term\":\"living dead\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10825242\"]}");
	add("10825242", "{\"term\":\"zombi\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"07935405\", \"09844921\", \"10825242\", \"10825387\", \"10825536\"]}");
	add("10825242", "{\"term\":\"zombie\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"07935405\", \"09844921\", \"10825387\", \"10825536\", \"10825242\"]}");
	add("10825387", "{\"term\":\"snake god\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10825387\"]}");
	add("10825387", "{\"term\":\"zombi\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"07935405\", \"09844921\", \"10825242\", \"10825387\", \"10825536\"]}");
	add("10825387", "{\"term\":\"zombie\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"07935405\", \"09844921\", \"10825387\", \"10825536\", \"10825242\"]}");
	add("10825536", "{\"term\":\"zombi\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"07935405\", \"09844921\", \"10825242\", \"10825387\", \"10825536\"]}");
	add("10825536", "{\"term\":\"zombi spirit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10825536\"]}");
	add("10825536", "{\"term\":\"zombie\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"07935405\", \"09844921\", \"10825387\", \"10825536\", \"10825242\"]}");
	add("10825536", "{\"term\":\"zombie spirit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10825536\"]}");
	add("10825717", "{\"term\":\"zoo keeper\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10825717\"]}");
	add("10825826", "{\"term\":\"animal scientist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10825826\"]}");
	add("10825826", "{\"term\":\"zoologist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10825826\"]}");
	add("10826216", "{\"term\":\"zurvan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10826216\"]}");
	add("10826297", "{\"term\":\"aalto\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10826297\"]}");
	add("10826297", "{\"term\":\"alvar aalto\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10826297\"]}");
	add("10826297", "{\"term\":\"hugo alvar henrik aalto\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10826297\"]}");
	add("10826445", "{\"term\":\"aaron\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10826445\", \"10826620\"]}");
	add("10826620", "{\"term\":\"aaron\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10826445\", \"10826620\"]}");
	add("10826620", "{\"term\":\"hank aaron\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10826620\"]}");
	add("10826620", "{\"term\":\"henry louis aaron\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10826620\"]}");
	add("10826801", "{\"term\":\"abel\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09610392\", \"10826801\"]}");
	add("10826801", "{\"term\":\"niels abel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10826801\"]}");
	add("10826801", "{\"term\":\"niels henrik abel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10826801\"]}");
	add("10826921", "{\"term\":\"abelard\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10826921\"]}");
	add("10826921", "{\"term\":\"peter abelard\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10826921\"]}");
	add("10826921", "{\"term\":\"pierre abelard\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10826921\"]}");
	add("10827091", "{\"term\":\"abraham\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10827091\"]}");
	add("10827091", "{\"term\":\"ibrahim\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10827091\"]}");
	add("10827462", "{\"term\":\"acheson\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10827462\"]}");
	add("10827462", "{\"term\":\"dean acheson\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10827462\"]}");
	add("10827462", "{\"term\":\"dean gooderham acheson\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10827462\"]}");
	add("10827649", "{\"term\":\"adam\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02681592\", \"10827649\", \"09609728\"]}");
	add("10827649", "{\"term\":\"robert adam\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10827649\"]}");
	add("10827804", "{\"term\":\"adams\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"09210304\", \"10827804\", \"10827957\", \"10828143\"]}");
	add("10827804", "{\"term\":\"john adams\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10827804\"]}");
	add("10827804", "{\"term\":\"president adams\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10827804\", \"10827957\"]}");
	add("10827804", "{\"term\":\"president john adams\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10827804\"]}");
	add("10827957", "{\"term\":\"adams\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"09210304\", \"10827804\", \"10827957\", \"10828143\"]}");
	add("10827957", "{\"term\":\"john quincy adams\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10827957\"]}");
	add("10827957", "{\"term\":\"president adams\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10827804\", \"10827957\"]}");
	add("10827957", "{\"term\":\"president john quincy adams\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10827957\"]}");
	add("10828143", "{\"term\":\"adams\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"09210304\", \"10827804\", \"10827957\", \"10828143\"]}");
	add("10828143", "{\"term\":\"sam adams\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10828143\"]}");
	add("10828143", "{\"term\":\"samuel adams\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10828143\"]}");
	add("10828360", "{\"term\":\"adenauer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10828360\"]}");
	add("10828360", "{\"term\":\"konrad adenauer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10828360\"]}");
	add("10828490", "{\"term\":\"adrian\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10828490\", \"11041338\"]}");
	add("10828490", "{\"term\":\"baron adrian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10828490\"]}");
	add("10828490", "{\"term\":\"edgar douglas adrian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10828490\"]}");
	add("10828690", "{\"term\":\"aeschylus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10828690\"]}");
	add("10828827", "{\"term\":\"aesop\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10828827\"]}");
	add("10828921", "{\"term\":\"agassiz\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10828921\"]}");
	add("10828921", "{\"term\":\"jean louis rodolphe agassiz\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10828921\"]}");
	add("10828921", "{\"term\":\"louis agassiz\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10828921\"]}");
	add("10829180", "{\"term\":\"agee\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10829180\"]}");
	add("10829180", "{\"term\":\"james agee\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10829180\"]}");
	add("10829279", "{\"term\":\"agricola\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10829279\"]}");
	add("10829279", "{\"term\":\"gnaeus julius agricola\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10829279\"]}");
	add("10829461", "{\"term\":\"agrippa\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10829461\"]}");
	add("10829461", "{\"term\":\"marcus vipsanius agrippa\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10829461\"]}");
	add("10829650", "{\"term\":\"agrippina\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10829650\", \"10829819\"]}");
	add("10829650", "{\"term\":\"agrippina the elder\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10829650\"]}");
	add("10829819", "{\"term\":\"agrippina\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10829650\", \"10829819\"]}");
	add("10829819", "{\"term\":\"agrippina the younger\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10829819\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }