package org.swtk.commons.dict.wordnet.index.instance.p0.p7;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexInstance0727 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("07270069", "{\"term\":\"ban\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"06711665\", \"07270069\", \"13707683\", \"13724420\", \"06554038\"]}");
	add("07270069", "{\"term\":\"banning\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07270069\"]}");
	add("07270069", "{\"term\":\"forbiddance\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00202772\", \"07270069\"]}");
	add("07270069", "{\"term\":\"forbidding\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07270069\"]}");
	add("07270296", "{\"term\":\"test ban\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07270296\"]}");
	add("07270459", "{\"term\":\"anomalous communication\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07270459\"]}");
	add("07270459", "{\"term\":\"psychic communication\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07270459\"]}");
	add("07270459", "{\"term\":\"psychical communication\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07270459\"]}");
	add("07270666", "{\"term\":\"telepathy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07270666\"]}");
	add("07270666", "{\"term\":\"thought transference\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07270666\"]}");
	add("07270898", "{\"term\":\"telegnosis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07270898\"]}");
	add("07271043", "{\"term\":\"parapsychology\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07271043\"]}");
	add("07271043", "{\"term\":\"psychic phenomena\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07271043\"]}");
	add("07271043", "{\"term\":\"psychic phenomenon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07271043\"]}");
	add("07271363", "{\"term\":\"clairvoyance\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07271363\"]}");
	add("07271363", "{\"term\":\"e.s.p.\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07271363\"]}");
	add("07271363", "{\"term\":\"esp\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07271363\"]}");
	add("07271363", "{\"term\":\"extrasensory perception\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07271363\"]}");
	add("07271363", "{\"term\":\"second sight\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07271363\"]}");
	add("07271600", "{\"term\":\"foreknowledge\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07271600\"]}");
	add("07271600", "{\"term\":\"precognition\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07271600\"]}");
	add("07271713", "{\"term\":\"psychokinesis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07271713\"]}");
	add("07271713", "{\"term\":\"telekinesis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07271713\"]}");
	add("07271895", "{\"term\":\"spirit rapping\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07271895\"]}");
	add("07271895", "{\"term\":\"table rapping\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07271895\"]}");
	add("07271895", "{\"term\":\"table tapping\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07271895\"]}");
	add("07272061", "{\"term\":\"table lifting\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07272061\"]}");
	add("07272061", "{\"term\":\"table tilting\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07272061\"]}");
	add("07272061", "{\"term\":\"table tipping\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07272061\"]}");
	add("07272061", "{\"term\":\"table turning\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07272061\"]}");
	add("07272250", "{\"term\":\"air-sleeve\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07272250\"]}");
	add("07272250", "{\"term\":\"air sock\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07272250\"]}");
	add("07272250", "{\"term\":\"drogue\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03249974\", \"04165518\", \"07272250\", \"07277022\"]}");
	add("07272250", "{\"term\":\"sock\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07272250\", \"04261887\"]}");
	add("07272250", "{\"term\":\"wind cone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07272250\"]}");
	add("07272250", "{\"term\":\"wind sleeve\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07272250\"]}");
	add("07272250", "{\"term\":\"wind sock\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07272250\"]}");
	add("07272250", "{\"term\":\"windsock\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07272250\"]}");
	add("07272483", "{\"term\":\"post\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"00319012\", \"06275051\", \"07272483\", \"08480074\", \"11263552\", \"11263710\", \"11263897\", \"03994528\", \"00587299\", \"03768938\", \"08641960\"]}");
	add("07272483", "{\"term\":\"stake\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"04305903\", \"13364541\", \"04306044\", \"07272483\", \"13307824\"]}");
	add("07272777", "{\"term\":\"starting post\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07272777\"]}");
	add("07272906", "{\"term\":\"winning post\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07272906\"]}");
	add("07273000", "{\"term\":\"point of reference\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07273000\"]}");
	add("07273000", "{\"term\":\"reference\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"05931946\", \"06367922\", \"07273332\", \"01266543\", \"05931581\", \"06707541\", \"06429241\", \"07273000\", \"06776392\", \"06778981\"]}");
	add("07273000", "{\"term\":\"reference point\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07273000\"]}");
	add("07273332", "{\"term\":\"reference\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"05931946\", \"06367922\", \"07273332\", \"01266543\", \"05931581\", \"06707541\", \"06429241\", \"07273000\", \"06776392\", \"06778981\"]}");
	add("07273332", "{\"term\":\"source\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"07273332\", \"09430745\", \"13580156\", \"10145714\", \"10225604\", \"04270724\", \"05843082\", \"06687867\", \"08524579\"]}");
	add("07273632", "{\"term\":\"republication\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01104479\", \"07273632\"]}");
	add("07273813", "{\"term\":\"bench mark\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07273813\"]}");
	add("07273813", "{\"term\":\"benchmark\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07273813\", \"07275811\"]}");
	add("07273987", "{\"term\":\"landmark\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"05237687\", \"07273987\", \"07432451\", \"08642466\"]}");
	add("07274106", "{\"term\":\"mearstone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07274106\"]}");
	add("07274106", "{\"term\":\"meerestone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07274106\"]}");
	add("07274106", "{\"term\":\"merestone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07274106\"]}");
	add("07274278", "{\"term\":\"lubber\u0027s line\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07274278\"]}");
	add("07274278", "{\"term\":\"lubber\u0027s mark\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07274278\"]}");
	add("07274278", "{\"term\":\"lubber\u0027s point\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07274278\"]}");
	add("07274278", "{\"term\":\"lubber line\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07274278\"]}");
	add("07274440", "{\"term\":\"linguistic rule\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07274440\"]}");
	add("07274440", "{\"term\":\"rule\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"04125870\", \"05855459\", \"05882839\", \"06664809\", \"06801754\", \"14466399\", \"15320659\", \"05922132\", \"07274440\", \"06664987\", \"05675457\", \"05854581\"]}");
	add("07274652", "{\"term\":\"linguistic universal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07274652\"]}");
	add("07274652", "{\"term\":\"universal\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04518001\", \"05676203\", \"06764081\", \"07274652\"]}");
	add("07274843", "{\"term\":\"grammatical rule\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07274843\"]}");
	add("07274843", "{\"term\":\"rule of grammar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07274843\"]}");
	add("07275000", "{\"term\":\"transformation\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00399512\", \"00399838\", \"07275000\", \"13807348\", \"07374199\"]}");
	add("07275161", "{\"term\":\"morphological rule\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07275161\"]}");
	add("07275161", "{\"term\":\"rule of morphology\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07275161\"]}");
	add("07275291", "{\"term\":\"criterion\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05933552\", \"07275291\"]}");
	add("07275291", "{\"term\":\"measure\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"03739135\", \"03741128\", \"06877775\", \"07108759\", \"07275291\", \"00998911\", \"06548844\", \"00033914\", \"00175261\"]}");
	add("07275291", "{\"term\":\"standard\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"04308278\", \"04308380\", \"13394387\", \"13639233\", \"05933552\", \"07275291\"]}");
	add("07275291", "{\"term\":\"touchstone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07275291\"]}");
	add("07275811", "{\"term\":\"benchmark\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07273813\", \"07275811\"]}");
	add("07275968", "{\"term\":\"earned run average\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07275968\"]}");
	add("07275968", "{\"term\":\"era\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07275968\", \"15272831\", \"15273375\"]}");
	add("07276210", "{\"term\":\"gpa\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07276210\"]}");
	add("07276210", "{\"term\":\"grade point average\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07276210\"]}");
	add("07276450", "{\"term\":\"procrustean bed\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07276450\"]}");
	add("07276450", "{\"term\":\"procrustean rule\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07276450\"]}");
	add("07276450", "{\"term\":\"procrustean standard\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07276450\"]}");
	add("07276623", "{\"term\":\"yardstick\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04619273\", \"07276623\"]}");
	add("07276776", "{\"term\":\"mark\", \"synsetCount\":15, \"upperType\":\"NOUN\", \"ids\":[\"00065609\", \"04688744\", \"04701248\", \"06453473\", \"06659006\", \"06830640\", \"09940867\", \"11176933\", \"13710138\", \"06807523\", \"04683421\", \"06811608\", \"07276776\", \"07284884\", \"05745098\"]}");
	add("07276776", "{\"term\":\"target\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"05990115\", \"04401354\", \"08678672\", \"10490045\", \"07276776\"]}");
	add("07276946", "{\"term\":\"clout\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00135600\", \"03056902\", \"05164657\", \"07276946\"]}");
	add("07277022", "{\"term\":\"drogue\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03249974\", \"04165518\", \"07272250\", \"07277022\"]}");
	add("07277130", "{\"term\":\"white line\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07277130\"]}");
	add("07277247", "{\"term\":\"indicator\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"14941359\", \"03573297\", \"07277247\", \"06652323\"]}");
	add("07277372", "{\"term\":\"blinker\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04600956\", \"07277372\", \"02855432\"]}");
	add("07277372", "{\"term\":\"trafficator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07277372\"]}");
	add("07277372", "{\"term\":\"turn indicator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07277372\"]}");
	add("07277372", "{\"term\":\"turn signal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07277372\"]}");
	add("07277610", "{\"term\":\"armband\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02741454\", \"07277610\"]}");
	add("07277721", "{\"term\":\"rocket\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"04240011\", \"07277721\", \"11907006\", \"04106269\", \"04106523\"]}");
	add("07277721", "{\"term\":\"skyrocket\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04240011\", \"07277721\"]}");
	add("07277888", "{\"term\":\"electronic signal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07277888\"]}");
	add("07278026", "{\"term\":\"blip\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07278026\", \"07313821\"]}");
	add("07278026", "{\"term\":\"pip\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"07278026\", \"07286647\", \"11705560\", \"14226751\", \"14298407\"]}");
	add("07278026", "{\"term\":\"radar target\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07278026\"]}");
	add("07278171", "{\"term\":\"radar echo\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07278171\"]}");
	add("07278413", "{\"term\":\"clutter\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07278413\", \"14524151\"]}");
	add("07278565", "{\"term\":\"racon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07278565\"]}");
	add("07278565", "{\"term\":\"radar beacon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07278565\"]}");
	add("07278754", "{\"term\":\"radio beacon\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04049010\", \"07278754\"]}");
	add("07278881", "{\"term\":\"beacon\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02817995\", \"04049010\", \"07278881\"]}");
	add("07278881", "{\"term\":\"beacon fire\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07278881\"]}");
	add("07279052", "{\"term\":\"star shell\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07279052\"]}");
	add("07279152", "{\"term\":\"bengal light\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07279152\"]}");
	add("07279283", "{\"term\":\"very-light\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07279283\"]}");
	add("07279283", "{\"term\":\"very light\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07279283\"]}");
	add("07279393", "{\"term\":\"signal fire\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07279393\"]}");
	add("07279393", "{\"term\":\"signal light\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07279393\"]}");
	add("07279488", "{\"term\":\"input\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03578305\", \"05836008\", \"06777755\", \"07279488\"]}");
	add("07279488", "{\"term\":\"input signal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07279488\"]}");
	add("07279593", "{\"term\":\"output\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"03866402\", \"13780885\", \"07279593\", \"00916463\", \"03292089\"]}");
	add("07279593", "{\"term\":\"output signal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07279593\"]}");
	add("07279743", "{\"term\":\"printout\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07279743\"]}");
	add("07279857", "{\"term\":\"read-out\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04065706\", \"06832564\", \"07279857\"]}");
	add("07279857", "{\"term\":\"readout\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04065706\", \"06832564\", \"07279857\"]}");
	add("07279982", "{\"term\":\"fire alarm\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03348583\", \"07279982\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }