package org.swtk.commons.dict.wordnet.index.byid.instance.p0.p8;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0868 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("08680026", "{\"term\":\"south temperate zone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08680026\"]}");
	add("08680165", "{\"term\":\"terreplein\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08680165\"]}");
	add("08680308", "{\"term\":\"laboratory\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08680308\", \"03635277\"]}");
	add("08680308", "{\"term\":\"testing ground\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08680308\"]}");
	add("08680652", "{\"term\":\"theme park\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08680652\"]}");
	add("08680789", "{\"term\":\"three-mile limit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08680789\"]}");
	add("08680894", "{\"term\":\"tip\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"08635538\", \"13925175\", \"06664322\", \"13319724\", \"08680894\"]}");
	add("08681092", "{\"term\":\"top\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"03039237\", \"04460937\", \"04461181\", \"04461511\", \"04461811\", \"05044772\", \"13963489\", \"15280833\", \"08635538\", \"08681092\", \"08681598\"]}");
	add("08681092", "{\"term\":\"top side\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08681092\"]}");
	add("08681092", "{\"term\":\"upper side\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08681092\"]}");
	add("08681092", "{\"term\":\"upside\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08681092\"]}");
	add("08681441", "{\"term\":\"desktop\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02772080\", \"08681441\"]}");
	add("08681512", "{\"term\":\"rooftop\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08681512\"]}");
	add("08681598", "{\"term\":\"top\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"03039237\", \"04460937\", \"04461181\", \"04461511\", \"04461811\", \"05044772\", \"13963489\", \"15280833\", \"08635538\", \"08681092\", \"08681598\"]}");
	add("08681922", "{\"term\":\"head\", \"synsetCount\":33, \"upperType\":\"NOUN\", \"ids\":[\"00856505\", \"03254982\", \"03506432\", \"03506664\", \"03506758\", \"03506955\", \"04065833\", \"05298255\", \"05603592\", \"06355341\", \"06796625\", \"06834918\", \"07387379\", \"07433422\", \"08590014\", \"09324750\", \"09324937\", \"09422467\", \"10182373\", \"10182947\", \"10494230\", \"13154545\", \"13675998\", \"14335908\", \"06302589\", \"08525470\", \"08681922\", \"11516007\", \"08499282\", \"10182584\", \"05619057\", \"01320872\", \"05546258\"]}");
	add("08682103", "{\"term\":\"tiptop\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08682103\", \"13963489\"]}");
	add("08682181", "{\"term\":\"place\", \"synsetCount\":16, \"upperType\":\"NOUN\", \"ids\":[\"06401196\", \"06495143\", \"08637370\", \"13971047\", \"06412750\", \"08665191\", \"13970825\", \"08639173\", \"00587299\", \"08577045\", \"13949819\", \"00722683\", \"08659612\", \"05619605\", \"08530790\", \"08682181\"]}");
	add("08682181", "{\"term\":\"spot\", \"synsetCount\":14, \"upperType\":\"NOUN\", \"ids\":[\"00073081\", \"04293445\", \"04293713\", \"07286647\", \"13783547\", \"14105668\", \"00587299\", \"04293266\", \"06408111\", \"04689819\", \"04701789\", \"04739165\", \"06408287\", \"08682181\"]}");
	add("08682181", "{\"term\":\"topographic point\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08682181\"]}");
	add("08682839", "{\"term\":\"pool\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00502091\", \"08682839\", \"13390647\", \"09420482\", \"13391030\", \"08253359\", \"08498380\", \"09420266\", \"03988418\"]}");
	add("08682839", "{\"term\":\"puddle\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08682839\", \"09420482\", \"15017512\"]}");
	add("08683019", "{\"term\":\"torrid zone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08683019\"]}");
	add("08683019", "{\"term\":\"tropical zone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08683019\"]}");
	add("08683019", "{\"term\":\"tropics\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08683019\"]}");
	add("08683242", "{\"term\":\"town\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"11366705\", \"08689937\", \"08243435\", \"08683242\"]}");
	add("08688906", "{\"term\":\"burg\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08688906\"]}");
	add("08689031", "{\"term\":\"boom town\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08689031\"]}");
	add("08689120", "{\"term\":\"cow town\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08689120\"]}");
	add("08689120", "{\"term\":\"cowtown\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08689120\"]}");
	add("08689247", "{\"term\":\"ghost town\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08689247\"]}");
	add("08689382", "{\"term\":\"hometown\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08689382\"]}");
	add("08689560", "{\"term\":\"main street\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08689560\", \"03718268\"]}");
	add("08689811", "{\"term\":\"market town\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08689811\"]}");
	add("08689937", "{\"term\":\"town\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"11366705\", \"08689937\", \"08243435\", \"08683242\"]}");
	add("08689937", "{\"term\":\"township\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08689937\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }