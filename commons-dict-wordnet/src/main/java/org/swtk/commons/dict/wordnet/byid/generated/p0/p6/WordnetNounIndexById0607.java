package org.swtk.commons.dict.wordnet.byid.generated.p0.p6;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexById0607 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("06070013", "{\"term\":\"regional anatomy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06070013\"]}");
	add("06070013", "{\"term\":\"topographic anatomy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06070013\"]}");
	add("06070013", "{\"term\":\"topology\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"05738310\", \"06026943\", \"06070013\", \"06132354\"]}");
	add("06070282", "{\"term\":\"audiology\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06070282\"]}");
	add("06070282", "{\"term\":\"audiometry\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01000924\", \"06070282\"]}");
	add("06070395", "{\"term\":\"pathology\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"14228432\", \"06070395\"]}");
	add("06071181", "{\"term\":\"paediatrics\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06071181\"]}");
	add("06071181", "{\"term\":\"pediatric medicine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06071181\"]}");
	add("06071181", "{\"term\":\"pediatrics\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06071181\"]}");
	add("06071181", "{\"term\":\"pedology\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06071181\"]}");
	add("06071467", "{\"term\":\"neonatology\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06071467\"]}");
	add("06071626", "{\"term\":\"chiropody\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06071626\"]}");
	add("06071626", "{\"term\":\"podiatry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06071626\"]}");
	add("06071775", "{\"term\":\"proctology\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06071775\"]}");
	add("06071957", "{\"term\":\"radiology\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00905007\", \"06071957\"]}");
	add("06072205", "{\"term\":\"rheumatology\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06072205\"]}");
	add("06072392", "{\"term\":\"otolaryngology\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06072392\"]}");
	add("06072392", "{\"term\":\"otorhinolaryngology\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06072392\"]}");
	add("06072392", "{\"term\":\"rhinolaryngology\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06072392\"]}");
	add("06072622", "{\"term\":\"serology\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06072622\"]}");
	add("06072825", "{\"term\":\"space medicine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06072825\"]}");
	add("06072967", "{\"term\":\"sports medicine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06072967\"]}");
	add("06073138", "{\"term\":\"surgery\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00672594\", \"03855765\", \"04371078\", \"06073138\"]}");
	add("06073656", "{\"term\":\"orthopaedics\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06073656\"]}");
	add("06073656", "{\"term\":\"orthopedics\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06073656\"]}");
	add("06073895", "{\"term\":\"therapeutics\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06073895\"]}");
	add("06074012", "{\"term\":\"toxicology\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06074012\"]}");
	add("06074233", "{\"term\":\"thoracic medicine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06074233\"]}");
	add("06074388", "{\"term\":\"accident surgery\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06074388\"]}");
	add("06074388", "{\"term\":\"traumatology\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06074388\"]}");
	add("06074570", "{\"term\":\"tropical medicine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06074570\"]}");
	add("06074758", "{\"term\":\"urogenital medicine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06074758\"]}");
	add("06074758", "{\"term\":\"urology\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06074758\"]}");
	add("06074973", "{\"term\":\"veterinary medicine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06074973\"]}");
	add("06075190", "{\"term\":\"virology\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06075190\"]}");
	add("06075369", "{\"term\":\"agronomy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06075369\"]}");
	add("06075369", "{\"term\":\"scientific agriculture\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06075369\"]}");
	add("06075622", "{\"term\":\"agrobiology\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06075622\"]}");
	add("06075817", "{\"term\":\"agrology\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06075817\"]}");
	add("06075964", "{\"term\":\"biogeography\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06075964\"]}");
	add("06076105", "{\"term\":\"botany\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06076105\", \"08453769\"]}");
	add("06076105", "{\"term\":\"phytology\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06076105\"]}");
	add("06079297", "{\"term\":\"mycology\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06079297\"]}");
	add("06079436", "{\"term\":\"pomology\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06079436\"]}");
	add("06079546", "{\"term\":\"cryobiology\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06079546\"]}");
	add("06079729", "{\"term\":\"cryonics\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06079729\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }