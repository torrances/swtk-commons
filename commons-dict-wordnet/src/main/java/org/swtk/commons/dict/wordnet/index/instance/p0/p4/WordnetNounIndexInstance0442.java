package org.swtk.commons.dict.wordnet.index.instance.p0.p4;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexInstance0442 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("04420036", "{\"term\":\"depot\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04336328\", \"04420036\"]}");
	add("04420036", "{\"term\":\"terminal\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04420554\", \"08583557\", \"04420286\", \"04420036\"]}");
	add("04420036", "{\"term\":\"terminus\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"04420036\", \"04420766\", \"04420858\", \"05990653\", \"08584083\"]}");
	add("04420286", "{\"term\":\"pole\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"03983318\", \"03983516\", \"04420286\", \"08638456\", \"08638674\", \"13635960\", \"13672539\", \"05959426\", \"09746969\", \"03983015\"]}");
	add("04420286", "{\"term\":\"terminal\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04420554\", \"08583557\", \"04420286\", \"04420036\"]}");
	add("04420554", "{\"term\":\"terminal\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04420554\", \"08583557\", \"04420286\", \"04420036\"]}");
	add("04420766", "{\"term\":\"terminus\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"04420036\", \"04420766\", \"04420858\", \"05990653\", \"08584083\"]}");
	add("04420858", "{\"term\":\"term\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"04420858\", \"15251247\", \"06764688\", \"05864488\", \"06783666\", \"15249282\", \"06314878\"]}");
	add("04420858", "{\"term\":\"terminal figure\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04420858\"]}");
	add("04420858", "{\"term\":\"terminus\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"04420036\", \"04420766\", \"04420858\", \"05990653\", \"08584083\"]}");
	add("04421104", "{\"term\":\"terraced house\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04421104\"]}");
	add("04421236", "{\"term\":\"terra cotta\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04421236\"]}");
	add("04421334", "{\"term\":\"terrarium\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04421334\"]}");
	add("04421454", "{\"term\":\"samian ware\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04421454\"]}");
	add("04421454", "{\"term\":\"terra sigillata\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04421454\"]}");
	add("04421611", "{\"term\":\"terry\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04421611\", \"11356539\"]}");
	add("04421611", "{\"term\":\"terry cloth\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04421611\"]}");
	add("04421611", "{\"term\":\"terrycloth\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04421611\"]}");
	add("04421810", "{\"term\":\"tesla coil\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04421810\"]}");
	add("04421956", "{\"term\":\"tessella\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04421956\"]}");
	add("04422044", "{\"term\":\"tessera\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04422044\"]}");
	add("04422213", "{\"term\":\"test bed\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04422213\"]}");
	add("04422392", "{\"term\":\"test equipment\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04422392\"]}");
	add("04422489", "{\"term\":\"tester\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04422489\", \"10088041\"]}");
	add("04422595", "{\"term\":\"test paper\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04422595\", \"07213988\"]}");
	add("04422713", "{\"term\":\"test range\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04422713\"]}");
	add("04422798", "{\"term\":\"research rocket\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04422798\"]}");
	add("04422798", "{\"term\":\"test instrument vehicle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04422798\"]}");
	add("04422798", "{\"term\":\"test rocket\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04422798\"]}");
	add("04422950", "{\"term\":\"test room\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04422950\"]}");
	add("04422950", "{\"term\":\"testing room\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04422950\"]}");
	add("04423056", "{\"term\":\"test tube\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04423056\"]}");
	add("04423140", "{\"term\":\"testudo\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01673019\", \"04423140\"]}");
	add("04423336", "{\"term\":\"tetracaine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04423336\"]}");
	add("04423473", "{\"term\":\"carbon dichloride\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04423473\"]}");
	add("04423473", "{\"term\":\"ethylene tetrachloride\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04423473\"]}");
	add("04423473", "{\"term\":\"tetrachlorethylene\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04423473\"]}");
	add("04423473", "{\"term\":\"tetrachloroethylene\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04423473\"]}");
	add("04423665", "{\"term\":\"achromycin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04423665\"]}");
	add("04423665", "{\"term\":\"tetracycline\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04423665\"]}");
	add("04423920", "{\"term\":\"tetrahydrocannabinol\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04423920\"]}");
	add("04423920", "{\"term\":\"thc\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04423920\"]}");
	add("04424036", "{\"term\":\"tetraskele\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04424036\"]}");
	add("04424036", "{\"term\":\"tetraskelion\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04424036\"]}");
	add("04424221", "{\"term\":\"tetrode\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04424221\"]}");
	add("04424315", "{\"term\":\"textile machine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04424315\"]}");
	add("04424496", "{\"term\":\"textile mill\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04424496\"]}");
	add("04424602", "{\"term\":\"thalidomide\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04424602\"]}");
	add("04424807", "{\"term\":\"thatch\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04424807\", \"11353998\", \"15094279\", \"05268809\"]}");
	add("04424807", "{\"term\":\"thatched roof\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04424807\"]}");
	add("04424944", "{\"term\":\"house\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"03550330\", \"04424944\", \"08094856\", \"08398027\", \"08703415\", \"00433104\", \"07987896\", \"08179924\", \"08239887\", \"08241501\", \"08076706\", \"03549540\"]}");
	add("04424944", "{\"term\":\"theater\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08569203\", \"07019235\", \"04424944\"]}");
	add("04424944", "{\"term\":\"theatre\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08569203\", \"07019235\", \"04424944\"]}");
	add("04425492", "{\"term\":\"theater curtain\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04425492\"]}");
	add("04425492", "{\"term\":\"theatre curtain\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04425492\"]}");
	add("04425779", "{\"term\":\"theater light\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04425779\"]}");
	add("04425953", "{\"term\":\"theater stage\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04425953\"]}");
	add("04425953", "{\"term\":\"theatre stage\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04425953\"]}");
	add("04426208", "{\"term\":\"theodolite\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04426208\"]}");
	add("04426208", "{\"term\":\"transit\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00309941\", \"04480667\", \"04426208\"]}");
	add("04426450", "{\"term\":\"elixophyllin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04426450\"]}");
	add("04426450", "{\"term\":\"slo-bid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04426450\"]}");
	add("04426450", "{\"term\":\"theobid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04426450\"]}");
	add("04426450", "{\"term\":\"theophylline\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04426450\"]}");
	add("04426777", "{\"term\":\"theremin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04426777\"]}");
	add("04427003", "{\"term\":\"thermal printer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04427003\"]}");
	add("04427159", "{\"term\":\"thermal reactor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04427159\"]}");
	add("04427341", "{\"term\":\"thermal resistor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04427341\"]}");
	add("04427341", "{\"term\":\"thermistor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04427341\"]}");
	add("04427596", "{\"term\":\"aerosol bomb\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02685776\", \"04427596\"]}");
	add("04427596", "{\"term\":\"fuel-air bomb\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04427596\"]}");
	add("04427596", "{\"term\":\"thermobaric bomb\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04427596\"]}");
	add("04427596", "{\"term\":\"vacuum bomb\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04427596\"]}");
	add("04427596", "{\"term\":\"volume-detonation bomb\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04427596\"]}");
	add("04427855", "{\"term\":\"thermocouple\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04427855\"]}");
	add("04427855", "{\"term\":\"thermocouple junction\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04427855\"]}");
	add("04428218", "{\"term\":\"electric thermometer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04428218\"]}");
	add("04428218", "{\"term\":\"thermel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04428218\"]}");
	add("04428218", "{\"term\":\"thermoelectric thermometer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04428218\"]}");
	add("04428393", "{\"term\":\"thermograph\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04428393\", \"04428552\"]}");
	add("04428393", "{\"term\":\"thermometrograph\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04428393\"]}");
	add("04428552", "{\"term\":\"thermograph\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04428393\", \"04428552\"]}");
	add("04428717", "{\"term\":\"thermogravimeter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04428717\"]}");
	add("04428717", "{\"term\":\"thermohydrometer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04428717\"]}");
	add("04428875", "{\"term\":\"thermojunction\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04428875\"]}");
	add("04429007", "{\"term\":\"thermometer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04429007\"]}");
	add("04429544", "{\"term\":\"fusion reactor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04429544\"]}");
	add("04429544", "{\"term\":\"thermonuclear reactor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04429544\"]}");
	add("04429701", "{\"term\":\"thermopile\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04429701\"]}");
	add("04429862", "{\"term\":\"thermos\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04429862\"]}");
	add("04429862", "{\"term\":\"thermos bottle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04429862\"]}");
	add("04429862", "{\"term\":\"thermos flask\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04429862\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }