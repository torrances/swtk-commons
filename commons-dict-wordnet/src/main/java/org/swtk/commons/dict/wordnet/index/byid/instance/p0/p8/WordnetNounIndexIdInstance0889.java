package org.swtk.commons.dict.wordnet.index.byid.instance.p0.p8;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0889 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("08891234", "{\"term\":\"england\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08891234\"]}");
	add("08893163", "{\"term\":\"albion\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08893163\"]}");
	add("08893294", "{\"term\":\"anglia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08893294\"]}");
	add("08893374", "{\"term\":\"blighty\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08893374\"]}");
	add("08893496", "{\"term\":\"lancaster\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08172664\", \"08893496\"]}");
	add("08893639", "{\"term\":\"lake district\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08893639\"]}");
	add("08893639", "{\"term\":\"lakeland\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08893639\"]}");
	add("08893849", "{\"term\":\"british capital\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08893849\"]}");
	add("08893849", "{\"term\":\"capital of the united kingdom\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08893849\"]}");
	add("08893849", "{\"term\":\"greater london\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08893849\"]}");
	add("08893849", "{\"term\":\"london\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11157738\", \"08893849\"]}");
	add("08894500", "{\"term\":\"city of london\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08894500\"]}");
	add("08894500", "{\"term\":\"the city\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08090191\", \"08894500\"]}");
	add("08894696", "{\"term\":\"home counties\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08894696\"]}");
	add("08894930", "{\"term\":\"greenwich\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08894930\"]}");
	add("08895147", "{\"term\":\"bloomsbury\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08895147\"]}");
	add("08895284", "{\"term\":\"soho\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08895284\", \"09144286\"]}");
	add("08895429", "{\"term\":\"wembley\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08895429\"]}");
	add("08895596", "{\"term\":\"west end\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08895596\"]}");
	add("08895774", "{\"term\":\"city of westminster\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08895774\"]}");
	add("08895774", "{\"term\":\"westminster\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08895774\"]}");
	add("08896070", "{\"term\":\"buckingham palace\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08896070\"]}");
	add("08896199", "{\"term\":\"downing street\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08069082\", \"08896199\"]}");
	add("08896366", "{\"term\":\"pall mall\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08896366\"]}");
	add("08896505", "{\"term\":\"houses of parliament\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08896505\"]}");
	add("08896662", "{\"term\":\"westminster abbey\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08896662\"]}");
	add("08897000", "{\"term\":\"wimbledon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08897000\"]}");
	add("08897202", "{\"term\":\"manchester\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08897202\", \"09134601\"]}");
	add("08897435", "{\"term\":\"hull\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"03553806\", \"08897435\", \"11085557\", \"11085713\", \"11712459\", \"13160695\"]}");
	add("08897435", "{\"term\":\"kingston-upon hull\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08897435\"]}");
	add("08897609", "{\"term\":\"liverpool\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08897609\"]}");
	add("08897840", "{\"term\":\"birmingham\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08897840\", \"09076410\"]}");
	add("08897840", "{\"term\":\"brummagem\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08897840\"]}");
	add("08898034", "{\"term\":\"oxford\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03874084\", \"03874187\", \"09100192\", \"08898034\"]}");
	add("08898243", "{\"term\":\"cambridge\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08898243\", \"09119256\", \"02945682\"]}");
	add("08898429", "{\"term\":\"bath\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"08898429\", \"13637841\", \"00258637\", \"02809715\"]}");
	add("08898594", "{\"term\":\"blackpool\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08898594\"]}");
	add("08898760", "{\"term\":\"brighton\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08898760\"]}");
	add("08898935", "{\"term\":\"bristol\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08898935\"]}");
	add("08899112", "{\"term\":\"cheddar\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07868895\", \"08899112\"]}");
	add("08899255", "{\"term\":\"leeds\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08899255\"]}");
	add("08899424", "{\"term\":\"leicester\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08899424\", \"08904239\"]}");
	add("08899615", "{\"term\":\"newcastle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08899615\"]}");
	add("08899615", "{\"term\":\"newcastle-upon-tyne\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08899615\"]}");
	add("08899907", "{\"term\":\"pompey\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08899907\", \"11261844\"]}");
	add("08899907", "{\"term\":\"portsmouth\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08899907\", \"09134769\", \"09173971\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }