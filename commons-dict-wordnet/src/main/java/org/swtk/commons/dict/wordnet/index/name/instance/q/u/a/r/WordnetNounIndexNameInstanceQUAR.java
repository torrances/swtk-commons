package org.swtk.commons.dict.wordnet.index.name.instance.q.u.a.r;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceQUAR {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"quarantine\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01204135\", \"14438739\"]}");
	add("{\"term\":\"quark\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07870431\", \"09424709\"]}");
	add("{\"term\":\"quarrel\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04037957\", \"07198809\"]}");
	add("{\"term\":\"quarreler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10518007\"]}");
	add("{\"term\":\"quarreller\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10518007\"]}");
	add("{\"term\":\"quarrelsomeness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04651336\"]}");
	add("{\"term\":\"quarrier\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10518136\"]}");
	add("{\"term\":\"quarry\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02155533\", \"03955718\", \"10490045\"]}");
	add("{\"term\":\"quarrying\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00924782\"]}");
	add("{\"term\":\"quarryman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10518136\"]}");
	add("{\"term\":\"quart\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13641830\", \"13643316\", \"13640873\"]}");
	add("{\"term\":\"quartan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14364040\"]}");
	add("{\"term\":\"quarter\", \"synsetCount\":14, \"upperType\":\"NOUN\", \"ids\":[\"01261259\", \"04038076\", \"04323784\", \"10518284\", \"13411417\", \"13644335\", \"13742957\", \"13852365\", \"15231386\", \"15250842\", \"15259739\", \"15283261\", \"08645494\", \"13759620\"]}");
	add("{\"term\":\"quarterback\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00727818\", \"10518401\"]}");
	add("{\"term\":\"quarterdeck\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04038246\"]}");
	add("{\"term\":\"quarterfinal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07482352\"]}");
	add("{\"term\":\"quartering\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00387361\", \"04038360\", \"04038525\"]}");
	add("{\"term\":\"quarterlight\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04038718\"]}");
	add("{\"term\":\"quarterly\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06606829\"]}");
	add("{\"term\":\"quartermaster\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10518571\"]}");
	add("{\"term\":\"quartern\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13759620\"]}");
	add("{\"term\":\"quarters\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03684710\"]}");
	add("{\"term\":\"quarterstaff\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04038985\"]}");
	add("{\"term\":\"quartervine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12834763\"]}");
	add("{\"term\":\"quartet\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"07055434\", \"08003822\", \"08004531\", \"08264172\", \"13766444\"]}");
	add("{\"term\":\"quartette\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"07055434\", \"08003822\", \"08004531\", \"08264172\"]}");
	add("{\"term\":\"quartic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13753484\"]}");
	add("{\"term\":\"quartile\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05746149\"]}");
	add("{\"term\":\"quarto\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05104082\"]}");
	add("{\"term\":\"quartz\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"14717894\", \"14903901\"]}");
	add("{\"term\":\"quartzite\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14718322\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }