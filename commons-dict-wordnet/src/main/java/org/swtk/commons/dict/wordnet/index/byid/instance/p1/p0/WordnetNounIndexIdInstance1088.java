package org.swtk.commons.dict.wordnet.index.byid.instance.p1.p0;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance1088 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("10880040", "{\"term\":\"bradbury\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10880040\"]}");
	add("10880040", "{\"term\":\"ray bradbury\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10880040\"]}");
	add("10880040", "{\"term\":\"ray douglas bradbury\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10880040\"]}");
	add("10880185", "{\"term\":\"bradford\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10880185\"]}");
	add("10880185", "{\"term\":\"william bradford\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10880185\"]}");
	add("10880403", "{\"term\":\"bradley\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10880403\", \"10880595\"]}");
	add("10880403", "{\"term\":\"omar bradley\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10880403\"]}");
	add("10880403", "{\"term\":\"omar nelson bradley\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10880403\"]}");
	add("10880595", "{\"term\":\"bradley\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10880403\", \"10880595\"]}");
	add("10880595", "{\"term\":\"thomas bradley\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10880595\"]}");
	add("10880595", "{\"term\":\"tom bradley\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10880595\"]}");
	add("10880770", "{\"term\":\"anne bradstreet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10880770\"]}");
	add("10880770", "{\"term\":\"anne dudley bradstreet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10880770\"]}");
	add("10880770", "{\"term\":\"bradstreet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10880770\"]}");
	add("10880925", "{\"term\":\"brady\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10880925\", \"10881131\"]}");
	add("10880925", "{\"term\":\"diamond jim\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10880925\"]}");
	add("10880925", "{\"term\":\"diamond jim brady\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10880925\"]}");
	add("10880925", "{\"term\":\"james buchanan brady\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10880925\"]}");
	add("10881131", "{\"term\":\"brady\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10880925\", \"10881131\"]}");
	add("10881131", "{\"term\":\"mathew b. brady\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10881131\"]}");
	add("10881337", "{\"term\":\"bragg\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10881337\"]}");
	add("10881337", "{\"term\":\"braxton bragg\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10881337\"]}");
	add("10881522", "{\"term\":\"brahe\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10881522\"]}");
	add("10881522", "{\"term\":\"tycho brahe\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10881522\"]}");
	add("10881709", "{\"term\":\"brahms\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07292851\", \"10881709\"]}");
	add("10881709", "{\"term\":\"johannes brahms\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10881709\"]}");
	add("10881877", "{\"term\":\"braille\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06374199\", \"10881877\"]}");
	add("10881877", "{\"term\":\"louis braille\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10881877\"]}");
	add("10882103", "{\"term\":\"bramante\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10882103\"]}");
	add("10882103", "{\"term\":\"donato bramante\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10882103\"]}");
	add("10882103", "{\"term\":\"donato d\u0027agnolo bramante\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10882103\"]}");
	add("10882272", "{\"term\":\"brancusi\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10882272\"]}");
	add("10882272", "{\"term\":\"constantin brancusi\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10882272\"]}");
	add("10882418", "{\"term\":\"brandt\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10882418\"]}");
	add("10882418", "{\"term\":\"willy brandt\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10882418\"]}");
	add("10882595", "{\"term\":\"braque\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10882595\"]}");
	add("10882595", "{\"term\":\"georges braque\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10882595\"]}");
	add("10882720", "{\"term\":\"braun\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10882720\", \"10883036\"]}");
	add("10882720", "{\"term\":\"von braun\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10882720\"]}");
	add("10882720", "{\"term\":\"wernher magnus maximilian von braun\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10882720\"]}");
	add("10882720", "{\"term\":\"wernher von braun\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10882720\"]}");
	add("10883036", "{\"term\":\"braun\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10882720\", \"10883036\"]}");
	add("10883036", "{\"term\":\"eva braun\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10883036\"]}");
	add("10883148", "{\"term\":\"bertolt brecht\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10883148\"]}");
	add("10883148", "{\"term\":\"brecht\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10883148\"]}");
	add("10883313", "{\"term\":\"breuer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10883313\"]}");
	add("10883313", "{\"term\":\"marcel lajos breuer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10883313\"]}");
	add("10883492", "{\"term\":\"brezhnev\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10883492\"]}");
	add("10883492", "{\"term\":\"leonid brezhnev\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10883492\"]}");
	add("10883492", "{\"term\":\"leonid ilyich brezhnev\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10883492\"]}");
	add("10883660", "{\"term\":\"bridges\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10883660\"]}");
	add("10883660", "{\"term\":\"harry bridges\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10883660\"]}");
	add("10883800", "{\"term\":\"bride\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"09894191\", \"10883800\", \"09894084\"]}");
	add("10883800", "{\"term\":\"bridget\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10883800\"]}");
	add("10883800", "{\"term\":\"brigid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10883800\"]}");
	add("10883800", "{\"term\":\"saint bride\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10883800\"]}");
	add("10883800", "{\"term\":\"saint bridget\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10883800\"]}");
	add("10883800", "{\"term\":\"saint brigid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10883800\"]}");
	add("10883800", "{\"term\":\"st. bride\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10883800\"]}");
	add("10883800", "{\"term\":\"st. bridget\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10883800\"]}");
	add("10883800", "{\"term\":\"st. brigid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10883800\"]}");
	add("10884024", "{\"term\":\"brinton\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10884024\"]}");
	add("10884024", "{\"term\":\"daniel garrison brinton\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10884024\"]}");
	add("10884231", "{\"term\":\"benjamin britten\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10884231\"]}");
	add("10884231", "{\"term\":\"britten\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10884231\"]}");
	add("10884231", "{\"term\":\"edward benjamin britten\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10884231\"]}");
	add("10884231", "{\"term\":\"lord britten of aldeburgh\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10884231\"]}");
	add("10884454", "{\"term\":\"broca\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10884454\"]}");
	add("10884454", "{\"term\":\"pierre-paul broca\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10884454\"]}");
	add("10884727", "{\"term\":\"bertram brockhouse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10884727\"]}");
	add("10884727", "{\"term\":\"brockhouse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10884727\"]}");
	add("10884916", "{\"term\":\"broglie\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10884916\"]}");
	add("10884916", "{\"term\":\"de broglie\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10884916\"]}");
	add("10884916", "{\"term\":\"louis victor de broglie\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10884916\"]}");
	add("10885154", "{\"term\":\"bronte\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10885154\", \"10885287\", \"10885447\"]}");
	add("10885154", "{\"term\":\"charlotte bronte\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10885154\"]}");
	add("10885287", "{\"term\":\"bronte\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10885154\", \"10885287\", \"10885447\"]}");
	add("10885287", "{\"term\":\"currer bell\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10885287\"]}");
	add("10885287", "{\"term\":\"emily bronte\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10885287\"]}");
	add("10885287", "{\"term\":\"emily jane bronte\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10885287\"]}");
	add("10885447", "{\"term\":\"anne bronte\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10885447\"]}");
	add("10885447", "{\"term\":\"bronte\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10885154\", \"10885287\", \"10885447\"]}");
	add("10885577", "{\"term\":\"brooke\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10885577\"]}");
	add("10885577", "{\"term\":\"rupert brooke\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10885577\"]}");
	add("10885677", "{\"term\":\"brooks\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10885677\"]}");
	add("10885677", "{\"term\":\"van wyck brooks\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10885677\"]}");
	add("10885804", "{\"term\":\"brown\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"02911310\", \"10885804\", \"10885972\", \"04979195\"]}");
	add("10885804", "{\"term\":\"john brown\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10885804\"]}");
	add("10885972", "{\"term\":\"brown\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"02911310\", \"10885804\", \"10885972\", \"04979195\"]}");
	add("10885972", "{\"term\":\"robert brown\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10885972\"]}");
	add("10886158", "{\"term\":\"artemus ward\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10886158\"]}");
	add("10886158", "{\"term\":\"browne\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10886158\", \"10886325\"]}");
	add("10886158", "{\"term\":\"charles farrar browne\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10886158\"]}");
	add("10886325", "{\"term\":\"browne\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10886158\", \"10886325\"]}");
	add("10886325", "{\"term\":\"hablot knight browne\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10886325\"]}");
	add("10886325", "{\"term\":\"phiz\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05609112\", \"10886325\"]}");
	add("10886470", "{\"term\":\"browning\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00247419\", \"10886470\", \"10886651\", \"10886825\"]}");
	add("10886470", "{\"term\":\"elizabeth barrett browning\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10886470\"]}");
	add("10886651", "{\"term\":\"browning\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00247419\", \"10886470\", \"10886651\", \"10886825\"]}");
	add("10886651", "{\"term\":\"robert browning\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10886651\"]}");
	add("10886825", "{\"term\":\"browning\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00247419\", \"10886470\", \"10886651\", \"10886825\"]}");
	add("10886825", "{\"term\":\"john m. browning\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10886825\"]}");
	add("10886825", "{\"term\":\"john moses browning\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10886825\"]}");
	add("10887060", "{\"term\":\"bruce\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10887060\", \"10887295\"]}");
	add("10887060", "{\"term\":\"robert i\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10887060\"]}");
	add("10887060", "{\"term\":\"robert the bruce\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10887060\"]}");
	add("10887295", "{\"term\":\"bruce\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10887060\", \"10887295\"]}");
	add("10887295", "{\"term\":\"david bruce\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10887295\"]}");
	add("10887295", "{\"term\":\"sir david bruce\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10887295\"]}");
	add("10887520", "{\"term\":\"bruch\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10887520\"]}");
	add("10887520", "{\"term\":\"max bruch\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10887520\"]}");
	add("10887612", "{\"term\":\"anton bruckner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10887612\"]}");
	add("10887612", "{\"term\":\"bruckner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10887612\"]}");
	add("10887764", "{\"term\":\"breughel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10887764\"]}");
	add("10887764", "{\"term\":\"breughel the elder\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10887764\"]}");
	add("10887764", "{\"term\":\"bruegel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10887764\"]}");
	add("10887764", "{\"term\":\"brueghel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10887764\"]}");
	add("10887764", "{\"term\":\"pieter breughel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10887764\"]}");
	add("10887764", "{\"term\":\"pieter bruegel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10887764\"]}");
	add("10887764", "{\"term\":\"pieter brueghel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10887764\"]}");
	add("10887764", "{\"term\":\"pieter brueghel the elder\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10887764\"]}");
	add("10887984", "{\"term\":\"beau brummell\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10887984\"]}");
	add("10887984", "{\"term\":\"brummell\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10887984\"]}");
	add("10887984", "{\"term\":\"george bryan brummell\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10887984\"]}");
	add("10888149", "{\"term\":\"brunelleschi\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10888149\"]}");
	add("10888149", "{\"term\":\"filippo brunelleschi\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10888149\"]}");
	add("10888325", "{\"term\":\"bruno\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10888325\", \"10888567\", \"11147555\"]}");
	add("10888325", "{\"term\":\"giordano bruno\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10888325\"]}");
	add("10888567", "{\"term\":\"bruno\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10888325\", \"10888567\", \"11147555\"]}");
	add("10888567", "{\"term\":\"saint bruno\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10888567\"]}");
	add("10888567", "{\"term\":\"st. bruno\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10888567\"]}");
	add("10888794", "{\"term\":\"brutus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10888794\"]}");
	add("10888794", "{\"term\":\"marcus junius brutus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10888794\"]}");
	add("10888972", "{\"term\":\"boy orator of the platte\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10888972\"]}");
	add("10888972", "{\"term\":\"bryan\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09166286\", \"10888972\"]}");
	add("10888972", "{\"term\":\"great commoner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10888972\"]}");
	add("10888972", "{\"term\":\"william jennings bryan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10888972\"]}");
	add("10889270", "{\"term\":\"buber\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10889270\"]}");
	add("10889270", "{\"term\":\"martin buber\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10889270\"]}");
	add("10889518", "{\"term\":\"buchanan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10889518\"]}");
	add("10889518", "{\"term\":\"james buchanan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10889518\"]}");
	add("10889518", "{\"term\":\"president buchanan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10889518\"]}");
	add("10889659", "{\"term\":\"buchner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10889659\"]}");
	add("10889659", "{\"term\":\"eduard buchner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10889659\"]}");
	add("10889822", "{\"term\":\"buck\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"01890905\", \"04147696\", \"10889822\", \"13417070\", \"04531437\"]}");
	add("10889822", "{\"term\":\"pearl buck\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10889822\"]}");
	add("10889822", "{\"term\":\"pearl sydenstricker buck\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10889822\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }