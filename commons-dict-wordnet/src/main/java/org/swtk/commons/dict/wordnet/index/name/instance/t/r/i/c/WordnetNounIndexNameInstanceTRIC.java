package org.swtk.commons.dict.wordnet.index.name.instance.t.r.i.c;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceTRIC {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"trice\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15271921\"]}");
	add("{\"term\":\"triceps\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05587235\"]}");
	add("{\"term\":\"triceratops\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01706964\"]}");
	add("{\"term\":\"trichechidae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02076184\"]}");
	add("{\"term\":\"trichechus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02076331\"]}");
	add("{\"term\":\"trichina\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01935577\"]}");
	add("{\"term\":\"trichiniasis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14373941\"]}");
	add("{\"term\":\"trichinosis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14373941\"]}");
	add("{\"term\":\"trichion\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08540751\"]}");
	add("{\"term\":\"trichiuridae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02625453\"]}");
	add("{\"term\":\"trichloride\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15041551\"]}");
	add("{\"term\":\"trichlormethiazide\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04488629\"]}");
	add("{\"term\":\"trichloroethane\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14875601\"]}");
	add("{\"term\":\"trichloroethylene\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14875601\"]}");
	add("{\"term\":\"trichloromethane\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03026089\"]}");
	add("{\"term\":\"trichobezoar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09323950\"]}");
	add("{\"term\":\"trichoceros\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12105986\"]}");
	add("{\"term\":\"trichodesmium\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01362403\"]}");
	add("{\"term\":\"trichodontidae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02560981\"]}");
	add("{\"term\":\"trichoglossus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01823578\"]}");
	add("{\"term\":\"tricholoma\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13037509\"]}");
	add("{\"term\":\"tricholomataceae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13037217\"]}");
	add("{\"term\":\"trichomanes\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12972782\"]}");
	add("{\"term\":\"trichomonad\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01423166\"]}");
	add("{\"term\":\"trichomoniasis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14209738\"]}");
	add("{\"term\":\"trichophaga\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02295216\"]}");
	add("{\"term\":\"trichophyton\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13099243\"]}");
	add("{\"term\":\"trichoptera\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02271667\"]}");
	add("{\"term\":\"trichopteran\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02271848\"]}");
	add("{\"term\":\"trichopteron\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02271848\"]}");
	add("{\"term\":\"trichostema\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12891834\"]}");
	add("{\"term\":\"trichostigma\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11877284\"]}");
	add("{\"term\":\"trichosurus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01884358\"]}");
	add("{\"term\":\"trichotillomania\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09205928\"]}");
	add("{\"term\":\"trichotomy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07956361\"]}");
	add("{\"term\":\"trichroism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11541254\"]}");
	add("{\"term\":\"trichromacy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05664139\"]}");
	add("{\"term\":\"trichuriasis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14478540\"]}");
	add("{\"term\":\"trichys\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02350095\"]}");
	add("{\"term\":\"trick\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"01262274\", \"10799671\", \"00100771\", \"00428583\", \"00752073\", \"15317503\", \"00172439\"]}");
	add("{\"term\":\"tricker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10483280\"]}");
	add("{\"term\":\"trickery\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00754297\", \"06773433\"]}");
	add("{\"term\":\"trickiness\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04774421\", \"04882923\"]}");
	add("{\"term\":\"trickle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07447159\"]}");
	add("{\"term\":\"trickster\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"09568884\", \"10017621\", \"10483280\"]}");
	add("{\"term\":\"triclinium\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04488780\", \"04488898\"]}");
	add("{\"term\":\"tricolor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04489052\"]}");
	add("{\"term\":\"tricolour\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04489052\"]}");
	add("{\"term\":\"tricorn\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04489433\"]}");
	add("{\"term\":\"tricorne\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04489433\"]}");
	add("{\"term\":\"tricot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04489553\"]}");
	add("{\"term\":\"tricycle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04489649\"]}");
	add("{\"term\":\"tricyclic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04489799\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }