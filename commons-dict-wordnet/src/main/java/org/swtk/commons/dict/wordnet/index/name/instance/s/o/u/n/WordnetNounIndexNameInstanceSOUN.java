package org.swtk.commons.dict.wordnet.index.name.instance.s.o.u.n;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceSOUN {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"sound\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"09463090\", \"09469019\", \"07125755\", \"06288789\", \"07385893\", \"11501330\", \"05726201\", \"04988388\"]}");
	add("{\"term\":\"soundboard\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04269271\"]}");
	add("{\"term\":\"soundbox\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04268616\"]}");
	add("{\"term\":\"sounder\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04268877\"]}");
	add("{\"term\":\"sounding\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01006903\", \"05142716\"]}");
	add("{\"term\":\"soundlessness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04990105\"]}");
	add("{\"term\":\"soundman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10646919\"]}");
	add("{\"term\":\"soundness\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"05039004\", \"05167331\", \"14570446\"]}");
	add("{\"term\":\"soundtrack\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04270079\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }