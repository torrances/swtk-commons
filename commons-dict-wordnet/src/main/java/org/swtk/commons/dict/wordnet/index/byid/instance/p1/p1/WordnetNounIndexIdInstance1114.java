package org.swtk.commons.dict.wordnet.index.byid.instance.p1.p1;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance1114 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("11140136", "{\"term\":\"d. h. lawrence\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11140136\"]}");
	add("11140136", "{\"term\":\"david herbert lawrence\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11140136\"]}");
	add("11140136", "{\"term\":\"lawrence\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"09111114\", \"11140136\", \"11140358\", \"11140520\", \"11140623\", \"11140824\", \"11141098\"]}");
	add("11140358", "{\"term\":\"e. o. lawrence\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11140358\"]}");
	add("11140358", "{\"term\":\"ernest orlando lawrence\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11140358\"]}");
	add("11140358", "{\"term\":\"lawrence\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"09111114\", \"11140136\", \"11140358\", \"11140520\", \"11140623\", \"11140824\", \"11141098\"]}");
	add("11140520", "{\"term\":\"gertrude lawrence\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11140520\"]}");
	add("11140520", "{\"term\":\"lawrence\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"09111114\", \"11140136\", \"11140358\", \"11140520\", \"11140623\", \"11140824\", \"11141098\"]}");
	add("11140623", "{\"term\":\"lawrence\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"09111114\", \"11140136\", \"11140358\", \"11140520\", \"11140623\", \"11140824\", \"11141098\"]}");
	add("11140623", "{\"term\":\"sir thomas lawrence\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11140623\"]}");
	add("11140824", "{\"term\":\"lawrence\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"09111114\", \"11140136\", \"11140358\", \"11140520\", \"11140623\", \"11140824\", \"11141098\"]}");
	add("11140824", "{\"term\":\"lawrence of arabia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11140824\"]}");
	add("11140824", "{\"term\":\"t. e. lawrence\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11140824\"]}");
	add("11140824", "{\"term\":\"thomas edward lawrence\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11140824\"]}");
	add("11141098", "{\"term\":\"laurentius\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11141098\"]}");
	add("11141098", "{\"term\":\"lawrence\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"09111114\", \"11140136\", \"11140358\", \"11140520\", \"11140623\", \"11140824\", \"11141098\"]}");
	add("11141098", "{\"term\":\"saint lawrence\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09442908\", \"11141098\"]}");
	add("11141098", "{\"term\":\"st. lawrence\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09442908\", \"11141098\"]}");
	add("11141441", "{\"term\":\"leacock\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11141441\"]}");
	add("11141441", "{\"term\":\"stephen butler leacock\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11141441\"]}");
	add("11141441", "{\"term\":\"stephen leacock\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11141441\"]}");
	add("11141630", "{\"term\":\"leakey\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"11141630\", \"11141866\", \"11142104\"]}");
	add("11141630", "{\"term\":\"louis leakey\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11141630\"]}");
	add("11141630", "{\"term\":\"louis seymour bazett leakey\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11141630\"]}");
	add("11141866", "{\"term\":\"leakey\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"11141630\", \"11141866\", \"11142104\"]}");
	add("11141866", "{\"term\":\"mary douglas leakey\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11141866\"]}");
	add("11141866", "{\"term\":\"mary leakey\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11141866\"]}");
	add("11142104", "{\"term\":\"leakey\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"11141630\", \"11141866\", \"11142104\"]}");
	add("11142104", "{\"term\":\"richard erskine leakey\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11142104\"]}");
	add("11142104", "{\"term\":\"richard leakey\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11142104\"]}");
	add("11142429", "{\"term\":\"edward lear\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11142429\"]}");
	add("11142429", "{\"term\":\"lear\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09624223\", \"11142429\"]}");
	add("11142569", "{\"term\":\"leary\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11142569\"]}");
	add("11142569", "{\"term\":\"tim leary\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11142569\"]}");
	add("11142569", "{\"term\":\"timothy francis leary\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11142569\"]}");
	add("11142569", "{\"term\":\"timothy leary\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11142569\"]}");
	add("11142815", "{\"term\":\"david john moore cornwell\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11142815\"]}");
	add("11142815", "{\"term\":\"john le carre\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11142815\"]}");
	add("11142815", "{\"term\":\"le carre\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11142815\"]}");
	add("11142967", "{\"term\":\"henry le chatelier\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11142967\"]}");
	add("11142967", "{\"term\":\"le chatelier\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11142967\"]}");
	add("11143114", "{\"term\":\"charles edouard jeanneret\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11143114\"]}");
	add("11143114", "{\"term\":\"le corbusier\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11143114\"]}");
	add("11143252", "{\"term\":\"huddie leadbetter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11143252\"]}");
	add("11143252", "{\"term\":\"leadbelly\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11143252\"]}");
	add("11143252", "{\"term\":\"ledbetter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11143252\"]}");
	add("11143429", "{\"term\":\"le duc tho\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11143429\"]}");
	add("11143580", "{\"term\":\"lee\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"08609908\", \"11143580\", \"11143752\", \"11143884\", \"11144078\", \"11144290\", \"11144462\", \"11144637\"]}");
	add("11143580", "{\"term\":\"robert e. lee\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11143580\"]}");
	add("11143580", "{\"term\":\"robert edward lee\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11143580\"]}");
	add("11143752", "{\"term\":\"henry lee\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11143752\"]}");
	add("11143752", "{\"term\":\"lee\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"08609908\", \"11143580\", \"11143752\", \"11143884\", \"11144078\", \"11144290\", \"11144462\", \"11144637\"]}");
	add("11143752", "{\"term\":\"lighthorse harry lee\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11143752\"]}");
	add("11143884", "{\"term\":\"lee\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"08609908\", \"11143580\", \"11143752\", \"11143884\", \"11144078\", \"11144290\", \"11144462\", \"11144637\"]}");
	add("11143884", "{\"term\":\"richard henry lee\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11143884\"]}");
	add("11144078", "{\"term\":\"lee\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"08609908\", \"11143580\", \"11143752\", \"11143884\", \"11144078\", \"11144290\", \"11144462\", \"11144637\"]}");
	add("11144078", "{\"term\":\"tsung dao lee\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11144078\"]}");
	add("11144290", "{\"term\":\"bruce lee\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11144290\"]}");
	add("11144290", "{\"term\":\"lee\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"08609908\", \"11143580\", \"11143752\", \"11143884\", \"11144078\", \"11144290\", \"11144462\", \"11144637\"]}");
	add("11144290", "{\"term\":\"lee yuen kam\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11144290\"]}");
	add("11144462", "{\"term\":\"gypsy rose lee\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11144462\"]}");
	add("11144462", "{\"term\":\"lee\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"08609908\", \"11143580\", \"11143752\", \"11143884\", \"11144078\", \"11144290\", \"11144462\", \"11144637\"]}");
	add("11144462", "{\"term\":\"rose louise hovick\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11144462\"]}");
	add("11144637", "{\"term\":\"lee\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"08609908\", \"11143580\", \"11143752\", \"11143884\", \"11144078\", \"11144290\", \"11144462\", \"11144637\"]}");
	add("11144637", "{\"term\":\"shelton jackson lee\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11144637\"]}");
	add("11144637", "{\"term\":\"spike lee\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11144637\"]}");
	add("11144821", "{\"term\":\"eva le gallienne\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11144821\"]}");
	add("11144821", "{\"term\":\"le gallienne\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11144821\"]}");
	add("11144951", "{\"term\":\"fernand leger\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11144951\"]}");
	add("11144951", "{\"term\":\"leger\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11144951\", \"13425421\"]}");
	add("11145070", "{\"term\":\"franz lehar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11145070\"]}");
	add("11145070", "{\"term\":\"lehar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11145070\"]}");
	add("11145183", "{\"term\":\"gottfried wilhelm leibnitz\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11145183\"]}");
	add("11145183", "{\"term\":\"gottfried wilhelm leibniz\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11145183\"]}");
	add("11145183", "{\"term\":\"leibnitz\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11145183\"]}");
	add("11145183", "{\"term\":\"leibniz\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11145183\"]}");
	add("11145536", "{\"term\":\"leigh\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11145536\"]}");
	add("11145536", "{\"term\":\"vivien leigh\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11145536\"]}");
	add("11145636", "{\"term\":\"edouard lemaitre\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11145636\"]}");
	add("11145636", "{\"term\":\"georges henri lemaitre\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11145636\"]}");
	add("11145636", "{\"term\":\"lemaitre\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11145636\"]}");
	add("11145830", "{\"term\":\"jack lemmon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11145830\"]}");
	add("11145830", "{\"term\":\"john uhler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11145830\"]}");
	add("11145830", "{\"term\":\"lemmon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11145830\"]}");
	add("11145947", "{\"term\":\"lenard\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11145947\"]}");
	add("11145947", "{\"term\":\"philipp lenard\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11145947\"]}");
	add("11146071", "{\"term\":\"ivan lendl\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11146071\"]}");
	add("11146071", "{\"term\":\"lendl\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11146071\"]}");
	add("11146285", "{\"term\":\"charles l\u0027enfant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11146285\"]}");
	add("11146285", "{\"term\":\"l\u0027enfant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11146285\"]}");
	add("11146285", "{\"term\":\"pierre charles l\u0027enfant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11146285\"]}");
	add("11146480", "{\"term\":\"lenin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11146480\"]}");
	add("11146480", "{\"term\":\"nikolai lenin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11146480\"]}");
	add("11146480", "{\"term\":\"vladimir ilich lenin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11146480\"]}");
	add("11146480", "{\"term\":\"vladimir ilich ulyanov\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11146480\"]}");
	add("11146480", "{\"term\":\"vladimir ilyich lenin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11146480\"]}");
	add("11146480", "{\"term\":\"vladimir ilyich ulyanov\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11146480\"]}");
	add("11146480", "{\"term\":\"vladimir lenin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11146480\"]}");
	add("11146773", "{\"term\":\"john lennon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11146773\"]}");
	add("11146773", "{\"term\":\"lennon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11146773\"]}");
	add("11147001", "{\"term\":\"andre le notre\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11147001\"]}");
	add("11147001", "{\"term\":\"le notre\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11147001\"]}");
	add("11147178", "{\"term\":\"leo i\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11147178\"]}");
	add("11147178", "{\"term\":\"leo the great\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11147178\"]}");
	add("11147178", "{\"term\":\"st. leo i\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11147178\"]}");
	add("11147409", "{\"term\":\"leo iii\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11147409\"]}");
	add("11147555", "{\"term\":\"bruno\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10888325\", \"10888567\", \"11147555\"]}");
	add("11147555", "{\"term\":\"bruno of toul\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11147555\"]}");
	add("11147555", "{\"term\":\"leo ix\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11147555\"]}");
	add("11147742", "{\"term\":\"giovanni de\u0027medici\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11147742\"]}");
	add("11147742", "{\"term\":\"leo x\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11147742\"]}");
	add("11147986", "{\"term\":\"gioacchino pecci\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11147986\"]}");
	add("11147986", "{\"term\":\"giovanni vincenzo pecci\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11147986\"]}");
	add("11147986", "{\"term\":\"leo xiii\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11147986\"]}");
	add("11148226", "{\"term\":\"dutch leonard\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11148226\"]}");
	add("11148226", "{\"term\":\"elmore john leonard\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11148226\"]}");
	add("11148226", "{\"term\":\"elmore leonard\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11148226\"]}");
	add("11148226", "{\"term\":\"leonard\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11148226\"]}");
	add("11148384", "{\"term\":\"da vinci\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11148384\"]}");
	add("11148384", "{\"term\":\"leonardo\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11148384\"]}");
	add("11148384", "{\"term\":\"leonardo da vinci\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11148384\"]}");
	add("11148663", "{\"term\":\"leonidas\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11148663\"]}");
	add("11148824", "{\"term\":\"leontief\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11148824\"]}");
	add("11148824", "{\"term\":\"wassily leontief\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11148824\"]}");
	add("11149007", "{\"term\":\"lermontov\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11149007\"]}");
	add("11149007", "{\"term\":\"mikhail yurievich lermontov\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11149007\"]}");
	add("11149120", "{\"term\":\"alan jay lerner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11149120\"]}");
	add("11149120", "{\"term\":\"lerner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11149120\"]}");
	add("11149276", "{\"term\":\"ferdinand de lesseps\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11149276\"]}");
	add("11149276", "{\"term\":\"lesseps\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11149276\"]}");
	add("11149276", "{\"term\":\"vicomte ferdinand marie de lesseps\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11149276\"]}");
	add("11149468", "{\"term\":\"doris lessing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11149468\"]}");
	add("11149468", "{\"term\":\"doris may lessing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11149468\"]}");
	add("11149468", "{\"term\":\"lessing\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11149468\", \"11149655\"]}");
	add("11149655", "{\"term\":\"gotthold ephraim lessing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11149655\"]}");
	add("11149655", "{\"term\":\"lessing\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11149468\", \"11149655\"]}");
	add("11149798", "{\"term\":\"anton van leeuwenhoek\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11149798\"]}");
	add("11149798", "{\"term\":\"anton van leuwenhoek\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11149798\"]}");
	add("11149798", "{\"term\":\"leeuwenhoek\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11149798\"]}");
	add("11149798", "{\"term\":\"leuwenhoek\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11149798\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }