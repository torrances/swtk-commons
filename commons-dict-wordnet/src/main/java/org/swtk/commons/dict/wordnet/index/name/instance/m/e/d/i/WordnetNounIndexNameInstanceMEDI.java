package org.swtk.commons.dict.wordnet.index.name.instance.m.e.d.i;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceMEDI {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"mediacy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04926757\"]}");
	add("{\"term\":\"median\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06033170\"]}");
	add("{\"term\":\"mediant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06871036\"]}");
	add("{\"term\":\"mediastinum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05332239\"]}");
	add("{\"term\":\"mediateness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04926757\"]}");
	add("{\"term\":\"mediation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01242997\", \"07165352\"]}");
	add("{\"term\":\"mediator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09647729\"]}");
	add("{\"term\":\"mediatrix\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09648069\"]}");
	add("{\"term\":\"medic\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10325302\", \"12568785\"]}");
	add("{\"term\":\"medicago\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12568639\"]}");
	add("{\"term\":\"medicaid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01091103\"]}");
	add("{\"term\":\"medical\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00143181\"]}");
	add("{\"term\":\"medicament\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03745652\"]}");
	add("{\"term\":\"medicare\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01090933\"]}");
	add("{\"term\":\"medication\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00665353\", \"03745652\"]}");
	add("{\"term\":\"medici\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08502291\"]}");
	add("{\"term\":\"medicine\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"01165019\", \"00613447\", \"03745652\", \"06052606\"]}");
	add("{\"term\":\"medick\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12568785\"]}");
	add("{\"term\":\"medico\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10040615\", \"10325848\"]}");
	add("{\"term\":\"mediety\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13759229\"]}");
	add("{\"term\":\"medina\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08645883\", \"09016709\"]}");
	add("{\"term\":\"medinilla\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12370008\"]}");
	add("{\"term\":\"mediocrity\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10588623\", \"04802310\"]}");
	add("{\"term\":\"meditation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05794189\", \"05793890\"]}");
	add("{\"term\":\"meditativeness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04668162\"]}");
	add("{\"term\":\"mediterranean\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09372942\"]}");
	add("{\"term\":\"medium\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"00611490\", \"06272239\", \"10325946\", \"13943202\", \"14923303\", \"14923681\", \"14924039\", \"14923479\", \"06264605\", \"08585671\", \"06264799\"]}");
	add("{\"term\":\"medivac\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00055858\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }