package org.swtk.commons.dict.wordnet.index.name.instance.s.u.p.p;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceSUPP {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"supper\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08273488\", \"07591549\"]}");
	add("{\"term\":\"suppertime\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15191117\"]}");
	add("{\"term\":\"supping\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00843438\"]}");
	add("{\"term\":\"supplanter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10762203\"]}");
	add("{\"term\":\"supplanting\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00198459\"]}");
	add("{\"term\":\"supplejack\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04366304\"]}");
	add("{\"term\":\"supplement\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02674051\", \"05118072\", \"06411274\"]}");
	add("{\"term\":\"supplementation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00372654\", \"05118072\"]}");
	add("{\"term\":\"suppleness\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04667087\", \"05030188\", \"05011256\"]}");
	add("{\"term\":\"suppliant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10439776\"]}");
	add("{\"term\":\"supplicant\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10439776\", \"10483618\"]}");
	add("{\"term\":\"supplication\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01044000\", \"07202298\", \"07204950\"]}");
	add("{\"term\":\"supplier\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10696710\"]}");
	add("{\"term\":\"supply\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01059124\", \"13584725\", \"13799556\"]}");
	add("{\"term\":\"supplying\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01059124\"]}");
	add("{\"term\":\"support\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"13386871\", \"04366676\", \"07045239\", \"01019262\", \"04367588\", \"13386459\", \"00155253\", \"00973567\", \"05701884\", \"01215009\", \"01218392\"]}");
	add("{\"term\":\"supporter\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"02755620\", \"03426027\", \"09835195\", \"10427699\", \"10697152\"]}");
	add("{\"term\":\"supporting\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01019262\"]}");
	add("{\"term\":\"supposal\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05787709\", \"05900703\"]}");
	add("{\"term\":\"supposition\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"05787709\", \"05900703\", \"06795537\"]}");
	add("{\"term\":\"suppository\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04368468\"]}");
	add("{\"term\":\"suppressant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04368616\"]}");
	add("{\"term\":\"suppresser\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04368728\", \"05449044\", \"10697911\"]}");
	add("{\"term\":\"suppression\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"01072816\", \"01081528\", \"01150463\", \"13584850\"]}");
	add("{\"term\":\"suppressor\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04368728\", \"05449044\", \"10697911\"]}");
	add("{\"term\":\"suppuration\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05424816\", \"13501092\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }