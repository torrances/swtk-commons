package org.swtk.commons.dict.wordnet.index.instance.p0.p6;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexInstance0691 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("06910082", "{\"term\":\"novial\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06910082\"]}");
	add("06910157", "{\"term\":\"nov-latin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06910157\"]}");
	add("06910250", "{\"term\":\"occidental\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06910250\", \"10389544\"]}");
	add("06910329", "{\"term\":\"optez\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06910329\"]}");
	add("06910403", "{\"term\":\"pasigraphy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06910403\"]}");
	add("06910573", "{\"term\":\"ro\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06910573\"]}");
	add("06910752", "{\"term\":\"romanal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06910752\"]}");
	add("06910828", "{\"term\":\"solresol\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06910828\"]}");
	add("06910905", "{\"term\":\"volapuk\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06910905\"]}");
	add("06911128", "{\"term\":\"programing language\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06911128\"]}");
	add("06911128", "{\"term\":\"programming language\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06911128\"]}");
	add("06911570", "{\"term\":\"algebraic language\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06911570\"]}");
	add("06911748", "{\"term\":\"algorithmic language\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06911748\"]}");
	add("06911886", "{\"term\":\"application-oriented language\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06911886\"]}");
	add("06911886", "{\"term\":\"problem-oriented language\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06911886\"]}");
	add("06912086", "{\"term\":\"assembly language\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06912086\"]}");
	add("06912222", "{\"term\":\"command language\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06912222\"]}");
	add("06912222", "{\"term\":\"query language\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06912222\"]}");
	add("06912222", "{\"term\":\"search language\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06912222\"]}");
	add("06912409", "{\"term\":\"computer-oriented language\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06912409\"]}");
	add("06912409", "{\"term\":\"computer language\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06912409\"]}");
	add("06912409", "{\"term\":\"machine-oriented language\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06912409\"]}");
	add("06912409", "{\"term\":\"machine language\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06369392\", \"06912409\"]}");
	add("06912621", "{\"term\":\"high-level language\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06912621\"]}");
	add("06912781", "{\"term\":\"job-control language\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06912781\"]}");
	add("06912932", "{\"term\":\"metalanguage\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06912932\"]}");
	add("06913058", "{\"term\":\"multidimensional language\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06913058\"]}");
	add("06913283", "{\"term\":\"object language\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06294720\", \"06913283\"]}");
	add("06913283", "{\"term\":\"target language\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06913283\", \"06294720\"]}");
	add("06913460", "{\"term\":\"object-oriented programing language\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06913460\"]}");
	add("06913460", "{\"term\":\"object-oriented programming language\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06913460\"]}");
	add("06913829", "{\"term\":\"java\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06913829\", \"07945759\", \"08928021\"]}");
	add("06913939", "{\"term\":\"one-dimensional language\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06913939\"]}");
	add("06914109", "{\"term\":\"stratified language\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06914109\"]}");
	add("06914247", "{\"term\":\"syntax language\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06914247\"]}");
	add("06914367", "{\"term\":\"unstratified language\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06914367\"]}");
	add("06914540", "{\"term\":\"algol\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06914540\", \"09215444\"]}");
	add("06914712", "{\"term\":\"lisp\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06914712\", \"14426167\"]}");
	add("06914712", "{\"term\":\"list-processing language\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06914712\"]}");
	add("06914885", "{\"term\":\"lisp program\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06914885\"]}");
	add("06914969", "{\"term\":\"logic programing\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00931100\", \"06914969\"]}");
	add("06914969", "{\"term\":\"logic programming\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00931100\", \"06914969\"]}");
	add("06914969", "{\"term\":\"prolog\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06914969\"]}");
	add("06915138", "{\"term\":\"fortran\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06915138\"]}");
	add("06915297", "{\"term\":\"fortran program\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06915297\"]}");
	add("06915387", "{\"term\":\"cobol\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06915387\"]}");
	add("06915472", "{\"term\":\"c\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"03070747\", \"06844441\", \"06879382\", \"06915472\", \"13658127\", \"13772555\", \"14657384\", \"14852681\", \"14853935\", \"15117865\", \"15309503\", \"13736596\"]}");
	add("06915607", "{\"term\":\"c program\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06915607\"]}");
	add("06915685", "{\"term\":\"basic\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02803952\", \"06915685\"]}");
	add("06915891", "{\"term\":\"pascal\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06915891\", \"11244409\", \"13733408\"]}");
	add("06916031", "{\"term\":\"upgrade\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"01270081\", \"04520981\", \"05076087\", \"05803662\", \"06916031\", \"09229873\"]}");
	add("06916172", "{\"term\":\"native language\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06916172\"]}");
	add("06916295", "{\"term\":\"indigenous language\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06916295\"]}");
	add("06916475", "{\"term\":\"substrate\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"06916475\", \"08675518\", \"08677777\", \"14763071\"]}");
	add("06916475", "{\"term\":\"substratum\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06916475\", \"08675518\", \"08677777\"]}");
	add("06916748", "{\"term\":\"superstrate\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06916748\", \"08675632\"]}");
	add("06916748", "{\"term\":\"superstratum\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06916748\", \"08675632\"]}");
	add("06916947", "{\"term\":\"natural language\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06916947\"]}");
	add("06916947", "{\"term\":\"tongue\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"03041213\", \"04458265\", \"07668604\", \"09465499\", \"07096390\", \"13941420\", \"06916947\", \"05308571\"]}");
	add("06917524", "{\"term\":\"first language\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06917524\"]}");
	add("06917524", "{\"term\":\"maternal language\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06917524\"]}");
	add("06917524", "{\"term\":\"mother tongue\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06917524\"]}");
	add("06917719", "{\"term\":\"tonal language\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06917719\"]}");
	add("06917719", "{\"term\":\"tone language\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06917719\"]}");
	add("06917917", "{\"term\":\"contour language\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06917917\"]}");
	add("06918019", "{\"term\":\"register language\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06918019\"]}");
	add("06918134", "{\"term\":\"creole\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06918134\", \"09728927\", \"09729069\"]}");
	add("06918289", "{\"term\":\"haitian creole\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06918289\"]}");
	add("06918456", "{\"term\":\"pidgin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06918456\"]}");
	add("06918604", "{\"term\":\"chinook jargon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06918604\"]}");
	add("06918604", "{\"term\":\"oregon jargon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06918604\"]}");
	add("06918804", "{\"term\":\"sango\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06918804\"]}");
	add("06918892", "{\"term\":\"interlanguage\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06918892\"]}");
	add("06918892", "{\"term\":\"koine\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06918892\", \"06989988\"]}");
	add("06918892", "{\"term\":\"lingua franca\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06918892\"]}");
	add("06919215", "{\"term\":\"american-indian language\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06919215\"]}");
	add("06919215", "{\"term\":\"american indian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06919215\"]}");
	add("06919215", "{\"term\":\"amerind\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06919215\"]}");
	add("06919215", "{\"term\":\"amerindian language\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06919215\"]}");
	add("06919215", "{\"term\":\"indian\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06919215\", \"09693046\"]}");
	add("06919747", "{\"term\":\"algonquian\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06919747\", \"09666446\"]}");
	add("06919747", "{\"term\":\"algonquian language\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06919747\"]}");
	add("06919747", "{\"term\":\"algonquin\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06919747\", \"09666446\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }