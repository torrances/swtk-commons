package org.swtk.commons.dict.wordnet.index.byid.instance.p1.p0;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance1042 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("10420008", "{\"term\":\"parliamentarian\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10420008\", \"10420136\"]}");
	add("10420136", "{\"term\":\"member of parliament\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10420136\"]}");
	add("10420136", "{\"term\":\"parliamentarian\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10420008\", \"10420136\"]}");
	add("10420317", "{\"term\":\"parliamentary agent\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10420317\"]}");
	add("10420525", "{\"term\":\"parlormaid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10420525\"]}");
	add("10420525", "{\"term\":\"parlourmaid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10420525\"]}");
	add("10420697", "{\"term\":\"lampooner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10420697\"]}");
	add("10420697", "{\"term\":\"parodist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10420697\"]}");
	add("10420903", "{\"term\":\"parricide\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00222463\", \"10420903\"]}");
	add("10421030", "{\"term\":\"parrot\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10421030\", \"01819528\"]}");
	add("10421167", "{\"term\":\"parsee\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10421167\"]}");
	add("10421167", "{\"term\":\"parsi\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10421167\"]}");
	add("10421338", "{\"term\":\"partaker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10421338\"]}");
	add("10421338", "{\"term\":\"sharer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10421338\"]}");
	add("10421528", "{\"term\":\"participant\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10459618\", \"10421528\"]}");
	add("10421528", "{\"term\":\"player\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"10421528\", \"10460154\", \"09784701\", \"10360025\", \"10459618\"]}");
	add("10421831", "{\"term\":\"drumbeater\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10421831\"]}");
	add("10421831", "{\"term\":\"partisan\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03899914\", \"10079390\", \"10421831\"]}");
	add("10421831", "{\"term\":\"zealot\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10421831\", \"10824878\"]}");
	add("10422030", "{\"term\":\"partitionist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10422030\"]}");
	add("10422162", "{\"term\":\"partner\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10422162\", \"09954892\", \"10660018\"]}");
	add("10422348", "{\"term\":\"part-owner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10422348\"]}");
	add("10422454", "{\"term\":\"part-timer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10422454\"]}");
	add("10422569", "{\"term\":\"party\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"10422569\", \"07462241\", \"08281818\", \"08269523\", \"08273889\"]}");
	add("10422907", "{\"term\":\"boss\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"03631406\", \"10422907\", \"10123833\", \"09887362\", \"10123978\"]}");
	add("10422907", "{\"term\":\"party boss\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10422907\"]}");
	add("10422907", "{\"term\":\"political boss\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10422907\"]}");
	add("10423111", "{\"term\":\"party girl\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10423111\"]}");
	add("10423235", "{\"term\":\"partygoer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10423235\"]}");
	add("10423378", "{\"term\":\"party liner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10423378\"]}");
	add("10423378", "{\"term\":\"party man\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10423378\"]}");
	add("10423513", "{\"term\":\"pacha\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10423513\"]}");
	add("10423513", "{\"term\":\"pasha\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10423513\"]}");
	add("10423621", "{\"term\":\"passenger\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10423621\"]}");
	add("10423621", "{\"term\":\"rider\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"10423621\", \"10549725\", \"06406207\", \"10549540\"]}");
	add("10423987", "{\"term\":\"forward passer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10423987\"]}");
	add("10423987", "{\"term\":\"passer\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"01542413\", \"10423987\", \"10424171\", \"10424295\", \"10424417\"]}");
	add("10424171", "{\"term\":\"passer\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"01542413\", \"10423987\", \"10424171\", \"10424295\", \"10424417\"]}");
	add("10424295", "{\"term\":\"passer\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"01542413\", \"10423987\", \"10424171\", \"10424295\", \"10424417\"]}");
	add("10424417", "{\"term\":\"passer\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"01542413\", \"10423987\", \"10424171\", \"10424295\", \"10424417\"]}");
	add("10424417", "{\"term\":\"passer-by\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10424417\"]}");
	add("10424417", "{\"term\":\"passerby\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10424417\"]}");
	add("10424555", "{\"term\":\"passive source\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10424555\"]}");
	add("10424743", "{\"term\":\"paster\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07287250\", \"10424743\"]}");
	add("10424852", "{\"term\":\"past master\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10424852\", \"10424974\"]}");
	add("10424974", "{\"term\":\"past master\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10424852\", \"10424974\"]}");
	add("10425065", "{\"term\":\"pastry cook\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10425065\"]}");
	add("10425155", "{\"term\":\"patentee\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10425155\"]}");
	add("10425285", "{\"term\":\"pater\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10425285\"]}");
	add("10425439", "{\"term\":\"patient\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06343129\", \"10425439\"]}");
	add("10425817", "{\"term\":\"patrial\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10425817\"]}");
	add("10426011", "{\"term\":\"patriarch\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"10426011\", \"10426136\", \"10426510\", \"10426650\"]}");
	add("10426136", "{\"term\":\"patriarch\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"10426011\", \"10426136\", \"10426510\", \"10426650\"]}");
	add("10426510", "{\"term\":\"paterfamilias\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10426510\"]}");
	add("10426510", "{\"term\":\"patriarch\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"10426011\", \"10426136\", \"10426510\", \"10426650\"]}");
	add("10426650", "{\"term\":\"patriarch\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"10426011\", \"10426136\", \"10426510\", \"10426650\"]}");
	add("10426850", "{\"term\":\"patrician\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09827177\", \"10426850\"]}");
	add("10426966", "{\"term\":\"patricide\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00222767\", \"10426966\"]}");
	add("10427055", "{\"term\":\"nationalist\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10365746\", \"10427055\"]}");
	add("10427055", "{\"term\":\"patriot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10427055\"]}");
	add("10427297", "{\"term\":\"patroller\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10427297\"]}");
	add("10427471", "{\"term\":\"frequenter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10427471\"]}");
	add("10427471", "{\"term\":\"patron\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10427699\", \"10428069\", \"10427471\"]}");
	add("10427699", "{\"term\":\"patron\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10427699\", \"10428069\", \"10427471\"]}");
	add("10427699", "{\"term\":\"sponsor\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10485764\", \"10427699\"]}");
	add("10427699", "{\"term\":\"supporter\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"02755620\", \"03426027\", \"09835195\", \"10427699\", \"10697152\"]}");
	add("10428069", "{\"term\":\"patron\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10427699\", \"10428069\", \"10427471\"]}");
	add("10428183", "{\"term\":\"patroness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10428183\"]}");
	add("10428183", "{\"term\":\"patronne\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10428183\"]}");
	add("10428297", "{\"term\":\"patron saint\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10428297\"]}");
	add("10428554", "{\"term\":\"patternmaker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10428554\"]}");
	add("10428684", "{\"term\":\"patzer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10428684\"]}");
	add("10428756", "{\"term\":\"pauper\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10428756\"]}");
	add("10428906", "{\"term\":\"pavement artist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10428906\"]}");
	add("10429067", "{\"term\":\"pawer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10429067\"]}");
	add("10429204", "{\"term\":\"pawnbroker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10429204\"]}");
	add("10429379", "{\"term\":\"payee\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10429379\"]}");
	add("10429497", "{\"term\":\"payer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10429497\"]}");
	add("10429497", "{\"term\":\"remunerator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10429497\"]}");
	add("10429780", "{\"term\":\"paymaster\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10429780\"]}");
	add("10429870", "{\"term\":\"peacekeeper\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03908459\", \"10429870\", \"10429991\"]}");
	add("10429991", "{\"term\":\"peacekeeper\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03908459\", \"10429870\", \"10429991\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }