package org.swtk.commons.dict.wordnet.byid.generated.p0.p3;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexById0330 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("03300069", "{\"term\":\"erection\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00913583\", \"03300069\", \"14061667\"]}");
	add("03300175", "{\"term\":\"erlenmeyer flask\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03300175\"]}");
	add("03300286", "{\"term\":\"e-mycin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03300286\"]}");
	add("03300286", "{\"term\":\"erythrocin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03300286\"]}");
	add("03300286", "{\"term\":\"erythromycin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03300286\"]}");
	add("03300286", "{\"term\":\"ethril\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03300286\"]}");
	add("03300286", "{\"term\":\"ilosone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03300286\"]}");
	add("03300286", "{\"term\":\"pediamycin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03300286\"]}");
	add("03300702", "{\"term\":\"escalator\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03300702\", \"06405443\"]}");
	add("03300702", "{\"term\":\"moving staircase\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03300702\"]}");
	add("03300702", "{\"term\":\"moving stairway\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03300702\"]}");
	add("03300857", "{\"term\":\"escape hatch\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03300857\"]}");
	add("03301010", "{\"term\":\"escapement\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03301010\"]}");
	add("03301146", "{\"term\":\"escape wheel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03301146\"]}");
	add("03301257", "{\"term\":\"escarp\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03301257\"]}");
	add("03301257", "{\"term\":\"escarpment\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03301257\", \"09297058\"]}");
	add("03301257", "{\"term\":\"protective embankment\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03301257\"]}");
	add("03301257", "{\"term\":\"scarp\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03301257\", \"09297058\"]}");
	add("03301407", "{\"term\":\"escutcheon\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03301407\", \"03301526\", \"03347207\"]}");
	add("03301407", "{\"term\":\"scutcheon\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03301407\", \"03347207\"]}");
	add("03301526", "{\"term\":\"escutcheon\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03301407\", \"03301526\", \"03347207\"]}");
	add("03301688", "{\"term\":\"brevibloc\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03301688\"]}");
	add("03301688", "{\"term\":\"esmolol\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03301688\"]}");
	add("03301892", "{\"term\":\"esophagoscope\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03301892\"]}");
	add("03301892", "{\"term\":\"oesophagoscope\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03301892\"]}");
	add("03302032", "{\"term\":\"espadrille\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03302032\"]}");
	add("03302155", "{\"term\":\"espalier\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03302155\"]}");
	add("03302283", "{\"term\":\"esplanade\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03302283\"]}");
	add("03302424", "{\"term\":\"espresso maker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03302424\"]}");
	add("03302573", "{\"term\":\"espresso shop\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03302573\"]}");
	add("03302664", "{\"term\":\"establishment\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"05834615\", \"13497470\", \"08092683\", \"03302664\", \"08181484\", \"08070328\", \"00237945\"]}");
	add("03303036", "{\"term\":\"estaminet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03303036\"]}");
	add("03303158", "{\"term\":\"estazolam\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03303158\"]}");
	add("03303158", "{\"term\":\"prosom\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03303158\"]}");
	add("03303299", "{\"term\":\"estradiol patch\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03303299\"]}");
	add("03303512", "{\"term\":\"estrogen antagonist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03303512\"]}");
	add("03303512", "{\"term\":\"tamoxifen\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03303512\"]}");
	add("03303663", "{\"term\":\"etagere\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03303663\"]}");
	add("03303805", "{\"term\":\"etamin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03303805\"]}");
	add("03303805", "{\"term\":\"etamine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03303805\"]}");
	add("03303953", "{\"term\":\"enbrel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03303953\"]}");
	add("03303953", "{\"term\":\"etanercept\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03303953\"]}");
	add("03304208", "{\"term\":\"etcetera\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03304208\"]}");
	add("03304353", "{\"term\":\"etching\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00940607\", \"03304353\", \"03304466\"]}");
	add("03304466", "{\"term\":\"etching\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00940607\", \"03304353\", \"03304466\"]}");
	add("03304595", "{\"term\":\"edecrin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03304595\"]}");
	add("03304595", "{\"term\":\"ethacrynic acid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03304595\"]}");
	add("03304735", "{\"term\":\"ethchlorvynol\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03304735\"]}");
	add("03304735", "{\"term\":\"placidyl\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03304735\"]}");
	add("03304876", "{\"term\":\"diethyl ether\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03304876\"]}");
	add("03304876", "{\"term\":\"divinyl ether\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03304876\"]}");
	add("03304876", "{\"term\":\"ether\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03304876\", \"06265492\", \"14733263\", \"14871273\"]}");
	add("03304876", "{\"term\":\"ethoxyethane\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03304876\"]}");
	add("03304876", "{\"term\":\"ethyl ether\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03304876\"]}");
	add("03304876", "{\"term\":\"vinyl ether\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03304876\"]}");
	add("03305161", "{\"term\":\"ethernet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03305161\"]}");
	add("03305388", "{\"term\":\"ethernet cable\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03305388\"]}");
	add("03305523", "{\"term\":\"emeside\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03305523\"]}");
	add("03305523", "{\"term\":\"ethosuximide\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03305523\"]}");
	add("03305523", "{\"term\":\"zarontin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03305523\"]}");
	add("03305731", "{\"term\":\"ethyl chloride\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03305731\"]}");
	add("03305852", "{\"term\":\"etodolac\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03305852\"]}");
	add("03305852", "{\"term\":\"lodine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03305852\"]}");
	add("03306011", "{\"term\":\"eton collar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03306011\"]}");
	add("03306120", "{\"term\":\"eton jacket\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03306120\"]}");
	add("03306236", "{\"term\":\"etui\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03306236\"]}");
	add("03306334", "{\"term\":\"eudiometer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03306334\"]}");
	add("03306513", "{\"term\":\"euphonium\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03306513\"]}");
	add("03306641", "{\"term\":\"euphoriant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03306641\"]}");
	add("03306778", "{\"term\":\"evaporative cooler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03306778\"]}");
	add("03306885", "{\"term\":\"evening bag\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03306885\"]}");
	add("03306975", "{\"term\":\"excalibur\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03306975\"]}");
	add("03307066", "{\"term\":\"excavation\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00924141\", \"03307066\", \"08567651\", \"00943790\"]}");
	add("03307432", "{\"term\":\"exchange\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"00167884\", \"00168099\", \"00197334\", \"01095009\", \"01169007\", \"03307432\", \"02998465\", \"01111372\", \"01168748\", \"07149414\", \"11429652\"]}");
	add("03307616", "{\"term\":\"exercise bike\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03307616\"]}");
	add("03307616", "{\"term\":\"exercycle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03307616\"]}");
	add("03307735", "{\"term\":\"exercise device\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03307735\"]}");
	add("03307883", "{\"term\":\"exhaust\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03307883\", \"14861534\"]}");
	add("03307883", "{\"term\":\"exhaust system\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03307883\"]}");
	add("03308162", "{\"term\":\"exhaust fan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03308162\"]}");
	add("03308278", "{\"term\":\"exhaust manifold\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03308278\"]}");
	add("03308455", "{\"term\":\"exhaust pipe\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03308455\"]}");
	add("03308614", "{\"term\":\"exhaust valve\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03308614\"]}");
	add("03308776", "{\"term\":\"exhibition area\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03308776\"]}");
	add("03308776", "{\"term\":\"exhibition hall\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03308776\"]}");
	add("03308910", "{\"term\":\"exit\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00059339\", \"07348249\", \"03308910\"]}");
	add("03308910", "{\"term\":\"issue\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"01105519\", \"03308910\", \"07334509\", \"10393697\", \"11430739\", \"13281089\", \"13388766\", \"01062158\", \"05822417\", \"06609182\", \"05822776\"]}");
	add("03308910", "{\"term\":\"outlet\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"01266940\", \"03308910\", \"04556057\", \"03753653\"]}");
	add("03308910", "{\"term\":\"way out\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03308910\"]}");
	add("03309142", "{\"term\":\"exocet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03309142\"]}");
	add("03309268", "{\"term\":\"expansion bit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03309268\"]}");
	add("03309268", "{\"term\":\"expansive bit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03309268\"]}");
	add("03309410", "{\"term\":\"expansion bolt\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03309410\"]}");
	add("03309550", "{\"term\":\"expectorant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03309550\"]}");
	add("03309550", "{\"term\":\"expectorator\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03309550\", \"10656272\"]}");
	add("03309675", "{\"term\":\"explosive\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03309675\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }