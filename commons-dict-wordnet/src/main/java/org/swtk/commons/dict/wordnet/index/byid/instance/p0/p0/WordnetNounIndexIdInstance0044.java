package org.swtk.commons.dict.wordnet.index.byid.instance.p0.p0;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0044 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("00440224", "{\"term\":\"reverse split\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00440224\"]}");
	add("00440224", "{\"term\":\"reverse stock split\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00440224\"]}");
	add("00440224", "{\"term\":\"split down\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00440224\"]}");
	add("00440424", "{\"term\":\"flip\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00106640\", \"00444788\", \"01248633\", \"01248753\", \"07931127\", \"00440424\"]}");
	add("00440424", "{\"term\":\"somersault\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00440424\"]}");
	add("00440424", "{\"term\":\"somersaulting\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00440424\"]}");
	add("00440424", "{\"term\":\"somerset\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00440424\", \"08903406\"]}");
	add("00440424", "{\"term\":\"summersault\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00440424\"]}");
	add("00440424", "{\"term\":\"summerset\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00440424\"]}");
	add("00440689", "{\"term\":\"flip-flop\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00440689\", \"03368733\", \"03368854\", \"05797813\"]}");
	add("00440766", "{\"term\":\"track and field\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00440766\"]}");
	add("00440979", "{\"term\":\"running\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00440979\", \"01139306\", \"14032966\", \"00294760\", \"00559920\"]}");
	add("00440979", "{\"term\":\"track\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"00440979\", \"04470745\", \"04470914\", \"04471360\", \"04471446\", \"04471653\", \"06625218\", \"04044101\", \"04471218\", \"05835238\", \"09410115\"]}");
	add("00441158", "{\"term\":\"jumping\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00120388\", \"00441158\"]}");
	add("00441322", "{\"term\":\"broad jump\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00441322\", \"07484749\"]}");
	add("00441322", "{\"term\":\"long jump\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00441322\", \"07484749\"]}");
	add("00441449", "{\"term\":\"high jump\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00441449\", \"07484616\"]}");
	add("00441583", "{\"term\":\"fosbury flop\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00441583\"]}");
	add("00441687", "{\"term\":\"skiing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00441687\"]}");
	add("00441881", "{\"term\":\"cross-country skiing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00441881\"]}");
	add("00442013", "{\"term\":\"ski jumping\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00442013\"]}");
	add("00442175", "{\"term\":\"kick turn\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00442175\"]}");
	add("00442441", "{\"term\":\"stem\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00442441\", \"02883250\", \"04320909\", \"04191138\", \"13149924\", \"06311183\"]}");
	add("00442441", "{\"term\":\"stem turn\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00442441\"]}");
	add("00442626", "{\"term\":\"telemark\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00442626\"]}");
	add("00442764", "{\"term\":\"aquatics\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00442764\"]}");
	add("00442764", "{\"term\":\"water sport\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00442764\"]}");
	add("00443055", "{\"term\":\"swim\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00443055\"]}");
	add("00443055", "{\"term\":\"swimming\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00443055\"]}");
	add("00443377", "{\"term\":\"bathe\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00443377\"]}");
	add("00443554", "{\"term\":\"sea bathing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00443554\"]}");
	add("00443639", "{\"term\":\"skinny-dip\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00443639\"]}");
	add("00443744", "{\"term\":\"sun bathing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00443744\"]}");
	add("00443832", "{\"term\":\"dip\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00435953\", \"00443832\", \"03207773\", \"05119135\", \"07379034\", \"07598174\", \"10451671\", \"13915590\", \"13927512\"]}");
	add("00443832", "{\"term\":\"plunge\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07448809\", \"00443832\"]}");
	add("00443966", "{\"term\":\"dive\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00327503\", \"00443966\", \"03535983\"]}");
	add("00443966", "{\"term\":\"diving\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00443966\", \"07481555\"]}");
	add("00444216", "{\"term\":\"floating\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00444216\"]}");
	add("00444216", "{\"term\":\"natation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00444216\"]}");
	add("00444360", "{\"term\":\"dead-man\u0027s float\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00444360\"]}");
	add("00444360", "{\"term\":\"prone float\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00444360\"]}");
	add("00444502", "{\"term\":\"belly flop\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00444502\"]}");
	add("00444502", "{\"term\":\"belly flopper\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00444502\"]}");
	add("00444502", "{\"term\":\"belly whop\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00444502\"]}");
	add("00444502", "{\"term\":\"belly whopper\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00444502\"]}");
	add("00444677", "{\"term\":\"cliff diving\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00444677\"]}");
	add("00444788", "{\"term\":\"flip\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00106640\", \"00444788\", \"01248633\", \"01248753\", \"07931127\", \"00440424\"]}");
	add("00444902", "{\"term\":\"full gainer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00444902\"]}");
	add("00444902", "{\"term\":\"gainer\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00444902\", \"10137168\", \"10137396\"]}");
	add("00445127", "{\"term\":\"half gainer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00445127\"]}");
	add("00445325", "{\"term\":\"jackknife\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00445325\", \"03042465\"]}");
	add("00445475", "{\"term\":\"swallow dive\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00445475\"]}");
	add("00445475", "{\"term\":\"swan dive\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00445475\"]}");
	add("00445636", "{\"term\":\"skin-dive\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00445636\"]}");
	add("00445636", "{\"term\":\"skin diving\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00445636\"]}");
	add("00445831", "{\"term\":\"scuba diving\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00445831\"]}");
	add("00445922", "{\"term\":\"snorkel diving\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00445922\"]}");
	add("00445922", "{\"term\":\"snorkeling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00445922\"]}");
	add("00446040", "{\"term\":\"surfboarding\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00446040\"]}");
	add("00446040", "{\"term\":\"surfing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00446040\"]}");
	add("00446040", "{\"term\":\"surfriding\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00446040\"]}");
	add("00446211", "{\"term\":\"water-skiing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00446211\"]}");
	add("00446336", "{\"term\":\"row\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00446336\", \"05052831\", \"08450457\", \"03124680\", \"09440243\", \"07198809\", \"08448447\"]}");
	add("00446336", "{\"term\":\"rowing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00446336\"]}");
	add("00446514", "{\"term\":\"crab\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00446514\", \"02187819\", \"07803691\", \"08704396\", \"09771988\", \"09993584\", \"01979598\"]}");
	add("00446670", "{\"term\":\"sculling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00446670\"]}");
	add("00446787", "{\"term\":\"boxing\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00323054\", \"00446787\"]}");
	add("00446787", "{\"term\":\"fisticuffs\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00446787\", \"01176316\"]}");
	add("00446787", "{\"term\":\"pugilism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00446787\"]}");
	add("00447296", "{\"term\":\"professional boxing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00447296\"]}");
	add("00447396", "{\"term\":\"in-fighting\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00447396\", \"01174521\"]}");
	add("00447478", "{\"term\":\"fight\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00447478\", \"07199051\", \"04844656\", \"01173452\", \"00955670\"]}");
	add("00447617", "{\"term\":\"rope-a-dope\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00447617\"]}");
	add("00447789", "{\"term\":\"spar\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00447789\", \"04274687\", \"15073663\"]}");
	add("00447789", "{\"term\":\"sparring\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00447789\", \"07197404\"]}");
	add("00447965", "{\"term\":\"archery\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00447965\"]}");
	add("00448058", "{\"term\":\"sledding\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00048792\", \"00448058\"]}");
	add("00448206", "{\"term\":\"tobogganing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00448206\"]}");
	add("00448346", "{\"term\":\"luging\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00448346\"]}");
	add("00448448", "{\"term\":\"bobsledding\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00448448\"]}");
	add("00448525", "{\"term\":\"grappling\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00448525\", \"00623506\"]}");
	add("00448525", "{\"term\":\"rassling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00448525\"]}");
	add("00448525", "{\"term\":\"wrestling\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00448525\", \"00623506\"]}");
	add("00448864", "{\"term\":\"flying mare\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00448864\"]}");
	add("00448942", "{\"term\":\"greco-roman wrestling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00448942\"]}");
	add("00449111", "{\"term\":\"professional wrestling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00449111\"]}");
	add("00449217", "{\"term\":\"sumo\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00449217\"]}");
	add("00449451", "{\"term\":\"skating\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00449451\"]}");
	add("00449625", "{\"term\":\"ice skating\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00449625\"]}");
	add("00449733", "{\"term\":\"figure skating\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00449733\"]}");
	add("00449857", "{\"term\":\"rollerblading\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00449857\"]}");
	add("00449943", "{\"term\":\"roller skating\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00449943\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }