package org.swtk.commons.dict.wordnet.index.instance.p0.p7;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexInstance0771 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("07710013", "{\"term\":\"drop biscuit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07710013\"]}");
	add("07710148", "{\"term\":\"baking-powder biscuit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07710148\"]}");
	add("07710261", "{\"term\":\"buttermilk biscuit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07710261\"]}");
	add("07710261", "{\"term\":\"soda biscuit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07710261\"]}");
	add("07710404", "{\"term\":\"shortcake\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07710404\"]}");
	add("07710584", "{\"term\":\"hardtack\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"15125137\", \"07710584\"]}");
	add("07710584", "{\"term\":\"pilot biscuit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07710584\"]}");
	add("07710584", "{\"term\":\"pilot bread\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07710584\"]}");
	add("07710584", "{\"term\":\"sea biscuit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07710584\"]}");
	add("07710584", "{\"term\":\"ship biscuit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07710584\"]}");
	add("07710757", "{\"term\":\"wafer\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07702798\", \"07710757\", \"14729344\"]}");
	add("07710842", "{\"term\":\"brandysnap\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07710842\"]}");
	add("07710932", "{\"term\":\"saltine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07710932\"]}");
	add("07711029", "{\"term\":\"soda cracker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07711029\"]}");
	add("07711155", "{\"term\":\"oyster cracker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07711155\"]}");
	add("07711249", "{\"term\":\"water biscuit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07711249\"]}");
	add("07711397", "{\"term\":\"graham cracker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07711397\"]}");
	add("07711487", "{\"term\":\"pretzel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07711487\"]}");
	add("07711623", "{\"term\":\"soft pretzel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07711623\"]}");
	add("07711710", "{\"term\":\"sandwich\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07711710\"]}");
	add("07712148", "{\"term\":\"sandwich plate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07712148\"]}");
	add("07712272", "{\"term\":\"butty\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07712272\"]}");
	add("07712370", "{\"term\":\"ham sandwich\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07712370\"]}");
	add("07712473", "{\"term\":\"chicken sandwich\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07712473\"]}");
	add("07712584", "{\"term\":\"club sandwich\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07712584\"]}");
	add("07712584", "{\"term\":\"three-decker\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04434511\", \"04434608\", \"07712584\"]}");
	add("07712584", "{\"term\":\"triple-decker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07712584\"]}");
	add("07712722", "{\"term\":\"open-face sandwich\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07712722\"]}");
	add("07712722", "{\"term\":\"open sandwich\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07712722\"]}");
	add("07712845", "{\"term\":\"beefburger\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07712845\"]}");
	add("07712845", "{\"term\":\"burger\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07712845\", \"10891874\"]}");
	add("07712845", "{\"term\":\"hamburger\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07679752\", \"07712845\"]}");
	add("07713058", "{\"term\":\"cheeseburger\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07713058\"]}");
	add("07713153", "{\"term\":\"tunaburger\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07713153\"]}");
	add("07713282", "{\"term\":\"hot dog\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07692347\", \"07713282\", \"10207329\"]}");
	add("07713282", "{\"term\":\"hotdog\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07692347\", \"07713282\", \"10207329\"]}");
	add("07713282", "{\"term\":\"red hot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07713282\"]}");
	add("07713444", "{\"term\":\"sloppy joe\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07713444\"]}");
	add("07713570", "{\"term\":\"bomber\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07713570\", \"09883942\", \"02871055\"]}");
	add("07713570", "{\"term\":\"cuban sandwich\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07713570\"]}");
	add("07713570", "{\"term\":\"grinder\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03464972\", \"03771096\", \"05315272\", \"07713570\"]}");
	add("07713570", "{\"term\":\"hero\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"07713570\", \"09577426\", \"10192757\", \"11065101\", \"09925991\", \"05938456\", \"10344679\"]}");
	add("07713570", "{\"term\":\"hero sandwich\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07713570\"]}");
	add("07713570", "{\"term\":\"hoagie\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07713570\"]}");
	add("07713570", "{\"term\":\"hoagy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07713570\"]}");
	add("07713570", "{\"term\":\"italian sandwich\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07713570\"]}");
	add("07713570", "{\"term\":\"poor boy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07713570\"]}");
	add("07713570", "{\"term\":\"sub\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04354832\", \"07713570\"]}");
	add("07713570", "{\"term\":\"submarine\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07713570\", \"04354832\"]}");
	add("07713570", "{\"term\":\"submarine sandwich\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07713570\"]}");
	add("07713570", "{\"term\":\"torpedo\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"01498972\", \"04463707\", \"04463969\", \"04464199\", \"04464392\", \"07713570\", \"10171603\"]}");
	add("07713570", "{\"term\":\"wedge\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"03027561\", \"04576806\", \"04577108\", \"04577269\", \"06836139\", \"07713570\", \"13942580\"]}");
	add("07713570", "{\"term\":\"zep\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07713570\"]}");
	add("07713995", "{\"term\":\"gyro\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03478350\", \"07713995\"]}");
	add("07714146", "{\"term\":\"bacon-lettuce-tomato sandwich\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07714146\"]}");
	add("07714146", "{\"term\":\"blt\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07714146\"]}");
	add("07714288", "{\"term\":\"reuben\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07714288\", \"11278343\"]}");
	add("07714417", "{\"term\":\"western\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07714417\", \"06628388\"]}");
	add("07714417", "{\"term\":\"western sandwich\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07714417\"]}");
	add("07714527", "{\"term\":\"wrap\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04613084\", \"07714527\", \"04612804\"]}");
	add("07714660", "{\"term\":\"alimentary paste\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07714660\"]}");
	add("07714660", "{\"term\":\"pasta\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07714660\", \"07879350\"]}");
	add("07715175", "{\"term\":\"bowtie pasta\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07715175\"]}");
	add("07715175", "{\"term\":\"farfalle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07715175\"]}");
	add("07715329", "{\"term\":\"noodle\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05547087\", \"07715329\"]}");
	add("07715427", "{\"term\":\"orzo\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07715427\"]}");
	add("07715560", "{\"term\":\"egg noodle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07715560\"]}");
	add("07715659", "{\"term\":\"spaghetti\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07715659\", \"07715748\"]}");
	add("07715748", "{\"term\":\"spaghetti\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07715659\", \"07715748\"]}");
	add("07715840", "{\"term\":\"spaghettini\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07715840\"]}");
	add("07715912", "{\"term\":\"tortellini\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07715912\"]}");
	add("07716000", "{\"term\":\"ziti\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07716000\"]}");
	add("07716093", "{\"term\":\"rigatoni\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07716093\"]}");
	add("07716184", "{\"term\":\"fedelline\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07716184\"]}");
	add("07716284", "{\"term\":\"linguine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07716284\"]}");
	add("07716284", "{\"term\":\"linguini\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07716284\"]}");
	add("07716383", "{\"term\":\"fettuccine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07716383\"]}");
	add("07716383", "{\"term\":\"fettuccini\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07716383\"]}");
	add("07716511", "{\"term\":\"fettuccine alfredo\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07716511\"]}");
	add("07716613", "{\"term\":\"vermicelli\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07716613\"]}");
	add("07716709", "{\"term\":\"macaroni\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07716709\", \"10297960\"]}");
	add("07716798", "{\"term\":\"lasagna\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07716798\", \"07886143\"]}");
	add("07716798", "{\"term\":\"lasagne\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07716798\", \"07886143\"]}");
	add("07716892", "{\"term\":\"penne\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07716892\"]}");
	add("07716989", "{\"term\":\"cappelletti\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07716989\"]}");
	add("07716989", "{\"term\":\"ravioli\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07716989\"]}");
	add("07717117", "{\"term\":\"tagliatelle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07717117\"]}");
	add("07717202", "{\"term\":\"manicotti\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07717202\"]}");
	add("07717342", "{\"term\":\"couscous\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07717342\", \"07953701\"]}");
	add("07717460", "{\"term\":\"gnocchi\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07717460\"]}");
	add("07717657", "{\"term\":\"matzah ball\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07717657\"]}");
	add("07717657", "{\"term\":\"matzo ball\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07717657\"]}");
	add("07717657", "{\"term\":\"matzoh ball\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07717657\"]}");
	add("07717802", "{\"term\":\"won ton\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07603764\", \"07717802\"]}");
	add("07717802", "{\"term\":\"wonton\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07603764\", \"07717802\"]}");
	add("07717938", "{\"term\":\"dumpling\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07626757\", \"07717938\"]}");
	add("07717938", "{\"term\":\"dumplings\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07717938\"]}");
	add("07718107", "{\"term\":\"health food\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07718107\"]}");
	add("07718254", "{\"term\":\"junk food\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07718254\"]}");
	add("07718387", "{\"term\":\"breakfast food\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07718387\"]}");
	add("07718541", "{\"term\":\"cereal\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07718541\", \"07818393\", \"12162012\"]}");
	add("07718702", "{\"term\":\"muesli\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07718702\"]}");
	add("07718798", "{\"term\":\"pablum\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06624527\", \"07718798\"]}");
	add("07718922", "{\"term\":\"hot cereal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07718922\"]}");
	add("07719078", "{\"term\":\"cornmeal mush\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07719078\"]}");
	add("07719078", "{\"term\":\"mush\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00309034\", \"06788770\", \"07719078\", \"09423701\"]}");
	add("07719260", "{\"term\":\"atole\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07719260\"]}");
	add("07719344", "{\"term\":\"hasty pudding\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07719344\", \"07719634\"]}");
	add("07719488", "{\"term\":\"polenta\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07719488\"]}");
	add("07719634", "{\"term\":\"hasty pudding\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07719344\", \"07719634\"]}");
	add("07719799", "{\"term\":\"gruel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07719799\"]}");
	add("07719950", "{\"term\":\"congee\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00217474\", \"01144050\", \"03095054\", \"07719950\"]}");
	add("07719950", "{\"term\":\"jook\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03608412\", \"07719950\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }