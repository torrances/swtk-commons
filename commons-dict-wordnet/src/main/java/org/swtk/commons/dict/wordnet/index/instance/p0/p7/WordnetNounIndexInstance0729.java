package org.swtk.commons.dict.wordnet.index.instance.p0.p7;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexInstance0729 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("07290194", "{\"term\":\"scrape\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04701248\", \"07290194\", \"14310051\", \"07407582\"]}");
	add("07290194", "{\"term\":\"scraping\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07290194\", \"07407582\", \"09449185\"]}");
	add("07290418", "{\"term\":\"salaam\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07290418\"]}");
	add("07290528", "{\"term\":\"ground rule\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07290528\"]}");
	add("07290723", "{\"term\":\"sign\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"06824483\", \"07290723\", \"06889194\", \"07300719\", \"13878771\", \"14325305\", \"08703415\", \"04224949\", \"06804229\", \"06806088\", \"06659006\"]}");
	add("07290947", "{\"term\":\"system command\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07290947\"]}");
	add("07291119", "{\"term\":\"marching orders\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07183634\", \"07291119\"]}");
	add("07291119", "{\"term\":\"walking papers\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07291119\"]}");
	add("07291243", "{\"term\":\"wanted notice\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07291243\"]}");
	add("07291243", "{\"term\":\"wanted poster\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07291243\"]}");
	add("07291437", "{\"term\":\"international wanted notice\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07291437\"]}");
	add("07291437", "{\"term\":\"red notice\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07291437\"]}");
	add("07291863", "{\"term\":\"plagiarism\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00751748\", \"07291863\"]}");
	add("07292089", "{\"term\":\"transcript\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06517508\", \"07292089\"]}");
	add("07292402", "{\"term\":\"voice\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"07044205\", \"13825132\", \"05209552\", \"10657783\", \"10778381\", \"07292402\", \"00180532\", \"07087248\", \"07414052\", \"07125323\", \"04989190\"]}");
	add("07292620", "{\"term\":\"bach\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07292620\", \"10849825\"]}");
	add("07292719", "{\"term\":\"beethoven\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07292719\", \"10861001\"]}");
	add("07292851", "{\"term\":\"brahms\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07292851\", \"10881709\"]}");
	add("07292961", "{\"term\":\"chopin\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10916396\", \"10916575\", \"07292961\"]}");
	add("07293070", "{\"term\":\"gilbert and sullivan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07293070\"]}");
	add("07293215", "{\"term\":\"handel\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07293215\", \"11047627\"]}");
	add("07293287", "{\"term\":\"haydn\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07293287\", \"11055776\"]}");
	add("07293357", "{\"term\":\"mozart\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07293357\", \"11214345\"]}");
	add("07293480", "{\"term\":\"stravinsky\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07293480\", \"11341836\"]}");
	add("07293630", "{\"term\":\"wagner\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07293630\", \"11389829\", \"11390063\"]}");
	add("07293750", "{\"term\":\"language system\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07293750\"]}");
	add("07293990", "{\"term\":\"contact\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"03098615\", \"07293990\", \"03098248\", \"06271913\", \"09979596\", \"07353929\", \"14442914\", \"00125700\", \"00040035\"]}");
	add("07293990", "{\"term\":\"touch\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"04953937\", \"05650398\", \"05730374\", \"07202898\", \"14105668\", \"07293990\", \"13796315\", \"00047263\", \"04938605\", \"07178814\", \"05662964\", \"07424192\"]}");
	add("07294158", "{\"term\":\"traffic\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00041542\", \"07294158\", \"01115977\", \"08442260\"]}");
	add("07294392", "{\"term\":\"order\", \"synsetCount\":15, \"upperType\":\"NOUN\", \"ids\":[\"01011813\", \"04706004\", \"07294392\", \"08123900\", \"08164801\", \"13974030\", \"06665623\", \"08244135\", \"06541210\", \"06551761\", \"14520294\", \"08474004\", \"13991994\", \"05098520\", \"07183274\"]}");
	add("07294673", "{\"term\":\"short order\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07294673\"]}");
	add("07294777", "{\"term\":\"callback\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07294777\"]}");
	add("07294777", "{\"term\":\"recall\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"01261399\", \"05769556\", \"06817246\", \"07205500\", \"07294777\"]}");
	add("07295000", "{\"term\":\"uplink\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07295000\"]}");
	add("07295129", "{\"term\":\"capriccio\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07295129\"]}");
	add("07295304", "{\"term\":\"interrogation\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"07208256\", \"07208618\", \"07295304\", \"07211342\"]}");
	add("07295459", "{\"term\":\"motet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07295459\"]}");
	add("07295646", "{\"term\":\"negation\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06764286\", \"07221121\", \"07295646\"]}");
	add("07295804", "{\"term\":\"packet\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03715618\", \"03877306\", \"07295804\", \"08024575\"]}");
	add("07295924", "{\"term\":\"program music\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07295924\"]}");
	add("07295924", "{\"term\":\"programme music\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07295924\"]}");
	add("07296080", "{\"term\":\"incidental music\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07296080\"]}");
	add("07296228", "{\"term\":\"slanguage\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07296228\"]}");
	add("07296340", "{\"term\":\"ta\u0027ziyeh\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07296340\"]}");
	add("07296576", "{\"term\":\"sprechgesang\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07296576\"]}");
	add("07296576", "{\"term\":\"sprechstimme\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07296576\"]}");
	add("07296711", "{\"term\":\"vocal\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07062058\", \"07296711\"]}");
	add("07296711", "{\"term\":\"vocal music\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00546381\", \"07296711\"]}");
	add("07296871", "{\"term\":\"voice over\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07296871\"]}");
	add("07296994", "{\"term\":\"walk-through\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00294597\", \"00899306\", \"04554020\", \"07296994\"]}");
	add("07297202", "{\"term\":\"yearbook\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06438138\", \"07297202\"]}");
	add("07297400", "{\"term\":\"zinger\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07297400\"]}");
	add("07297634", "{\"term\":\"capital\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"02959683\", \"07297634\", \"08374056\", \"08535930\", \"06837277\", \"08535783\", \"13374622\", \"13375435\"]}");
	add("07297634", "{\"term\":\"das kapital\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07297634\"]}");
	add("07297770", "{\"term\":\"erewhon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07297770\"]}");
	add("07297903", "{\"term\":\"utopia\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"05639839\", \"06381801\", \"13955078\", \"07297903\"]}");
	add("07298069", "{\"term\":\"might-have-been\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07298069\"]}");
	add("07298178", "{\"term\":\"nonevent\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07298178\"]}");
	add("07298313", "{\"term\":\"happening\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07298313\"]}");
	add("07298313", "{\"term\":\"natural event\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07298313\"]}");
	add("07298313", "{\"term\":\"occurrence\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13982355\", \"07298313\"]}");
	add("07298313", "{\"term\":\"occurrent\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07298313\"]}");
	add("07299259", "{\"term\":\"accompaniment\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00829443\", \"05116811\", \"07045239\", \"07299259\"]}");
	add("07299259", "{\"term\":\"attendant\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07299259\", \"09631032\", \"09841233\"]}");
	add("07299259", "{\"term\":\"co-occurrence\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05055452\", \"07299259\"]}");
	add("07299259", "{\"term\":\"concomitant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07299259\"]}");
	add("07299553", "{\"term\":\"associate\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"06710466\", \"07299553\", \"09836579\", \"09965384\", \"09836176\"]}");
	add("07299741", "{\"term\":\"avalanche\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07299741\", \"07419737\"]}");
	add("07299896", "{\"term\":\"background\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"02771869\", \"02772080\", \"14536861\", \"07299896\", \"07445080\", \"05831841\", \"05942570\", \"04928594\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }