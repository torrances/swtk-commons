package org.swtk.commons.dict.wordnet.index.byid.instance.p0.p3;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0369 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("03690066", "{\"term\":\"lockup\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00829299\", \"03690066\"]}");
	add("03690149", "{\"term\":\"engine\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03292914\", \"03690149\", \"11437675\", \"03292644\"]}");
	add("03690149", "{\"term\":\"locomotive\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03690149\"]}");
	add("03690149", "{\"term\":\"locomotive engine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03690149\"]}");
	add("03690149", "{\"term\":\"railway locomotive\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03690149\"]}");
	add("03690633", "{\"term\":\"indian lodge\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03690633\"]}");
	add("03690633", "{\"term\":\"lodge\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"03546876\", \"03690633\", \"03690812\", \"03690966\", \"08244135\", \"11156963\"]}");
	add("03690812", "{\"term\":\"hunting lodge\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03690812\"]}");
	add("03690812", "{\"term\":\"lodge\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"03546876\", \"03690633\", \"03690812\", \"03690966\", \"08244135\", \"11156963\"]}");
	add("03690966", "{\"term\":\"lodge\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"03546876\", \"03690633\", \"03690812\", \"03690966\", \"08244135\", \"11156963\"]}");
	add("03691146", "{\"term\":\"lodging house\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03691146\"]}");
	add("03691146", "{\"term\":\"rooming house\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03691146\"]}");
	add("03691288", "{\"term\":\"loestrin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03691288\"]}");
	add("03691456", "{\"term\":\"attic\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"02758828\", \"05547087\", \"06990270\", \"03691456\"]}");
	add("03691456", "{\"term\":\"garret\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03691456\"]}");
	add("03691456", "{\"term\":\"loft\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03691689\", \"05076616\", \"03691456\", \"03691796\"]}");
	add("03691689", "{\"term\":\"loft\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03691689\", \"05076616\", \"03691456\", \"03691796\"]}");
	add("03691689", "{\"term\":\"pigeon loft\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03691689\"]}");
	add("03691796", "{\"term\":\"loft\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03691689\", \"05076616\", \"03691456\", \"03691796\"]}");
	add("03691984", "{\"term\":\"log\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"03691984\", \"06515875\", \"06516146\", \"06825489\", \"14966900\"]}");
	add("03692250", "{\"term\":\"log cabin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03692250\"]}");
	add("03692329", "{\"term\":\"loge\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02887466\", \"03692329\"]}");
	add("03692463", "{\"term\":\"loggia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03692463\"]}");
	add("03692632", "{\"term\":\"logic element\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03692632\"]}");
	add("03692774", "{\"term\":\"log line\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03692774\"]}");
	add("03692930", "{\"term\":\"lomotil\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03692930\"]}");
	add("03693014", "{\"term\":\"lomustine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03693014\"]}");
	add("03693146", "{\"term\":\"longboat\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03693146\"]}");
	add("03693254", "{\"term\":\"longbow\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03693254\"]}");
	add("03693392", "{\"term\":\"long iron\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03693392\"]}");
	add("03693518", "{\"term\":\"long johns\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03693518\"]}");
	add("03693642", "{\"term\":\"longshot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03693642\"]}");
	add("03693731", "{\"term\":\"long sleeve\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03693731\"]}");
	add("03693830", "{\"term\":\"long tom\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03693830\"]}");
	add("03693931", "{\"term\":\"long pants\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03693931\"]}");
	add("03693931", "{\"term\":\"long trousers\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03693931\"]}");
	add("03694033", "{\"term\":\"long underwear\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03694033\"]}");
	add("03694033", "{\"term\":\"union suit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03694033\"]}");
	add("03694158", "{\"term\":\"glass\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"03443585\", \"03694158\", \"03759824\", \"03338074\", \"13789379\", \"03443167\", \"14905454\"]}");
	add("03694158", "{\"term\":\"looking glass\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03694158\"]}");
	add("03694269", "{\"term\":\"lookout\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00883223\", \"03694269\", \"08614732\", \"10290913\"]}");
	add("03694269", "{\"term\":\"lookout station\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03694269\"]}");
	add("03694269", "{\"term\":\"observation tower\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03694269\"]}");
	add("03694269", "{\"term\":\"observatory\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03694269\", \"03845191\"]}");
	add("03694483", "{\"term\":\"loom\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03694483\"]}");
	add("03694673", "{\"term\":\"loop\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"00170632\", \"03052868\", \"03694673\", \"05738669\", \"06585033\", \"06657586\", \"08258575\", \"13525376\", \"13898210\", \"03137089\"]}");
	add("03694769", "{\"term\":\"loophole\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03694769\", \"06616901\"]}");
	add("03694896", "{\"term\":\"loop knot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03694896\"]}");
	add("03695026", "{\"term\":\"loop-line\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03695026\"]}");
	add("03695166", "{\"term\":\"lo/ovral\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03695166\"]}");
	add("03695331", "{\"term\":\"ativan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03695331\"]}");
	add("03695331", "{\"term\":\"lorazepam\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03695331\"]}");
	add("03695494", "{\"term\":\"lorgnette\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03695494\"]}");
	add("03695605", "{\"term\":\"cross of lorraine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03695605\"]}");
	add("03695605", "{\"term\":\"lorraine cross\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03695605\"]}");
	add("03695799", "{\"term\":\"camion\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03240682\", \"03695799\"]}");
	add("03695799", "{\"term\":\"lorry\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03695799\", \"03695926\"]}");
	add("03695926", "{\"term\":\"lorry\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03695799\", \"03695926\"]}");
	add("03696021", "{\"term\":\"lost-and-found\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03696021\"]}");
	add("03696177", "{\"term\":\"lota\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02525969\", \"03696177\"]}");
	add("03696264", "{\"term\":\"lotion\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03696454\", \"03696264\"]}");
	add("03696454", "{\"term\":\"application\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00036782\", \"00634572\", \"03696454\", \"06582286\", \"00713478\", \"06524571\", \"00950950\"]}");
	add("03696454", "{\"term\":\"lotion\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03696454\", \"03696264\"]}");
	add("03696785", "{\"term\":\"loudspeaker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03696785\"]}");
	add("03696785", "{\"term\":\"loudspeaker system\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03696785\"]}");
	add("03696785", "{\"term\":\"speaker\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10650671\", \"03696785\", \"10649550\"]}");
	add("03696785", "{\"term\":\"speaker system\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03696785\"]}");
	add("03696785", "{\"term\":\"speaker unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03696785\"]}");
	add("03697143", "{\"term\":\"lounge\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03697143\", \"04263630\"]}");
	add("03697143", "{\"term\":\"waiting area\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03697143\"]}");
	add("03697143", "{\"term\":\"waiting room\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03697143\"]}");
	add("03697330", "{\"term\":\"lounger\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03697330\", \"04069540\", \"10008241\"]}");
	add("03697462", "{\"term\":\"lounging jacket\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03697462\"]}");
	add("03697462", "{\"term\":\"smoking jacket\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03697462\"]}");
	add("03697598", "{\"term\":\"lounging pajama\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03697598\"]}");
	add("03697598", "{\"term\":\"lounging pyjama\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03697598\"]}");
	add("03697705", "{\"term\":\"loungewear\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03697705\"]}");
	add("03697848", "{\"term\":\"jeweler\u0027s loupe\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03697848\"]}");
	add("03697848", "{\"term\":\"loupe\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03697848\"]}");
	add("03698002", "{\"term\":\"fin\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"02468763\", \"03345526\", \"03369002\", \"03698002\", \"04391493\", \"13766661\"]}");
	add("03698002", "{\"term\":\"louver\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03698002\"]}");
	add("03698002", "{\"term\":\"louvre\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03698002\", \"03698268\"]}");
	add("03698168", "{\"term\":\"jalousie\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03597856\", \"03698168\"]}");
	add("03698168", "{\"term\":\"louvered window\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03698168\"]}");
	add("03698268", "{\"term\":\"louvre\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03698002\", \"03698268\"]}");
	add("03698268", "{\"term\":\"louvre museum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03698268\"]}");
	add("03698415", "{\"term\":\"lovastatin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03698415\"]}");
	add("03698415", "{\"term\":\"mevacor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03698415\"]}");
	add("03698619", "{\"term\":\"love knot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03698619\"]}");
	add("03698619", "{\"term\":\"lover\u0027s knot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03698619\"]}");
	add("03698619", "{\"term\":\"lovers\u0027 knot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03698619\"]}");
	add("03698619", "{\"term\":\"true lover\u0027s knot\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03355302\", \"03698619\"]}");
	add("03698619", "{\"term\":\"true lovers\u0027 knot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03698619\"]}");
	add("03698800", "{\"term\":\"love seat\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03698800\"]}");
	add("03698800", "{\"term\":\"loveseat\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03698800\"]}");
	add("03698800", "{\"term\":\"tete-a-tete\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03698800\", \"07156815\"]}");
	add("03698800", "{\"term\":\"vis-a-vis\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03698800\", \"05703771\"]}");
	add("03698943", "{\"term\":\"love-token\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03698943\"]}");
	add("03699033", "{\"term\":\"loving cup\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03152567\", \"03699033\"]}");
	add("03699186", "{\"term\":\"lowboy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03699186\"]}");
	add("03699299", "{\"term\":\"lower\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03699299\"]}");
	add("03699299", "{\"term\":\"lower berth\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03699299\"]}");
	add("03699424", "{\"term\":\"lower deck\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03699424\"]}");
	add("03699424", "{\"term\":\"third deck\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03699424\"]}");
	add("03699522", "{\"term\":\"low-pass filter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03699522\"]}");
	add("03699682", "{\"term\":\"low-warp-loom\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03699682\"]}");
	add("03699816", "{\"term\":\"loxapine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03699816\"]}");
	add("03699816", "{\"term\":\"loxitane\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03699816\"]}");
	add("03699965", "{\"term\":\"l-p\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03699965\"]}");
	add("03699965", "{\"term\":\"lp\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03699965\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }