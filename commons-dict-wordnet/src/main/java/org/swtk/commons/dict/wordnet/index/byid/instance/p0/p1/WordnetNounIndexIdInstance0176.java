package org.swtk.commons.dict.wordnet.index.byid.instance.p0.p1;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0176 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("01760188", "{\"term\":\"genus sistrurus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01760188\"]}");
	add("01760188", "{\"term\":\"sistrurus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01760188\"]}");
	add("01760318", "{\"term\":\"massasauga\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01760318\", \"01760542\"]}");
	add("01760318", "{\"term\":\"massasauga rattler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01760318\"]}");
	add("01760318", "{\"term\":\"sistrurus catenatus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01760318\"]}");
	add("01760542", "{\"term\":\"ground rattler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01760542\"]}");
	add("01760542", "{\"term\":\"massasauga\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01760318\", \"01760542\"]}");
	add("01760542", "{\"term\":\"sistrurus miliaris\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01760542\"]}");
	add("01760660", "{\"term\":\"bothrops\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01760660\"]}");
	add("01760660", "{\"term\":\"genus bothrops\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01760660\"]}");
	add("01760782", "{\"term\":\"bothrops atrops\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01760782\"]}");
	add("01760782", "{\"term\":\"fer-de-lance\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01760782\"]}");
	add("01760949", "{\"term\":\"beak\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"05606462\", \"12896354\", \"01760949\", \"01761151\"]}");
	add("01760949", "{\"term\":\"bill\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"01760949\", \"02841963\", \"02842193\", \"06498711\", \"06806283\", \"07265007\", \"00552444\", \"13414935\", \"06528946\", \"06548844\"]}");
	add("01760949", "{\"term\":\"neb\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01760949\", \"02455268\"]}");
	add("01760949", "{\"term\":\"nib\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01760949\", \"03828651\"]}");
	add("01760949", "{\"term\":\"pecker\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01760949\", \"01841239\", \"05534354\"]}");
	add("01761151", "{\"term\":\"beak\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"05606462\", \"12896354\", \"01760949\", \"01761151\"]}");
	add("01761278", "{\"term\":\"cere\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01761278\"]}");
	add("01761398", "{\"term\":\"carcase\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01761398\"]}");
	add("01761398", "{\"term\":\"carcass\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01761398\"]}");
	add("01761536", "{\"term\":\"carrion\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01761536\"]}");
	add("01761650", "{\"term\":\"roadkill\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01761650\"]}");
	add("01761823", "{\"term\":\"arthropod family\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01761823\"]}");
	add("01765166", "{\"term\":\"arthropod genus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01765166\"]}");
	add("01769840", "{\"term\":\"arthropoda\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01769840\"]}");
	add("01769840", "{\"term\":\"phylum arthropoda\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01769840\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }