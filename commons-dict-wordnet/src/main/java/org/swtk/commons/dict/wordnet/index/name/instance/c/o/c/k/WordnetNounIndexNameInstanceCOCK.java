package org.swtk.commons.dict.wordnet.index.name.instance.c.o.c.k;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceCOCK {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"cock\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"01517309\", \"01794799\", \"03486907\", \"04334820\", \"05534354\"]}");
	add("{\"term\":\"cockade\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03064602\"]}");
	add("{\"term\":\"cockaigne\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05635168\"]}");
	add("{\"term\":\"cockateel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01822375\"]}");
	add("{\"term\":\"cockatiel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01822375\"]}");
	add("{\"term\":\"cockatoo\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01821756\"]}");
	add("{\"term\":\"cockatrice\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09517280\"]}");
	add("{\"term\":\"cockchafer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02177311\"]}");
	add("{\"term\":\"cockcroft\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10923670\"]}");
	add("{\"term\":\"cockcrow\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15193837\"]}");
	add("{\"term\":\"cocker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02104970\"]}");
	add("{\"term\":\"cockerel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01795070\"]}");
	add("{\"term\":\"cockfight\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07481335\"]}");
	add("{\"term\":\"cockfighting\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00453138\"]}");
	add("{\"term\":\"cockhorse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03065214\"]}");
	add("{\"term\":\"cockiness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05174939\"]}");
	add("{\"term\":\"cockle\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01962626\", \"07803589\"]}");
	add("{\"term\":\"cocklebur\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11945318\", \"12053608\"]}");
	add("{\"term\":\"cockleburr\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12053608\"]}");
	add("{\"term\":\"cockleshell\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03065348\"]}");
	add("{\"term\":\"cockloft\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03065431\"]}");
	add("{\"term\":\"cockney\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06960779\", \"09724166\"]}");
	add("{\"term\":\"cockpit\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03065677\", \"03065822\", \"03065508\"]}");
	add("{\"term\":\"cockroach\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02235990\"]}");
	add("{\"term\":\"cockscomb\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"01794896\", \"03065896\", \"09993020\", \"11845820\"]}");
	add("{\"term\":\"cocksfoot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12136946\"]}");
	add("{\"term\":\"cockspur\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11861716\", \"12136946\"]}");
	add("{\"term\":\"cocksucker\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09834593\", \"09952782\"]}");
	add("{\"term\":\"cocksureness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05705754\"]}");
	add("{\"term\":\"cocktail\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07597340\", \"07927917\"]}");
	add("{\"term\":\"cockup\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00076438\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }