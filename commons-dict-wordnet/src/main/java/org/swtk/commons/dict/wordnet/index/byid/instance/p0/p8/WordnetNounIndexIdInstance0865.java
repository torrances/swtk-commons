package org.swtk.commons.dict.wordnet.index.byid.instance.p0.p8;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0865 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("08650253", "{\"term\":\"loxodrome\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08650253\"]}");
	add("08650253", "{\"term\":\"rhumb\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08650253\"]}");
	add("08650253", "{\"term\":\"rhumb line\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08650253\"]}");
	add("08650469", "{\"term\":\"celestial latitude\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08650469\"]}");
	add("08650469", "{\"term\":\"dec\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08650469\", \"15238570\"]}");
	add("08650469", "{\"term\":\"declination\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"06646746\", \"08650469\", \"09288526\", \"14445892\"]}");
	add("08650766", "{\"term\":\"celestial longitude\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08650766\"]}");
	add("08650766", "{\"term\":\"ra\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08650766\", \"09536351\", \"14676100\"]}");
	add("08650766", "{\"term\":\"right ascension\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08650766\"]}");
	add("08651258", "{\"term\":\"waterfront\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08651258\"]}");
	add("08651426", "{\"term\":\"seafront\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08651426\"]}");
	add("08651532", "{\"term\":\"port\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"03583825\", \"03648242\", \"03991266\", \"07917065\", \"08651532\"]}");
	add("08655346", "{\"term\":\"entrepot\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04336328\", \"08655346\"]}");
	add("08655346", "{\"term\":\"transshipment center\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08655346\"]}");
	add("08655608", "{\"term\":\"free port\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08655608\", \"08657161\"]}");
	add("08655716", "{\"term\":\"home port\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08655716\"]}");
	add("08655835", "{\"term\":\"outport\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08655835\"]}");
	add("08656017", "{\"term\":\"point of entry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08656017\"]}");
	add("08656017", "{\"term\":\"port of entry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08656017\"]}");
	add("08656633", "{\"term\":\"harbor\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03497351\", \"08656633\"]}");
	add("08656633", "{\"term\":\"harbour\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03497351\", \"08656633\"]}");
	add("08656633", "{\"term\":\"haven\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08656633\", \"03504940\"]}");
	add("08656633", "{\"term\":\"seaport\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08656633\"]}");
	add("08656942", "{\"term\":\"coaling station\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08656942\"]}");
	add("08657054", "{\"term\":\"port of call\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08657054\"]}");
	add("08657161", "{\"term\":\"free port\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08655608\", \"08657161\"]}");
	add("08657161", "{\"term\":\"free zone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08657161\"]}");
	add("08657351", "{\"term\":\"anchorage\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00052872\", \"08657351\", \"09078369\", \"13341713\", \"13946615\"]}");
	add("08657351", "{\"term\":\"anchorage ground\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08657351\"]}");
	add("08657526", "{\"term\":\"treaty port\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08657526\"]}");
	add("08657686", "{\"term\":\"berth\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02834929\", \"08657686\", \"00587299\"]}");
	add("08657686", "{\"term\":\"moorage\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00052966\", \"08657686\", \"13343889\"]}");
	add("08657686", "{\"term\":\"mooring\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03790008\", \"08657686\"]}");
	add("08657686", "{\"term\":\"slip\", \"synsetCount\":15, \"upperType\":\"NOUN\", \"ids\":[\"00060196\", \"00171531\", \"00329857\", \"02978871\", \"03017234\", \"04247434\", \"04346369\", \"04954805\", \"07332119\", \"08657686\", \"10631620\", \"13148232\", \"14838465\", \"00074648\", \"00077016\"]}");
	add("08657875", "{\"term\":\"roads\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08657875\"]}");
	add("08657875", "{\"term\":\"roadstead\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08657875\"]}");
	add("08657967", "{\"term\":\"dockyard\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08657967\"]}");
	add("08658106", "{\"term\":\"holiday resort\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08658106\"]}");
	add("08658106", "{\"term\":\"resort\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"01211087\", \"05162506\", \"08599031\", \"08658106\"]}");
	add("08658106", "{\"term\":\"resort hotel\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04087817\", \"08658106\"]}");
	add("08658314", "{\"term\":\"playground\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03969939\", \"08658314\"]}");
	add("08658314", "{\"term\":\"resort area\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08658314\"]}");
	add("08658314", "{\"term\":\"vacation spot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08658314\"]}");
	add("08658537", "{\"term\":\"rough\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08658537\"]}");
	add("08658688", "{\"term\":\"locality\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08658688\"]}");
	add("08658688", "{\"term\":\"neck of the woods\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08658688\"]}");
	add("08658688", "{\"term\":\"neighborhood\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"08659906\", \"13781286\", \"08242011\", \"08658688\"]}");
	add("08658688", "{\"term\":\"neighbourhood\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08242011\", \"08658688\"]}");
	add("08658688", "{\"term\":\"vicinity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08658688\"]}");
	add("08659319", "{\"term\":\"gold coast\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08659319\", \"08965960\"]}");
	add("08659519", "{\"term\":\"\u0027hood\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08659519\"]}");
	add("08659612", "{\"term\":\"place\", \"synsetCount\":16, \"upperType\":\"NOUN\", \"ids\":[\"06401196\", \"06495143\", \"08637370\", \"13971047\", \"06412750\", \"08665191\", \"13970825\", \"08639173\", \"00587299\", \"08577045\", \"13949819\", \"00722683\", \"08659612\", \"05619605\", \"08530790\", \"08682181\"]}");
	add("08659720", "{\"term\":\"block\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"00563435\", \"02759606\", \"02856708\", \"03293136\", \"04026692\", \"05653044\", \"13647935\", \"02856275\", \"07970600\", \"13937623\", \"08659720\", \"02855782\"]}");
	add("08659720", "{\"term\":\"city block\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08659720\"]}");
	add("08659906", "{\"term\":\"neighborhood\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"08659906\", \"13781286\", \"08242011\", \"08658688\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }