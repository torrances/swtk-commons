package org.swtk.commons.dict.wordnet.index.instance.p0.p3;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexInstance0359 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("03590242", "{\"term\":\"iron\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03589998\", \"03590506\", \"03590242\", \"14666595\"]}");
	add("03590506", "{\"term\":\"branding iron\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03590506\"]}");
	add("03590506", "{\"term\":\"iron\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03589998\", \"03590506\", \"03590242\", \"14666595\"]}");
	add("03590607", "{\"term\":\"chains\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03590607\"]}");
	add("03590607", "{\"term\":\"irons\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03590607\"]}");
	add("03590720", "{\"term\":\"ironclad\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03590720\"]}");
	add("03590851", "{\"term\":\"iron foundry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03590851\"]}");
	add("03590947", "{\"term\":\"iron horse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03590947\"]}");
	add("03591044", "{\"term\":\"ironing\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00582127\", \"03591044\"]}");
	add("03591259", "{\"term\":\"ironing board\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03591259\"]}");
	add("03591388", "{\"term\":\"iron lung\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03591388\"]}");
	add("03591617", "{\"term\":\"iron maiden\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03591617\"]}");
	add("03591800", "{\"term\":\"ironmongery\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03591800\"]}");
	add("03591929", "{\"term\":\"ironwork\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03591929\"]}");
	add("03592080", "{\"term\":\"ironworks\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03592080\"]}");
	add("03592219", "{\"term\":\"irregular\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03592219\", \"10170076\"]}");
	add("03592219", "{\"term\":\"second\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"03592219\", \"04171590\", \"07195032\", \"10587511\", \"13632638\", \"13868743\", \"15269461\", \"00725034\", \"15271664\", \"15259923\"]}");
	add("03592374", "{\"term\":\"irrigation ditch\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03592374\"]}");
	add("03592487", "{\"term\":\"island\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03592487\", \"09339360\"]}");
	add("03592611", "{\"term\":\"isocarboxazid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03592611\"]}");
	add("03592611", "{\"term\":\"marplan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03592611\"]}");
	add("03592792", "{\"term\":\"isoflurane\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03592792\"]}");
	add("03592884", "{\"term\":\"inh\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03592884\"]}");
	add("03592884", "{\"term\":\"isoniazid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03592884\"]}");
	add("03592884", "{\"term\":\"nydrazid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03592884\"]}");
	add("03593043", "{\"term\":\"isoproterenol\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03593043\"]}");
	add("03593043", "{\"term\":\"isuprel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03593043\"]}");
	add("03593215", "{\"term\":\"isordil\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03593215\"]}");
	add("03593215", "{\"term\":\"isosorbide\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03593215\"]}");
	add("03593385", "{\"term\":\"izar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03593385\"]}");
	add("03593583", "{\"term\":\"item\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"06808603\", \"05825971\", \"03593583\", \"13832132\", \"06494090\"]}");
	add("03593855", "{\"term\":\"itraconazole\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03593855\"]}");
	add("03593855", "{\"term\":\"sporanox\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03593855\"]}");
	add("03594028", "{\"term\":\"jabot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03594028\"]}");
	add("03594138", "{\"term\":\"jack\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"02392595\", \"02579206\", \"03594138\", \"03594280\", \"03594407\", \"03594500\", \"03594700\", \"03594859\", \"07770660\", \"10260997\", \"10314263\", \"13795187\"]}");
	add("03594280", "{\"term\":\"jack\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"02392595\", \"02579206\", \"03594138\", \"03594280\", \"03594407\", \"03594500\", \"03594700\", \"03594859\", \"07770660\", \"10260997\", \"10314263\", \"13795187\"]}");
	add("03594280", "{\"term\":\"knave\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03594280\", \"10556285\"]}");
	add("03594407", "{\"term\":\"jack\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"02392595\", \"02579206\", \"03594138\", \"03594280\", \"03594407\", \"03594500\", \"03594700\", \"03594859\", \"07770660\", \"10260997\", \"10314263\", \"13795187\"]}");
	add("03594500", "{\"term\":\"jack\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"02392595\", \"02579206\", \"03594138\", \"03594280\", \"03594407\", \"03594500\", \"03594700\", \"03594859\", \"07770660\", \"10260997\", \"10314263\", \"13795187\"]}");
	add("03594500", "{\"term\":\"jackstones\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00486273\", \"03594500\"]}");
	add("03594700", "{\"term\":\"jack\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"02392595\", \"02579206\", \"03594138\", \"03594280\", \"03594407\", \"03594500\", \"03594700\", \"03594859\", \"07770660\", \"10260997\", \"10314263\", \"13795187\"]}");
	add("03594859", "{\"term\":\"jack\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"02392595\", \"02579206\", \"03594138\", \"03594280\", \"03594407\", \"03594500\", \"03594700\", \"03594859\", \"07770660\", \"10260997\", \"10314263\", \"13795187\"]}");
	add("03594978", "{\"term\":\"jacket\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"03595662\", \"07727216\", \"03143740\", \"03595493\", \"03594978\"]}");
	add("03595493", "{\"term\":\"jacket\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"03595662\", \"07727216\", \"03143740\", \"03595493\", \"03594978\"]}");
	add("03595662", "{\"term\":\"jacket\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"03595662\", \"07727216\", \"03143740\", \"03595493\", \"03594978\"]}");
	add("03595775", "{\"term\":\"jack-in-the-box\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03595775\"]}");
	add("03595919", "{\"term\":\"jacklight\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03595919\"]}");
	add("03596028", "{\"term\":\"jack-o\u0027-lantern\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03596028\", \"11479768\"]}");
	add("03596119", "{\"term\":\"jack plane\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03596119\"]}");
	add("03596215", "{\"term\":\"jackscrew\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03596215\"]}");
	add("03596215", "{\"term\":\"screw jack\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03596215\"]}");
	add("03596303", "{\"term\":\"jack ladder\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03596303\"]}");
	add("03596303", "{\"term\":\"jacob\u0027s ladder\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03596303\", \"12830386\"]}");
	add("03596303", "{\"term\":\"pilot ladder\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03596303\"]}");
	add("03596500", "{\"term\":\"jaconet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03596500\"]}");
	add("03596652", "{\"term\":\"jackstraw\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03596652\"]}");
	add("03596652", "{\"term\":\"spillikin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03596652\"]}");
	add("03596779", "{\"term\":\"jacquard\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03596779\", \"03596985\", \"11098193\"]}");
	add("03596779", "{\"term\":\"jacquard loom\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03596779\"]}");
	add("03596985", "{\"term\":\"jacquard\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03596779\", \"03596985\", \"11098193\"]}");
	add("03597088", "{\"term\":\"dag\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03597088\", \"13746460\"]}");
	add("03597088", "{\"term\":\"jag\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00750789\", \"03597088\", \"03597242\", \"09343732\"]}");
	add("03597242", "{\"term\":\"jag\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00750789\", \"03597088\", \"03597242\", \"09343732\"]}");
	add("03597432", "{\"term\":\"clink\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03597432\", \"07393823\"]}");
	add("03597432", "{\"term\":\"gaol\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03597432\"]}");
	add("03597432", "{\"term\":\"jail\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03597432\"]}");
	add("03597432", "{\"term\":\"jailhouse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03597432\"]}");
	add("03597432", "{\"term\":\"pokey\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03597432\"]}");
	add("03597432", "{\"term\":\"poky\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03597432\"]}");
	add("03597432", "{\"term\":\"slammer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03597432\", \"10628174\"]}");
	add("03597856", "{\"term\":\"jalousie\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03597856\", \"03698168\"]}");
	add("03597960", "{\"term\":\"jamb\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03597960\"]}");
	add("03598118", "{\"term\":\"jammer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03598118\"]}");
	add("03598221", "{\"term\":\"jampan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03598221\"]}");
	add("03598309", "{\"term\":\"jamjar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03598309\"]}");
	add("03598309", "{\"term\":\"jampot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03598309\"]}");
	add("03598409", "{\"term\":\"japan\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03598409\", \"03598549\", \"08941623\", \"08940154\"]}");
	add("03598549", "{\"term\":\"japan\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03598409\", \"03598549\", \"08941623\", \"08940154\"]}");
	add("03598713", "{\"term\":\"jar\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07353698\", \"13789962\", \"03598713\"]}");
	add("03599049", "{\"term\":\"jarvik artificial heart\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03599049\"]}");
	add("03599049", "{\"term\":\"jarvik heart\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03599049\"]}");
	add("03599197", "{\"term\":\"jaunting car\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03599197\"]}");
	add("03599197", "{\"term\":\"jaunty car\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03599197\"]}");
	add("03599335", "{\"term\":\"javelin\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03599335\", \"07485560\"]}");
	add("03599464", "{\"term\":\"jaw\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03599464\", \"05610915\", \"05553673\"]}");
	add("03599710", "{\"term\":\"jaws of life\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03599710\"]}");
	add("03599921", "{\"term\":\"blue jeans\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03599921\"]}");
	add("03599921", "{\"term\":\"denim\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03179855\", \"03599921\"]}");
	add("03599921", "{\"term\":\"jeans\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03599921\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }