package org.swtk.commons.dict.wordnet.index.byid.instance.p0.p8;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0847 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("08470119", "{\"term\":\"administrative law\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08470119\"]}");
	add("08470310", "{\"term\":\"canon law\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08470310\"]}");
	add("08470310", "{\"term\":\"ecclesiastical law\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08470310\"]}");
	add("08470475", "{\"term\":\"civil law\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06546650\", \"08470475\"]}");
	add("08470733", "{\"term\":\"case law\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06547026\", \"08470733\"]}");
	add("08470733", "{\"term\":\"common law\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08470733\", \"06547026\"]}");
	add("08470733", "{\"term\":\"precedent\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"06612635\", \"08470733\", \"06547026\", \"05829846\"]}");
	add("08471014", "{\"term\":\"international law\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08471014\"]}");
	add("08471014", "{\"term\":\"law of nations\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08471014\"]}");
	add("08471202", "{\"term\":\"admiralty law\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08471202\"]}");
	add("08471202", "{\"term\":\"marine law\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08471202\"]}");
	add("08471202", "{\"term\":\"maritime law\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08471202\"]}");
	add("08471456", "{\"term\":\"law of the land\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08471456\"]}");
	add("08471829", "{\"term\":\"martial law\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08471829\"]}");
	add("08472048", "{\"term\":\"commercial law\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08472048\"]}");
	add("08472048", "{\"term\":\"law merchant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08472048\"]}");
	add("08472048", "{\"term\":\"mercantile law\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08472048\"]}");
	add("08472282", "{\"term\":\"military law\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08472282\"]}");
	add("08472531", "{\"term\":\"law of moses\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08472531\"]}");
	add("08472531", "{\"term\":\"mosaic law\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08472531\"]}");
	add("08472840", "{\"term\":\"islamic law\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08472840\"]}");
	add("08472840", "{\"term\":\"sharia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08472840\"]}");
	add("08472840", "{\"term\":\"sharia law\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08472840\"]}");
	add("08472840", "{\"term\":\"shariah\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08472840\"]}");
	add("08472840", "{\"term\":\"shariah law\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08472840\"]}");
	add("08473189", "{\"term\":\"hudood\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08473189\"]}");
	add("08473189", "{\"term\":\"hudud\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08473189\"]}");
	add("08473358", "{\"term\":\"statutory law\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08473358\"]}");
	add("08473485", "{\"term\":\"securities law\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08473485\"]}");
	add("08473630", "{\"term\":\"tax law\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08473630\"]}");
	add("08473738", "{\"term\":\"bureaucracy\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08026391\", \"08068317\", \"08473738\"]}");
	add("08473738", "{\"term\":\"bureaucratism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08473738\"]}");
	add("08473899", "{\"term\":\"menagerie\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03750637\", \"08473899\"]}");
	add("08474004", "{\"term\":\"order\", \"synsetCount\":15, \"upperType\":\"NOUN\", \"ids\":[\"01011813\", \"04706004\", \"07294392\", \"08123900\", \"08164801\", \"13974030\", \"06665623\", \"08244135\", \"06541210\", \"06551761\", \"14520294\", \"08474004\", \"13991994\", \"05098520\", \"07183274\"]}");
	add("08474004", "{\"term\":\"ordering\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01011813\", \"08474004\"]}");
	add("08474004", "{\"term\":\"ordination\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00166119\", \"08474004\", \"14455593\"]}");
	add("08474380", "{\"term\":\"genetic code\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08474380\"]}");
	add("08474554", "{\"term\":\"genome\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08474554\"]}");
	add("08474800", "{\"term\":\"triplet code\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08474800\"]}");
	add("08474987", "{\"term\":\"series\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"05871305\", \"08475515\", \"13814122\", \"07480588\", \"06606007\", \"06633954\", \"08474987\"]}");
	add("08475515", "{\"term\":\"series\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"05871305\", \"08475515\", \"13814122\", \"07480588\", \"06606007\", \"06633954\", \"08474987\"]}");
	add("08475844", "{\"term\":\"nexus\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08475844\", \"13814904\"]}");
	add("08475923", "{\"term\":\"patterned advance\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08475923\"]}");
	add("08475923", "{\"term\":\"progression\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00282894\", \"07459865\", \"08475923\"]}");
	add("08476098", "{\"term\":\"blizzard\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08476098\", \"11529988\"]}");
	add("08476098", "{\"term\":\"rash\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08476098\", \"14345380\"]}");
	add("08476263", "{\"term\":\"sequence\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"07356983\", \"01012400\", \"04180233\", \"05051973\", \"08476263\"]}");
	add("08476659", "{\"term\":\"string\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"03003364\", \"04345456\", \"09472431\", \"14891516\", \"03240263\", \"07026665\", \"08476659\", \"04345281\", \"02883788\", \"04345112\"]}");
	add("08476659", "{\"term\":\"train\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"03436655\", \"04475711\", \"07309535\", \"08444586\", \"08476659\", \"04475240\"]}");
	add("08476919", "{\"term\":\"succession\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00083574\", \"13584065\", \"01012400\", \"08476919\", \"05051973\"]}");
	add("08477163", "{\"term\":\"cascade\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07378268\", \"08477163\", \"09259863\"]}");
	add("08477406", "{\"term\":\"parade\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00522141\", \"08477406\", \"08445442\"]}");
	add("08477596", "{\"term\":\"run\", \"synsetCount\":16, \"upperType\":\"NOUN\", \"ids\":[\"00309837\", \"05052992\", \"07422377\", \"07457610\", \"07488069\", \"09438816\", \"13782269\", \"14019420\", \"15286931\", \"00294760\", \"00309697\", \"00559920\", \"08477596\", \"07475061\", \"00792739\", \"00190414\"]}");
	add("08477596", "{\"term\":\"streak\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"07428229\", \"04690493\", \"04927612\", \"08477596\"]}");
	add("08477780", "{\"term\":\"losing streak\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08477780\"]}");
	add("08477858", "{\"term\":\"winning streak\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08477858\"]}");
	add("08477935", "{\"term\":\"arithmetic progression\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08477935\"]}");
	add("08478183", "{\"term\":\"geometric progression\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08478183\"]}");
	add("08478435", "{\"term\":\"harmonic progression\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08478435\"]}");
	add("08478606", "{\"term\":\"current\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08478606\", \"07421365\", \"11463628\"]}");
	add("08478606", "{\"term\":\"flow\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"13534950\", \"08478606\", \"14029377\", \"13503533\", \"00330053\", \"15302716\", \"07420493\"]}");
	add("08478606", "{\"term\":\"stream\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"07421365\", \"14029377\", \"00330053\", \"08478606\", \"09471510\"]}");
	add("08478886", "{\"term\":\"wave train\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08478886\"]}");
	add("08478992", "{\"term\":\"panoply\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08478992\"]}");
	add("08479077", "{\"term\":\"bank\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"00170126\", \"02790795\", \"04146942\", \"09236735\", \"13377435\", \"13389491\", \"08479077\", \"09236341\", \"08437235\", \"09236472\"]}");
	add("08479216", "{\"term\":\"stockpile\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08479216\", \"13389225\"]}");
	add("08479331", "{\"term\":\"data\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08479331\"]}");
	add("08479331", "{\"term\":\"information\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"05098731\", \"08479331\", \"07252221\", \"05824413\", \"06646883\"]}");
	add("08479545", "{\"term\":\"accounting data\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08479545\"]}");
	add("08479732", "{\"term\":\"metadata\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08479732\"]}");
	add("08479869", "{\"term\":\"raw data\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08479869\"]}");
	add("08479975", "{\"term\":\"ana\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08479975\", \"09530888\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }