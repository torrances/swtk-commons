package org.swtk.commons.dict.wordnet.index.name.instance.h.o.o.k;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceHOOK {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"hook\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"00112178\", \"00136619\", \"00573322\", \"03537522\", \"03537852\", \"05703197\", \"13892186\", \"03538099\"]}");
	add("{\"term\":\"hookah\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03538194\"]}");
	add("{\"term\":\"hooke\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11077920\"]}");
	add("{\"term\":\"hooker\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"10204124\", \"10204302\", \"10682754\", \"11078330\", \"11078431\"]}");
	add("{\"term\":\"hooking\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00573322\"]}");
	add("{\"term\":\"hooknose\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05607256\"]}");
	add("{\"term\":\"hooks\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05572825\"]}");
	add("{\"term\":\"hookup\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03538666\", \"03538834\"]}");
	add("{\"term\":\"hookworm\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"14477142\", \"01935792\"]}");
	add("{\"term\":\"hooky\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01237177\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }