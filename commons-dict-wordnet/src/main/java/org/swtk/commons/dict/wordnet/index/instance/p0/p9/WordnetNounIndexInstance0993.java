package org.swtk.commons.dict.wordnet.index.instance.p0.p9;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexInstance0993 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("09930014", "{\"term\":\"chartered accountant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09930014\"]}");
	add("09930177", "{\"term\":\"charter member\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09930177\"]}");
	add("09930298", "{\"term\":\"chartist\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09930298\", \"09930509\"]}");
	add("09930298", "{\"term\":\"technical analyst\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09930298\"]}");
	add("09930509", "{\"term\":\"chartist\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09930298\", \"09930509\"]}");
	add("09930684", "{\"term\":\"char\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02541037\", \"09930684\", \"14709333\"]}");
	add("09930684", "{\"term\":\"charwoman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09930684\"]}");
	add("09930684", "{\"term\":\"cleaning lady\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09930684\"]}");
	add("09930684", "{\"term\":\"cleaning woman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09930684\"]}");
	add("09930684", "{\"term\":\"woman\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"08494645\", \"09930684\", \"10808492\", \"10807146\"]}");
	add("09930923", "{\"term\":\"chatelaine\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03014672\", \"09930923\"]}");
	add("09931028", "{\"term\":\"babbler\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01569286\", \"09931028\"]}");
	add("09931028", "{\"term\":\"chatterbox\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09931028\", \"12083282\"]}");
	add("09931028", "{\"term\":\"chatterer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01553402\", \"09931028\"]}");
	add("09931028", "{\"term\":\"magpie\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"09931028\", \"10300973\", \"01584861\"]}");
	add("09931028", "{\"term\":\"prater\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09931028\"]}");
	add("09931028", "{\"term\":\"spouter\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02075605\", \"04294489\", \"09931028\"]}");
	add("09931307", "{\"term\":\"chauvinist\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09931307\", \"09931533\"]}");
	add("09931307", "{\"term\":\"flag-waver\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09931307\"]}");
	add("09931307", "{\"term\":\"hundred-percenter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09931307\"]}");
	add("09931307", "{\"term\":\"jingo\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09931307\"]}");
	add("09931307", "{\"term\":\"jingoist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09931307\"]}");
	add("09931307", "{\"term\":\"patrioteer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09931307\"]}");
	add("09931533", "{\"term\":\"chauvinist\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09931307\", \"09931533\"]}");
	add("09931701", "{\"term\":\"antifeminist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09931701\"]}");
	add("09931889", "{\"term\":\"male chauvinist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09931889\"]}");
	add("09931889", "{\"term\":\"sexist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09931889\"]}");
	add("09932056", "{\"term\":\"cheapjack\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09932056\"]}");
	add("09932139", "{\"term\":\"cheapskate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09932139\"]}");
	add("09932139", "{\"term\":\"tightwad\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09932139\"]}");
	add("09932223", "{\"term\":\"chebab\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09932223\"]}");
	add("09932365", "{\"term\":\"chechen\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06991082\", \"09932365\"]}");
	add("09932453", "{\"term\":\"checker\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03015009\", \"09932453\", \"09932568\"]}");
	add("09932568", "{\"term\":\"checker\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03015009\", \"09932453\", \"09932568\"]}");
	add("09932698", "{\"term\":\"check girl\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09932698\"]}");
	add("09932698", "{\"term\":\"hatcheck girl\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09932698\"]}");
	add("09932787", "{\"term\":\"cheerer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09932787\"]}");
	add("09932913", "{\"term\":\"cheerleader\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09932913\", \"09933051\"]}");
	add("09933051", "{\"term\":\"cheerleader\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09932913\", \"09933051\"]}");
	add("09933199", "{\"term\":\"cheesemonger\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09933199\"]}");
	add("09933282", "{\"term\":\"chemist\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10441215\", \"09933282\"]}");
	add("09934892", "{\"term\":\"cheops\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09934892\"]}");
	add("09934892", "{\"term\":\"khufu\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09934892\"]}");
	add("09935035", "{\"term\":\"cherub\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09562841\", \"09935035\"]}");
	add("09935109", "{\"term\":\"chess master\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09935109\"]}");
	add("09935292", "{\"term\":\"chess player\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09935292\"]}");
	add("09935422", "{\"term\":\"chewer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09935422\"]}");
	add("09935567", "{\"term\":\"chichi\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04820943\", \"09935567\"]}");
	add("09935667", "{\"term\":\"chief constable\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09935667\"]}");
	add("09935806", "{\"term\":\"ceo\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09935806\"]}");
	add("09935806", "{\"term\":\"chief executive officer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09935806\"]}");
	add("09935806", "{\"term\":\"chief operating officer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09935806\"]}");
	add("09936059", "{\"term\":\"cfo\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09936059\"]}");
	add("09936059", "{\"term\":\"chief financial officer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09936059\"]}");
	add("09936246", "{\"term\":\"chief justice\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09936246\"]}");
	add("09936672", "{\"term\":\"chief of staff\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09936672\"]}");
	add("09936803", "{\"term\":\"chief petty officer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09936803\"]}");
	add("09936939", "{\"term\":\"chief secretary\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09936939\"]}");
	add("09937051", "{\"term\":\"child\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"09938220\", \"09938012\", \"09937706\", \"09937051\"]}");
	add("09937051", "{\"term\":\"fry\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"09937051\", \"11004122\", \"11004253\"]}");
	add("09937051", "{\"term\":\"kid\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"02419466\", \"09937706\", \"11133479\", \"14787025\", \"09937051\"]}");
	add("09937051", "{\"term\":\"minor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09937051\"]}");
	add("09937051", "{\"term\":\"nestling\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09937051\", \"01506985\"]}");
	add("09937051", "{\"term\":\"nipper\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02159184\", \"09937051\"]}");
	add("09937051", "{\"term\":\"shaver\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04192847\", \"09937051\", \"10606311\"]}");
	add("09937051", "{\"term\":\"small fry\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09937051\", \"10455018\"]}");
	add("09937051", "{\"term\":\"tiddler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09937051\"]}");
	add("09937051", "{\"term\":\"tike\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09937051\", \"10430560\"]}");
	add("09937051", "{\"term\":\"tyke\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"09937051\", \"10430560\", \"10754548\"]}");
	add("09937051", "{\"term\":\"youngster\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09937051\"]}");
	add("09937706", "{\"term\":\"child\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"09938220\", \"09938012\", \"09937706\", \"09937051\"]}");
	add("09937706", "{\"term\":\"kid\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"02419466\", \"09937706\", \"11133479\", \"14787025\", \"09937051\"]}");
	add("09938012", "{\"term\":\"baby\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00798428\", \"01324712\", \"09847462\", \"09938012\", \"09846765\", \"09846929\"]}");
	add("09938012", "{\"term\":\"child\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"09938220\", \"09938012\", \"09937706\", \"09937051\"]}");
	add("09938220", "{\"term\":\"child\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"09938220\", \"09938012\", \"09937706\", \"09937051\"]}");
	add("09938325", "{\"term\":\"child prodigy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09938325\"]}");
	add("09938325", "{\"term\":\"infant prodigy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09938325\"]}");
	add("09938325", "{\"term\":\"wonder child\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09938325\"]}");
	add("09938519", "{\"term\":\"chimneysweep\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09938519\"]}");
	add("09938519", "{\"term\":\"chimneysweeper\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09938519\"]}");
	add("09938519", "{\"term\":\"sweep\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00345975\", \"00560592\", \"04378042\", \"07489785\", \"09938519\", \"05135224\"]}");
	add("09938658", "{\"term\":\"chiropractor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09938658\"]}");
	add("09938755", "{\"term\":\"chiropodist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09938755\"]}");
	add("09938755", "{\"term\":\"foot doctor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09938755\"]}");
	add("09938755", "{\"term\":\"podiatrist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09938755\"]}");
	add("09938909", "{\"term\":\"chit\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06529933\", \"09938909\"]}");
	add("09939148", "{\"term\":\"choirboy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09939148\"]}");
	add("09939229", "{\"term\":\"cantor\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09911316\", \"09939229\"]}");
	add("09939229", "{\"term\":\"choirmaster\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09939229\"]}");
	add("09939229", "{\"term\":\"precentor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09939229\"]}");
	add("09939357", "{\"term\":\"choker\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03028429\", \"03028565\", \"09939357\", \"10140903\"]}");
	add("09939564", "{\"term\":\"choragus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09939564\"]}");
	add("09939741", "{\"term\":\"choreographer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09939741\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }