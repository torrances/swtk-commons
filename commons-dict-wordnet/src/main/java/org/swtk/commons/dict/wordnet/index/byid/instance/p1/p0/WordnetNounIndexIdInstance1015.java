package org.swtk.commons.dict.wordnet.index.byid.instance.p1.p0;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance1015 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("10150104", "{\"term\":\"girl friday\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10150104\"]}");
	add("10150206", "{\"term\":\"girl\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"10149967\", \"10150206\", \"10012375\", \"10104064\", \"10149362\"]}");
	add("10150206", "{\"term\":\"girlfriend\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10150206\", \"10150397\"]}");
	add("10150206", "{\"term\":\"lady friend\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10150206\"]}");
	add("10150397", "{\"term\":\"girlfriend\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10150206\", \"10150397\"]}");
	add("10150536", "{\"term\":\"girl scout\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10150536\"]}");
	add("10150671", "{\"term\":\"girl wonder\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10150671\"]}");
	add("10150788", "{\"term\":\"girondin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10150788\"]}");
	add("10150788", "{\"term\":\"girondist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10150788\"]}");
	add("10151035", "{\"term\":\"gitana\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10151035\"]}");
	add("10151110", "{\"term\":\"gitano\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10151110\"]}");
	add("10151183", "{\"term\":\"giver\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10045455\", \"10151183\"]}");
	add("10151335", "{\"term\":\"gladiator\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10496662\", \"10151335\"]}");
	add("10151555", "{\"term\":\"glassblower\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10151555\"]}");
	add("10151665", "{\"term\":\"glass-cutter\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10151665\", \"10151825\"]}");
	add("10151665", "{\"term\":\"glass cutter\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03443704\", \"10151665\", \"10151825\"]}");
	add("10151665", "{\"term\":\"glassworker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10151665\"]}");
	add("10151665", "{\"term\":\"glazer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10151665\"]}");
	add("10151665", "{\"term\":\"glazier\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10151665\"]}");
	add("10151825", "{\"term\":\"glass-cutter\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10151665\", \"10151825\"]}");
	add("10151825", "{\"term\":\"glass cutter\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03443704\", \"10151665\", \"10151825\"]}");
	add("10151942", "{\"term\":\"glassmaker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10151942\"]}");
	add("10152022", "{\"term\":\"gleaner\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10152022\", \"10152161\"]}");
	add("10152161", "{\"term\":\"gleaner\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10152022\", \"10152161\"]}");
	add("10152295", "{\"term\":\"globetrotter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10152295\"]}");
	add("10152295", "{\"term\":\"world traveler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10152295\"]}");
	add("10152407", "{\"term\":\"glossarist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10152407\"]}");
	add("10152508", "{\"term\":\"glutton\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02451981\", \"10152508\"]}");
	add("10152508", "{\"term\":\"gourmand\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10152508\"]}");
	add("10152508", "{\"term\":\"gourmandizer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10152508\"]}");
	add("10152508", "{\"term\":\"trencherman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10152508\"]}");
	add("10152730", "{\"term\":\"gnostic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10152730\"]}");
	add("10152827", "{\"term\":\"god\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03565341\", \"10152827\", \"09528550\", \"09559169\"]}");
	add("10152978", "{\"term\":\"ganef\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10152978\"]}");
	add("10152978", "{\"term\":\"ganof\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10152978\"]}");
	add("10152978", "{\"term\":\"gonif\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10152978\"]}");
	add("10152978", "{\"term\":\"goniff\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10152978\"]}");
	add("10153164", "{\"term\":\"government agent\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10153164\"]}");
	add("10153370", "{\"term\":\"fbi agent\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10153370\"]}");
	add("10153370", "{\"term\":\"g-man\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10153370\"]}");
	add("10153370", "{\"term\":\"government man\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10153370\"]}");
	add("10153521", "{\"term\":\"goalie\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00465105\", \"10153521\"]}");
	add("10153521", "{\"term\":\"goalkeeper\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00465105\", \"10153521\"]}");
	add("10153521", "{\"term\":\"goaltender\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00465105\", \"10153521\"]}");
	add("10153521", "{\"term\":\"netkeeper\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00465105\", \"10153521\"]}");
	add("10153521", "{\"term\":\"netminder\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10153521\"]}");
	add("10153698", "{\"term\":\"goat herder\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10153698\"]}");
	add("10153698", "{\"term\":\"goatherd\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10153698\"]}");
	add("10153802", "{\"term\":\"gobbler\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01796985\", \"10153802\"]}");
	add("10153916", "{\"term\":\"godchild\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10153916\"]}");
	add("10154072", "{\"term\":\"goddaughter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10154072\"]}");
	add("10154147", "{\"term\":\"godfather\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10154147\", \"10154280\"]}");
	add("10154280", "{\"term\":\"godfather\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10154147\", \"10154280\"]}");
	add("10154390", "{\"term\":\"godmother\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10154390\"]}");
	add("10154502", "{\"term\":\"godparent\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10154502\"]}");
	add("10154649", "{\"term\":\"godson\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10154649\"]}");
	add("10154717", "{\"term\":\"gofer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10154717\"]}");
	add("10154817", "{\"term\":\"goffer\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03448593\", \"03448699\", \"10154817\"]}");
	add("10154817", "{\"term\":\"gopher\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"01673766\", \"02356513\", \"02360743\", \"09763123\", \"10154817\"]}");
	add("10154931", "{\"term\":\"gog and magog\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10154931\"]}");
	add("10155229", "{\"term\":\"ball of fire\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10155229\", \"10481995\"]}");
	add("10155229", "{\"term\":\"go-getter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10155229\"]}");
	add("10155229", "{\"term\":\"whiz-kid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10155229\"]}");
	add("10155229", "{\"term\":\"whizz-kid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10155229\"]}");
	add("10155362", "{\"term\":\"gold-beater\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10155362\"]}");
	add("10155362", "{\"term\":\"goldbeater\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10155362\"]}");
	add("10155473", "{\"term\":\"goldbrick\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00755316\", \"03449201\", \"10155473\", \"10155666\"]}");
	add("10155473", "{\"term\":\"good-for-naught\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10155473\"]}");
	add("10155473", "{\"term\":\"good-for-nothing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10155473\"]}");
	add("10155473", "{\"term\":\"goof-off\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10155473\"]}");
	add("10155473", "{\"term\":\"ne\u0027er-do-well\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10155473\"]}");
	add("10155473", "{\"term\":\"no-account\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10155473\"]}");
	add("10155666", "{\"term\":\"goldbrick\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00755316\", \"03449201\", \"10155473\", \"10155666\"]}");
	add("10155803", "{\"term\":\"gold digger\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10155803\", \"10155983\"]}");
	add("10155983", "{\"term\":\"gold digger\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10155803\", \"10155983\"]}");
	add("10155983", "{\"term\":\"gold miner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10155983\"]}");
	add("10155983", "{\"term\":\"gold panner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10155983\"]}");
	add("10156135", "{\"term\":\"gold-worker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10156135\"]}");
	add("10156135", "{\"term\":\"goldsmith\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11025425\", \"10156135\"]}");
	add("10156135", "{\"term\":\"goldworker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10156135\"]}");
	add("10156295", "{\"term\":\"golem\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02764397\", \"10156295\"]}");
	add("10156479", "{\"term\":\"golf player\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10156479\"]}");
	add("10156479", "{\"term\":\"golfer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10156479\"]}");
	add("10156479", "{\"term\":\"linksman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10156479\"]}");
	add("10156887", "{\"term\":\"golf pro\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10156887\"]}");
	add("10156887", "{\"term\":\"professional golfer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10156887\"]}");
	add("10157018", "{\"term\":\"golf widow\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10157018\"]}");
	add("10157152", "{\"term\":\"goliard\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10157152\"]}");
	add("10157345", "{\"term\":\"gondolier\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10157345\"]}");
	add("10157345", "{\"term\":\"gondoliere\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10157345\"]}");
	add("10157456", "{\"term\":\"goner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10157456\"]}");
	add("10157456", "{\"term\":\"toast\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"07900388\", \"10157456\", \"10733016\", \"07702618\"]}");
	add("10157634", "{\"term\":\"gongorist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10157634\"]}");
	add("10157762", "{\"term\":\"good egg\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10157762\"]}");
	add("10157889", "{\"term\":\"good guy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10157889\"]}");
	add("10157992", "{\"term\":\"good ol\u0027 boy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10157992\"]}");
	add("10157992", "{\"term\":\"good old boy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10157992\"]}");
	add("10157992", "{\"term\":\"good ole boy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10157992\"]}");
	add("10158287", "{\"term\":\"good person\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10158287\"]}");
	add("10158597", "{\"term\":\"good samaritan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10158597\"]}");
	add("10158726", "{\"term\":\"goody-goody\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10158726\"]}");
	add("10158867", "{\"term\":\"gossip\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10158867\", \"07237830\", \"07149788\"]}");
	add("10158867", "{\"term\":\"gossiper\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10158867\"]}");
	add("10158867", "{\"term\":\"gossipmonger\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10158867\"]}");
	add("10158867", "{\"term\":\"newsmonger\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10158867\"]}");
	add("10158867", "{\"term\":\"rumormonger\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10158867\"]}");
	add("10158867", "{\"term\":\"rumourmonger\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10158867\"]}");
	add("10159171", "{\"term\":\"gossip columnist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10159171\"]}");
	add("10159294", "{\"term\":\"goth\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10159294\", \"10430560\"]}");
	add("10159464", "{\"term\":\"gothic romancer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10159464\"]}");
	add("10159571", "{\"term\":\"gouger\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09974494\", \"10159571\"]}");
	add("10159689", "{\"term\":\"governess\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10159689\"]}");
	add("10159834", "{\"term\":\"governor\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03454962\", \"10159834\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }