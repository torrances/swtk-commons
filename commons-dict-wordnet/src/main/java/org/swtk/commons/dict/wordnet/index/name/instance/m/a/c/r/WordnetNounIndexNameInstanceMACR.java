package org.swtk.commons.dict.wordnet.index.name.instance.m.a.c.r;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceMACR {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"macrame\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03709269\"]}");
	add("{\"term\":\"macrencephaly\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14175974\"]}");
	add("{\"term\":\"macro\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06599062\"]}");
	add("{\"term\":\"macrobiotics\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06051843\"]}");
	add("{\"term\":\"macrocephalon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01804674\"]}");
	add("{\"term\":\"macrocephaly\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14532576\"]}");
	add("{\"term\":\"macrocheira\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01984852\"]}");
	add("{\"term\":\"macroclemys\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01669072\"]}");
	add("{\"term\":\"macrocosm\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09489410\"]}");
	add("{\"term\":\"macrocyte\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05457237\"]}");
	add("{\"term\":\"macrocytosis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14231193\"]}");
	add("{\"term\":\"macrodactylus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02177522\"]}");
	add("{\"term\":\"macrodantin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03831983\"]}");
	add("{\"term\":\"macroeconomics\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06160403\"]}");
	add("{\"term\":\"macroeconomist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10299089\"]}");
	add("{\"term\":\"macroevolution\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13531466\"]}");
	add("{\"term\":\"macroglia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05475271\"]}");
	add("{\"term\":\"macroglossia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14182941\"]}");
	add("{\"term\":\"macromolecule\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14969026\"]}");
	add("{\"term\":\"macron\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06836320\"]}");
	add("{\"term\":\"macronectes\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02062376\"]}");
	add("{\"term\":\"macrophage\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05458316\"]}");
	add("{\"term\":\"macropodidae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01879484\"]}");
	add("{\"term\":\"macropus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01880048\"]}");
	add("{\"term\":\"macrorhamphosidae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01459580\"]}");
	add("{\"term\":\"macrosporangium\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11707901\"]}");
	add("{\"term\":\"macrospore\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11708668\"]}");
	add("{\"term\":\"macrothelypteris\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13249916\"]}");
	add("{\"term\":\"macrotis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01879176\"]}");
	add("{\"term\":\"macrotus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02145059\"]}");
	add("{\"term\":\"macrotyloma\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12568163\"]}");
	add("{\"term\":\"macrouridae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02528174\"]}");
	add("{\"term\":\"macrozamia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11624286\"]}");
	add("{\"term\":\"macrozoarces\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02620586\"]}");
	add("{\"term\":\"macruridae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02528174\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public boolean has(final String TERM) { 		return map.containsKey(TERM); 	} }