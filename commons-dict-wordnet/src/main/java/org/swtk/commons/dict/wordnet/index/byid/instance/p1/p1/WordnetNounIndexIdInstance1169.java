package org.swtk.commons.dict.wordnet.index.byid.instance.p1.p1;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance1169 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("11690237", "{\"term\":\"floret\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11690237\"]}");
	add("11690237", "{\"term\":\"floweret\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11690237\"]}");
	add("11690372", "{\"term\":\"flower\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"15320288\", \"11689786\", \"11690372\"]}");
	add("11692720", "{\"term\":\"bloomer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00075610\", \"11692720\"]}");
	add("11692851", "{\"term\":\"wild flower\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11692851\"]}");
	add("11692851", "{\"term\":\"wildflower\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11692851\"]}");
	add("11694470", "{\"term\":\"apetalous flower\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11694470\"]}");
	add("11694556", "{\"term\":\"flower head\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11694556\"]}");
	add("11694783", "{\"term\":\"inflorescence\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11694783\", \"13460743\"]}");
	add("11695054", "{\"term\":\"ray floret\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11695054\"]}");
	add("11695054", "{\"term\":\"ray flower\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11695054\"]}");
	add("11695249", "{\"term\":\"ament\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11695249\"]}");
	add("11695249", "{\"term\":\"catkin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11695249\"]}");
	add("11695365", "{\"term\":\"bud\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13185984\", \"11695365\"]}");
	add("11695476", "{\"term\":\"rosebud\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10558717\", \"11695476\"]}");
	add("11695547", "{\"term\":\"stamen\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11695547\"]}");
	add("11695696", "{\"term\":\"anther\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11695696\"]}");
	add("11695855", "{\"term\":\"gynostegium\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11695855\"]}");
	add("11695988", "{\"term\":\"pollen\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11695988\"]}");
	add("11696189", "{\"term\":\"pollinium\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11696189\"]}");
	add("11696293", "{\"term\":\"reproductive structure\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11696293\"]}");
	add("11696951", "{\"term\":\"pistil\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11696951\"]}");
	add("11697194", "{\"term\":\"gynobase\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11697194\"]}");
	add("11697301", "{\"term\":\"gynophore\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11697301\"]}");
	add("11697414", "{\"term\":\"simple pistil\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11697414\"]}");
	add("11697496", "{\"term\":\"compound pistil\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11697496\"]}");
	add("11697595", "{\"term\":\"pistillode\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11697595\"]}");
	add("11697710", "{\"term\":\"style\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"01903854\", \"04353589\", \"04820120\", \"06802072\", \"11697710\", \"05758160\", \"05852632\", \"07080699\", \"04936080\"]}");
	add("11697936", "{\"term\":\"stylopodium\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11697936\"]}");
	add("11698054", "{\"term\":\"stigma\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04703433\", \"05258032\", \"06807523\", \"11698054\"]}");
	add("11698194", "{\"term\":\"carpel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11698194\"]}");
	add("11698353", "{\"term\":\"carpophore\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11698353\"]}");
	add("11698461", "{\"term\":\"corn stalk\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11698461\"]}");
	add("11698461", "{\"term\":\"cornstalk\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11698461\"]}");
	add("11698574", "{\"term\":\"filament\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03341520\", \"05236798\", \"11698574\", \"14892009\"]}");
	add("11698650", "{\"term\":\"funicle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11698650\"]}");
	add("11698650", "{\"term\":\"funiculus\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05272255\", \"11698650\"]}");
	add("11698750", "{\"term\":\"petiolule\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11698750\"]}");
	add("11698828", "{\"term\":\"mericarp\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11698828\"]}");
	add("11698944", "{\"term\":\"hilum\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11698944\", \"05232048\"]}");
	add("11699086", "{\"term\":\"ovary\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05522938\", \"11699086\"]}");
	add("11699219", "{\"term\":\"ovule\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05465876\", \"11699219\"]}");
	add("11699536", "{\"term\":\"chalaza\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01463604\", \"11699536\"]}");
	add("11699701", "{\"term\":\"nucellus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11699701\"]}");
	add("11699829", "{\"term\":\"micropyle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11699829\"]}");
	add("11699979", "{\"term\":\"amphitropous ovule\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11699979\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }