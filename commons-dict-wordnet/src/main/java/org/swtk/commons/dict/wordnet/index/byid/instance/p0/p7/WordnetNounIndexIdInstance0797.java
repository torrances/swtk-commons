package org.swtk.commons.dict.wordnet.index.byid.instance.p0.p7;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0797 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("07970085", "{\"term\":\"art collection\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07970085\"]}");
	add("07970189", "{\"term\":\"backlog\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13389225\", \"15125512\", \"07970189\"]}");
	add("07970413", "{\"term\":\"battery\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00769692\", \"00989949\", \"02813917\", \"08094013\", \"07970413\", \"02813606\", \"08406303\"]}");
	add("07970600", "{\"term\":\"block\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"00563435\", \"02759606\", \"02856708\", \"03293136\", \"04026692\", \"05653044\", \"13647935\", \"02856275\", \"07970600\", \"13937623\", \"08659720\", \"02855782\"]}");
	add("07970797", "{\"term\":\"book\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"02873887\", \"06406508\", \"06443410\", \"06473279\", \"07970797\", \"07971027\", \"13425421\", \"07023062\", \"06649049\", \"02873453\", \"06422547\"]}");
	add("07970797", "{\"term\":\"rule book\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07970797\"]}");
	add("07971027", "{\"term\":\"book\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"02873887\", \"06406508\", \"06443410\", \"06473279\", \"07970797\", \"07971027\", \"13425421\", \"07023062\", \"06649049\", \"02873453\", \"06422547\"]}");
	add("07971162", "{\"term\":\"bottle collection\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00950858\", \"01017493\", \"07971162\"]}");
	add("07971317", "{\"term\":\"bunch\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07971317\", \"08290764\", \"07976557\"]}");
	add("07971317", "{\"term\":\"caboodle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07971317\"]}");
	add("07971317", "{\"term\":\"lot\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"10293366\", \"07971317\", \"03238126\", \"14496806\", \"08257090\", \"08692708\", \"13796604\"]}");
	add("07971449", "{\"term\":\"coin collection\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01017938\", \"07971449\"]}");
	add("07971532", "{\"term\":\"collage\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07971532\", \"03071916\"]}");
	add("07971643", "{\"term\":\"content\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"04354303\", \"14436286\", \"05817200\", \"13801586\", \"13838733\", \"06611268\", \"07971643\"]}");
	add("07971643", "{\"term\":\"contents\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06501650\", \"07971643\"]}");
	add("07971894", "{\"term\":\"ensemble\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"03294896\", \"07971894\", \"08206019\", \"08254969\", \"08205165\"]}");
	add("07971894", "{\"term\":\"tout ensemble\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04684187\", \"07971894\"]}");
	add("07972069", "{\"term\":\"corpus\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"05228819\", \"07972069\", \"13376883\"]}");
	add("07972180", "{\"term\":\"crop\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"01976696\", \"03139147\", \"03139246\", \"07972180\", \"11550963\", \"13106624\"]}");
	add("07972340", "{\"term\":\"tenantry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07972340\"]}");
	add("07972455", "{\"term\":\"loan collection\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07972455\"]}");
	add("07972575", "{\"term\":\"findings\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07972575\"]}");
	add("07972726", "{\"term\":\"flagging\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03360487\", \"07972726\"]}");
	add("07972864", "{\"term\":\"flinders\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07972864\", \"10993331\"]}");
	add("07973040", "{\"term\":\"pack\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"03876350\", \"03876500\", \"03876658\", \"08011383\", \"08257554\", \"08260983\", \"03876224\", \"07973040\", \"13797293\"]}");
	add("07973166", "{\"term\":\"disc pack\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07973166\"]}");
	add("07973166", "{\"term\":\"disk pack\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07973166\"]}");
	add("07973335", "{\"term\":\"deck\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03172773\", \"07973335\", \"03172644\", \"03172332\"]}");
	add("07973335", "{\"term\":\"deck of cards\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07973335\"]}");
	add("07973335", "{\"term\":\"pack of cards\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07973335\"]}");
	add("07973501", "{\"term\":\"deal\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"01086561\", \"01087261\", \"07307886\", \"07973501\", \"15124824\", \"15127189\", \"13796604\", \"06783960\", \"01112179\"]}");
	add("07973501", "{\"term\":\"hand\", \"synsetCount\":14, \"upperType\":\"NOUN\", \"ids\":[\"01210950\", \"02442881\", \"06704983\", \"09894819\", \"10178099\", \"13675711\", \"03487606\", \"05861538\", \"07973501\", \"08667732\", \"05645810\", \"06415036\", \"10196310\", \"05572223\"]}");
	add("07973807", "{\"term\":\"long suit\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05166608\", \"07973807\"]}");
	add("07973941", "{\"term\":\"bridge hand\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07973941\"]}");
	add("07974070", "{\"term\":\"chicane\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00754297\", \"03019863\", \"07974070\"]}");
	add("07974160", "{\"term\":\"strong suit\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05166608\", \"07974160\"]}");
	add("07974269", "{\"term\":\"poker hand\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07974269\"]}");
	add("07974469", "{\"term\":\"royal flush\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07974469\"]}");
	add("07974600", "{\"term\":\"straight flush\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07974600\"]}");
	add("07974713", "{\"term\":\"full house\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07974713\"]}");
	add("07974810", "{\"term\":\"flush\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00119088\", \"07454170\", \"07543858\", \"07974810\", \"14359574\", \"14074353\", \"15320288\"]}");
	add("07974908", "{\"term\":\"straight\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04338264\", \"07974908\", \"10193566\"]}");
	add("07975021", "{\"term\":\"pair\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"07975021\", \"07993383\", \"13765745\", \"08001665\"]}");
	add("07975115", "{\"term\":\"herbarium\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07975115\"]}");
	add("07975256", "{\"term\":\"stamp collection\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01018362\", \"07975256\"]}");
	add("07975341", "{\"term\":\"statuary\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07975341\"]}");
	add("07975434", "{\"term\":\"elgin marbles\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07975434\"]}");
	add("07975630", "{\"term\":\"sum\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"08015154\", \"04360881\", \"05929717\", \"07975630\", \"05869651\", \"13352213\"]}");
	add("07975630", "{\"term\":\"sum total\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07975630\"]}");
	add("07975630", "{\"term\":\"summation\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00873785\", \"07975630\", \"13584342\", \"06481545\"]}");
	add("07975883", "{\"term\":\"agglomeration\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01016432\", \"07975883\"]}");
	add("07976007", "{\"term\":\"edition\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"05849159\", \"06609557\", \"07976007\", \"06602727\"]}");
	add("07976273", "{\"term\":\"electron shell\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07976273\"]}");
	add("07976477", "{\"term\":\"gimmickry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07976477\"]}");
	add("07976557", "{\"term\":\"bunch\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07971317\", \"08290764\", \"07976557\"]}");
	add("07976557", "{\"term\":\"clump\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07411545\", \"07977630\", \"07976557\"]}");
	add("07976557", "{\"term\":\"cluster\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07976557\"]}");
	add("07976557", "{\"term\":\"clustering\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07976557\"]}");
	add("07976998", "{\"term\":\"knot\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"02031554\", \"04956082\", \"13908529\", \"15304617\", \"15127279\", \"03632523\", \"07976998\"]}");
	add("07977183", "{\"term\":\"nuclear club\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07977183\"]}");
	add("07977280", "{\"term\":\"swad\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07977280\"]}");
	add("07977383", "{\"term\":\"tuft\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01328416\", \"07977383\"]}");
	add("07977383", "{\"term\":\"tussock\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07977383\"]}");
	add("07977542", "{\"term\":\"wisp\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"08008664\", \"08024812\", \"10804112\", \"07977542\"]}");
	add("07977630", "{\"term\":\"ball\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"00108220\", \"00472688\", \"05583825\", \"07463485\", \"07977630\", \"10852327\", \"02782458\", \"05532266\", \"08270189\", \"13922097\", \"03807768\", \"02781674\"]}");
	add("07977630", "{\"term\":\"chunk\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13780337\", \"07977630\"]}");
	add("07977630", "{\"term\":\"clod\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10294336\", \"07977630\"]}");
	add("07977630", "{\"term\":\"clump\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07411545\", \"07977630\", \"07976557\"]}");
	add("07977630", "{\"term\":\"glob\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07977630\"]}");
	add("07977630", "{\"term\":\"lump\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"09330206\", \"10294336\", \"14338619\", \"07977630\"]}");
	add("07977884", "{\"term\":\"gob\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"05309806\", \"07977884\", \"10314263\"]}");
	add("07977993", "{\"term\":\"clew\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06656526\", \"07977993\"]}");
	add("07978094", "{\"term\":\"agglomerate\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07978094\", \"14735808\"]}");
	add("07978094", "{\"term\":\"cumulation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07978094\"]}");
	add("07978094", "{\"term\":\"cumulus\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07978094\", \"09284866\"]}");
	add("07978094", "{\"term\":\"heap\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02927938\", \"13796604\", \"07978094\"]}");
	add("07978094", "{\"term\":\"mound\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00724235\", \"03797581\", \"07978094\", \"09349568\", \"03797867\"]}");
	add("07978094", "{\"term\":\"pile\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"02756715\", \"03942321\", \"03942545\", \"04548422\", \"05263175\", \"13271579\", \"13796604\", \"07978094\"]}");
	add("07978570", "{\"term\":\"compost heap\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07978570\"]}");
	add("07978570", "{\"term\":\"compost pile\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07978570\"]}");
	add("07978738", "{\"term\":\"mass\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"07047100\", \"07047240\", \"05106651\", \"08197108\", \"09370952\", \"01044274\", \"07978738\", \"13796604\", \"05031420\"]}");
	add("07978909", "{\"term\":\"dunghill\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07978909\", \"14519564\"]}");
	add("07978909", "{\"term\":\"midden\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07978909\", \"08578097\"]}");
	add("07978909", "{\"term\":\"muckheap\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07978909\"]}");
	add("07978909", "{\"term\":\"muckhill\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07978909\"]}");
	add("07979019", "{\"term\":\"logjam\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07979019\", \"14039067\"]}");
	add("07979114", "{\"term\":\"shock\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"04205840\", \"07353698\", \"07979114\", \"07979321\", \"07313600\", \"07443876\", \"14090558\", \"00840953\", \"01174742\", \"07525864\"]}");
	add("07979242", "{\"term\":\"scrapheap\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07979242\", \"08591389\"]}");
	add("07979321", "{\"term\":\"shock\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"04205840\", \"07353698\", \"07979114\", \"07979321\", \"07313600\", \"07443876\", \"14090558\", \"00840953\", \"01174742\", \"07525864\"]}");
	add("07979605", "{\"term\":\"slagheap\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07979605\"]}");
	add("07979701", "{\"term\":\"stack\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"04033980\", \"04254303\", \"06506637\", \"13796604\", \"07979701\"]}");
	add("07979822", "{\"term\":\"hayrick\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07979822\"]}");
	add("07979822", "{\"term\":\"haystack\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07979822\"]}");
	add("07979822", "{\"term\":\"rick\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07979822\", \"14384587\"]}");
	add("07979944", "{\"term\":\"haycock\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07979944\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }