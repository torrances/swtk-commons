package org.swtk.commons.dict.wordnet.index.name.instance.w.o.r.d;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceWORD {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"word\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"06443410\", \"06686933\", \"09560255\", \"13648798\", \"07241961\", \"07155367\", \"07183893\", \"06654787\", \"06750911\", \"06297048\"]}");
	add("{\"term\":\"wordbook\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06430336\"]}");
	add("{\"term\":\"wordfinder\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06432797\"]}");
	add("{\"term\":\"wordiness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07104300\"]}");
	add("{\"term\":\"wording\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07095931\"]}");
	add("{\"term\":\"wordmonger\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10810311\"]}");
	add("{\"term\":\"wordnet\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06651729\", \"06652077\"]}");
	add("{\"term\":\"wordplay\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06794438\"]}");
	add("{\"term\":\"words\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"07023937\", \"07198809\", \"06294417\", \"07066015\", \"07124438\"]}");
	add("{\"term\":\"wordsmith\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10810558\"]}");
	add("{\"term\":\"wordsworth\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11417652\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }