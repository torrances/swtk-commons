package org.swtk.commons.dict.wordnet.index.byid.instance.p1.p4;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance1489 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("14890085", "{\"term\":\"ferricyanic acid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14890085\"]}");
	add("14890194", "{\"term\":\"ferricyanide\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14890194\"]}");
	add("14890317", "{\"term\":\"ferritin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14890317\"]}");
	add("14890520", "{\"term\":\"ferrocerium\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14890520\"]}");
	add("14890641", "{\"term\":\"ferrocyanic acid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14890641\"]}");
	add("14890756", "{\"term\":\"ferrocyanide\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14890756\"]}");
	add("14890920", "{\"term\":\"fiberglass\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14890920\"]}");
	add("14890920", "{\"term\":\"fibreglass\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14890920\"]}");
	add("14891040", "{\"term\":\"fiber\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"03336189\", \"04627573\", \"05236952\", \"07584383\", \"14891040\"]}");
	add("14891040", "{\"term\":\"fibre\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03336189\", \"04627573\", \"05236952\", \"14891040\"]}");
	add("14891516", "{\"term\":\"string\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"03003364\", \"04345456\", \"09472431\", \"14891516\", \"03240263\", \"07026665\", \"08476659\", \"04345281\", \"02883788\", \"04345112\"]}");
	add("14891696", "{\"term\":\"fish meal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14891696\"]}");
	add("14891841", "{\"term\":\"buntal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14891841\"]}");
	add("14892009", "{\"term\":\"fibril\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14892009\"]}");
	add("14892009", "{\"term\":\"filament\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03341520\", \"05236798\", \"11698574\", \"14892009\"]}");
	add("14892009", "{\"term\":\"strand\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"08675379\", \"09470815\", \"14892009\", \"03003364\", \"04339921\", \"05940848\"]}");
	add("14892267", "{\"term\":\"fieldstone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14892267\"]}");
	add("14892394", "{\"term\":\"fill\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"14892394\", \"13601926\"]}");
	add("14892394", "{\"term\":\"filling\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00403343\", \"03343232\", \"04606292\", \"07899006\", \"13501744\", \"14892394\"]}");
	add("14892615", "{\"term\":\"filter paper\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14892615\"]}");
	add("14892715", "{\"term\":\"filtrate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14892715\"]}");
	add("14892922", "{\"term\":\"firelighter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14892922\"]}");
	add("14893067", "{\"term\":\"fire opal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14893067\"]}");
	add("14893067", "{\"term\":\"girasol\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"12000184\", \"14893067\"]}");
	add("14893186", "{\"term\":\"fish-liver oil\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14893186\"]}");
	add("14893186", "{\"term\":\"fish oil\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14893186\"]}");
	add("14893328", "{\"term\":\"fixative\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03358797\", \"14893328\"]}");
	add("14893478", "{\"term\":\"fixer\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03759543\", \"10328399\", \"14893478\", \"10113815\"]}");
	add("14893478", "{\"term\":\"fixing agent\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14893478\"]}");
	add("14893664", "{\"term\":\"flavone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14893664\"]}");
	add("14893809", "{\"term\":\"flavonoid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14893809\"]}");
	add("14893980", "{\"term\":\"flax\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"12507079\", \"14893980\"]}");
	add("14894126", "{\"term\":\"flyspeck\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14894126\"]}");
	add("14894229", "{\"term\":\"cotton\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03119952\", \"12196466\", \"03119831\", \"14894229\"]}");
	add("14894229", "{\"term\":\"cotton fiber\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14894229\"]}");
	add("14894229", "{\"term\":\"cotton wool\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14894229\"]}");
	add("14894476", "{\"term\":\"long-staple cotton\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14894476\"]}");
	add("14894575", "{\"term\":\"short-staple cotton\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14894575\"]}");
	add("14894676", "{\"term\":\"chert\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14894676\"]}");
	add("14894816", "{\"term\":\"taconite\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14894816\"]}");
	add("14894972", "{\"term\":\"firestone\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09303142\", \"14894972\"]}");
	add("14895075", "{\"term\":\"flavin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14895075\"]}");
	add("14895229", "{\"term\":\"flint\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"09123290\", \"09304451\", \"14895229\"]}");
	add("14895419", "{\"term\":\"flintstone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14895419\"]}");
	add("14895521", "{\"term\":\"flooring\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"14895521\", \"03370438\"]}");
	add("14895615", "{\"term\":\"floor wax\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14895615\"]}");
	add("14895752", "{\"term\":\"fluoride\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14895752\"]}");
	add("14895942", "{\"term\":\"fluoroboric acid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14895942\"]}");
	add("14896034", "{\"term\":\"fluoroboride\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14896034\"]}");
	add("14896119", "{\"term\":\"fluorocarbon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14896119\"]}");
	add("14896377", "{\"term\":\"fluorocarbon plastic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14896377\"]}");
	add("14896476", "{\"term\":\"fluosilicate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14896476\"]}");
	add("14896559", "{\"term\":\"fluosilicic acid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14896559\"]}");
	add("14896559", "{\"term\":\"hydrofluosilicic acid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14896559\"]}");
	add("14896723", "{\"term\":\"flypaper\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14896723\"]}");
	add("14896848", "{\"term\":\"foam\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"14896848\", \"09305630\"]}");
	add("14897026", "{\"term\":\"foam rubber\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14897026\"]}");
	add("14897207", "{\"term\":\"fomentation\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00157445\", \"00709421\", \"14897207\"]}");
	add("14897347", "{\"term\":\"formaldehyde\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14897347\"]}");
	add("14897347", "{\"term\":\"methanal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14897347\"]}");
	add("14897495", "{\"term\":\"formic acid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14897495\"]}");
	add("14897792", "{\"term\":\"formulation\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07083988\", \"00942658\", \"14897792\"]}");
	add("14897792", "{\"term\":\"preparation\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"00244785\", \"00730406\", \"00895653\", \"07041429\", \"14054590\", \"05802702\", \"14897792\", \"01145325\"]}");
	add("14898102", "{\"term\":\"frankincense\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14898102\"]}");
	add("14898102", "{\"term\":\"gum olibanum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14898102\"]}");
	add("14898102", "{\"term\":\"olibanum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14898102\"]}");
	add("14898102", "{\"term\":\"thus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14898102\"]}");
	add("14898347", "{\"term\":\"free radical\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14898347\"]}");
	add("14898347", "{\"term\":\"radical\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"06311183\", \"06854209\", \"13753670\", \"10523045\", \"14898347\", \"14645624\"]}");
	add("14898715", "{\"term\":\"freezing mixture\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14898715\"]}");
	add("14898882", "{\"term\":\"freon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14898882\"]}");
	add("14899083", "{\"term\":\"fructose\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14899083\"]}");
	add("14899083", "{\"term\":\"fruit sugar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14899083\"]}");
	add("14899083", "{\"term\":\"laevulose\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14899083\"]}");
	add("14899083", "{\"term\":\"levulose\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14899083\"]}");
	add("14899228", "{\"term\":\"fuel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14899228\"]}");
	add("14899858", "{\"term\":\"fuller\u0027s earth\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14899858\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }