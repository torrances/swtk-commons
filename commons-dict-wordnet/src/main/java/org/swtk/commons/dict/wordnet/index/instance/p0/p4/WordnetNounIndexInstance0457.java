package org.swtk.commons.dict.wordnet.index.instance.p0.p4;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexInstance0457 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("04570221", "{\"term\":\"water tower\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04570221\"]}");
	add("04570306", "{\"term\":\"water waggon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04570306\"]}");
	add("04570306", "{\"term\":\"water wagon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04570306\"]}");
	add("04570490", "{\"term\":\"water wheel\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04570490\", \"04570699\"]}");
	add("04570490", "{\"term\":\"waterwheel\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04570490\", \"04570699\"]}");
	add("04570699", "{\"term\":\"water wheel\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04570490\", \"04570699\"]}");
	add("04570699", "{\"term\":\"waterwheel\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04570490\", \"04570699\"]}");
	add("04570846", "{\"term\":\"water wings\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04570846\"]}");
	add("04571076", "{\"term\":\"waterworks\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04571076\", \"08203464\"]}");
	add("04571228", "{\"term\":\"wats\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04571228\"]}");
	add("04571228", "{\"term\":\"wats line\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04571228\"]}");
	add("04571404", "{\"term\":\"wattle\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"11777138\", \"04571404\", \"05479079\"]}");
	add("04571564", "{\"term\":\"wattmeter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04571564\"]}");
	add("04571699", "{\"term\":\"wave guide\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04571699\"]}");
	add("04571699", "{\"term\":\"waveguide\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04571699\"]}");
	add("04571867", "{\"term\":\"wax figure\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04571867\"]}");
	add("04571867", "{\"term\":\"waxwork\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04571867\", \"12769008\"]}");
	add("04571984", "{\"term\":\"way\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"13306996\", \"05848419\", \"05799772\", \"05091940\", \"13799976\", \"00313517\", \"04571984\", \"00416689\", \"13962637\", \"08697710\", \"00173531\", \"04936080\"]}");
	add("04572325", "{\"term\":\"shipway\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04203380\", \"04572325\"]}");
	add("04572325", "{\"term\":\"slipway\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04572325\"]}");
	add("04572325", "{\"term\":\"ways\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04572325\"]}");
	add("04572519", "{\"term\":\"roadside\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04572519\"]}");
	add("04572519", "{\"term\":\"wayside\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04572519\"]}");
	add("04572661", "{\"term\":\"arm\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"04243483\", \"08418205\", \"02740665\", \"04572661\", \"02740838\", \"05571403\"]}");
	add("04572661", "{\"term\":\"weapon\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07261592\", \"04572661\"]}");
	add("04572661", "{\"term\":\"weapon system\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04572661\"]}");
	add("04573249", "{\"term\":\"w.m.d.\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04573249\"]}");
	add("04573249", "{\"term\":\"weapon of mass destruction\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04573249\"]}");
	add("04573249", "{\"term\":\"wmd\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04573249\"]}");
	add("04573543", "{\"term\":\"arms\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03062747\", \"04573543\"]}");
	add("04573543", "{\"term\":\"implements of war\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04573543\"]}");
	add("04573543", "{\"term\":\"munition\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03390403\", \"03805132\", \"04573543\"]}");
	add("04573543", "{\"term\":\"weaponry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04573543\"]}");
	add("04573543", "{\"term\":\"weapons system\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04573543\"]}");
	add("04573847", "{\"term\":\"weapons carrier\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04573847\"]}");
	add("04574042", "{\"term\":\"weathercock\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04574042\"]}");
	add("04574148", "{\"term\":\"shelter deck\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04574148\"]}");
	add("04574148", "{\"term\":\"weather deck\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04574148\"]}");
	add("04574384", "{\"term\":\"weatherglass\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04574384\"]}");
	add("04574508", "{\"term\":\"weather chart\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04574508\"]}");
	add("04574508", "{\"term\":\"weather map\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04574508\"]}");
	add("04574766", "{\"term\":\"weather radar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04574766\"]}");
	add("04574879", "{\"term\":\"meteorological satellite\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04574879\"]}");
	add("04574879", "{\"term\":\"weather satellite\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04574879\"]}");
	add("04575032", "{\"term\":\"weather ship\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04575032\"]}");
	add("04575156", "{\"term\":\"weather strip\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04575156\"]}");
	add("04575156", "{\"term\":\"weather stripping\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04575156\"]}");
	add("04575156", "{\"term\":\"weatherstrip\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04575156\"]}");
	add("04575156", "{\"term\":\"weatherstripping\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04575156\"]}");
	add("04575355", "{\"term\":\"vane\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"01900632\", \"02851761\", \"04528079\", \"04575355\"]}");
	add("04575355", "{\"term\":\"weather vane\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04575355\"]}");
	add("04575355", "{\"term\":\"weathervane\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04575355\"]}");
	add("04575355", "{\"term\":\"wind vane\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04575355\"]}");
	add("04575584", "{\"term\":\"weave\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04575584\"]}");
	add("04575843", "{\"term\":\"entanglement\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04575843\"]}");
	add("04575843", "{\"term\":\"web\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"01900969\", \"04575999\", \"04611634\", \"08451269\", \"01900632\", \"04575843\", \"09500167\"]}");
	add("04575999", "{\"term\":\"web\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"01900969\", \"04575999\", \"04611634\", \"08451269\", \"01900632\", \"04575843\", \"09500167\"]}");
	add("04576127", "{\"term\":\"webbing\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04576127\", \"04576230\", \"09500449\"]}");
	add("04576230", "{\"term\":\"webbing\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04576127\", \"04576230\", \"09500449\"]}");
	add("04576349", "{\"term\":\"webcam\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04576349\"]}");
	add("04576491", "{\"term\":\"wedding picture\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04576491\"]}");
	add("04576624", "{\"term\":\"wedding band\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04576624\"]}");
	add("04576624", "{\"term\":\"wedding ring\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04576624\"]}");
	add("04576806", "{\"term\":\"wedge\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"03027561\", \"04576806\", \"04577108\", \"04577269\", \"06836139\", \"07713570\", \"13942580\"]}");
	add("04577108", "{\"term\":\"wedge\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"03027561\", \"04576806\", \"04577108\", \"04577269\", \"06836139\", \"07713570\", \"13942580\"]}");
	add("04577269", "{\"term\":\"wedge\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"03027561\", \"04576806\", \"04577108\", \"04577269\", \"06836139\", \"07713570\", \"13942580\"]}");
	add("04577269", "{\"term\":\"wedge heel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04577269\"]}");
	add("04577404", "{\"term\":\"wedgie\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04577404\"]}");
	add("04577500", "{\"term\":\"wedgwood\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04577500\", \"11399431\"]}");
	add("04577702", "{\"term\":\"weed-whacker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04577702\"]}");
	add("04577702", "{\"term\":\"weeder\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04577702\", \"10792605\"]}");
	add("04577818", "{\"term\":\"weeds\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04577818\"]}");
	add("04577818", "{\"term\":\"widow\u0027s weeds\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04577818\"]}");
	add("04577966", "{\"term\":\"mourning band\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04577966\"]}");
	add("04577966", "{\"term\":\"weed\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03997192\", \"04577966\", \"13105873\"]}");
	add("04578101", "{\"term\":\"weekender\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04578101\", \"10792140\"]}");
	add("04578244", "{\"term\":\"weighbridge\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04578244\"]}");
	add("04578374", "{\"term\":\"weight\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"13610524\", \"13630031\", \"13737860\", \"07554200\", \"04578374\", \"05179849\", \"04578578\", \"05034009\"]}");
	add("04578578", "{\"term\":\"exercising weight\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04578578\"]}");
	add("04578578", "{\"term\":\"free weight\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04578578\"]}");
	add("04578578", "{\"term\":\"weight\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"13610524\", \"13630031\", \"13737860\", \"07554200\", \"04578374\", \"05179849\", \"04578578\", \"05034009\"]}");
	add("04578852", "{\"term\":\"weir\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04578972\", \"04578852\"]}");
	add("04578972", "{\"term\":\"weir\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04578972\", \"04578852\"]}");
	add("04579086", "{\"term\":\"welcome wagon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04579086\"]}");
	add("04579244", "{\"term\":\"weld\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04579244\", \"11400650\", \"12406347\"]}");
	add("04579407", "{\"term\":\"welder\u0027s mask\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04579407\"]}");
	add("04579521", "{\"term\":\"weldment\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04579521\"]}");
	add("04579630", "{\"term\":\"well\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"04579845\", \"04580086\", \"06688724\", \"04580221\", \"04579630\"]}");
	add("04579845", "{\"term\":\"well\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"04579845\", \"04580086\", \"06688724\", \"04580221\", \"04579630\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }