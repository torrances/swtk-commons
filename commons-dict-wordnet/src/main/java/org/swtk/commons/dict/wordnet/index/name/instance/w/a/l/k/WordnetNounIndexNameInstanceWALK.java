package org.swtk.commons.dict.wordnet.index.name.instance.w.a.l.k;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceWALK {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"walk\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00585285\", \"00287986\", \"04552265\", \"00285642\", \"05010255\", \"00128106\", \"00284412\"]}");
	add("{\"term\":\"walkabout\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00294261\", \"00294389\", \"00294501\"]}");
	add("{\"term\":\"walkaway\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07490247\"]}");
	add("{\"term\":\"walker\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"04552591\", \"04552757\", \"04553034\", \"10431800\", \"11391120\", \"11391249\"]}");
	add("{\"term\":\"walking\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00284412\"]}");
	add("{\"term\":\"walkingstick\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02234139\"]}");
	add("{\"term\":\"walkman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04553626\"]}");
	add("{\"term\":\"walkout\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01180685\", \"01246888\"]}");
	add("{\"term\":\"walkover\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00576402\", \"00435508\"]}");
	add("{\"term\":\"walkway\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04552265\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }