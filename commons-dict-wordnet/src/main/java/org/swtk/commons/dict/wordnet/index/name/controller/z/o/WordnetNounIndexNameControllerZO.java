package org.swtk.commons.dict.wordnet.index.name.controller.z.o;  import java.util.Collection; import java.util.Set; import java.util.TreeSet;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  	import org.swtk.commons.dict.wordnet.index.name.instance.z.o.a.n.WordnetNounIndexNameInstanceZOAN;
	import org.swtk.commons.dict.wordnet.index.name.instance.z.o.a.r.WordnetNounIndexNameInstanceZOAR;
	import org.swtk.commons.dict.wordnet.index.name.instance.z.o.c.o.WordnetNounIndexNameInstanceZOCO;
	import org.swtk.commons.dict.wordnet.index.name.instance.z.o.d.i.WordnetNounIndexNameInstanceZODI;
	import org.swtk.commons.dict.wordnet.index.name.instance.z.o.i.s.WordnetNounIndexNameInstanceZOIS;
	import org.swtk.commons.dict.wordnet.index.name.instance.z.o.l.a.WordnetNounIndexNameInstanceZOLA;
	import org.swtk.commons.dict.wordnet.index.name.instance.z.o.l.o.WordnetNounIndexNameInstanceZOLO;
	import org.swtk.commons.dict.wordnet.index.name.instance.z.o.m.b.WordnetNounIndexNameInstanceZOMB;
	import org.swtk.commons.dict.wordnet.index.name.instance.z.o.n.a.WordnetNounIndexNameInstanceZONA;
	import org.swtk.commons.dict.wordnet.index.name.instance.z.o.n.e.WordnetNounIndexNameInstanceZONE;
	import org.swtk.commons.dict.wordnet.index.name.instance.z.o.n.i.WordnetNounIndexNameInstanceZONI;
	import org.swtk.commons.dict.wordnet.index.name.instance.z.o.n.o.WordnetNounIndexNameInstanceZONO;
	import org.swtk.commons.dict.wordnet.index.name.instance.z.o.n.u.WordnetNounIndexNameInstanceZONU;
	import org.swtk.commons.dict.wordnet.index.name.instance.z.o.o.e.WordnetNounIndexNameInstanceZOOE;
	import org.swtk.commons.dict.wordnet.index.name.instance.z.o.o.f.WordnetNounIndexNameInstanceZOOF;
	import org.swtk.commons.dict.wordnet.index.name.instance.z.o.o.i.WordnetNounIndexNameInstanceZOOI;
	import org.swtk.commons.dict.wordnet.index.name.instance.z.o.o.l.WordnetNounIndexNameInstanceZOOL;
	import org.swtk.commons.dict.wordnet.index.name.instance.z.o.o.m.WordnetNounIndexNameInstanceZOOM;
	import org.swtk.commons.dict.wordnet.index.name.instance.z.o.o.n.WordnetNounIndexNameInstanceZOON;
	import org.swtk.commons.dict.wordnet.index.name.instance.z.o.o.p.WordnetNounIndexNameInstanceZOOP;
	import org.swtk.commons.dict.wordnet.index.name.instance.z.o.o.s.WordnetNounIndexNameInstanceZOOS;
	import org.swtk.commons.dict.wordnet.index.name.instance.z.o.o.t.WordnetNounIndexNameInstanceZOOT;
	import org.swtk.commons.dict.wordnet.index.name.instance.z.o.r.i.WordnetNounIndexNameInstanceZORI;
	import org.swtk.commons.dict.wordnet.index.name.instance.z.o.r.o.WordnetNounIndexNameInstanceZORO;
	import org.swtk.commons.dict.wordnet.index.name.instance.z.o.s.t.WordnetNounIndexNameInstanceZOST;
	import org.swtk.commons.dict.wordnet.index.name.instance.z.o.v.i.WordnetNounIndexNameInstanceZOVI;
	import org.swtk.commons.dict.wordnet.index.name.instance.z.o.y.s.WordnetNounIndexNameInstanceZOYS;
  import com.trimc.blogger.commons.exception.BusinessException;  public final class WordnetNounIndexNameControllerZO {  	public static Collection<IndexNoun> get(final String TERM) throws BusinessException {  		String key = TERM.substring(0, 4).toLowerCase(); 			if ("zoan".equals(key)) return WordnetNounIndexNameInstanceZOAN.get(TERM);
	if ("zoar".equals(key)) return WordnetNounIndexNameInstanceZOAR.get(TERM);
	if ("zoco".equals(key)) return WordnetNounIndexNameInstanceZOCO.get(TERM);
	if ("zodi".equals(key)) return WordnetNounIndexNameInstanceZODI.get(TERM);
	if ("zois".equals(key)) return WordnetNounIndexNameInstanceZOIS.get(TERM);
	if ("zola".equals(key)) return WordnetNounIndexNameInstanceZOLA.get(TERM);
	if ("zolo".equals(key)) return WordnetNounIndexNameInstanceZOLO.get(TERM);
	if ("zomb".equals(key)) return WordnetNounIndexNameInstanceZOMB.get(TERM);
	if ("zona".equals(key)) return WordnetNounIndexNameInstanceZONA.get(TERM);
	if ("zone".equals(key)) return WordnetNounIndexNameInstanceZONE.get(TERM);
	if ("zoni".equals(key)) return WordnetNounIndexNameInstanceZONI.get(TERM);
	if ("zono".equals(key)) return WordnetNounIndexNameInstanceZONO.get(TERM);
	if ("zonu".equals(key)) return WordnetNounIndexNameInstanceZONU.get(TERM);
	if ("zooe".equals(key)) return WordnetNounIndexNameInstanceZOOE.get(TERM);
	if ("zoof".equals(key)) return WordnetNounIndexNameInstanceZOOF.get(TERM);
	if ("zooi".equals(key)) return WordnetNounIndexNameInstanceZOOI.get(TERM);
	if ("zool".equals(key)) return WordnetNounIndexNameInstanceZOOL.get(TERM);
	if ("zoom".equals(key)) return WordnetNounIndexNameInstanceZOOM.get(TERM);
	if ("zoon".equals(key)) return WordnetNounIndexNameInstanceZOON.get(TERM);
	if ("zoop".equals(key)) return WordnetNounIndexNameInstanceZOOP.get(TERM);
	if ("zoos".equals(key)) return WordnetNounIndexNameInstanceZOOS.get(TERM);
	if ("zoot".equals(key)) return WordnetNounIndexNameInstanceZOOT.get(TERM);
	if ("zori".equals(key)) return WordnetNounIndexNameInstanceZORI.get(TERM);
	if ("zoro".equals(key)) return WordnetNounIndexNameInstanceZORO.get(TERM);
	if ("zost".equals(key)) return WordnetNounIndexNameInstanceZOST.get(TERM);
	if ("zovi".equals(key)) return WordnetNounIndexNameInstanceZOVI.get(TERM);
	if ("zoys".equals(key)) return WordnetNounIndexNameInstanceZOYS.get(TERM);
  		throw new BusinessException("TERM not found (id = %s)", TERM); 	} 	 	public static Collection<String> terms() throws BusinessException { 		Set<String> set = new TreeSet<String>();  			set.addAll(WordnetNounIndexNameInstanceZOAN.terms());
	set.addAll(WordnetNounIndexNameInstanceZOAR.terms());
	set.addAll(WordnetNounIndexNameInstanceZOCO.terms());
	set.addAll(WordnetNounIndexNameInstanceZODI.terms());
	set.addAll(WordnetNounIndexNameInstanceZOIS.terms());
	set.addAll(WordnetNounIndexNameInstanceZOLA.terms());
	set.addAll(WordnetNounIndexNameInstanceZOLO.terms());
	set.addAll(WordnetNounIndexNameInstanceZOMB.terms());
	set.addAll(WordnetNounIndexNameInstanceZONA.terms());
	set.addAll(WordnetNounIndexNameInstanceZONE.terms());
	set.addAll(WordnetNounIndexNameInstanceZONI.terms());
	set.addAll(WordnetNounIndexNameInstanceZONO.terms());
	set.addAll(WordnetNounIndexNameInstanceZONU.terms());
	set.addAll(WordnetNounIndexNameInstanceZOOE.terms());
	set.addAll(WordnetNounIndexNameInstanceZOOF.terms());
	set.addAll(WordnetNounIndexNameInstanceZOOI.terms());
	set.addAll(WordnetNounIndexNameInstanceZOOL.terms());
	set.addAll(WordnetNounIndexNameInstanceZOOM.terms());
	set.addAll(WordnetNounIndexNameInstanceZOON.terms());
	set.addAll(WordnetNounIndexNameInstanceZOOP.terms());
	set.addAll(WordnetNounIndexNameInstanceZOOS.terms());
	set.addAll(WordnetNounIndexNameInstanceZOOT.terms());
	set.addAll(WordnetNounIndexNameInstanceZORI.terms());
	set.addAll(WordnetNounIndexNameInstanceZORO.terms());
	set.addAll(WordnetNounIndexNameInstanceZOST.terms());
	set.addAll(WordnetNounIndexNameInstanceZOVI.terms());
	set.addAll(WordnetNounIndexNameInstanceZOYS.terms());
  		return set; 	} }