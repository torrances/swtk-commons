package org.swtk.commons.dict.wordnet.index.name.instance.c.h.a.m;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceCHAM {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"chamaea\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01595797\"]}");
	add("{\"term\":\"chamaecrista\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12514620\"]}");
	add("{\"term\":\"chamaecyparis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11655421\"]}");
	add("{\"term\":\"chamaecytisus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12534829\"]}");
	add("{\"term\":\"chamaedaphne\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12254693\"]}");
	add("{\"term\":\"chamaeleo\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01696636\"]}");
	add("{\"term\":\"chamaeleon\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01696424\", \"09263795\"]}");
	add("{\"term\":\"chamaeleonidae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01696113\"]}");
	add("{\"term\":\"chamaeleontidae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01696113\"]}");
	add("{\"term\":\"chamaemelum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11969686\"]}");
	add("{\"term\":\"chamber\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"02824762\", \"08335834\", \"03007750\", \"05400087\", \"03007334\"]}");
	add("{\"term\":\"chamberlain\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"09925532\", \"09925648\", \"10909441\"]}");
	add("{\"term\":\"chambermaid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09925746\"]}");
	add("{\"term\":\"chamberpot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03007879\"]}");
	add("{\"term\":\"chambers\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10909657\"]}");
	add("{\"term\":\"chambray\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03008013\"]}");
	add("{\"term\":\"chameleon\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01696424\", \"09263795\", \"09925902\"]}");
	add("{\"term\":\"chamfer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02836781\"]}");
	add("{\"term\":\"chamfron\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03009223\"]}");
	add("{\"term\":\"chammy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14785985\"]}");
	add("{\"term\":\"chamois\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02421982\", \"14785985\"]}");
	add("{\"term\":\"chamomile\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11969871\"]}");
	add("{\"term\":\"chamosite\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14830898\"]}");
	add("{\"term\":\"champ\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09926157\"]}");
	add("{\"term\":\"champagne\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08961308\", \"07909617\"]}");
	add("{\"term\":\"champaign\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09105793\", \"09416498\"]}");
	add("{\"term\":\"champerty\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00766841\"]}");
	add("{\"term\":\"champion\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"09781932\", \"10697152\", \"09925991\", \"09926157\"]}");
	add("{\"term\":\"championship\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01216376\", \"07472625\", \"13972130\"]}");
	add("{\"term\":\"champlain\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09353510\", \"10909784\"]}");
	add("{\"term\":\"champollion\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10909963\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }