package org.swtk.commons.dict.wordnet.index.byid.instance.p0.p8;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0825 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("08250347", "{\"term\":\"industrial union\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08250347\"]}");
	add("08250347", "{\"term\":\"vertical union\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08250347\"]}");
	add("08250548", "{\"term\":\"teamsters union\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08250548\"]}");
	add("08250683", "{\"term\":\"united mine workers\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08250683\"]}");
	add("08250683", "{\"term\":\"united mine workers of america\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08250683\"]}");
	add("08250834", "{\"term\":\"afl\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08250834\"]}");
	add("08250834", "{\"term\":\"american federation of labor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08250834\"]}");
	add("08251024", "{\"term\":\"afl-cio\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08251024\"]}");
	add("08251024", "{\"term\":\"american federation of labor and congress of industrial organizations\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08251024\"]}");
	add("08251219", "{\"term\":\"cio\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08251219\"]}");
	add("08251219", "{\"term\":\"congress of industrial organizations\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08251219\"]}");
	add("08251414", "{\"term\":\"craft union\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08251414\"]}");
	add("08251549", "{\"term\":\"credit union\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08251549\"]}");
	add("08251713", "{\"term\":\"company union\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08251713\"]}");
	add("08251856", "{\"term\":\"open shop\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08251856\"]}");
	add("08251997", "{\"term\":\"closed shop\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08251997\"]}");
	add("08252094", "{\"term\":\"union shop\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08252094\"]}");
	add("08252264", "{\"term\":\"secret society\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08252264\"]}");
	add("08252434", "{\"term\":\"freemasonry\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08252434\", \"13953106\"]}");
	add("08252434", "{\"term\":\"masonry\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00610164\", \"08252434\", \"03731208\"]}");
	add("08252544", "{\"term\":\"national volunteers association\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08252544\"]}");
	add("08252544", "{\"term\":\"rashtriya swayamsevak sangh\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08252544\"]}");
	add("08252749", "{\"term\":\"service club\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04182635\", \"08252749\"]}");
	add("08252948", "{\"term\":\"international association of lions clubs\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08252948\"]}");
	add("08252948", "{\"term\":\"lions club\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08252948\"]}");
	add("08253172", "{\"term\":\"rotary club\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08253172\"]}");
	add("08253172", "{\"term\":\"rotary international\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08253172\"]}");
	add("08253359", "{\"term\":\"consortium\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08253359\"]}");
	add("08253359", "{\"term\":\"pool\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00502091\", \"08682839\", \"13390647\", \"09420482\", \"13391030\", \"08253359\", \"08498380\", \"09420266\", \"03988418\"]}");
	add("08253359", "{\"term\":\"syndicate\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08372251\", \"08253359\", \"08263223\"]}");
	add("08253542", "{\"term\":\"cartel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08253542\"]}");
	add("08253542", "{\"term\":\"combine\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07388403\", \"08253542\", \"03079638\"]}");
	add("08253542", "{\"term\":\"corporate trust\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08253542\"]}");
	add("08253542", "{\"term\":\"trust\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"13952885\", \"05951915\", \"08253542\", \"04902441\", \"05705941\", \"13381671\"]}");
	add("08253884", "{\"term\":\"drug cartel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08253884\"]}");
	add("08254123", "{\"term\":\"medellin cartel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08254123\"]}");
	add("08254321", "{\"term\":\"cali cartel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08254321\"]}");
	add("08254620", "{\"term\":\"oil cartel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08254620\"]}");
	add("08254784", "{\"term\":\"cast\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00106299\", \"00455648\", \"01248360\", \"02983121\", \"02983295\", \"04684871\", \"13936581\", \"03784903\", \"08254784\"]}");
	add("08254784", "{\"term\":\"cast of characters\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08254784\"]}");
	add("08254784", "{\"term\":\"dramatis personae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08254784\"]}");
	add("08254969", "{\"term\":\"ensemble\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"03294896\", \"07971894\", \"08206019\", \"08254969\", \"08205165\"]}");
	add("08254969", "{\"term\":\"supporting players\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08254969\"]}");
	add("08255077", "{\"term\":\"constituency\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08255077\"]}");
	add("08255234", "{\"term\":\"electoral college\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08255234\"]}");
	add("08255384", "{\"term\":\"class\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"04822408\", \"08120743\", \"08255581\", \"08256729\", \"00886144\", \"07990472\", \"08255384\", \"08014145\"]}");
	add("08255384", "{\"term\":\"course\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"03124441\", \"03124680\", \"07572535\", \"08255384\", \"09410115\", \"00039000\", \"08698960\", \"08393816\", \"00886144\"]}");
	add("08255384", "{\"term\":\"form\", \"synsetCount\":16, \"upperType\":\"NOUN\", \"ids\":[\"03389381\", \"03723460\", \"05207938\", \"08255384\", \"14503649\", \"04937655\", \"07106984\", \"08128123\", \"06485234\", \"04684871\", \"00028005\", \"05224424\", \"05071206\", \"05939522\", \"05847533\", \"06301417\"]}");
	add("08255384", "{\"term\":\"grade\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"02409604\", \"05101152\", \"05139310\", \"05745098\", \"07126990\", \"13633562\", \"05075885\", \"14451564\", \"08255384\"]}");
	add("08255581", "{\"term\":\"class\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"04822408\", \"08120743\", \"08255581\", \"08256729\", \"00886144\", \"07990472\", \"08255384\", \"08014145\"]}");
	add("08255581", "{\"term\":\"year\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"08255581\", \"15226340\", \"15229093\", \"15228587\"]}");
	add("08255830", "{\"term\":\"graduating class\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08255830\"]}");
	add("08255945", "{\"term\":\"master class\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08255945\"]}");
	add("08256073", "{\"term\":\"discussion section\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08256073\"]}");
	add("08256073", "{\"term\":\"section\", \"synsetCount\":14, \"upperType\":\"NOUN\", \"ids\":[\"00679253\", \"07763431\", \"08131836\", \"08233716\", \"08233821\", \"08256073\", \"08665728\", \"13634785\", \"05876035\", \"08231753\", \"04172050\", \"08665897\", \"09451645\", \"06403644\"]}");
	add("08256304", "{\"term\":\"senior class\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08256304\"]}");
	add("08256409", "{\"term\":\"junior class\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08256409\"]}");
	add("08256511", "{\"term\":\"sophomore class\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08256511\"]}");
	add("08256627", "{\"term\":\"freshman class\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08256627\"]}");
	add("08256729", "{\"term\":\"class\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"04822408\", \"08120743\", \"08255581\", \"08256729\", \"00886144\", \"07990472\", \"08255384\", \"08014145\"]}");
	add("08256729", "{\"term\":\"division\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"00398761\", \"00872590\", \"08236147\", \"08236251\", \"08237812\", \"08238269\", \"08256729\", \"07196502\", \"08237635\", \"00386599\", \"05876035\", \"08230126\"]}");
	add("08256943", "{\"term\":\"revolving door\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04093558\", \"08256943\"]}");
	add("08257090", "{\"term\":\"band\", \"synsetCount\":13, \"upperType\":\"NOUN\", \"ids\":[\"02788021\", \"02788214\", \"02788388\", \"02788593\", \"04099721\", \"05274710\", \"02787241\", \"06271171\", \"08266881\", \"02787755\", \"04687822\", \"08265959\", \"08257090\"]}");
	add("08257090", "{\"term\":\"circle\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"03036796\", \"03037004\", \"04042970\", \"04473168\", \"00296016\", \"13896556\", \"08257090\", \"13896141\"]}");
	add("08257090", "{\"term\":\"lot\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"10293366\", \"07971317\", \"03238126\", \"14496806\", \"08257090\", \"08692708\", \"13796604\"]}");
	add("08257090", "{\"term\":\"set\", \"synsetCount\":13, \"upperType\":\"NOUN\", \"ids\":[\"04183589\", \"05682428\", \"07378145\", \"09536704\", \"13512263\", \"15281228\", \"01054777\", \"06209437\", \"08257090\", \"04304614\", \"00626939\", \"08016141\", \"08013131\"]}");
	add("08257405", "{\"term\":\"car pool\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08257405\"]}");
	add("08257554", "{\"term\":\"camp\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"02949049\", \"02949268\", \"05657805\", \"02948834\", \"08257554\", \"02948616\", \"08495029\", \"02948281\"]}");
	add("08257554", "{\"term\":\"clique\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08257554\"]}");
	add("08257554", "{\"term\":\"coterie\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08257554\"]}");
	add("08257554", "{\"term\":\"ingroup\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08257554\"]}");
	add("08257554", "{\"term\":\"inner circle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08257554\"]}");
	add("08257554", "{\"term\":\"pack\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"03876350\", \"03876500\", \"03876658\", \"08011383\", \"08257554\", \"08260983\", \"03876224\", \"07973040\", \"13797293\"]}");
	add("08257887", "{\"term\":\"bloomsbury group\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08257887\"]}");
	add("08258230", "{\"term\":\"bohemia\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08258230\", \"08776715\"]}");
	add("08258433", "{\"term\":\"brain trust\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08258433\"]}");
	add("08258433", "{\"term\":\"kitchen cabinet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08258433\"]}");
	add("08258575", "{\"term\":\"loop\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"00170632\", \"03052868\", \"03694673\", \"05738669\", \"06585033\", \"06657586\", \"08258575\", \"13525376\", \"13898210\", \"03137089\"]}");
	add("08258719", "{\"term\":\"cabal\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05917476\", \"08258719\"]}");
	add("08258719", "{\"term\":\"camarilla\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08258719\"]}");
	add("08258719", "{\"term\":\"faction\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08268798\", \"08258719\"]}");
	add("08258719", "{\"term\":\"junto\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08258719\"]}");
	add("08258885", "{\"term\":\"junta\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08258885\"]}");
	add("08258885", "{\"term\":\"military junta\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08258885\"]}");
	add("08259021", "{\"term\":\"cadre\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08259021\", \"08375521\"]}");
	add("08259144", "{\"term\":\"core\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"03112367\", \"03112555\", \"03112720\", \"06616419\", \"08325852\", \"09279801\", \"05929717\", \"09279721\", \"08541787\", \"08259144\"]}");
	add("08259144", "{\"term\":\"core group\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08259144\"]}");
	add("08259144", "{\"term\":\"nucleus\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"05328312\", \"05509583\", \"09398135\", \"08259144\", \"09397997\", \"05442503\"]}");
	add("08259349", "{\"term\":\"portfolio\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00722534\", \"06506144\", \"08259349\", \"03992713\"]}");
	add("08259596", "{\"term\":\"professional association\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08259596\"]}");
	add("08259720", "{\"term\":\"crew\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"08290657\", \"08290764\", \"08259720\", \"08290088\"]}");
	add("08259720", "{\"term\":\"gang\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03420273\", \"08259720\", \"08290764\", \"08260983\"]}");
	add("08259720", "{\"term\":\"work party\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08259720\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }