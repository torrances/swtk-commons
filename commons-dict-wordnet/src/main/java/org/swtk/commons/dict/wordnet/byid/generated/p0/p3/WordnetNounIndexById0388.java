package org.swtk.commons.dict.wordnet.byid.generated.p0.p3;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexById0388 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("03880165", "{\"term\":\"paddock\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03880165\"]}");
	add("03880277", "{\"term\":\"padlock\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03880277\"]}");
	add("03880501", "{\"term\":\"page-at-a-time printer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03880501\"]}");
	add("03880501", "{\"term\":\"page printer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03880501\"]}");
	add("03880643", "{\"term\":\"pagoda\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03880643\"]}");
	add("03880766", "{\"term\":\"paillasse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03880766\"]}");
	add("03880766", "{\"term\":\"palliasse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03880766\"]}");
	add("03880896", "{\"term\":\"paint\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04119846\", \"08608465\", \"03880896\"]}");
	add("03880896", "{\"term\":\"pigment\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03880896\", \"15015290\", \"15014387\"]}");
	add("03881484", "{\"term\":\"paintball\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00468190\", \"03881484\"]}");
	add("03881633", "{\"term\":\"paintball gun\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03881633\"]}");
	add("03881789", "{\"term\":\"paintbox\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03881789\"]}");
	add("03881909", "{\"term\":\"paintbrush\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03881909\"]}");
	add("03882030", "{\"term\":\"painter\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"02127963\", \"03882030\", \"10413608\", \"10411352\"]}");
	add("03882197", "{\"term\":\"painting\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00610504\", \"00718460\", \"00938436\", \"03882197\"]}");
	add("03882197", "{\"term\":\"picture\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"03931348\", \"05774074\", \"07216464\", \"06288456\", \"06626039\", \"07012096\", \"13960108\", \"05945422\", \"03882197\", \"03937282\"]}");
	add("03882907", "{\"term\":\"paint roller\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03882907\"]}");
	add("03883029", "{\"term\":\"paisley\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03883029\"]}");
	add("03883150", "{\"term\":\"jammies\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03883150\"]}");
	add("03883150", "{\"term\":\"pajama\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03883150\", \"03883371\"]}");
	add("03883150", "{\"term\":\"pj\u0027s\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03883150\"]}");
	add("03883150", "{\"term\":\"pyjama\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03883150\", \"03883371\"]}");
	add("03883371", "{\"term\":\"pajama\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03883150\", \"03883371\"]}");
	add("03883371", "{\"term\":\"pyjama\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03883150\", \"03883371\"]}");
	add("03883542", "{\"term\":\"palace\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03883542\", \"03883908\", \"08069873\", \"03883763\"]}");
	add("03883763", "{\"term\":\"castle\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00167373\", \"02984084\", \"02983900\", \"03883763\"]}");
	add("03883763", "{\"term\":\"palace\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03883542\", \"03883908\", \"08069873\", \"03883763\"]}");
	add("03883908", "{\"term\":\"palace\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03883542\", \"03883908\", \"08069873\", \"03883763\"]}");
	add("03883991", "{\"term\":\"palankeen\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03883991\"]}");
	add("03883991", "{\"term\":\"palanquin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03883991\"]}");
	add("03884115", "{\"term\":\"paleolith\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03884115\"]}");
	add("03884208", "{\"term\":\"palaestra\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03884208\"]}");
	add("03884208", "{\"term\":\"palestra\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03884208\"]}");
	add("03884371", "{\"term\":\"palette\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03885402\", \"03884371\", \"05135635\"]}");
	add("03884371", "{\"term\":\"pallet\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"03884371\", \"03885033\", \"03885153\", \"03885279\", \"05135635\"]}");
	add("03884525", "{\"term\":\"palette knife\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03884525\"]}");
	add("03884660", "{\"term\":\"palisade\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03884660\"]}");
	add("03884813", "{\"term\":\"cerement\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03884813\"]}");
	add("03884813", "{\"term\":\"pall\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03155743\", \"03884813\", \"07552647\"]}");
	add("03884813", "{\"term\":\"shroud\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03884813\", \"04195411\", \"04217790\"]}");
	add("03884813", "{\"term\":\"winding-clothes\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03884813\"]}");
	add("03884813", "{\"term\":\"winding-sheet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03884813\"]}");
	add("03885033", "{\"term\":\"pallet\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"03884371\", \"03885033\", \"03885153\", \"03885279\", \"05135635\"]}");
	add("03885153", "{\"term\":\"pallet\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"03884371\", \"03885033\", \"03885153\", \"03885279\", \"05135635\"]}");
	add("03885279", "{\"term\":\"pallet\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"03884371\", \"03885033\", \"03885153\", \"03885279\", \"05135635\"]}");
	add("03885402", "{\"term\":\"palette\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03885402\", \"03884371\", \"05135635\"]}");
	add("03885402", "{\"term\":\"pallette\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03885402\"]}");
	add("03885551", "{\"term\":\"alleviant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03885551\"]}");
	add("03885551", "{\"term\":\"alleviator\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03885551\", \"09803884\"]}");
	add("03885551", "{\"term\":\"palliative\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03885551\"]}");
	add("03885729", "{\"term\":\"pallium\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03885729\", \"03885826\", \"05251388\", \"05494162\"]}");
	add("03885826", "{\"term\":\"pallium\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03885729\", \"03885826\", \"05251388\", \"05494162\"]}");
	add("03886020", "{\"term\":\"pan\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"02484260\", \"03886020\", \"09591370\", \"03886228\"]}");
	add("03886228", "{\"term\":\"cooking pan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03886228\"]}");
	add("03886228", "{\"term\":\"pan\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"02484260\", \"03886020\", \"09591370\", \"03886228\"]}");
	add("03886467", "{\"term\":\"catholicon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03886467\"]}");
	add("03886467", "{\"term\":\"cure-all\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03886467\"]}");
	add("03886467", "{\"term\":\"nostrum\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03837845\", \"03886467\"]}");
	add("03886467", "{\"term\":\"panacea\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03886467\", \"09586171\"]}");
	add("03886648", "{\"term\":\"panache\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03886648\", \"04820120\"]}");
	add("03886731", "{\"term\":\"panama canal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03886731\"]}");
	add("03886904", "{\"term\":\"panatela\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03886904\"]}");
	add("03886904", "{\"term\":\"panetela\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03886904\"]}");
	add("03886904", "{\"term\":\"panetella\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03886904\"]}");
	add("03887002", "{\"term\":\"pancake turner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03887002\"]}");
	add("03887101", "{\"term\":\"panchromatic film\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03887101\"]}");
	add("03887231", "{\"term\":\"panda car\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03887231\"]}");
	add("03887322", "{\"term\":\"pandora\u0027s box\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03887322\"]}");
	add("03887590", "{\"term\":\"pane\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02678511\", \"03888308\", \"03887590\"]}");
	add("03887590", "{\"term\":\"pane of glass\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03887590\"]}");
	add("03887590", "{\"term\":\"window glass\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03887590\"]}");
	add("03887755", "{\"term\":\"panel\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"03102791\", \"03191952\", \"03453197\", \"03888043\", \"08431338\", \"08431565\", \"08431764\", \"03887755\"]}");
	add("03888043", "{\"term\":\"panel\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"03102791\", \"03191952\", \"03453197\", \"03888043\", \"08431338\", \"08431565\", \"08431764\", \"03887755\"]}");
	add("03888127", "{\"term\":\"panel heating\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03888127\"]}");
	add("03888308", "{\"term\":\"pane\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02678511\", \"03888308\", \"03887590\"]}");
	add("03888308", "{\"term\":\"paneling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03888308\"]}");
	add("03888308", "{\"term\":\"panelling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03888308\"]}");
	add("03888558", "{\"term\":\"panel light\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03888558\"]}");
	add("03888657", "{\"term\":\"panhandle\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03888657\", \"08631932\"]}");
	add("03888751", "{\"term\":\"panic button\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03888751\"]}");
	add("03888975", "{\"term\":\"pannier\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03888975\", \"03889082\", \"03889221\"]}");
	add("03889082", "{\"term\":\"pannier\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03888975\", \"03889082\", \"03889221\"]}");
	add("03889221", "{\"term\":\"pannier\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03888975\", \"03889082\", \"03889221\"]}");
	add("03889361", "{\"term\":\"pannikin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03889361\"]}");
	add("03889470", "{\"term\":\"panopticon\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03889470\", \"03889641\"]}");
	add("03889641", "{\"term\":\"panopticon\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03889470\", \"03889641\"]}");
	add("03889769", "{\"term\":\"cyclorama\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03889769\"]}");
	add("03889769", "{\"term\":\"diorama\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03889769\"]}");
	add("03889769", "{\"term\":\"panorama\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03889769\", \"05941982\"]}");
	add("03889929", "{\"term\":\"panoramic sight\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03889929\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }