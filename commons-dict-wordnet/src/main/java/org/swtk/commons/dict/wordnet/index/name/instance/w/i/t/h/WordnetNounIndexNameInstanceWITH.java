package org.swtk.commons.dict.wordnet.index.name.instance.w.i.t.h;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceWITH {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"withdrawal\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00229778\", \"00385741\", \"00850689\", \"01205289\", \"01265361\", \"07521270\", \"00054733\", \"01265206\", \"07220962\"]}");
	add("{\"term\":\"withdrawer\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"10804471\", \"10804598\", \"10804761\", \"10804879\", \"10805009\", \"10805156\"]}");
	add("{\"term\":\"withdrawnness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04664353\"]}");
	add("{\"term\":\"withe\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13185301\", \"04603724\"]}");
	add("{\"term\":\"withering\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07441660\"]}");
	add("{\"term\":\"withers\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02465233\"]}");
	add("{\"term\":\"witherspoon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11413541\"]}");
	add("{\"term\":\"withholder\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10805250\", \"10805371\"]}");
	add("{\"term\":\"withholding\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00812455\", \"13332390\", \"00362018\"]}");
	add("{\"term\":\"withstander\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09638241\", \"10805545\"]}");
	add("{\"term\":\"withy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13185301\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public boolean has(final String TERM) { 		return map.containsKey(TERM); 	} }