package org.swtk.commons.dict.wordnet.index.name.instance.o.b.s.e;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceOBSE {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"obsequiousness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04913889\"]}");
	add("{\"term\":\"obsequy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07466063\"]}");
	add("{\"term\":\"observance\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"01206909\", \"05711376\", \"07465442\", \"00881437\"]}");
	add("{\"term\":\"observation\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"05711376\", \"05826885\", \"06779826\", \"00881437\", \"01004898\"]}");
	add("{\"term\":\"observatory\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03694269\", \"03845191\"]}");
	add("{\"term\":\"observer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10389227\", \"09649777\"]}");
	add("{\"term\":\"obsession\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05708366\", \"09206152\"]}");
	add("{\"term\":\"obsessive\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10368720\"]}");
	add("{\"term\":\"obsessiveness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04633419\"]}");
	add("{\"term\":\"obsessivity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04633419\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }