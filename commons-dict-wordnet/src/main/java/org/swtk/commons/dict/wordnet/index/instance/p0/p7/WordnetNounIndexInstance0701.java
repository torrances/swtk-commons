package org.swtk.commons.dict.wordnet.index.instance.p0.p7;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexInstance0701 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("07010028", "{\"term\":\"aku\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07010028\"]}");
	add("07010028", "{\"term\":\"yoruba\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07010028\", \"09757624\"]}");
	add("07010146", "{\"term\":\"akan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07010146\"]}");
	add("07010247", "{\"term\":\"ewe\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02414645\", \"07010247\", \"09724683\"]}");
	add("07010357", "{\"term\":\"nilo-saharan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07010357\"]}");
	add("07010357", "{\"term\":\"nilo-saharan language\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07010357\"]}");
	add("07010598", "{\"term\":\"chari-nile\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07010598\"]}");
	add("07010768", "{\"term\":\"nilotic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07010768\"]}");
	add("07010768", "{\"term\":\"nilotic language\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07010768\"]}");
	add("07010982", "{\"term\":\"dinka\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07010982\"]}");
	add("07011052", "{\"term\":\"luo\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07011052\"]}");
	add("07011120", "{\"term\":\"masai\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07011120\"]}");
	add("07011190", "{\"term\":\"saharan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07011190\"]}");
	add("07011291", "{\"term\":\"songhai\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07011291\"]}");
	add("07011408", "{\"term\":\"art\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"07011408\", \"05646832\", \"00935235\", \"02746552\"]}");
	add("07011408", "{\"term\":\"artwork\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07011408\"]}");
	add("07011408", "{\"term\":\"graphics\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03458929\", \"07011408\"]}");
	add("07011408", "{\"term\":\"nontextual matter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07011408\"]}");
	add("07011705", "{\"term\":\"graphic design\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07011705\"]}");
	add("07011893", "{\"term\":\"illustration\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03566525\", \"05828980\", \"06893583\", \"07011893\"]}");
	add("07012096", "{\"term\":\"pictorial matter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07012096\"]}");
	add("07012096", "{\"term\":\"picture\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"03931348\", \"05774074\", \"07216464\", \"06288456\", \"06626039\", \"07012096\", \"13960108\", \"05945422\", \"03882197\", \"03937282\"]}");
	add("07012307", "{\"term\":\"fig\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"07769089\", \"08049347\", \"12422189\", \"07012307\"]}");
	add("07012307", "{\"term\":\"figure\", \"synsetCount\":13, \"upperType\":\"NOUN\", \"ids\":[\"00558029\", \"03183448\", \"05939172\", \"07120141\", \"05128718\", \"04683003\", \"13352649\", \"13885383\", \"10364174\", \"03340545\", \"13763162\", \"05224424\", \"07012307\"]}");
	add("07012462", "{\"term\":\"chart\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06500907\", \"03013574\", \"07012462\"]}");
	add("07012462", "{\"term\":\"graph\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06831828\", \"07012462\", \"07012937\"]}");
	add("07012805", "{\"term\":\"plot\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"07012805\", \"06384937\", \"08692477\", \"05916276\"]}");
	add("07012937", "{\"term\":\"graph\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06831828\", \"07012462\", \"07012937\"]}");
	add("07012937", "{\"term\":\"graphical record\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07012937\"]}");
	add("07012937", "{\"term\":\"graphical recording\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07012937\"]}");
	add("07013504", "{\"term\":\"frequency-response characteristic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07013504\"]}");
	add("07013504", "{\"term\":\"frequency-response curve\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07013504\"]}");
	add("07013729", "{\"term\":\"curve\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"02832880\", \"05079832\", \"00108695\", \"07013729\", \"13890262\"]}");
	add("07013853", "{\"term\":\"characterisic function\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07013853\"]}");
	add("07013853", "{\"term\":\"characteristic curve\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07013853\"]}");
	add("07014082", "{\"term\":\"organization chart\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07014082\"]}");
	add("07014234", "{\"term\":\"color chart\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07014234\"]}");
	add("07014335", "{\"term\":\"color circle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07014335\"]}");
	add("07014335", "{\"term\":\"color wheel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07014335\"]}");
	add("07014505", "{\"term\":\"bar chart\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07014505\"]}");
	add("07014505", "{\"term\":\"bar graph\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07014505\"]}");
	add("07014653", "{\"term\":\"histogram\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07014653\"]}");
	add("07014810", "{\"term\":\"eye chart\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07014810\"]}");
	add("07014934", "{\"term\":\"flip chart\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07014934\"]}");
	add("07015100", "{\"term\":\"slide chart\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07015100\"]}");
	add("07015315", "{\"term\":\"volvelle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07015315\"]}");
	add("07015315", "{\"term\":\"wheel chart\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07015315\"]}");
	add("07015428", "{\"term\":\"pie chart\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07015428\"]}");
	add("07015575", "{\"term\":\"star chart\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07015575\"]}");
	add("07015715", "{\"term\":\"profile\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"08565990\", \"14457795\", \"06528395\", \"08630777\", \"07015715\"]}");
	add("07015979", "{\"term\":\"population profile\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07015979\"]}");
	add("07016108", "{\"term\":\"tabular matter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07016108\"]}");
	add("07016108", "{\"term\":\"tabulation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00653902\", \"07016108\"]}");
	add("07016235", "{\"term\":\"drawing\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00116487\", \"00392901\", \"00509102\", \"00937756\", \"03239009\", \"07016235\"]}");
	add("07016468", "{\"term\":\"cartoon strip\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07016468\"]}");
	add("07016468", "{\"term\":\"comic strip\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07016468\"]}");
	add("07016468", "{\"term\":\"funnies\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07016468\"]}");
	add("07016468", "{\"term\":\"strip\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00532527\", \"04346716\", \"07016468\", \"02695929\", \"04346369\", \"09472659\"]}");
	add("07016684", "{\"term\":\"frame\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"00463177\", \"03395829\", \"03396616\", \"04233599\", \"05593033\", \"05670948\", \"06582981\", \"07016684\", \"15280615\", \"05224424\", \"03396310\", \"03396147\"]}");
	add("07016788", "{\"term\":\"ballistocardiogram\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07016788\"]}");
	add("07016923", "{\"term\":\"echoencephalogram\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07016923\"]}");
	add("07017051", "{\"term\":\"echocardiogram\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07017051\"]}");
	add("07017173", "{\"term\":\"cardiogram\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07017173\"]}");
	add("07017173", "{\"term\":\"ecg\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07017173\"]}");
	add("07017173", "{\"term\":\"ekg\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07017173\"]}");
	add("07017173", "{\"term\":\"electrocardiogram\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07017173\"]}");
	add("07017357", "{\"term\":\"eeg\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07017357\"]}");
	add("07017357", "{\"term\":\"electroencephalogram\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07017357\"]}");
	add("07017357", "{\"term\":\"encephalogram\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03290641\", \"07017357\"]}");
	add("07017538", "{\"term\":\"electromyogram\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07017538\"]}");
	add("07017538", "{\"term\":\"emg\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07017538\"]}");
	add("07017680", "{\"term\":\"electroretinogram\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07017680\"]}");
	add("07017854", "{\"term\":\"laffer curve\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07017854\"]}");
	add("07018078", "{\"term\":\"learning curve\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07018078\"]}");
	add("07018274", "{\"term\":\"myogram\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07018274\"]}");
	add("07018386", "{\"term\":\"pattern\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"07018386\", \"08509757\", \"05910921\", \"05947513\", \"05675457\", \"03183448\", \"00411260\", \"05939522\"]}");
	add("07018386", "{\"term\":\"radiation diagram\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07018386\"]}");
	add("07018386", "{\"term\":\"radiation pattern\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07018386\"]}");
	add("07018639", "{\"term\":\"lobe\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03686060\", \"07018639\", \"13182404\", \"05500955\"]}");
	add("07018831", "{\"term\":\"major lobe\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07018831\"]}");
	add("07019013", "{\"term\":\"tachogram\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07019013\"]}");
	add("07019134", "{\"term\":\"thermogram\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07019134\"]}");
	add("07019235", "{\"term\":\"dramatic art\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07019235\"]}");
	add("07019235", "{\"term\":\"dramatics\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07019235\", \"00888134\"]}");
	add("07019235", "{\"term\":\"dramaturgy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07019235\"]}");
	add("07019235", "{\"term\":\"theater\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08569203\", \"07019235\", \"04424944\"]}");
	add("07019235", "{\"term\":\"theatre\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08569203\", \"07019235\", \"04424944\"]}");
	add("07019828", "{\"term\":\"stage\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"04304087\", \"08664141\", \"00307726\", \"04304236\", \"07019828\", \"04303700\", \"13962925\", \"15315573\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }