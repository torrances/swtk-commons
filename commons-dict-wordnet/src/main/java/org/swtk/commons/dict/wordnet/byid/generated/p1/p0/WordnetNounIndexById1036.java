package org.swtk.commons.dict.wordnet.byid.generated.p1.p0;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexById1036 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("10360025", "{\"term\":\"instrumentalist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10360025\"]}");
	add("10360025", "{\"term\":\"musician\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10359679\", \"10360025\"]}");
	add("10360025", "{\"term\":\"player\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"10421528\", \"10460154\", \"09784701\", \"10360025\", \"10459618\"]}");
	add("10360974", "{\"term\":\"musicologist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10360974\"]}");
	add("10361074", "{\"term\":\"music teacher\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10361074\"]}");
	add("10361177", "{\"term\":\"musketeer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10361177\"]}");
	add("10361304", "{\"term\":\"muslimah\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10361304\"]}");
	add("10361391", "{\"term\":\"mutant\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01326946\", \"10361391\"]}");
	add("10361391", "{\"term\":\"mutation\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07312429\", \"07439611\", \"10361391\"]}");
	add("10361391", "{\"term\":\"sport\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"06793739\", \"10361391\", \"10658320\", \"10658445\", \"10658636\", \"00434156\", \"00524569\"]}");
	add("10361391", "{\"term\":\"variation\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"00196043\", \"00530138\", \"10361391\", \"11435198\", \"13593527\", \"13916003\", \"04528994\", \"05849159\", \"07043499\", \"00195818\", \"07351990\"]}");
	add("10361686", "{\"term\":\"maimer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10361686\"]}");
	add("10361686", "{\"term\":\"mangler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10361686\"]}");
	add("10361686", "{\"term\":\"mutilator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10361686\"]}");
	add("10361911", "{\"term\":\"mutineer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10361911\"]}");
	add("10362098", "{\"term\":\"deaf-and-dumb person\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10362098\"]}");
	add("10362098", "{\"term\":\"deaf-mute\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10362098\"]}");
	add("10362098", "{\"term\":\"mute\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03808513\", \"10362098\"]}");
	add("10362274", "{\"term\":\"mumbler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10362274\"]}");
	add("10362274", "{\"term\":\"murmurer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10362274\"]}");
	add("10362274", "{\"term\":\"mutterer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10362274\"]}");
	add("10362501", "{\"term\":\"moujik\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10362501\"]}");
	add("10362501", "{\"term\":\"mujik\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10362501\"]}");
	add("10362501", "{\"term\":\"muzhik\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10362501\"]}");
	add("10362501", "{\"term\":\"muzjik\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10362501\"]}");
	add("10362624", "{\"term\":\"muzzler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10362624\"]}");
	add("10362723", "{\"term\":\"mycenaen\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10362723\"]}");
	add("10362819", "{\"term\":\"mycologist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10362819\"]}");
	add("10362942", "{\"term\":\"mycophage\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10362942\"]}");
	add("10362942", "{\"term\":\"mycophagist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10362942\"]}");
	add("10363086", "{\"term\":\"myope\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10363086\"]}");
	add("10363180", "{\"term\":\"myrmidon\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09620802\", \"10363180\"]}");
	add("10363285", "{\"term\":\"mystic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10363285\"]}");
	add("10363285", "{\"term\":\"religious mystic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10363285\"]}");
	add("10363600", "{\"term\":\"mythologist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10363600\"]}");
	add("10363735", "{\"term\":\"nabob\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10363735\", \"10368483\"]}");
	add("10363852", "{\"term\":\"naif\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10363852\"]}");
	add("10363934", "{\"term\":\"nailer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10363934\"]}");
	add("10364050", "{\"term\":\"namby-pamby\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10364050\"]}");
	add("10364174", "{\"term\":\"figure\", \"synsetCount\":13, \"upperType\":\"NOUN\", \"ids\":[\"00558029\", \"03183448\", \"05939172\", \"07120141\", \"05128718\", \"04683003\", \"13352649\", \"13885383\", \"10364174\", \"03340545\", \"13763162\", \"05224424\", \"07012307\"]}");
	add("10364174", "{\"term\":\"name\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"06733713\", \"01141957\", \"10364174\", \"07988726\", \"14462254\", \"06344646\"]}");
	add("10364174", "{\"term\":\"public figure\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10364174\"]}");
	add("10364387", "{\"term\":\"name dropper\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10364387\"]}");
	add("10364505", "{\"term\":\"namer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10364505\"]}");
	add("10364653", "{\"term\":\"namesake\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10364653\"]}");
	add("10364746", "{\"term\":\"nan\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"07700034\", \"09387851\", \"10162267\", \"10364746\"]}");
	add("10364831", "{\"term\":\"nanny\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02419610\", \"10364831\"]}");
	add("10364831", "{\"term\":\"nurse\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10364831\", \"10386665\"]}");
	add("10364831", "{\"term\":\"nursemaid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10364831\"]}");
	add("10365033", "{\"term\":\"narc\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10365033\"]}");
	add("10365033", "{\"term\":\"narcotics agent\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10365033\"]}");
	add("10365033", "{\"term\":\"nark\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10365033\", \"10365390\"]}");
	add("10365153", "{\"term\":\"narcissist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10365153\"]}");
	add("10365153", "{\"term\":\"narcist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10365153\"]}");
	add("10365287", "{\"term\":\"narcoleptic\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03813964\", \"10365287\"]}");
	add("10365390", "{\"term\":\"copper\u0027s nark\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10365390\"]}");
	add("10365390", "{\"term\":\"nark\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10365033\", \"10365390\"]}");
	add("10365535", "{\"term\":\"narrator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10365535\"]}");
	add("10365535", "{\"term\":\"storyteller\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10679772\", \"10365535\"]}");
	add("10365535", "{\"term\":\"teller\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"10365535\", \"10718466\", \"10718595\", \"11355036\"]}");
	add("10365746", "{\"term\":\"nationalist\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10365746\", \"10427055\"]}");
	add("10365929", "{\"term\":\"nationalist leader\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10365929\"]}");
	add("10366123", "{\"term\":\"natural\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01248497\", \"06880268\", \"10366123\"]}");
	add("10366245", "{\"term\":\"natural scientist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10366245\"]}");
	add("10366245", "{\"term\":\"naturalist\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10366245\", \"10366686\"]}");
	add("10366686", "{\"term\":\"naturalist\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10366245\", \"10366686\"]}");
	add("10366841", "{\"term\":\"naturopath\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10366841\"]}");
	add("10366935", "{\"term\":\"nautch girl\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10366935\"]}");
	add("10367029", "{\"term\":\"naval attache\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10367029\"]}");
	add("10367177", "{\"term\":\"naval commander\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10367177\"]}");
	add("10367324", "{\"term\":\"naval officer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10367324\"]}");
	add("10367614", "{\"term\":\"navigator\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10367614\", \"10368096\", \"10565985\"]}");
	add("10368096", "{\"term\":\"navigator\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10367614\", \"10368096\", \"10565985\"]}");
	add("10368257", "{\"term\":\"navy seal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10368257\"]}");
	add("10368257", "{\"term\":\"seal\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"02078848\", \"04166415\", \"04166606\", \"06718747\", \"06869035\", \"10368257\", \"14790219\", \"04166119\", \"04167097\"]}");
	add("10368483", "{\"term\":\"nabob\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10363735\", \"10368483\"]}");
	add("10368483", "{\"term\":\"nawab\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10368483\"]}");
	add("10368605", "{\"term\":\"oblate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10368605\"]}");
	add("10368720", "{\"term\":\"obsessive\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10368720\"]}");
	add("10368821", "{\"term\":\"obsessive-compulsive\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10368821\"]}");
	add("10368974", "{\"term\":\"obstructer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03845513\", \"10368974\"]}");
	add("10368974", "{\"term\":\"obstructionist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10368974\"]}");
	add("10368974", "{\"term\":\"obstructor\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03845513\", \"10368974\"]}");
	add("10368974", "{\"term\":\"resister\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09792668\", \"10368974\"]}");
	add("10368974", "{\"term\":\"thwarter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10368974\"]}");
	add("10369282", "{\"term\":\"naysayer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10369282\"]}");
	add("10369401", "{\"term\":\"nazarene\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10369401\", \"10369481\", \"10369567\"]}");
	add("10369481", "{\"term\":\"nazarene\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10369401\", \"10369481\", \"10369567\"]}");
	add("10369567", "{\"term\":\"ebionite\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10369567\"]}");
	add("10369567", "{\"term\":\"nazarene\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10369401\", \"10369481\", \"10369567\"]}");
	add("10369951", "{\"term\":\"german nazi\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10369951\"]}");
	add("10369951", "{\"term\":\"nazi\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10370215\", \"10369951\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }