package org.swtk.commons.dict.wordnet.index.name.controller.e.b;  import java.util.Collection; import java.util.Set; import java.util.TreeSet;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  	import org.swtk.commons.dict.wordnet.index.name.instance.e.b.b.i.WordnetNounIndexNameInstanceEBBI;
	import org.swtk.commons.dict.wordnet.index.name.instance.e.b.b.t.WordnetNounIndexNameInstanceEBBT;
	import org.swtk.commons.dict.wordnet.index.name.instance.e.b.e.n.WordnetNounIndexNameInstanceEBEN;
	import org.swtk.commons.dict.wordnet.index.name.instance.e.b.i.o.WordnetNounIndexNameInstanceEBIO;
	import org.swtk.commons.dict.wordnet.index.name.instance.e.b.i.t.WordnetNounIndexNameInstanceEBIT;
	import org.swtk.commons.dict.wordnet.index.name.instance.e.b.l.i.WordnetNounIndexNameInstanceEBLI;
	import org.swtk.commons.dict.wordnet.index.name.instance.e.b.o.l.WordnetNounIndexNameInstanceEBOL;
	import org.swtk.commons.dict.wordnet.index.name.instance.e.b.o.n.WordnetNounIndexNameInstanceEBON;
	import org.swtk.commons.dict.wordnet.index.name.instance.e.b.r.o.WordnetNounIndexNameInstanceEBRO;
	import org.swtk.commons.dict.wordnet.index.name.instance.e.b.u.l.WordnetNounIndexNameInstanceEBUL;
	import org.swtk.commons.dict.wordnet.index.name.instance.e.b.u.r.WordnetNounIndexNameInstanceEBUR;
  import com.trimc.blogger.commons.exception.BusinessException;  public final class WordnetNounIndexNameControllerEB {  	public static Collection<IndexNoun> get(final String TERM) throws BusinessException {  		String key = TERM.substring(0, 4).toLowerCase(); 			if ("ebbi".equals(key)) return WordnetNounIndexNameInstanceEBBI.get(TERM);
	if ("ebbt".equals(key)) return WordnetNounIndexNameInstanceEBBT.get(TERM);
	if ("eben".equals(key)) return WordnetNounIndexNameInstanceEBEN.get(TERM);
	if ("ebio".equals(key)) return WordnetNounIndexNameInstanceEBIO.get(TERM);
	if ("ebit".equals(key)) return WordnetNounIndexNameInstanceEBIT.get(TERM);
	if ("ebli".equals(key)) return WordnetNounIndexNameInstanceEBLI.get(TERM);
	if ("ebol".equals(key)) return WordnetNounIndexNameInstanceEBOL.get(TERM);
	if ("ebon".equals(key)) return WordnetNounIndexNameInstanceEBON.get(TERM);
	if ("ebro".equals(key)) return WordnetNounIndexNameInstanceEBRO.get(TERM);
	if ("ebul".equals(key)) return WordnetNounIndexNameInstanceEBUL.get(TERM);
	if ("ebur".equals(key)) return WordnetNounIndexNameInstanceEBUR.get(TERM);
  		throw new BusinessException("TERM not found (id = %s)", TERM); 	} 	 	public static Collection<String> terms() throws BusinessException { 		Set<String> set = new TreeSet<String>();  			set.addAll(WordnetNounIndexNameInstanceEBBI.terms());
	set.addAll(WordnetNounIndexNameInstanceEBBT.terms());
	set.addAll(WordnetNounIndexNameInstanceEBEN.terms());
	set.addAll(WordnetNounIndexNameInstanceEBIO.terms());
	set.addAll(WordnetNounIndexNameInstanceEBIT.terms());
	set.addAll(WordnetNounIndexNameInstanceEBLI.terms());
	set.addAll(WordnetNounIndexNameInstanceEBOL.terms());
	set.addAll(WordnetNounIndexNameInstanceEBON.terms());
	set.addAll(WordnetNounIndexNameInstanceEBRO.terms());
	set.addAll(WordnetNounIndexNameInstanceEBUL.terms());
	set.addAll(WordnetNounIndexNameInstanceEBUR.terms());
  		return set; 	} }