package org.swtk.commons.dict.wordnet.index.byid.instance.p0.p4;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0409 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("04090225", "{\"term\":\"reticulation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04090225\", \"13571958\"]}");
	add("04090421", "{\"term\":\"reticule\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04089998\", \"04090421\"]}");
	add("04090580", "{\"term\":\"restoration\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"01310097\", \"04070101\", \"04090580\", \"14447921\", \"00090171\", \"00269401\", \"15286679\"]}");
	add("04090761", "{\"term\":\"retort\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04090761\", \"07214582\"]}");
	add("04090912", "{\"term\":\"retractor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04090912\"]}");
	add("04091054", "{\"term\":\"recap\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04091054\", \"06481048\"]}");
	add("04091054", "{\"term\":\"retread\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04091054\"]}");
	add("04091201", "{\"term\":\"retrenchment\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00193759\", \"04091201\"]}");
	add("04091346", "{\"term\":\"retrofit\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00364879\", \"04091346\"]}");
	add("04091475", "{\"term\":\"retrorocket\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04091475\"]}");
	add("04091629", "{\"term\":\"return\", \"synsetCount\":13, \"upperType\":\"NOUN\", \"ids\":[\"00051707\", \"00560761\", \"00567335\", \"01237294\", \"04091629\", \"07214582\", \"07357963\", \"13281089\", \"00328841\", \"00090171\", \"07461622\", \"00052012\", \"06560662\"]}");
	add("04091629", "{\"term\":\"return key\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04091629\"]}");
	add("04091794", "{\"term\":\"reverberatory furnace\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04091794\"]}");
	add("04092001", "{\"term\":\"revere\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04092001\", \"11278491\"]}");
	add("04092001", "{\"term\":\"revers\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04092001\"]}");
	add("04092129", "{\"term\":\"reverse\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00347519\", \"00560953\", \"04092293\", \"07491010\", \"04092129\", \"13880801\"]}");
	add("04092129", "{\"term\":\"reverse gear\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04092129\"]}");
	add("04092293", "{\"term\":\"reverse\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00347519\", \"00560953\", \"04092293\", \"07491010\", \"04092129\", \"13880801\"]}");
	add("04092293", "{\"term\":\"verso\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04092293\", \"06268146\"]}");
	add("04092477", "{\"term\":\"reverse transcriptase inhibitor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04092477\"]}");
	add("04092686", "{\"term\":\"reversible\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04092686\"]}");
	add("04092858", "{\"term\":\"reversing thermometer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04092858\"]}");
	add("04092985", "{\"term\":\"revetement\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04092985\"]}");
	add("04092985", "{\"term\":\"revetment\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04092985\", \"04093178\"]}");
	add("04092985", "{\"term\":\"stone facing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04092985\"]}");
	add("04093178", "{\"term\":\"revetment\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04092985\", \"04093178\"]}");
	add("04093262", "{\"term\":\"reviewing stand\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04093262\"]}");
	add("04093385", "{\"term\":\"revolver\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04093558\", \"04093385\"]}");
	add("04093385", "{\"term\":\"six-gun\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04093385\"]}");
	add("04093385", "{\"term\":\"six-shooter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04093385\"]}");
	add("04093558", "{\"term\":\"revolver\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04093558\", \"04093385\"]}");
	add("04093558", "{\"term\":\"revolving door\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04093558\", \"08256943\"]}");
	add("04093775", "{\"term\":\"rheometer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04093775\"]}");
	add("04093906", "{\"term\":\"rheostat\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04093906\"]}");
	add("04093906", "{\"term\":\"variable resistor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04093906\"]}");
	add("04094049", "{\"term\":\"rhinoscope\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04094049\"]}");
	add("04094238", "{\"term\":\"rib\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"04094402\", \"05243209\", \"06780484\", \"07672350\", \"05286525\", \"04094238\"]}");
	add("04094402", "{\"term\":\"rib\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"04094402\", \"05243209\", \"06780484\", \"07672350\", \"05286525\", \"04094238\"]}");
	add("04094544", "{\"term\":\"riband\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04094544\"]}");
	add("04094544", "{\"term\":\"ribband\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04094544\"]}");
	add("04094636", "{\"term\":\"ribavirin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04094636\"]}");
	add("04094636", "{\"term\":\"virazole\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04094636\"]}");
	add("04094821", "{\"term\":\"ribbed vault\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04094821\"]}");
	add("04094938", "{\"term\":\"ribbing\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00426908\", \"04094938\"]}");
	add("04095011", "{\"term\":\"ribbon\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04095011\", \"04095170\", \"06719615\", \"09432081\"]}");
	add("04095170", "{\"term\":\"ribbon\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04095011\", \"04095170\", \"06719615\", \"09432081\"]}");
	add("04095170", "{\"term\":\"typewriter ribbon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04095170\"]}");
	add("04095341", "{\"term\":\"ribbon development\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04095341\"]}");
	add("04095455", "{\"term\":\"rib joint pliers\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04095455\"]}");
	add("04095553", "{\"term\":\"ricer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04095553\"]}");
	add("04095705", "{\"term\":\"rickrack\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04095705\"]}");
	add("04095705", "{\"term\":\"ricrac\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04095705\"]}");
	add("04095808", "{\"term\":\"riddle\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04095808\", \"06798080\"]}");
	add("04095909", "{\"term\":\"ride\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04095909\", \"00308457\"]}");
	add("04096094", "{\"term\":\"rider plate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04096094\"]}");
	add("04096264", "{\"term\":\"ridge\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"04096264\", \"05611097\", \"09432630\", \"09432776\", \"13924741\", \"09432390\"]}");
	add("04096264", "{\"term\":\"ridgepole\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04096264\"]}");
	add("04096264", "{\"term\":\"rooftree\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04096264\"]}");
	add("04096488", "{\"term\":\"ridge rope\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04096488\"]}");
	add("04096634", "{\"term\":\"riding bitt\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04096634\"]}");
	add("04096778", "{\"term\":\"riding boot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04096778\"]}");
	add("04096948", "{\"term\":\"hunting crop\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04096948\"]}");
	add("04096948", "{\"term\":\"riding crop\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04096948\"]}");
	add("04097088", "{\"term\":\"riding mower\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04097088\"]}");
	add("04097176", "{\"term\":\"rifadin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04097176\"]}");
	add("04097176", "{\"term\":\"rifampin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04097176\"]}");
	add("04097176", "{\"term\":\"rimactane\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04097176\"]}");
	add("04097375", "{\"term\":\"rifle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04097375\"]}");
	add("04097660", "{\"term\":\"rifle ball\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04097660\"]}");
	add("04097794", "{\"term\":\"rifle butt\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04097794\"]}");
	add("04097893", "{\"term\":\"rifle grenade\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04097893\"]}");
	add("04098035", "{\"term\":\"rifle range\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04098035\", \"08649520\"]}");
	add("04098209", "{\"term\":\"rig\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00781784\", \"02971932\", \"03356280\", \"03865478\", \"04098359\", \"04474900\", \"04098209\"]}");
	add("04098359", "{\"term\":\"rig\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00781784\", \"02971932\", \"03356280\", \"03865478\", \"04098359\", \"04474900\", \"04098209\"]}");
	add("04098359", "{\"term\":\"rigging\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04098359\", \"04098805\"]}");
	add("04098578", "{\"term\":\"rigger\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04098696\", \"10550437\", \"04098578\", \"10550344\"]}");
	add("04098578", "{\"term\":\"rigger brush\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04098578\"]}");
	add("04098696", "{\"term\":\"rigger\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04098696\", \"10550437\", \"04098578\", \"10550344\"]}");
	add("04098805", "{\"term\":\"rigging\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04098359\", \"04098805\"]}");
	add("04098805", "{\"term\":\"tackle\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00563022\", \"00729199\", \"03356280\", \"04098805\", \"10707566\"]}");
	add("04098951", "{\"term\":\"right\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"13362771\", \"04857572\", \"00351826\", \"05572970\", \"08433609\", \"04098951\", \"08642648\", \"05182180\"]}");
	add("04098951", "{\"term\":\"right field\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00726149\", \"04098951\"]}");
	add("04098951", "{\"term\":\"rightfield\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00726149\", \"04098951\"]}");
	add("04099125", "{\"term\":\"right of way\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04099125\", \"05195363\", \"05197087\"]}");
	add("04099280", "{\"term\":\"rigout\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04099280\"]}");
	add("04099417", "{\"term\":\"rim\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"02905554\", \"03361704\", \"04099417\", \"04099559\", \"13925029\"]}");
	add("04099559", "{\"term\":\"rim\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"02905554\", \"03361704\", \"04099417\", \"04099559\", \"13925029\"]}");
	add("04099721", "{\"term\":\"band\", \"synsetCount\":13, \"upperType\":\"NOUN\", \"ids\":[\"02788021\", \"02788214\", \"02788388\", \"02788593\", \"04099721\", \"05274710\", \"02787241\", \"06271171\", \"08266881\", \"02787755\", \"04687822\", \"08265959\", \"08257090\"]}");
	add("04099721", "{\"term\":\"ring\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"02788214\", \"04099721\", \"04100053\", \"07406463\", \"08260983\", \"09269789\", \"03539152\", \"13898031\", \"04988907\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }