package org.swtk.commons.dict.wordnet.index.byid.instance.p0.p3;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0370 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("03700087", "{\"term\":\"l-plate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03700087\"]}");
	add("03700275", "{\"term\":\"lubber\u0027s hole\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03700275\"]}");
	add("03700448", "{\"term\":\"force-feed lubricating system\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03700448\"]}");
	add("03700448", "{\"term\":\"force feed\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03700448\"]}");
	add("03700448", "{\"term\":\"lubricating system\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03700448\"]}");
	add("03700448", "{\"term\":\"pressure-feed lubricating system\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03700448\"]}");
	add("03700448", "{\"term\":\"pressure feed\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03700448\"]}");
	add("03700778", "{\"term\":\"luff\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00314797\", \"03700778\"]}");
	add("03700942", "{\"term\":\"lug\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"01939312\", \"03700942\", \"03701902\", \"09533437\"]}");
	add("03701079", "{\"term\":\"luge\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03701079\"]}");
	add("03701183", "{\"term\":\"luger\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10295637\", \"03701183\"]}");
	add("03701283", "{\"term\":\"luggage carrier\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03701283\"]}");
	add("03701391", "{\"term\":\"automobile trunk\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03701391\"]}");
	add("03701391", "{\"term\":\"boot\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00137149\", \"00423264\", \"02876605\", \"02876762\", \"07543858\", \"03701391\", \"02876113\"]}");
	add("03701391", "{\"term\":\"luggage compartment\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03701391\"]}");
	add("03701391", "{\"term\":\"trunk\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"02455598\", \"03701391\", \"05557463\", \"04499064\", \"13186713\"]}");
	add("03701635", "{\"term\":\"luggage rack\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03701635\"]}");
	add("03701635", "{\"term\":\"roof rack\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03701635\"]}");
	add("03701779", "{\"term\":\"lugger\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03701779\"]}");
	add("03701902", "{\"term\":\"lug\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"01939312\", \"03700942\", \"03701902\", \"09533437\"]}");
	add("03701902", "{\"term\":\"lugsail\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03701902\"]}");
	add("03702080", "{\"term\":\"lug wrench\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03702080\"]}");
	add("03702243", "{\"term\":\"lumber jacket\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03702243\"]}");
	add("03702243", "{\"term\":\"lumberjack\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03702243\", \"10295742\"]}");
	add("03702341", "{\"term\":\"lumbermill\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03702341\"]}");
	add("03702341", "{\"term\":\"sawmill\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03702341\", \"04147842\"]}");
	add("03702443", "{\"term\":\"lumber room\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03702443\"]}");
	add("03702599", "{\"term\":\"lumberyard\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03702599\"]}");
	add("03702700", "{\"term\":\"lem\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03702700\"]}");
	add("03702700", "{\"term\":\"lunar excursion module\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03702700\"]}");
	add("03702700", "{\"term\":\"lunar module\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03702700\"]}");
	add("03702886", "{\"term\":\"lunchroom\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03702886\"]}");
	add("03702999", "{\"term\":\"fenestella\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03702999\"]}");
	add("03702999", "{\"term\":\"lunette\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03702999\", \"03703146\"]}");
	add("03703146", "{\"term\":\"lunette\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03702999\", \"03703146\"]}");
	add("03703247", "{\"term\":\"longyi\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03703247\"]}");
	add("03703247", "{\"term\":\"lungi\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03703247\"]}");
	add("03703247", "{\"term\":\"lungyi\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03703247\"]}");
	add("03703457", "{\"term\":\"lunula\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03703457\", \"05589688\"]}");
	add("03703560", "{\"term\":\"lusterware\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03703560\"]}");
	add("03703694", "{\"term\":\"lute\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03703694\", \"14730375\"]}");
	add("03703938", "{\"term\":\"express luxury liner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03703938\"]}");
	add("03703938", "{\"term\":\"luxury liner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03703938\"]}");
	add("03704057", "{\"term\":\"lyceum\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03704057\", \"08301402\"]}");
	add("03704149", "{\"term\":\"lichgate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03704149\"]}");
	add("03704149", "{\"term\":\"lychgate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03704149\"]}");
	add("03704311", "{\"term\":\"lymphangiogram\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03704311\"]}");
	add("03704472", "{\"term\":\"lypressin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03704472\"]}");
	add("03704614", "{\"term\":\"lyre\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03704614\"]}");
	add("03704730", "{\"term\":\"lsd\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03704730\"]}");
	add("03704730", "{\"term\":\"lysergic acid diethylamide\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03704730\"]}");
	add("03704925", "{\"term\":\"machete\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03704925\"]}");
	add("03704925", "{\"term\":\"matchet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03704925\"]}");
	add("03704925", "{\"term\":\"panga\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03704925\"]}");
	add("03705088", "{\"term\":\"machicolation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03705088\"]}");
	add("03705309", "{\"term\":\"machine\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"02961779\", \"08281504\", \"03706297\", \"08281680\", \"10298363\", \"03705309\"]}");
	add("03706297", "{\"term\":\"machine\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"02961779\", \"08281504\", \"03706297\", \"08281680\", \"10298363\", \"03705309\"]}");
	add("03706297", "{\"term\":\"simple machine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03706297\"]}");
	add("03706525", "{\"term\":\"machine bolt\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03706525\"]}");
	add("03706725", "{\"term\":\"machine gun\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03706725\"]}");
	add("03706974", "{\"term\":\"machinery\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08451039\", \"03706974\"]}");
	add("03707142", "{\"term\":\"technology\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03707142\", \"06134474\", \"00951435\"]}");
	add("03707329", "{\"term\":\"machine screw\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03707329\"]}");
	add("03707486", "{\"term\":\"machine shop\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03707486\"]}");
	add("03707606", "{\"term\":\"machine stitch\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03707606\"]}");
	add("03707606", "{\"term\":\"sewing-machine stitch\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03707606\"]}");
	add("03707787", "{\"term\":\"machine tool\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03707787\"]}");
	add("03707979", "{\"term\":\"machinist\u0027s vise\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03707979\"]}");
	add("03707979", "{\"term\":\"metalworking vise\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03707979\"]}");
	add("03708121", "{\"term\":\"machmeter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03708121\"]}");
	add("03708258", "{\"term\":\"mac\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03708258\"]}");
	add("03708258", "{\"term\":\"macintosh\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03708258\", \"03709129\"]}");
	add("03708258", "{\"term\":\"mack\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03708258\"]}");
	add("03708258", "{\"term\":\"mackintosh\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03708258\", \"03709129\"]}");
	add("03708443", "{\"term\":\"mackinac bridge\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03708443\"]}");
	add("03708614", "{\"term\":\"mackinaw\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03708614\", \"03708742\", \"03708859\", \"03709002\"]}");
	add("03708742", "{\"term\":\"mackinaw\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03708614\", \"03708742\", \"03708859\", \"03709002\"]}");
	add("03708742", "{\"term\":\"mackinaw boat\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03708742\"]}");
	add("03708859", "{\"term\":\"mackinaw\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03708614\", \"03708742\", \"03708859\", \"03709002\"]}");
	add("03708859", "{\"term\":\"mackinaw blanket\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03708859\"]}");
	add("03709002", "{\"term\":\"mackinaw\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03708614\", \"03708742\", \"03708859\", \"03709002\"]}");
	add("03709002", "{\"term\":\"mackinaw coat\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03709002\"]}");
	add("03709129", "{\"term\":\"macintosh\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03708258\", \"03709129\"]}");
	add("03709129", "{\"term\":\"mackintosh\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03708258\", \"03709129\"]}");
	add("03709269", "{\"term\":\"macrame\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03709269\"]}");
	add("03709401", "{\"term\":\"madras\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03709401\", \"08924360\", \"08925435\"]}");
	add("03709484", "{\"term\":\"air jacket\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03709484\"]}");
	add("03709484", "{\"term\":\"mae west\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03709484\", \"11402273\"]}");
	add("03709577", "{\"term\":\"magazine\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"02976476\", \"03709577\", \"03709915\", \"08080139\", \"03709749\", \"06607555\"]}");
	add("03709577", "{\"term\":\"powder magazine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03709577\"]}");
	add("03709577", "{\"term\":\"powder store\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03709577\"]}");
	add("03709749", "{\"term\":\"magazine\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"02976476\", \"03709577\", \"03709915\", \"08080139\", \"03709749\", \"06607555\"]}");
	add("03709915", "{\"term\":\"cartridge\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"02975399\", \"02975641\", \"03709915\", \"02975150\"]}");
	add("03709915", "{\"term\":\"magazine\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"02976476\", \"03709577\", \"03709915\", \"08080139\", \"03709749\", \"06607555\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }