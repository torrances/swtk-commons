package org.swtk.commons.dict.wordnet.index.byid.instance.p1.p3;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance1389 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("13890113", "{\"term\":\"amorphous shape\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13890113\"]}");
	add("13890262", "{\"term\":\"curve\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"02832880\", \"05079832\", \"00108695\", \"07013729\", \"13890262\"]}");
	add("13890262", "{\"term\":\"curved shape\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13890262\"]}");
	add("13890887", "{\"term\":\"closed curve\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13890887\"]}");
	add("13891010", "{\"term\":\"jordan curve\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13891010\"]}");
	add("13891010", "{\"term\":\"simple closed curve\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13891010\"]}");
	add("13891154", "{\"term\":\"s-shape\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13891154\"]}");
	add("13891246", "{\"term\":\"catenary\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13891246\"]}");
	add("13891452", "{\"term\":\"cupid\u0027s bow\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03153298\", \"13891452\"]}");
	add("13891583", "{\"term\":\"undulation\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07360193\", \"07366648\", \"13891583\"]}");
	add("13891583", "{\"term\":\"wave\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"10790734\", \"11544884\", \"13891583\", \"05266723\", \"07288732\", \"07367435\", \"07360193\", \"00346921\", \"07366790\"]}");
	add("13891684", "{\"term\":\"extrados\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13891684\"]}");
	add("13891768", "{\"term\":\"gooseneck\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13891768\"]}");
	add("13891882", "{\"term\":\"intrados\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13891882\"]}");
	add("13891966", "{\"term\":\"bend\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"02833197\", \"09156059\", \"13930429\", \"02832880\", \"07325609\", \"13891966\"]}");
	add("13891966", "{\"term\":\"crook\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03138769\", \"13891966\", \"09997190\"]}");
	add("13891966", "{\"term\":\"turn\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"00293443\", \"01229572\", \"06905066\", \"15281525\", \"15317305\", \"00346280\", \"00347358\", \"07366212\", \"07437965\", \"00458406\", \"00350856\", \"13891966\"]}");
	add("13891966", "{\"term\":\"twist\", \"synsetCount\":13, \"upperType\":\"NOUN\", \"ids\":[\"00346280\", \"00346467\", \"00535668\", \"05266995\", \"07366509\", \"07447573\", \"13891966\", \"13900557\", \"14322572\", \"00344075\", \"00172070\", \"07188610\", \"07437965\"]}");
	add("13892186", "{\"term\":\"crotchet\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03142779\", \"04805073\", \"06884177\", \"13892186\"]}");
	add("13892186", "{\"term\":\"hook\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"00112178\", \"00136619\", \"00573322\", \"03537522\", \"03537852\", \"05703197\", \"13892186\", \"03538099\"]}");
	add("13892315", "{\"term\":\"uncus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13892315\"]}");
	add("13892427", "{\"term\":\"envelope\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"03296874\", \"05211741\", \"09296682\", \"13892427\", \"03296652\", \"03296730\"]}");
	add("13892535", "{\"term\":\"bight\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"02840781\", \"09243146\", \"13892535\", \"13898523\"]}");
	add("13892630", "{\"term\":\"straight line\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13892630\"]}");
	add("13893053", "{\"term\":\"geodesic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13893053\"]}");
	add("13893053", "{\"term\":\"geodesic line\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13893053\"]}");
	add("13893319", "{\"term\":\"perpendicular\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03924095\", \"03975985\", \"05851763\", \"13893319\"]}");
	add("13893444", "{\"term\":\"connection\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00146038\", \"00317815\", \"09975514\", \"13893444\", \"05771913\", \"09975626\", \"03095830\", \"14442568\", \"13813601\"]}");
	add("13893444", "{\"term\":\"connexion\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00146038\", \"00317815\", \"03095830\", \"05771913\", \"13813601\", \"13893444\"]}");
	add("13893444", "{\"term\":\"link\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"03679596\", \"04049875\", \"06271913\", \"06598647\", \"13676395\", \"13893444\", \"14442568\", \"03679297\", \"13814904\"]}");
	add("13893574", "{\"term\":\"asymptote\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13893574\"]}");
	add("13893773", "{\"term\":\"tangent\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13810247\", \"13893773\"]}");
	add("13893977", "{\"term\":\"secant\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13810902\", \"13893977\"]}");
	add("13894091", "{\"term\":\"perimeter\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"05108523\", \"13894091\", \"13926393\"]}");
	add("13894177", "{\"term\":\"radius\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"04290516\", \"05601073\", \"08646153\", \"13894177\", \"05109363\"]}");
	add("13894356", "{\"term\":\"diameter\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13894356\", \"05109077\"]}");
	add("13894606", "{\"term\":\"center line\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13894606\"]}");
	add("13894606", "{\"term\":\"centerline\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13894606\"]}");
	add("13894711", "{\"term\":\"dome\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03225216\", \"03225395\", \"05547087\", \"13894711\"]}");
	add("13894850", "{\"term\":\"fossa\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02139104\", \"02139275\", \"13894850\"]}");
	add("13894850", "{\"term\":\"pit\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"03074400\", \"03858811\", \"03955718\", \"03955939\", \"03956037\", \"03956200\", \"03956389\", \"05637465\", \"11705208\", \"13894850\", \"09416001\"]}");
	add("13895060", "{\"term\":\"corner\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"03114344\", \"08562168\", \"09279917\", \"14432355\", \"14468538\", \"13895060\", \"08677624\", \"03114137\", \"03114532\", \"08561850\", \"08561994\"]}");
	add("13895060", "{\"term\":\"niche\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"13947369\", \"04069081\", \"13895060\", \"13949201\"]}");
	add("13895060", "{\"term\":\"recess\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"01064921\", \"04069081\", \"09336622\", \"13895060\", \"14037117\"]}");
	add("13895060", "{\"term\":\"recession\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00058306\", \"01252578\", \"08446513\", \"13895060\", \"14036839\"]}");
	add("13895231", "{\"term\":\"cone\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"05463833\", \"11703311\", \"13895231\", \"03093804\"]}");
	add("13895231", "{\"term\":\"cone shape\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13895231\"]}");
	add("13895231", "{\"term\":\"conoid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13895231\"]}");
	add("13895461", "{\"term\":\"funnel\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03408346\", \"03408558\", \"13895461\"]}");
	add("13895461", "{\"term\":\"funnel shape\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13895461\"]}");
	add("13895614", "{\"term\":\"conic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13895614\"]}");
	add("13895614", "{\"term\":\"conic section\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13895614\"]}");
	add("13895852", "{\"term\":\"intersection\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00146931\", \"05772362\", \"08015510\", \"13895852\", \"03586294\", \"05875237\"]}");
	add("13896000", "{\"term\":\"oblong\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13896000\"]}");
	add("13896141", "{\"term\":\"circle\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"03036796\", \"03037004\", \"04042970\", \"04473168\", \"00296016\", \"13896556\", \"08257090\", \"13896141\"]}");
	add("13896488", "{\"term\":\"circlet\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03037252\", \"13896488\"]}");
	add("13896556", "{\"term\":\"circle\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"03036796\", \"03037004\", \"04042970\", \"04473168\", \"00296016\", \"13896556\", \"08257090\", \"13896141\"]}");
	add("13896712", "{\"term\":\"equator\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13896712\", \"08586248\"]}");
	add("13896890", "{\"term\":\"hemicycle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13896890\"]}");
	add("13896890", "{\"term\":\"semicircle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13896890\"]}");
	add("13897023", "{\"term\":\"arc\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13918793\", \"13897023\", \"11531956\"]}");
	add("13897197", "{\"term\":\"crenation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13897197\"]}");
	add("13897197", "{\"term\":\"crenature\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13897197\"]}");
	add("13897197", "{\"term\":\"crenel\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03134991\", \"13897197\"]}");
	add("13897197", "{\"term\":\"crenelle\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03134991\", \"13897197\"]}");
	add("13897197", "{\"term\":\"scallop\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"01968530\", \"07670495\", \"07813617\", \"13897197\"]}");
	add("13897566", "{\"term\":\"chord\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06883001\", \"13897566\"]}");
	add("13897666", "{\"term\":\"sector\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"04172612\", \"08666233\", \"13647711\", \"05861665\", \"07983333\", \"13897666\"]}");
	add("13897824", "{\"term\":\"disc\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03213277\", \"03712192\", \"13897824\", \"03930191\"]}");
	add("13897824", "{\"term\":\"disk\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03712192\", \"03930191\", \"03213277\", \"13897824\"]}");
	add("13897824", "{\"term\":\"saucer\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03211323\", \"03212026\", \"04146374\", \"13897824\"]}");
	add("13898031", "{\"term\":\"anchor ring\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13898031\"]}");
	add("13898031", "{\"term\":\"annulus\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13116107\", \"13898031\"]}");
	add("13898031", "{\"term\":\"doughnut\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07654678\", \"13898031\"]}");
	add("13898031", "{\"term\":\"halo\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"11507824\", \"13898031\", \"04958893\"]}");
	add("13898031", "{\"term\":\"ring\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"02788214\", \"04099721\", \"04100053\", \"07406463\", \"08260983\", \"09269789\", \"03539152\", \"13898031\", \"04988907\"]}");
	add("13898210", "{\"term\":\"loop\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"00170632\", \"03052868\", \"03694673\", \"05738669\", \"06585033\", \"06657586\", \"08258575\", \"13525376\", \"13898210\", \"03137089\"]}");
	add("13898523", "{\"term\":\"bight\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"02840781\", \"09243146\", \"13892535\", \"13898523\"]}");
	add("13898609", "{\"term\":\"coil\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"03069712\", \"03070033\", \"03070134\", \"03070236\", \"13898609\", \"03069428\"]}");
	add("13898609", "{\"term\":\"curl\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"05265220\", \"10937871\", \"13898609\"]}");
	add("13898609", "{\"term\":\"curlicue\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06813891\", \"13898609\"]}");
	add("13898609", "{\"term\":\"gyre\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13898609\"]}");
	add("13898609", "{\"term\":\"ringlet\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"02280394\", \"04100251\", \"05265220\", \"13898609\"]}");
	add("13898609", "{\"term\":\"roll\", \"synsetCount\":15, \"upperType\":\"NOUN\", \"ids\":[\"00105229\", \"00171161\", \"00290503\", \"01248360\", \"04108326\", \"06419376\", \"07403416\", \"07403930\", \"07696677\", \"13377742\", \"13898609\", \"04108469\", \"07364132\", \"06506991\", \"07456219\"]}");
	add("13898609", "{\"term\":\"scroll\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06419376\", \"13898609\"]}");
	add("13898609", "{\"term\":\"whorl\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03069428\", \"05265220\", \"13898609\"]}");
	add("13899010", "{\"term\":\"spiral\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00344432\", \"03069428\", \"04286804\", \"13581394\", \"13899200\", \"13899010\"]}");
	add("13899200", "{\"term\":\"helix\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01947258\", \"03069428\", \"13899200\"]}");
	add("13899200", "{\"term\":\"spiral\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00344432\", \"03069428\", \"04286804\", \"13581394\", \"13899200\", \"13899010\"]}");
	add("13899392", "{\"term\":\"double helix\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13899392\"]}");
	add("13899560", "{\"term\":\"perversion\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00743772\", \"00856347\", \"13899560\"]}");
	add("13899768", "{\"term\":\"eccentricity\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"05081057\", \"13899768\", \"04806130\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }