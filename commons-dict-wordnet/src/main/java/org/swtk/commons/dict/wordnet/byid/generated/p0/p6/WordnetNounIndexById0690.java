package org.swtk.commons.dict.wordnet.byid.generated.p0.p6;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexById0690 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("06900105", "{\"term\":\"green card\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06900105\"]}");
	add("06900328", "{\"term\":\"i.d.\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06900328\"]}");
	add("06900328", "{\"term\":\"id\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"05621577\", \"06900328\", \"09103738\"]}");
	add("06900491", "{\"term\":\"personal identification number\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06900491\"]}");
	add("06900491", "{\"term\":\"pin\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"02885888\", \"03911849\", \"03946532\", \"03947170\", \"03947289\", \"03958247\", \"05569340\", \"06900491\", \"07286496\", \"07486511\", \"03946989\"]}");
	add("06900491", "{\"term\":\"pin number\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06900491\"]}");
	add("06900649", "{\"term\":\"projection\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"00117507\", \"00407911\", \"04015758\", \"11532764\", \"13563001\", \"13942718\", \"04015323\", \"05919047\", \"06900649\", \"05783290\"]}");
	add("06900776", "{\"term\":\"display\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"03215838\", \"06900776\", \"07228377\", \"03215661\", \"00522265\", \"06892571\"]}");
	add("06901012", "{\"term\":\"acting out\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06901012\", \"07027710\"]}");
	add("06901224", "{\"term\":\"array\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"02745199\", \"02745327\", \"06901224\", \"07955622\"]}");
	add("06901395", "{\"term\":\"screening\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00646210\", \"01051609\", \"04160391\", \"06901395\"]}");
	add("06901395", "{\"term\":\"showing\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00522265\", \"06901395\"]}");
	add("06901395", "{\"term\":\"viewing\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01031915\", \"06901395\"]}");
	add("06901556", "{\"term\":\"preview\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06901556\", \"06901724\"]}");
	add("06901724", "{\"term\":\"preview\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06901556\", \"06901724\"]}");
	add("06901724", "{\"term\":\"prevue\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06901724\"]}");
	add("06901724", "{\"term\":\"trailer\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04474334\", \"04474542\", \"06901724\", \"10012790\"]}");
	add("06901898", "{\"term\":\"sneak preview\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06901898\"]}");
	add("06901994", "{\"term\":\"sight\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"13796604\", \"00883327\", \"05631601\", \"06220699\", \"05662207\", \"06901994\", \"05941790\"]}");
	add("06902188", "{\"term\":\"spectacle\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00076291\", \"04279001\", \"06902188\"]}");
	add("06902380", "{\"term\":\"fanfare\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06869934\", \"06902380\"]}");
	add("06902380", "{\"term\":\"flash\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"03363018\", \"03363226\", \"06695239\", \"06887980\", \"06902380\", \"15271921\", \"05816450\", \"07301793\", \"04960363\", \"07426692\"]}");
	add("06902380", "{\"term\":\"ostentation\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04796502\", \"04825154\", \"06902380\"]}");
	add("06902641", "{\"term\":\"bluster\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"07244749\", \"11485696\", \"06902641\", \"13999629\"]}");
	add("06902641", "{\"term\":\"bravado\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06902641\"]}");
	add("06902751", "{\"term\":\"exhibitionism\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00739192\", \"06902751\"]}");
	add("06902925", "{\"term\":\"ritz\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04102203\", \"06902925\", \"11283548\"]}");
	add("06903050", "{\"term\":\"splurge\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01075748\", \"06903050\"]}");
	add("06903178", "{\"term\":\"pedantry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06903178\"]}");
	add("06903304", "{\"term\":\"brandish\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06903304\"]}");
	add("06903304", "{\"term\":\"flourish\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"06869934\", \"06903304\", \"06903423\", \"06903627\", \"06903520\"]}");
	add("06903423", "{\"term\":\"flourish\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"06869934\", \"06903304\", \"06903423\", \"06903627\", \"06903520\"]}");
	add("06903520", "{\"term\":\"flourish\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"06869934\", \"06903304\", \"06903423\", \"06903627\", \"06903520\"]}");
	add("06903627", "{\"term\":\"flourish\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"06869934\", \"06903304\", \"06903423\", \"06903627\", \"06903520\"]}");
	add("06903738", "{\"term\":\"paraph\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06903738\"]}");
	add("06903896", "{\"term\":\"flaunt\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06903896\"]}");
	add("06904072", "{\"term\":\"presentation\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"05088641\", \"07232009\", \"03215661\", \"07182066\", \"06904072\", \"00522618\", \"01050621\"]}");
	add("06904389", "{\"term\":\"unveiling\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00238889\", \"06904389\"]}");
	add("06904543", "{\"term\":\"performance\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"13546752\", \"00047847\", \"00098324\", \"00551808\", \"06904543\"]}");
	add("06904543", "{\"term\":\"public presentation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06904543\"]}");
	add("06905066", "{\"term\":\"act\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"07027143\", \"06905066\", \"07022756\", \"00030657\", \"06544086\"]}");
	add("06905066", "{\"term\":\"bit\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"02847545\", \"02848240\", \"06905066\", \"07022158\", \"07594641\", \"13646708\", \"02847952\", \"07324075\", \"15271664\", \"09244958\", \"13783547\"]}");
	add("06905066", "{\"term\":\"number\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"03840952\", \"06337519\", \"06609408\", \"05103556\", \"06436708\", \"08497523\", \"06609182\", \"06820056\", \"06437781\", \"06905066\", \"13603216\", \"05128718\"]}");
	add("06905066", "{\"term\":\"routine\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06594579\", \"06905066\", \"01028424\"]}");
	add("06905066", "{\"term\":\"turn\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"00293443\", \"01229572\", \"06905066\", \"15281525\", \"15317305\", \"00346280\", \"00347358\", \"07366212\", \"07437965\", \"00458406\", \"00350856\", \"13891966\"]}");
	add("06905397", "{\"term\":\"show-stopper\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04697291\", \"06905397\"]}");
	add("06905397", "{\"term\":\"showstopper\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04697291\", \"06905397\"]}");
	add("06905397", "{\"term\":\"stopper\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03974274\", \"04334963\", \"06781185\", \"06905397\"]}");
	add("06905573", "{\"term\":\"benefit\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06905573\", \"05149888\", \"13317922\"]}");
	add("06905696", "{\"term\":\"benefit concert\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06905696\"]}");
	add("06905814", "{\"term\":\"concert\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06905814\"]}");
	add("06906018", "{\"term\":\"rock concert\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06906018\"]}");
	add("06906104", "{\"term\":\"pianism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06906104\"]}");
	add("06906222", "{\"term\":\"play reading\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06906222\"]}");
	add("06906324", "{\"term\":\"premiere\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06906324\"]}");
	add("06906480", "{\"term\":\"recital\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"07236416\", \"07249395\", \"07249541\", \"06906480\", \"07235433\"]}");
	add("06906604", "{\"term\":\"rendering\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"01124358\", \"04082727\", \"04082827\", \"06548380\", \"00101363\", \"05774244\", \"06906604\"]}");
	add("06906604", "{\"term\":\"rendition\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00101363\", \"00422316\", \"05774244\", \"06906604\"]}");
	add("06906811", "{\"term\":\"song and dance\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06770000\", \"06906811\"]}");
	add("06906924", "{\"term\":\"histrionics\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07228549\", \"06906924\"]}");
	add("06906924", "{\"term\":\"representation\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"00900216\", \"05194979\", \"06752531\", \"06906924\", \"07218048\", \"08354035\", \"14023888\", \"01219989\", \"04083958\", \"05935308\"]}");
	add("06906924", "{\"term\":\"theatrical\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06906924\"]}");
	add("06906924", "{\"term\":\"theatrical performance\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06906924\"]}");
	add("06907150", "{\"term\":\"matinee\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06907150\"]}");
	add("06907282", "{\"term\":\"spectacular\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06907282\"]}");
	add("06907410", "{\"term\":\"world premiere\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06907410\"]}");
	add("06907583", "{\"term\":\"artificial language\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06907583\"]}");
	add("06908197", "{\"term\":\"antido\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06908197\"]}");
	add("06908287", "{\"term\":\"arulo\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06908287\"]}");
	add("06908417", "{\"term\":\"basic english\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06908417\"]}");
	add("06908622", "{\"term\":\"blaia zimondal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06908622\"]}");
	add("06908705", "{\"term\":\"esperantido\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06908705\"]}");
	add("06908812", "{\"term\":\"esperanto\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06908812\"]}");
	add("06908961", "{\"term\":\"europan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06908961\"]}");
	add("06909080", "{\"term\":\"idiom neutral\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06909080\"]}");
	add("06909325", "{\"term\":\"interlingua\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06909325\"]}");
	add("06909521", "{\"term\":\"ido\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06909521\"]}");
	add("06909644", "{\"term\":\"latinesce\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06909644\"]}");
	add("06909737", "{\"term\":\"lingualumina\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06909737\"]}");
	add("06909818", "{\"term\":\"lingvo kosmopolita\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06909818\"]}");
	add("06909905", "{\"term\":\"monario\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06909905\"]}");
	add("06909981", "{\"term\":\"nov-esperanto\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06909981\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }