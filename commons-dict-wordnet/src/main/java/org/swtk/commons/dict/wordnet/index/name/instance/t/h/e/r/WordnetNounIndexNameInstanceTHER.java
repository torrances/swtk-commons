package org.swtk.commons.dict.wordnet.index.name.instance.t.h.e.r;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceTHER {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"therapeutic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04081594\"]}");
	add("{\"term\":\"therapeutics\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06073895\"]}");
	add("{\"term\":\"theraphosidae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01777236\"]}");
	add("{\"term\":\"therapist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10726882\"]}");
	add("{\"term\":\"therapsid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01722555\"]}");
	add("{\"term\":\"therapsida\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01722286\"]}");
	add("{\"term\":\"therapy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00662334\"]}");
	add("{\"term\":\"theravada\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06251286\"]}");
	add("{\"term\":\"there\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08506637\"]}");
	add("{\"term\":\"theremin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04426777\"]}");
	add("{\"term\":\"thereness\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13982086\", \"13982207\"]}");
	add("{\"term\":\"theresa\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11355873\"]}");
	add("{\"term\":\"theridiid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01776738\"]}");
	add("{\"term\":\"theridiidae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01776571\"]}");
	add("{\"term\":\"therm\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13749319\"]}");
	add("{\"term\":\"thermal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11539078\"]}");
	add("{\"term\":\"thermalgesia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14356463\"]}");
	add("{\"term\":\"thermel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04428218\"]}");
	add("{\"term\":\"thermidor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15202596\"]}");
	add("{\"term\":\"thermion\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09480329\"]}");
	add("{\"term\":\"thermionics\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06124929\"]}");
	add("{\"term\":\"thermistor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04427341\"]}");
	add("{\"term\":\"thermoacidophile\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01351029\"]}");
	add("{\"term\":\"thermobia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02273462\"]}");
	add("{\"term\":\"thermocautery\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00699140\"]}");
	add("{\"term\":\"thermochemistry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06120430\"]}");
	add("{\"term\":\"thermocoagulation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13588266\"]}");
	add("{\"term\":\"thermocouple\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04427855\"]}");
	add("{\"term\":\"thermodynamics\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06124185\"]}");
	add("{\"term\":\"thermoelectricity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11535105\"]}");
	add("{\"term\":\"thermogram\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07019134\"]}");
	add("{\"term\":\"thermograph\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04428393\", \"04428552\"]}");
	add("{\"term\":\"thermography\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01008255\"]}");
	add("{\"term\":\"thermogravimeter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04428717\"]}");
	add("{\"term\":\"thermogravimetry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01118787\"]}");
	add("{\"term\":\"thermohydrometer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04428717\"]}");
	add("{\"term\":\"thermojunction\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04428875\"]}");
	add("{\"term\":\"thermometer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04429007\"]}");
	add("{\"term\":\"thermometrograph\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04428393\"]}");
	add("{\"term\":\"thermometry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01118681\"]}");
	add("{\"term\":\"thermopile\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04429701\"]}");
	add("{\"term\":\"thermoplastic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14617524\"]}");
	add("{\"term\":\"thermopsis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12593583\"]}");
	add("{\"term\":\"thermopylae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01299975\"]}");
	add("{\"term\":\"thermoreceptor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05307896\"]}");
	add("{\"term\":\"thermoregulator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04430010\"]}");
	add("{\"term\":\"thermos\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04429862\"]}");
	add("{\"term\":\"thermosphere\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09480497\"]}");
	add("{\"term\":\"thermostat\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04430010\"]}");
	add("{\"term\":\"thermostatics\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06124456\"]}");
	add("{\"term\":\"thermotherapy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00708790\"]}");
	add("{\"term\":\"thermotropism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00864273\"]}");
	add("{\"term\":\"theropod\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01714649\"]}");
	add("{\"term\":\"theropoda\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01714303\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public boolean has(final String TERM) { 		return map.containsKey(TERM); 	} }