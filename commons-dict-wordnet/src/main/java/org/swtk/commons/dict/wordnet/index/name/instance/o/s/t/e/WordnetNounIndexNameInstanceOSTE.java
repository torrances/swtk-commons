package org.swtk.commons.dict.wordnet.index.name.instance.o.s.t.e;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceOSTE {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"osteichthyes\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02517206\"]}");
	add("{\"term\":\"osteitis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14374726\"]}");
	add("{\"term\":\"ostensorium\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03789803\"]}");
	add("{\"term\":\"ostentation\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04796502\", \"04825154\", \"06902380\"]}");
	add("{\"term\":\"ostentatiousness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04825154\"]}");
	add("{\"term\":\"osteoarthritis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14211720\"]}");
	add("{\"term\":\"osteoblast\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05455725\"]}");
	add("{\"term\":\"osteoblastoma\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14273083\"]}");
	add("{\"term\":\"osteochondroma\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14273267\"]}");
	add("{\"term\":\"osteoclasis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00710648\"]}");
	add("{\"term\":\"osteoclast\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05456649\"]}");
	add("{\"term\":\"osteocyte\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05456772\"]}");
	add("{\"term\":\"osteodystrophy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14082963\"]}");
	add("{\"term\":\"osteoglossidae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02547385\"]}");
	add("{\"term\":\"osteoglossiformes\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02547227\"]}");
	add("{\"term\":\"osteologer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10405154\"]}");
	add("{\"term\":\"osteologist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10405154\"]}");
	add("{\"term\":\"osteology\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06069886\"]}");
	add("{\"term\":\"osteolysis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13550370\"]}");
	add("{\"term\":\"osteoma\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14273419\"]}");
	add("{\"term\":\"osteomalacia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14231658\"]}");
	add("{\"term\":\"osteomyelitis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14374895\"]}");
	add("{\"term\":\"osteopath\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10405265\"]}");
	add("{\"term\":\"osteopathist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10405265\"]}");
	add("{\"term\":\"osteopathy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00710458\"]}");
	add("{\"term\":\"osteopetrosis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14233601\"]}");
	add("{\"term\":\"osteophyte\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05481159\"]}");
	add("{\"term\":\"osteoporosis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14233836\"]}");
	add("{\"term\":\"osteosarcoma\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14265038\"]}");
	add("{\"term\":\"osteosclerosis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14211949\"]}");
	add("{\"term\":\"osteostracan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01478289\"]}");
	add("{\"term\":\"osteostraci\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01478062\"]}");
	add("{\"term\":\"osteotomy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00690720\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }