package org.swtk.commons.dict.wordnet.index.name.instance.h.o.m.o;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceHOMO {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"homo\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02474924\", \"10202544\"]}");
	add("{\"term\":\"homobasidiomycetes\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13017888\"]}");
	add("{\"term\":\"homoeopath\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10202033\"]}");
	add("{\"term\":\"homoeopathy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00712142\"]}");
	add("{\"term\":\"homoeroticism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00858476\"]}");
	add("{\"term\":\"homogenate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14932573\"]}");
	add("{\"term\":\"homogeneity\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04776473\", \"04752919\"]}");
	add("{\"term\":\"homogeneousness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04752919\"]}");
	add("{\"term\":\"homogenisation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00381802\"]}");
	add("{\"term\":\"homogenization\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00381802\"]}");
	add("{\"term\":\"homogeny\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04751401\"]}");
	add("{\"term\":\"homograft\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05591036\"]}");
	add("{\"term\":\"homograph\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07145730\"]}");
	add("{\"term\":\"homogyne\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12003193\"]}");
	add("{\"term\":\"homoiotherm\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01317821\"]}");
	add("{\"term\":\"homology\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04751559\"]}");
	add("{\"term\":\"homomorphism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04751795\"]}");
	add("{\"term\":\"homomorphy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04751795\"]}");
	add("{\"term\":\"homona\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02287165\"]}");
	add("{\"term\":\"homonym\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06303429\"]}");
	add("{\"term\":\"homonymy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13831193\"]}");
	add("{\"term\":\"homophile\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10202544\"]}");
	add("{\"term\":\"homophobe\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10202443\"]}");
	add("{\"term\":\"homophobia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06213207\"]}");
	add("{\"term\":\"homophone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07145877\"]}");
	add("{\"term\":\"homophony\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07044631\", \"07146074\"]}");
	add("{\"term\":\"homoptera\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02248244\"]}");
	add("{\"term\":\"homopteran\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02248663\"]}");
	add("{\"term\":\"homosexual\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10202544\"]}");
	add("{\"term\":\"homosexualism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00858476\"]}");
	add("{\"term\":\"homosexuality\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00858476\"]}");
	add("{\"term\":\"homospory\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13515077\"]}");
	add("{\"term\":\"homotherm\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01317821\"]}");
	add("{\"term\":\"homozygosity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14592918\"]}");
	add("{\"term\":\"homozygote\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05439996\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }