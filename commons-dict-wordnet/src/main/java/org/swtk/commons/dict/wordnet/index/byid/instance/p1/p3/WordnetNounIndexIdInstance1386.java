package org.swtk.commons.dict.wordnet.index.byid.instance.p1.p3;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance1386 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("13860039", "{\"term\":\"doctor-patient relation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13860039\"]}");
	add("13860224", "{\"term\":\"nurse-patient relation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13860224\"]}");
	add("13860404", "{\"term\":\"legal relation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13860404\"]}");
	add("13860585", "{\"term\":\"fiduciary relation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13860585\"]}");
	add("13860965", "{\"term\":\"bank-depositor relation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13860965\"]}");
	add("13861129", "{\"term\":\"confidential adviser-advisee relation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13861129\"]}");
	add("13861319", "{\"term\":\"conservator-ward relation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13861319\"]}");
	add("13861486", "{\"term\":\"director-stockholder relation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13861486\"]}");
	add("13861667", "{\"term\":\"executor-heir relation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13861667\"]}");
	add("13861861", "{\"term\":\"attorney-client relation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13861861\"]}");
	add("13861861", "{\"term\":\"lawyer-client relation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13861861\"]}");
	add("13862087", "{\"term\":\"partner relation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13862087\"]}");
	add("13862238", "{\"term\":\"receiver-creditor relation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13862238\"]}");
	add("13862430", "{\"term\":\"trustee-beneficiary relation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13862430\"]}");
	add("13862603", "{\"term\":\"academic relation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13862603\"]}");
	add("13862752", "{\"term\":\"teacher-student relation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13862752\"]}");
	add("13862918", "{\"term\":\"political relation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13862918\"]}");
	add("13862918", "{\"term\":\"politics\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"01126829\", \"06158643\", \"00613259\", \"06157599\", \"13862918\"]}");
	add("13863157", "{\"term\":\"alchemy\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05786746\", \"13863157\"]}");
	add("13863157", "{\"term\":\"chemistry\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13863157\", \"14604732\", \"06094057\"]}");
	add("13863157", "{\"term\":\"interpersonal chemistry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13863157\"]}");
	add("13863412", "{\"term\":\"reciprocality\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13863412\"]}");
	add("13863412", "{\"term\":\"reciprocity\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00041158\", \"13863412\"]}");
	add("13863666", "{\"term\":\"complementarity\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13863666\", \"13879511\"]}");
	add("13863850", "{\"term\":\"correlation\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06040778\", \"06041776\", \"13863850\"]}");
	add("13863850", "{\"term\":\"correlativity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13863850\"]}");
	add("13864062", "{\"term\":\"interdependence\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13864062\"]}");
	add("13864062", "{\"term\":\"interdependency\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13864062\"]}");
	add("13864062", "{\"term\":\"mutuality\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13864062\", \"13865600\"]}");
	add("13864440", "{\"term\":\"commensalism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13864440\"]}");
	add("13864614", "{\"term\":\"parasitism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13864614\"]}");
	add("13864821", "{\"term\":\"mutualism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13864821\"]}");
	add("13864821", "{\"term\":\"symbiosis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13864821\"]}");
	add("13865040", "{\"term\":\"trophobiosis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13865040\"]}");
	add("13865200", "{\"term\":\"additive inverse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13865200\"]}");
	add("13865372", "{\"term\":\"multiplicative inverse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13865372\"]}");
	add("13865372", "{\"term\":\"reciprocal\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00852776\", \"13865372\", \"13865800\"]}");
	add("13865600", "{\"term\":\"mutuality\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13864062\", \"13865600\"]}");
	add("13865600", "{\"term\":\"mutualness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13865600\"]}");
	add("13865800", "{\"term\":\"reciprocal\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00852776\", \"13865372\", \"13865800\"]}");
	add("13865983", "{\"term\":\"sharing\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"01087717\", \"07149283\", \"13865983\", \"13866117\"]}");
	add("13866117", "{\"term\":\"sharing\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"01087717\", \"07149283\", \"13865983\", \"13866117\"]}");
	add("13866254", "{\"term\":\"time sharing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13866254\"]}");
	add("13866409", "{\"term\":\"interrelatedness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13866409\"]}");
	add("13866409", "{\"term\":\"interrelation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13866409\"]}");
	add("13866409", "{\"term\":\"interrelationship\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13866409\"]}");
	add("13866715", "{\"term\":\"psychodynamics\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06151219\", \"13866715\"]}");
	add("13866887", "{\"term\":\"temporal relation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13866887\"]}");
	add("13867120", "{\"term\":\"antecedent\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"06616004\", \"13867120\", \"07341480\", \"09811996\"]}");
	add("13867120", "{\"term\":\"forerunner\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13867120\", \"06815429\", \"09650305\"]}");
	add("13867311", "{\"term\":\"chronology\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06166044\", \"06515215\", \"13867311\"]}");
	add("13867436", "{\"term\":\"synchroneity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13867436\"]}");
	add("13867436", "{\"term\":\"synchronicity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13867436\"]}");
	add("13867436", "{\"term\":\"synchronisation\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00809161\", \"01003039\", \"13867436\"]}");
	add("13867436", "{\"term\":\"synchronism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13867436\"]}");
	add("13867436", "{\"term\":\"synchronization\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00809161\", \"01003039\", \"13867436\"]}");
	add("13867436", "{\"term\":\"synchronizing\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00809161\", \"01003039\", \"13867436\"]}");
	add("13867436", "{\"term\":\"synchrony\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13867436\"]}");
	add("13868035", "{\"term\":\"asynchronism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13868035\"]}");
	add("13868035", "{\"term\":\"asynchrony\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13868035\"]}");
	add("13868035", "{\"term\":\"desynchronisation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13868035\"]}");
	add("13868035", "{\"term\":\"desynchronization\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13868035\"]}");
	add("13868035", "{\"term\":\"desynchronizing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13868035\"]}");
	add("13868396", "{\"term\":\"first\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"03354857\", \"06712932\", \"00724798\", \"15290329\", \"13618687\", \"13868396\"]}");
	add("13868396", "{\"term\":\"number one\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13618687\", \"13868396\", \"09628284\"]}");
	add("13868553", "{\"term\":\"former\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13868553\"]}");
	add("13868743", "{\"term\":\"second\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"03592219\", \"04171590\", \"07195032\", \"10587511\", \"13632638\", \"13868743\", \"15269461\", \"00725034\", \"15271664\", \"15259923\"]}");
	add("13868905", "{\"term\":\"latter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13868905\"]}");
	add("13869097", "{\"term\":\"third\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"04432939\", \"04433112\", \"06872554\", \"13869097\", \"00725419\", \"13759330\"]}");
	add("13869321", "{\"term\":\"fourth\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06872724\", \"13759620\", \"13869321\"]}");
	add("13869437", "{\"term\":\"fifth\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"06872850\", \"13759970\", \"13869437\", \"13640756\"]}");
	add("13869599", "{\"term\":\"sixth\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06872975\", \"13760092\", \"13869599\"]}");
	add("13869695", "{\"term\":\"seventh\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06873099\", \"13760183\", \"13869695\"]}");
	add("13869813", "{\"term\":\"eighth\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13760280\", \"13869813\"]}");
	add("13869912", "{\"term\":\"ninth\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13760375\", \"13869912\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }