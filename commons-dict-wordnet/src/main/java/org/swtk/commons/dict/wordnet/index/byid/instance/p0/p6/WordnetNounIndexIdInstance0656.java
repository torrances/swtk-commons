package org.swtk.commons.dict.wordnet.index.byid.instance.p0.p6;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0656 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("06560101", "{\"term\":\"cachet\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02938700\", \"06560101\", \"06718747\"]}");
	add("06560101", "{\"term\":\"lettre de cachet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06560101\"]}");
	add("06560308", "{\"term\":\"reprieve\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"01261714\", \"06560308\", \"07382856\", \"14469500\"]}");
	add("06560489", "{\"term\":\"commutation\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00197334\", \"01168409\", \"06560489\", \"00316526\"]}");
	add("06560662", "{\"term\":\"income tax return\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06560662\"]}");
	add("06560662", "{\"term\":\"return\", \"synsetCount\":13, \"upperType\":\"NOUN\", \"ids\":[\"00051707\", \"00560761\", \"00567335\", \"01237294\", \"04091629\", \"07214582\", \"07357963\", \"13281089\", \"00328841\", \"00090171\", \"07461622\", \"00052012\", \"06560662\"]}");
	add("06560662", "{\"term\":\"tax return\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06560662\"]}");
	add("06560982", "{\"term\":\"amended return\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06560982\"]}");
	add("06561106", "{\"term\":\"declaration of estimated tax\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06561106\"]}");
	add("06561106", "{\"term\":\"estimated tax return\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06561106\"]}");
	add("06561309", "{\"term\":\"false return\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06561309\"]}");
	add("06561398", "{\"term\":\"information return\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06561398\"]}");
	add("06561557", "{\"term\":\"joint return\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06561557\"]}");
	add("06561652", "{\"term\":\"licence\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06561652\", \"14018291\", \"14018863\"]}");
	add("06561652", "{\"term\":\"license\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"01141515\", \"14018863\", \"14018291\", \"06561652\"]}");
	add("06561652", "{\"term\":\"permit\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02582559\", \"01141515\", \"06561652\"]}");
	add("06562037", "{\"term\":\"building permit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06562037\"]}");
	add("06562197", "{\"term\":\"driver\u0027s licence\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06562197\"]}");
	add("06562197", "{\"term\":\"driver\u0027s license\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06562197\"]}");
	add("06562197", "{\"term\":\"driving licence\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06562197\"]}");
	add("06562197", "{\"term\":\"driving license\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06562197\"]}");
	add("06562372", "{\"term\":\"fishing licence\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06562372\"]}");
	add("06562372", "{\"term\":\"fishing license\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06562372\"]}");
	add("06562372", "{\"term\":\"fishing permit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06562372\"]}");
	add("06562543", "{\"term\":\"game license\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06562543\"]}");
	add("06562543", "{\"term\":\"hunting licence\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06562543\"]}");
	add("06562543", "{\"term\":\"hunting license\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06562543\"]}");
	add("06562543", "{\"term\":\"hunting permit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06562543\"]}");
	add("06562754", "{\"term\":\"learner\u0027s permit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06562754\"]}");
	add("06562882", "{\"term\":\"letter of mark and reprisal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06562882\"]}");
	add("06562882", "{\"term\":\"letter of marque\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06562882\"]}");
	add("06562882", "{\"term\":\"letters of marque\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06562882\"]}");
	add("06563061", "{\"term\":\"liquor licence\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06563061\"]}");
	add("06563061", "{\"term\":\"liquor license\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06563061\"]}");
	add("06563217", "{\"term\":\"on-license\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06563217\"]}");
	add("06563330", "{\"term\":\"marriage licence\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06563330\"]}");
	add("06563330", "{\"term\":\"marriage license\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06563330\"]}");
	add("06563330", "{\"term\":\"wedding licence\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06563330\"]}");
	add("06563330", "{\"term\":\"wedding license\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06563330\"]}");
	add("06563489", "{\"term\":\"occupation licence\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06563489\"]}");
	add("06563489", "{\"term\":\"occupation license\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06563489\"]}");
	add("06563618", "{\"term\":\"letters patent\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06563618\"]}");
	add("06563618", "{\"term\":\"patent\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06563618\", \"06513132\"]}");
	add("06563775", "{\"term\":\"judgement\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00875745\", \"01190300\", \"04899279\", \"05621958\", \"05797437\", \"05846466\", \"06563775\"]}");
	add("06563775", "{\"term\":\"judgment\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"05621958\", \"04899279\", \"06563775\", \"05797437\", \"01190300\", \"00875745\", \"05846466\"]}");
	add("06563775", "{\"term\":\"legal opinion\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06563775\"]}");
	add("06563775", "{\"term\":\"opinion\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"05925333\", \"01193648\", \"06563775\", \"05958593\", \"06794876\", \"05954491\"]}");
	add("06564107", "{\"term\":\"concurring opinion\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06564107\"]}");
	add("06564311", "{\"term\":\"dissenting opinion\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06564311\"]}");
	add("06564461", "{\"term\":\"majority opinion\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06564461\"]}");
	add("06564630", "{\"term\":\"amnesty\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01251862\", \"06564630\", \"14552684\"]}");
	add("06564630", "{\"term\":\"pardon\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01251862\", \"06564630\", \"01229679\"]}");
	add("06564805", "{\"term\":\"acquittance\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06564805\"]}");
	add("06564805", "{\"term\":\"release\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"00211789\", \"00214561\", \"00330445\", \"01266940\", \"04080537\", \"06564805\", \"07348249\", \"00217041\", \"06760197\", \"13570875\", \"00096322\", \"04080320\"]}");
	add("06564975", "{\"term\":\"judicial writ\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06564975\"]}");
	add("06564975", "{\"term\":\"writ\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06564975\"]}");
	add("06565463", "{\"term\":\"assize\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06565463\", \"06677098\"]}");
	add("06565622", "{\"term\":\"certiorari\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06565622\"]}");
	add("06565622", "{\"term\":\"writ of certiorari\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06565622\"]}");
	add("06565837", "{\"term\":\"execution\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00221389\", \"01129700\", \"06565837\", \"06566069\", \"13498665\", \"00098324\", \"01166269\"]}");
	add("06565837", "{\"term\":\"writ of execution\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06565837\"]}");
	add("06566069", "{\"term\":\"execution\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00221389\", \"01129700\", \"06565837\", \"06566069\", \"13498665\", \"00098324\", \"01166269\"]}");
	add("06566069", "{\"term\":\"execution of instrument\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06566069\"]}");
	add("06566364", "{\"term\":\"habeas corpus\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05190721\", \"06566364\"]}");
	add("06566364", "{\"term\":\"writ of habeas corpus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06566364\"]}");
	add("06566522", "{\"term\":\"venire facias\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06566522\"]}");
	add("06566666", "{\"term\":\"mandamus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06566666\"]}");
	add("06566666", "{\"term\":\"writ of mandamus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06566666\"]}");
	add("06566972", "{\"term\":\"attachment\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00148415\", \"00380230\", \"01215372\", \"02758357\", \"06566972\", \"02758249\", \"07560531\"]}");
	add("06567182", "{\"term\":\"fieri facias\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06567182\"]}");
	add("06567332", "{\"term\":\"scire facias\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06567332\"]}");
	add("06567561", "{\"term\":\"sequestration\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00088038\", \"06567561\", \"13575789\", \"01204674\"]}");
	add("06567686", "{\"term\":\"writ of detinue\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06567686\"]}");
	add("06567838", "{\"term\":\"writ of election\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06567838\"]}");
	add("06567962", "{\"term\":\"writ of error\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06567962\"]}");
	add("06568141", "{\"term\":\"writ of prohibition\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06568141\"]}");
	add("06568334", "{\"term\":\"writ of right\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06568334\"]}");
	add("06568472", "{\"term\":\"authorisation\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"01140991\", \"05184134\", \"05203850\", \"06568472\"]}");
	add("06568472", "{\"term\":\"authorization\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"01140991\", \"05184134\", \"05203850\", \"06568472\"]}");
	add("06568472", "{\"term\":\"mandate\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01142979\", \"08615283\", \"06568472\"]}");
	add("06568683", "{\"term\":\"process\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00029976\", \"05477841\", \"05709685\", \"06568683\", \"05709328\", \"01025762\"]}");
	add("06568683", "{\"term\":\"summons\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06568683\", \"07183749\", \"07201188\"]}");
	add("06569038", "{\"term\":\"subpoena\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06569038\"]}");
	add("06569038", "{\"term\":\"subpoena ad testificandum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06569038\"]}");
	add("06569308", "{\"term\":\"subpoena duces tecum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06569308\"]}");
	add("06569576", "{\"term\":\"gag order\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06569576\"]}");
	add("06569818", "{\"term\":\"garnishment\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06569818\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }