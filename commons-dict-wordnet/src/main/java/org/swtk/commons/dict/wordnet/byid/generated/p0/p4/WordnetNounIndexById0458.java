package org.swtk.commons.dict.wordnet.byid.generated.p0.p4;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexById0458 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("04580086", "{\"term\":\"well\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"04579845\", \"04580086\", \"06688724\", \"04580221\", \"04579630\"]}");
	add("04580221", "{\"term\":\"well\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"04579845\", \"04580086\", \"06688724\", \"04580221\", \"04579630\"]}");
	add("04580331", "{\"term\":\"wellhead\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04580331\", \"08525757\"]}");
	add("04580415", "{\"term\":\"well point\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04580415\"]}");
	add("04580415", "{\"term\":\"wellpoint\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04580415\"]}");
	add("04580567", "{\"term\":\"welt\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04580567\", \"14322122\"]}");
	add("04580665", "{\"term\":\"cadmium cell\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04580665\"]}");
	add("04580665", "{\"term\":\"weston cell\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04580665\"]}");
	add("04580799", "{\"term\":\"wet bar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04580799\"]}");
	add("04580911", "{\"term\":\"wet-bulb thermometer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04580911\"]}");
	add("04581118", "{\"term\":\"wet cell\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04581118\"]}");
	add("04581223", "{\"term\":\"wet fly\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04581223\"]}");
	add("04581353", "{\"term\":\"wet suit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04581353\"]}");
	add("04581520", "{\"term\":\"whacker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04581520\"]}");
	add("04581520", "{\"term\":\"whopper\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04581520\", \"06770387\"]}");
	add("04581634", "{\"term\":\"whaleboat\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04581634\"]}");
	add("04581757", "{\"term\":\"whaler\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04581757\", \"10794796\"]}");
	add("04581757", "{\"term\":\"whaling ship\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04581757\"]}");
	add("04581892", "{\"term\":\"whaling gun\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04581892\"]}");
	add("04582047", "{\"term\":\"wheatstone bridge\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04582047\"]}");
	add("04582147", "{\"term\":\"wheat future\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04582147\"]}");
	add("04582285", "{\"term\":\"wheel\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"02837983\", \"04045517\", \"04120500\", \"04583009\", \"05203188\", \"04320641\", \"04582285\"]}");
	add("04583009", "{\"term\":\"wheel\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"02837983\", \"04045517\", \"04120500\", \"04583009\", \"05203188\", \"04320641\", \"04582285\"]}");
	add("04583110", "{\"term\":\"wheel and axle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04583110\"]}");
	add("04583288", "{\"term\":\"wheelchair\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04583288\"]}");
	add("04583497", "{\"term\":\"wheeled vehicle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04583497\"]}");
	add("04584147", "{\"term\":\"wheel lock\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04584147\"]}");
	add("04584257", "{\"term\":\"wheelwork\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04584257\"]}");
	add("04584425", "{\"term\":\"wherry\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04584425\", \"04584579\"]}");
	add("04584579", "{\"term\":\"norfolk wherry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04584579\"]}");
	add("04584579", "{\"term\":\"wherry\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04584425\", \"04584579\"]}");
	add("04584712", "{\"term\":\"whetstone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04584712\"]}");
	add("04584853", "{\"term\":\"swingletree\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04584853\"]}");
	add("04584853", "{\"term\":\"whiffletree\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04584853\"]}");
	add("04584853", "{\"term\":\"whippletree\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04584853\"]}");
	add("04585055", "{\"term\":\"whip\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00135394\", \"05030068\", \"07627976\", \"10796434\", \"04585055\"]}");
	add("04585398", "{\"term\":\"whipcord\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04585398\", \"04585506\"]}");
	add("04585506", "{\"term\":\"whipcord\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04585398\", \"04585506\"]}");
	add("04585615", "{\"term\":\"whipping post\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04585615\"]}");
	add("04585745", "{\"term\":\"whip top\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04585745\"]}");
	add("04585745", "{\"term\":\"whipping top\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04585745\"]}");
	add("04585845", "{\"term\":\"whipping\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"01178709\", \"04585845\", \"07491763\", \"01165537\"]}");
	add("04585845", "{\"term\":\"whipstitch\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04585845\"]}");
	add("04585845", "{\"term\":\"whipstitching\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04585845\"]}");
	add("04585994", "{\"term\":\"whirler\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04585994\", \"10796815\"]}");
	add("04586087", "{\"term\":\"whisk\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04586087\", \"04586220\"]}");
	add("04586087", "{\"term\":\"whisk broom\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04586087\"]}");
	add("04586220", "{\"term\":\"whisk\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04586087\", \"04586220\"]}");
	add("04586342", "{\"term\":\"whiskey bottle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04586342\"]}");
	add("04586431", "{\"term\":\"whiskey jug\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04586431\"]}");
	add("04586516", "{\"term\":\"whispering dome\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04586516\"]}");
	add("04586516", "{\"term\":\"whispering gallery\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04586516\"]}");
	add("04586718", "{\"term\":\"whistle\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"03918337\", \"04586718\", \"04586953\", \"06818956\", \"07414756\"]}");
	add("04586953", "{\"term\":\"whistle\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"03918337\", \"04586718\", \"04586953\", \"06818956\", \"07414756\"]}");
	add("04587081", "{\"term\":\"flag stop\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04587081\"]}");
	add("04587081", "{\"term\":\"way station\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04587081\", \"08674731\"]}");
	add("04587081", "{\"term\":\"whistle stop\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04587081\"]}");
	add("04587272", "{\"term\":\"white\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"03361927\", \"04587272\", \"07857013\", \"09501485\", \"11403541\", \"11403762\", \"11403912\", \"11404017\", \"11404154\", \"11404286\", \"04967906\", \"09660255\"]}");
	add("04587412", "{\"term\":\"flag of truce\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04587412\"]}");
	add("04587412", "{\"term\":\"white flag\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04587412\"]}");
	add("04587584", "{\"term\":\"household linen\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04587584\"]}");
	add("04587584", "{\"term\":\"white goods\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04587584\", \"04587779\"]}");
	add("04587779", "{\"term\":\"white goods\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04587584\", \"04587779\"]}");
	add("04588063", "{\"term\":\"white house\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04588063\", \"08145819\"]}");
	add("04588280", "{\"term\":\"white tie\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03243757\", \"04588280\"]}");
	add("04588388", "{\"term\":\"whitewash\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01244159\", \"04588388\", \"07492092\"]}");
	add("04588548", "{\"term\":\"whizbang\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04588548\", \"04588711\"]}");
	add("04588548", "{\"term\":\"whizzbang\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04588548\", \"04588711\"]}");
	add("04588711", "{\"term\":\"whizbang\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04588548\", \"04588711\"]}");
	add("04588711", "{\"term\":\"whizbang shell\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04588711\"]}");
	add("04588711", "{\"term\":\"whizzbang\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04588548\", \"04588711\"]}");
	add("04588881", "{\"term\":\"bagnio\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02810060\", \"04588881\"]}");
	add("04588881", "{\"term\":\"bawdyhouse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04588881\"]}");
	add("04588881", "{\"term\":\"bordello\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04588881\"]}");
	add("04588881", "{\"term\":\"brothel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04588881\"]}");
	add("04588881", "{\"term\":\"cathouse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04588881\"]}");
	add("04588881", "{\"term\":\"house of ill repute\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04588881\"]}");
	add("04588881", "{\"term\":\"house of prostitution\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04588881\"]}");
	add("04588881", "{\"term\":\"sporting house\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04588881\"]}");
	add("04588881", "{\"term\":\"whorehouse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04588881\"]}");
	add("04589115", "{\"term\":\"taper\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"02951508\", \"04589115\", \"05078537\", \"13925486\"]}");
	add("04589115", "{\"term\":\"wick\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04589115\", \"04589330\"]}");
	add("04589330", "{\"term\":\"wick\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04589115\", \"04589330\"]}");
	add("04589491", "{\"term\":\"caning\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04589491\"]}");
	add("04589491", "{\"term\":\"wicker\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04589491\", \"15122416\"]}");
	add("04589491", "{\"term\":\"wickerwork\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04589491\"]}");
	add("04589635", "{\"term\":\"wicker basket\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04589635\"]}");
	add("04589740", "{\"term\":\"grille\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03464523\", \"03464707\", \"04589740\"]}");
	add("04589740", "{\"term\":\"lattice\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03652230\", \"04589740\", \"05737820\"]}");
	add("04589740", "{\"term\":\"wicket\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04589740\", \"04589911\", \"04590057\", \"04590155\"]}");
	add("04589911", "{\"term\":\"wicket\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04589740\", \"04589911\", \"04590057\", \"04590155\"]}");
	add("04589911", "{\"term\":\"wicket door\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04589911\"]}");
	add("04589911", "{\"term\":\"wicket gate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04589911\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }