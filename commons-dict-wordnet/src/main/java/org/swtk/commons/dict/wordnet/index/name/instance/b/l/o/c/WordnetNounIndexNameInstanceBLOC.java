package org.swtk.commons.dict.wordnet.index.name.instance.b.l.o.c;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceBLOC {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"bloc\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08187993\"]}");
	add("{\"term\":\"blocadren\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04445876\"]}");
	add("{\"term\":\"bloch\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10873009\"]}");
	add("{\"term\":\"block\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"00563435\", \"02759606\", \"02856708\", \"03293136\", \"04026692\", \"05653044\", \"13647935\", \"02856275\", \"07970600\", \"13937623\", \"08659720\", \"02855782\"]}");
	add("{\"term\":\"blockade\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02856477\", \"00956197\"]}");
	add("{\"term\":\"blockage\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01076618\", \"02856708\", \"14531553\"]}");
	add("{\"term\":\"blockbuster\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00064971\", \"02857129\"]}");
	add("{\"term\":\"blocker\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02857415\", \"09879654\"]}");
	add("{\"term\":\"blockhead\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10059388\"]}");
	add("{\"term\":\"blockhouse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02857637\"]}");
	add("{\"term\":\"blocking\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00563435\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public boolean has(final String TERM) { 		return map.containsKey(TERM); 	} }