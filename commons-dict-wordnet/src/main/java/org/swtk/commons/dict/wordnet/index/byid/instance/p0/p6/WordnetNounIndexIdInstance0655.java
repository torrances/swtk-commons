package org.swtk.commons.dict.wordnet.index.byid.instance.p0.p6;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0655 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("06550096", "{\"term\":\"blue law\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06550096\"]}");
	add("06550206", "{\"term\":\"blue sky law\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06550206\"]}");
	add("06550403", "{\"term\":\"gag law\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06550403\", \"06679574\"]}");
	add("06550516", "{\"term\":\"game law\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06550516\"]}");
	add("06550646", "{\"term\":\"homestead law\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06550646\"]}");
	add("06550776", "{\"term\":\"poor law\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06550776\"]}");
	add("06550886", "{\"term\":\"riot act\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06550886\", \"06551067\"]}");
	add("06551067", "{\"term\":\"riot act\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06550886\", \"06551067\"]}");
	add("06551169", "{\"term\":\"criminal law\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06551169\"]}");
	add("06551493", "{\"term\":\"court order\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06551493\"]}");
	add("06551761", "{\"term\":\"decree\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06551761\"]}");
	add("06551761", "{\"term\":\"edict\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06551761\", \"06739420\"]}");
	add("06551761", "{\"term\":\"fiat\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06551761\"]}");
	add("06551761", "{\"term\":\"order\", \"synsetCount\":15, \"upperType\":\"NOUN\", \"ids\":[\"01011813\", \"04706004\", \"07294392\", \"08123900\", \"08164801\", \"13974030\", \"06665623\", \"08244135\", \"06541210\", \"06551761\", \"14520294\", \"08474004\", \"13991994\", \"05098520\", \"07183274\"]}");
	add("06551761", "{\"term\":\"rescript\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"06375556\", \"06440646\", \"06551761\", \"06759060\"]}");
	add("06552275", "{\"term\":\"consent decree\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06552275\"]}");
	add("06552518", "{\"term\":\"curfew\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06552518\", \"06817464\", \"15205062\"]}");
	add("06552693", "{\"term\":\"decree nisi\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06552693\"]}");
	add("06552854", "{\"term\":\"divestiture\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01117338\", \"06552854\"]}");
	add("06553158", "{\"term\":\"imperial decree\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06553158\"]}");
	add("06553292", "{\"term\":\"ukase\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06553292\"]}");
	add("06553372", "{\"term\":\"judicial separation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06553372\"]}");
	add("06553372", "{\"term\":\"legal separation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01203919\", \"06553372\"]}");
	add("06553569", "{\"term\":\"pragmatic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06553569\"]}");
	add("06553569", "{\"term\":\"pragmatic sanction\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06553569\"]}");
	add("06553717", "{\"term\":\"programma\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06553717\"]}");
	add("06553811", "{\"term\":\"prohibition\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00202772\", \"07269842\", \"15319625\", \"06554038\", \"06553811\"]}");
	add("06554038", "{\"term\":\"ban\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"06711665\", \"07270069\", \"13707683\", \"13724420\", \"06554038\"]}");
	add("06554038", "{\"term\":\"prohibition\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00202772\", \"07269842\", \"15319625\", \"06554038\", \"06553811\"]}");
	add("06554038", "{\"term\":\"proscription\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00207151\", \"06554038\"]}");
	add("06554258", "{\"term\":\"stay\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"04314557\", \"04314757\", \"06554258\", \"14034398\", \"01055541\"]}");
	add("06554560", "{\"term\":\"stay of execution\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06554560\"]}");
	add("06554733", "{\"term\":\"banning-order\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06554733\"]}");
	add("06554821", "{\"term\":\"cease and desist order\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06554821\"]}");
	add("06554821", "{\"term\":\"enjoining\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06554821\"]}");
	add("06554821", "{\"term\":\"enjoinment\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06554821\"]}");
	add("06554821", "{\"term\":\"injunction\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06554821\", \"07185118\"]}");
	add("06555237", "{\"term\":\"mandatory injunction\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06555237\"]}");
	add("06555380", "{\"term\":\"final injunction\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06555380\"]}");
	add("06555380", "{\"term\":\"permanent injunction\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06555380\"]}");
	add("06555527", "{\"term\":\"interlocutory injunction\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06555527\"]}");
	add("06555527", "{\"term\":\"temporary injunction\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06555527\"]}");
	add("06555772", "{\"term\":\"brief\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06480311\", \"06555772\"]}");
	add("06555772", "{\"term\":\"legal brief\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06555772\"]}");
	add("06555940", "{\"term\":\"amicus curiae brief\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06555940\"]}");
	add("06556133", "{\"term\":\"testament\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"06465393\", \"06661335\", \"06556133\", \"05808280\"]}");
	add("06556133", "{\"term\":\"will\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06556133\", \"05992539\", \"05660438\"]}");
	add("06556423", "{\"term\":\"probate\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00155714\", \"06556423\"]}");
	add("06556423", "{\"term\":\"probate will\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06556423\"]}");
	add("06556648", "{\"term\":\"codicil\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06556648\"]}");
	add("06556832", "{\"term\":\"living will\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06556832\"]}");
	add("06557128", "{\"term\":\"deed\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00030657\", \"06557128\"]}");
	add("06557128", "{\"term\":\"deed of conveyance\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06557128\"]}");
	add("06557128", "{\"term\":\"title\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"05183431\", \"06354487\", \"06357590\", \"05188726\", \"06350786\", \"06557128\", \"13972130\", \"06357831\", \"06354890\", \"06357363\"]}");
	add("06557519", "{\"term\":\"assignment\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00164600\", \"00798247\", \"13275136\", \"00165166\", \"06557519\", \"00731545\"]}");
	add("06557719", "{\"term\":\"bill of sale\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06557719\"]}");
	add("06557834", "{\"term\":\"deed poll\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06557834\"]}");
	add("06557951", "{\"term\":\"enfeoffment\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06557951\"]}");
	add("06558148", "{\"term\":\"mortgage deed\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06558148\"]}");
	add("06558252", "{\"term\":\"title deed\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06558252\"]}");
	add("06558399", "{\"term\":\"deed of trust\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06558399\"]}");
	add("06558399", "{\"term\":\"trust deed\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06558399\"]}");
	add("06558624", "{\"term\":\"conveyance\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00316812\", \"01110307\", \"03105141\", \"06263084\", \"06558624\"]}");
	add("06558774", "{\"term\":\"quitclaim\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01110546\", \"06558774\"]}");
	add("06558774", "{\"term\":\"quitclaim deed\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06558774\"]}");
	add("06558922", "{\"term\":\"muniments\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06558922\"]}");
	add("06559050", "{\"term\":\"warrant\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"06698201\", \"06700103\", \"13439392\", \"06559050\"]}");
	add("06559312", "{\"term\":\"search warrant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06559312\"]}");
	add("06559606", "{\"term\":\"arrest warrant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06559606\"]}");
	add("06559606", "{\"term\":\"bench warrant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06559606\"]}");
	add("06559823", "{\"term\":\"pickup\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00320002\", \"01018143\", \"02975399\", \"04457736\", \"05068172\", \"10451817\", \"03937015\", \"06559823\", \"03936868\"]}");
	add("06559983", "{\"term\":\"death warrant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06559983\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }