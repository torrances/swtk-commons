package org.swtk.commons.dict.wordnet.index.name.instance.s.e.c.u;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceSECU {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"secular\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10270224\"]}");
	add("{\"term\":\"secularisation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01111216\", \"01157952\"]}");
	add("{\"term\":\"secularism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05977702\"]}");
	add("{\"term\":\"secularist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10593982\"]}");
	add("{\"term\":\"secularization\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01111216\", \"01157952\"]}");
	add("{\"term\":\"secundigravida\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10594167\"]}");
	add("{\"term\":\"secureness\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04784337\", \"14563295\"]}");
	add("{\"term\":\"securer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10498913\"]}");
	add("{\"term\":\"security\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00824977\", \"04173006\", \"06698499\", \"08137885\", \"13370410\", \"13437518\", \"07541577\", \"13365086\", \"14562870\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }