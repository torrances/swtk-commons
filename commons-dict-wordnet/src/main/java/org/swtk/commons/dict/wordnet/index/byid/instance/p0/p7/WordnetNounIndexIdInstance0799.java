package org.swtk.commons.dict.wordnet.index.byid.instance.p0.p7;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0799 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("07990100", "{\"term\":\"extended family\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07990100\"]}");
	add("07990229", "{\"term\":\"foster family\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07990229\"]}");
	add("07990315", "{\"term\":\"foster home\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07990315\"]}");
	add("07990472", "{\"term\":\"class\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"04822408\", \"08120743\", \"08255581\", \"08256729\", \"00886144\", \"07990472\", \"08255384\", \"08014145\"]}");
	add("07990472", "{\"term\":\"social class\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07990472\"]}");
	add("07990472", "{\"term\":\"socio-economic class\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07990472\"]}");
	add("07990472", "{\"term\":\"stratum\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"06036690\", \"06257026\", \"07990472\", \"08674880\"]}");
	add("07991213", "{\"term\":\"age class\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07991213\"]}");
	add("07991297", "{\"term\":\"fringe\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"03402598\", \"05266468\", \"07991297\", \"11480147\", \"08708530\", \"13926582\"]}");
	add("07991473", "{\"term\":\"assemblage\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"07968050\", \"01232427\", \"03538666\", \"07991473\"]}");
	add("07991473", "{\"term\":\"gathering\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03433715\", \"01016932\", \"01232427\", \"07991473\"]}");
	add("07992356", "{\"term\":\"bee\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07992356\", \"02209508\"]}");
	add("07992516", "{\"term\":\"carload\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13797723\", \"07992516\"]}");
	add("07992628", "{\"term\":\"congregation\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01234251\", \"07992628\", \"08007806\"]}");
	add("07992867", "{\"term\":\"contingent\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08421506\", \"07992867\"]}");
	add("07993043", "{\"term\":\"floor\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"03371147\", \"03371310\", \"05183868\", \"07993043\", \"09305269\", \"09304990\", \"09305114\", \"06670863\", \"03370837\", \"03370438\"]}");
	add("07993172", "{\"term\":\"love feast\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01030476\", \"07993172\"]}");
	add("07993298", "{\"term\":\"quilting bee\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07993298\"]}");
	add("07993383", "{\"term\":\"pair\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"07975021\", \"07993383\", \"13765745\", \"08001665\"]}");
	add("07993555", "{\"term\":\"hit parade\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06503656\", \"07993555\"]}");
	add("07993684", "{\"term\":\"judaica\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07993684\"]}");
	add("07993767", "{\"term\":\"kludge\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07993767\"]}");
	add("07994015", "{\"term\":\"library\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"03666369\", \"07994015\", \"03665990\", \"07994293\", \"03666235\"]}");
	add("07994015", "{\"term\":\"program library\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07994015\"]}");
	add("07994015", "{\"term\":\"subroutine library\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07994015\"]}");
	add("07994293", "{\"term\":\"library\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"03666369\", \"07994015\", \"03665990\", \"07994293\", \"03666235\"]}");
	add("07994478", "{\"term\":\"bibliotheca\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07994478\"]}");
	add("07994593", "{\"term\":\"public library\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07994593\"]}");
	add("07994699", "{\"term\":\"rental collection\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07994699\"]}");
	add("07994846", "{\"term\":\"mythology\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06157324\", \"07994846\"]}");
	add("07995347", "{\"term\":\"classical mythology\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07995347\"]}");
	add("07995848", "{\"term\":\"greek mythology\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07995848\"]}");
	add("07999593", "{\"term\":\"roman mythology\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07999593\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }