package org.swtk.commons.dict.wordnet.index.name.controller.a.t;  import java.util.Collection; import java.util.Set; import java.util.TreeSet;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  	import org.swtk.commons.dict.wordnet.index.name.instance.a.t.a.b.WordnetNounIndexNameInstanceATAB;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.t.a.k.WordnetNounIndexNameInstanceATAK;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.t.a.r.WordnetNounIndexNameInstanceATAR;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.t.a.t.WordnetNounIndexNameInstanceATAT;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.t.a.v.WordnetNounIndexNameInstanceATAV;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.t.a.x.WordnetNounIndexNameInstanceATAX;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.t.a.y.WordnetNounIndexNameInstanceATAY;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.t.e.l.WordnetNounIndexNameInstanceATEL;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.t.e.n.WordnetNounIndexNameInstanceATEN;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.t.h.a.WordnetNounIndexNameInstanceATHA;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.t.h.e.WordnetNounIndexNameInstanceATHE;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.t.h.i.WordnetNounIndexNameInstanceATHI;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.t.h.l.WordnetNounIndexNameInstanceATHL;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.t.h.o.WordnetNounIndexNameInstanceATHO;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.t.h.r.WordnetNounIndexNameInstanceATHR;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.t.h.y.WordnetNounIndexNameInstanceATHY;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.t.i.v.WordnetNounIndexNameInstanceATIV;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.t.l.a.WordnetNounIndexNameInstanceATLA;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.t.m.o.WordnetNounIndexNameInstanceATMO;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.t.o.l.WordnetNounIndexNameInstanceATOL;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.t.o.m.WordnetNounIndexNameInstanceATOM;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.t.o.n.WordnetNounIndexNameInstanceATON;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.t.o.p.WordnetNounIndexNameInstanceATOP;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.t.o.r.WordnetNounIndexNameInstanceATOR;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.t.r.a.WordnetNounIndexNameInstanceATRA;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.t.r.e.WordnetNounIndexNameInstanceATRE;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.t.r.i.WordnetNounIndexNameInstanceATRI;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.t.r.o.WordnetNounIndexNameInstanceATRO;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.t.s.u.WordnetNounIndexNameInstanceATSU;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.t.t.a.WordnetNounIndexNameInstanceATTA;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.t.t.e.WordnetNounIndexNameInstanceATTE;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.t.t.i.WordnetNounIndexNameInstanceATTI;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.t.t.l.WordnetNounIndexNameInstanceATTL;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.t.t.o.WordnetNounIndexNameInstanceATTO;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.t.t.r.WordnetNounIndexNameInstanceATTR;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.t.y.p.WordnetNounIndexNameInstanceATYP;
  import com.trimc.blogger.commons.exception.BusinessException;  public final class WordnetNounIndexNameControllerAT {  	public static Collection<IndexNoun> get(final String TERM) throws BusinessException {  		String key = TERM.substring(0, 4).toLowerCase(); 			if ("atab".equals(key)) return WordnetNounIndexNameInstanceATAB.get(TERM);
	if ("atak".equals(key)) return WordnetNounIndexNameInstanceATAK.get(TERM);
	if ("atar".equals(key)) return WordnetNounIndexNameInstanceATAR.get(TERM);
	if ("atat".equals(key)) return WordnetNounIndexNameInstanceATAT.get(TERM);
	if ("atav".equals(key)) return WordnetNounIndexNameInstanceATAV.get(TERM);
	if ("atax".equals(key)) return WordnetNounIndexNameInstanceATAX.get(TERM);
	if ("atay".equals(key)) return WordnetNounIndexNameInstanceATAY.get(TERM);
	if ("atel".equals(key)) return WordnetNounIndexNameInstanceATEL.get(TERM);
	if ("aten".equals(key)) return WordnetNounIndexNameInstanceATEN.get(TERM);
	if ("atha".equals(key)) return WordnetNounIndexNameInstanceATHA.get(TERM);
	if ("athe".equals(key)) return WordnetNounIndexNameInstanceATHE.get(TERM);
	if ("athi".equals(key)) return WordnetNounIndexNameInstanceATHI.get(TERM);
	if ("athl".equals(key)) return WordnetNounIndexNameInstanceATHL.get(TERM);
	if ("atho".equals(key)) return WordnetNounIndexNameInstanceATHO.get(TERM);
	if ("athr".equals(key)) return WordnetNounIndexNameInstanceATHR.get(TERM);
	if ("athy".equals(key)) return WordnetNounIndexNameInstanceATHY.get(TERM);
	if ("ativ".equals(key)) return WordnetNounIndexNameInstanceATIV.get(TERM);
	if ("atla".equals(key)) return WordnetNounIndexNameInstanceATLA.get(TERM);
	if ("atmo".equals(key)) return WordnetNounIndexNameInstanceATMO.get(TERM);
	if ("atol".equals(key)) return WordnetNounIndexNameInstanceATOL.get(TERM);
	if ("atom".equals(key)) return WordnetNounIndexNameInstanceATOM.get(TERM);
	if ("aton".equals(key)) return WordnetNounIndexNameInstanceATON.get(TERM);
	if ("atop".equals(key)) return WordnetNounIndexNameInstanceATOP.get(TERM);
	if ("ator".equals(key)) return WordnetNounIndexNameInstanceATOR.get(TERM);
	if ("atra".equals(key)) return WordnetNounIndexNameInstanceATRA.get(TERM);
	if ("atre".equals(key)) return WordnetNounIndexNameInstanceATRE.get(TERM);
	if ("atri".equals(key)) return WordnetNounIndexNameInstanceATRI.get(TERM);
	if ("atro".equals(key)) return WordnetNounIndexNameInstanceATRO.get(TERM);
	if ("atsu".equals(key)) return WordnetNounIndexNameInstanceATSU.get(TERM);
	if ("atta".equals(key)) return WordnetNounIndexNameInstanceATTA.get(TERM);
	if ("atte".equals(key)) return WordnetNounIndexNameInstanceATTE.get(TERM);
	if ("atti".equals(key)) return WordnetNounIndexNameInstanceATTI.get(TERM);
	if ("attl".equals(key)) return WordnetNounIndexNameInstanceATTL.get(TERM);
	if ("atto".equals(key)) return WordnetNounIndexNameInstanceATTO.get(TERM);
	if ("attr".equals(key)) return WordnetNounIndexNameInstanceATTR.get(TERM);
	if ("atyp".equals(key)) return WordnetNounIndexNameInstanceATYP.get(TERM);
  		throw new BusinessException("TERM not found (id = %s)", TERM); 	} 	 	public static Collection<String> terms() throws BusinessException { 		Set<String> set = new TreeSet<String>();  			set.addAll(WordnetNounIndexNameInstanceATAB.terms());
	set.addAll(WordnetNounIndexNameInstanceATAK.terms());
	set.addAll(WordnetNounIndexNameInstanceATAR.terms());
	set.addAll(WordnetNounIndexNameInstanceATAT.terms());
	set.addAll(WordnetNounIndexNameInstanceATAV.terms());
	set.addAll(WordnetNounIndexNameInstanceATAX.terms());
	set.addAll(WordnetNounIndexNameInstanceATAY.terms());
	set.addAll(WordnetNounIndexNameInstanceATEL.terms());
	set.addAll(WordnetNounIndexNameInstanceATEN.terms());
	set.addAll(WordnetNounIndexNameInstanceATHA.terms());
	set.addAll(WordnetNounIndexNameInstanceATHE.terms());
	set.addAll(WordnetNounIndexNameInstanceATHI.terms());
	set.addAll(WordnetNounIndexNameInstanceATHL.terms());
	set.addAll(WordnetNounIndexNameInstanceATHO.terms());
	set.addAll(WordnetNounIndexNameInstanceATHR.terms());
	set.addAll(WordnetNounIndexNameInstanceATHY.terms());
	set.addAll(WordnetNounIndexNameInstanceATIV.terms());
	set.addAll(WordnetNounIndexNameInstanceATLA.terms());
	set.addAll(WordnetNounIndexNameInstanceATMO.terms());
	set.addAll(WordnetNounIndexNameInstanceATOL.terms());
	set.addAll(WordnetNounIndexNameInstanceATOM.terms());
	set.addAll(WordnetNounIndexNameInstanceATON.terms());
	set.addAll(WordnetNounIndexNameInstanceATOP.terms());
	set.addAll(WordnetNounIndexNameInstanceATOR.terms());
	set.addAll(WordnetNounIndexNameInstanceATRA.terms());
	set.addAll(WordnetNounIndexNameInstanceATRE.terms());
	set.addAll(WordnetNounIndexNameInstanceATRI.terms());
	set.addAll(WordnetNounIndexNameInstanceATRO.terms());
	set.addAll(WordnetNounIndexNameInstanceATSU.terms());
	set.addAll(WordnetNounIndexNameInstanceATTA.terms());
	set.addAll(WordnetNounIndexNameInstanceATTE.terms());
	set.addAll(WordnetNounIndexNameInstanceATTI.terms());
	set.addAll(WordnetNounIndexNameInstanceATTL.terms());
	set.addAll(WordnetNounIndexNameInstanceATTO.terms());
	set.addAll(WordnetNounIndexNameInstanceATTR.terms());
	set.addAll(WordnetNounIndexNameInstanceATYP.terms());
  		return set; 	} }