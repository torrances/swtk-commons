package org.swtk.commons.dict.wordnet.index.instance.p0.p4;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexInstance0474 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("04740092", "{\"term\":\"saving grace\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04740092\", \"14481629\"]}");
	add("04740358", "{\"term\":\"aspect\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"04687095\", \"13826881\", \"05941982\", \"04740358\", \"05859151\"]}");
	add("04740444", "{\"term\":\"gaseousness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04740444\"]}");
	add("04740587", "{\"term\":\"bubbliness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04740587\"]}");
	add("04740587", "{\"term\":\"effervescence\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04740587\", \"13492884\"]}");
	add("04740587", "{\"term\":\"frothiness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04740587\"]}");
	add("04740779", "{\"term\":\"foaminess\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04740779\"]}");
	add("04740880", "{\"term\":\"changeability\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04740880\"]}");
	add("04740880", "{\"term\":\"changeableness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04740880\"]}");
	add("04741385", "{\"term\":\"commutability\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04741385\", \"04744474\"]}");
	add("04741385", "{\"term\":\"transmutability\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04741385\"]}");
	add("04741512", "{\"term\":\"fluidity\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04741512\", \"04944220\"]}");
	add("04741512", "{\"term\":\"fluidness\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04741512\", \"04944220\"]}");
	add("04741791", "{\"term\":\"reversibility\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04741791\"]}");
	add("04741938", "{\"term\":\"shiftiness\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04741938\", \"04882923\"]}");
	add("04742125", "{\"term\":\"changefulness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04742125\"]}");
	add("04742125", "{\"term\":\"inconstancy\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04742125\", \"04886287\"]}");
	add("04742315", "{\"term\":\"capriciousness\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04679198\", \"04742315\"]}");
	add("04742315", "{\"term\":\"unpredictability\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04765568\", \"04873902\", \"04742315\"]}");
	add("04742473", "{\"term\":\"variability\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04779129\", \"04742473\"]}");
	add("04742473", "{\"term\":\"variableness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04742473\"]}");
	add("04742473", "{\"term\":\"variance\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00195818\", \"01144471\", \"04742473\", \"04756982\", \"06034344\", \"07196502\", \"07381227\"]}");
	add("04742796", "{\"term\":\"variedness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04742796\"]}");
	add("04742951", "{\"term\":\"diversity\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04742951\", \"04758560\"]}");
	add("04743068", "{\"term\":\"variegation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00196418\", \"04743068\"]}");
	add("04743169", "{\"term\":\"exchangeability\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04743169\"]}");
	add("04743169", "{\"term\":\"fungibility\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04743169\"]}");
	add("04743169", "{\"term\":\"interchangeability\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04743169\"]}");
	add("04743169", "{\"term\":\"interchangeableness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04743169\"]}");
	add("04743577", "{\"term\":\"duality\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04743577\", \"04927745\", \"07956120\"]}");
	add("04743756", "{\"term\":\"transferability\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04743756\"]}");
	add("04743997", "{\"term\":\"convertibility\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04743997\"]}");
	add("04744260", "{\"term\":\"inconvertibility\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04744260\"]}");
	add("04744474", "{\"term\":\"commutability\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04741385\", \"04744474\"]}");
	add("04744474", "{\"term\":\"replaceability\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04744474\"]}");
	add("04744474", "{\"term\":\"substitutability\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04744474\"]}");
	add("04744670", "{\"term\":\"liquidity\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04744670\", \"04944220\", \"14504004\"]}");
	add("04744808", "{\"term\":\"permutability\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04744808\"]}");
	add("04744808", "{\"term\":\"permutableness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04744808\"]}");
	add("04744808", "{\"term\":\"transposability\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04744808\"]}");
	add("04744983", "{\"term\":\"progressiveness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04744983\"]}");
	add("04744983", "{\"term\":\"progressivity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04744983\"]}");
	add("04745174", "{\"term\":\"changelessness\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04745174\", \"05061463\"]}");
	add("04745174", "{\"term\":\"unchangeability\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04745174\"]}");
	add("04745174", "{\"term\":\"unchangeableness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04745174\"]}");
	add("04745174", "{\"term\":\"unchangingness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04745174\"]}");
	add("04745638", "{\"term\":\"absoluteness\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04745638\", \"05131799\"]}");
	add("04745881", "{\"term\":\"constancy\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04884459\", \"05716765\", \"04745881\"]}");
	add("04745881", "{\"term\":\"stability\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04745881\", \"13993571\", \"04785640\"]}");
	add("04746235", "{\"term\":\"invariance\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04746235\", \"04747172\"]}");
	add("04746502", "{\"term\":\"metastability\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04746502\"]}");
	add("04746775", "{\"term\":\"monotony\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04746775\", \"04747566\"]}");
	add("04746870", "{\"term\":\"innateness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04746870\"]}");
	add("04747008", "{\"term\":\"irreversibility\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04747008\"]}");
	add("04747172", "{\"term\":\"invariability\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04747172\", \"04776695\"]}");
	add("04747172", "{\"term\":\"invariableness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04747172\"]}");
	add("04747172", "{\"term\":\"invariance\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04746235\", \"04747172\"]}");
	add("04747413", "{\"term\":\"unvariedness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04747413\"]}");
	add("04747566", "{\"term\":\"humdrum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04747566\"]}");
	add("04747566", "{\"term\":\"monotony\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04746775\", \"04747566\"]}");
	add("04747566", "{\"term\":\"sameness\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04747566\", \"04749775\"]}");
	add("04747895", "{\"term\":\"fixedness\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04747895\", \"04784337\", \"14029975\"]}");
	add("04747895", "{\"term\":\"unalterability\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04747895\", \"04749324\"]}");
	add("04748104", "{\"term\":\"unexchangeability\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04748104\"]}");
	add("04748315", "{\"term\":\"incommutability\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04748315\"]}");
	add("04748435", "{\"term\":\"irreplaceableness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04748435\"]}");
	add("04748551", "{\"term\":\"mutability\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04748551\"]}");
	add("04748551", "{\"term\":\"mutableness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04748551\"]}");
	add("04748770", "{\"term\":\"alterability\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04748770\"]}");
	add("04748895", "{\"term\":\"vicissitude\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04748895\", \"07352294\"]}");
	add("04749047", "{\"term\":\"fixity\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04749047\", \"04784337\"]}");
	add("04749047", "{\"term\":\"immutability\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04749047\"]}");
	add("04749047", "{\"term\":\"immutableness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04749047\"]}");
	add("04749324", "{\"term\":\"unalterability\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04747895\", \"04749324\"]}");
	add("04749491", "{\"term\":\"incurability\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04749491\", \"04864130\"]}");
	add("04749658", "{\"term\":\"agelessness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04749658\"]}");
	add("04749775", "{\"term\":\"sameness\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04747566\", \"04749775\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }