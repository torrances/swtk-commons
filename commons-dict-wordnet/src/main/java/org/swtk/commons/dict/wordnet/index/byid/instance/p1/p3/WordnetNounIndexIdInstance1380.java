package org.swtk.commons.dict.wordnet.index.byid.instance.p1.p3;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance1380 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("13800301", "{\"term\":\"breathing room\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13800301\"]}");
	add("13800301", "{\"term\":\"breathing space\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13800301\", \"15299681\"]}");
	add("13800473", "{\"term\":\"clearance\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01143914\", \"13800473\", \"05097318\"]}");
	add("13800473", "{\"term\":\"headroom\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01022570\", \"13800473\"]}");
	add("13800473", "{\"term\":\"headway\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07387379\", \"13800473\"]}");
	add("13800612", "{\"term\":\"houseroom\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13800612\"]}");
	add("13800742", "{\"term\":\"lebensraum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13800742\"]}");
	add("13800742", "{\"term\":\"living space\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13800742\"]}");
	add("13800883", "{\"term\":\"parking\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00169326\", \"13800883\"]}");
	add("13801039", "{\"term\":\"sea room\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13801039\"]}");
	add("13801119", "{\"term\":\"swath\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09475783\", \"13801119\"]}");
	add("13801244", "{\"term\":\"volume\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"04997456\", \"13801456\", \"06425309\", \"02873453\", \"05106651\", \"13801244\"]}");
	add("13801456", "{\"term\":\"volume\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"04997456\", \"13801456\", \"06425309\", \"02873453\", \"05106651\", \"13801244\"]}");
	add("13801586", "{\"term\":\"capacity\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"05040724\", \"05630739\", \"11453660\", \"13777193\", \"00722203\", \"00916626\", \"13801586\", \"14554438\", \"05210665\"]}");
	add("13801586", "{\"term\":\"content\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"04354303\", \"14436286\", \"05817200\", \"13801586\", \"13838733\", \"06611268\", \"07971643\"]}");
	add("13801782", "{\"term\":\"vital capacity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13801782\"]}");
	add("13802016", "{\"term\":\"population\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"01260649\", \"13802016\", \"06035684\", \"08195659\", \"08196797\"]}");
	add("13802392", "{\"term\":\"proof\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00154781\", \"04017506\", \"06603166\", \"13802392\", \"06660359\", \"05833063\"]}");
	add("13802551", "{\"term\":\"s.t.p.\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13802551\"]}");
	add("13802551", "{\"term\":\"stp\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13802551\"]}");
	add("13802661", "{\"term\":\"dealings\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01108713\", \"13802661\", \"00041542\"]}");
	add("13802661", "{\"term\":\"relations\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13802661\"]}");
	add("13802818", "{\"term\":\"causality\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13802818\"]}");
	add("13802931", "{\"term\":\"human relationship\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13802931\"]}");
	add("13802931", "{\"term\":\"relationship\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"13834819\", \"13951701\", \"13951421\", \"13802931\"]}");
	add("13803376", "{\"term\":\"function\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"06594579\", \"07461861\", \"08269388\", \"13803376\", \"00721817\", \"05156572\", \"13806028\"]}");
	add("13803560", "{\"term\":\"partnership\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06538282\", \"13803560\", \"08077530\"]}");
	add("13803882", "{\"term\":\"personal relation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13803882\"]}");
	add("13803882", "{\"term\":\"personal relationship\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13803882\"]}");
	add("13804032", "{\"term\":\"bonding\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00149473\", \"05673613\", \"13804032\"]}");
	add("13804245", "{\"term\":\"indebtedness\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13804245\", \"14513903\"]}");
	add("13804245", "{\"term\":\"obligation\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"06785951\", \"13419414\", \"13804245\", \"14513694\", \"01132241\"]}");
	add("13804420", "{\"term\":\"female bonding\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13804420\"]}");
	add("13804541", "{\"term\":\"male bonding\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13804541\"]}");
	add("13804745", "{\"term\":\"maternal-infant bonding\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13804745\"]}");
	add("13804981", "{\"term\":\"association\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"08006819\", \"13456325\", \"13804981\", \"13953418\", \"05771913\", \"14444543\", \"01083552\", \"08066153\"]}");
	add("13805250", "{\"term\":\"logical relation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13805250\"]}");
	add("13805471", "{\"term\":\"contradictory\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13805471\"]}");
	add("13805633", "{\"term\":\"contrary\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13805633\", \"13880467\", \"13880801\"]}");
	add("13805793", "{\"term\":\"mathematical relation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13805793\"]}");
	add("13806028", "{\"term\":\"function\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"06594579\", \"07461861\", \"08269388\", \"13803376\", \"00721817\", \"05156572\", \"13806028\"]}");
	add("13806028", "{\"term\":\"map\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13806028\", \"03725654\"]}");
	add("13806028", "{\"term\":\"mapping\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01026585\", \"13806028\"]}");
	add("13806028", "{\"term\":\"mathematical function\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13806028\"]}");
	add("13806028", "{\"term\":\"single-valued function\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13806028\"]}");
	add("13806578", "{\"term\":\"expansion\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00372122\", \"07187407\", \"13806578\", \"00366535\"]}");
	add("13806749", "{\"term\":\"inverse function\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13806749\"]}");
	add("13806975", "{\"term\":\"kronecker delta\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13806975\"]}");
	add("13807118", "{\"term\":\"metric\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13598374\", \"13625518\", \"13807118\"]}");
	add("13807118", "{\"term\":\"metric function\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13807118\"]}");
	add("13807348", "{\"term\":\"transformation\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00399512\", \"00399838\", \"07275000\", \"13807348\", \"07374199\"]}");
	add("13807616", "{\"term\":\"reflection\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"05017811\", \"06779826\", \"13807616\", \"04076088\", \"04754355\", \"06893299\", \"11523478\", \"05793513\"]}");
	add("13807769", "{\"term\":\"rotation\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"05052532\", \"07455579\", \"13807769\", \"00342854\"]}");
	add("13807948", "{\"term\":\"translation\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00331810\", \"06441153\", \"13590186\", \"13807948\", \"00399512\", \"07461004\", \"06548380\"]}");
	add("13808177", "{\"term\":\"affine transformation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13808177\"]}");
	add("13808399", "{\"term\":\"isometry\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04755894\", \"05138802\", \"13808399\", \"15303946\"]}");
	add("13808625", "{\"term\":\"operator\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"10398651\", \"10214185\", \"10398479\", \"10398111\", \"13808625\"]}");
	add("13808807", "{\"term\":\"linear operator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13808807\"]}");
	add("13808960", "{\"term\":\"identity\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04750264\", \"13808960\", \"05771409\", \"04625427\"]}");
	add("13808960", "{\"term\":\"identity element\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13808960\"]}");
	add("13808960", "{\"term\":\"identity operator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13808960\"]}");
	add("13809172", "{\"term\":\"circular function\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13809172\"]}");
	add("13809172", "{\"term\":\"trigonometric function\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13809172\"]}");
	add("13809591", "{\"term\":\"sin\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"06851918\", \"09545129\", \"13809591\", \"00758433\", \"04835188\"]}");
	add("13809591", "{\"term\":\"sine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13809591\"]}");
	add("13809763", "{\"term\":\"arc sine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13809763\"]}");
	add("13809763", "{\"term\":\"arcsin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13809763\"]}");
	add("13809763", "{\"term\":\"arcsine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13809763\"]}");
	add("13809763", "{\"term\":\"inverse sine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13809763\"]}");
	add("13809935", "{\"term\":\"cos\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07740237\", \"13809935\"]}");
	add("13809935", "{\"term\":\"cosine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13809935\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }