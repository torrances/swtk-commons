package org.swtk.commons.dict.wordnet.index.byid.instance.p0.p9;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0949 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("09490173", "{\"term\":\"up quark\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09490173\"]}");
	add("09490315", "{\"term\":\"ural mountains\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09490315\"]}");
	add("09490315", "{\"term\":\"urals\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09490315\"]}");
	add("09490547", "{\"term\":\"uranus\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09490547\", \"09591180\"]}");
	add("09490826", "{\"term\":\"urolith\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09490826\"]}");
	add("09490895", "{\"term\":\"urubupunga\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09490895\"]}");
	add("09490895", "{\"term\":\"urubupunga falls\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09490895\"]}");
	add("09491051", "{\"term\":\"uruguay river\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09491051\"]}");
	add("09491367", "{\"term\":\"vagabond\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10764201\", \"09491367\"]}");
	add("09491577", "{\"term\":\"valence electron\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09491577\"]}");
	add("09491734", "{\"term\":\"vale\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09491734\"]}");
	add("09491734", "{\"term\":\"valley\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09491734\"]}");
	add("09492089", "{\"term\":\"variable\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"07285985\", \"09492282\", \"05866043\", \"09492089\"]}");
	add("09492282", "{\"term\":\"variable\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"07285985\", \"09492282\", \"05866043\", \"09492089\"]}");
	add("09492282", "{\"term\":\"variable star\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09492282\"]}");
	add("09492415", "{\"term\":\"transmitter\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04479961\", \"09492415\", \"10598214\"]}");
	add("09492415", "{\"term\":\"vector\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"01374679\", \"09492415\", \"13936278\", \"05873161\"]}");
	add("09492874", "{\"term\":\"vector-borne transmission\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09492874\"]}");
	add("09493042", "{\"term\":\"vega\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09493042\", \"11382190\"]}");
	add("09493157", "{\"term\":\"vehicle-borne transmission\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09493157\"]}");
	add("09493352", "{\"term\":\"mineral vein\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09493352\"]}");
	add("09493352", "{\"term\":\"vein\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"02471366\", \"09493352\", \"13118945\", \"07103814\", \"05426061\"]}");
	add("09493473", "{\"term\":\"vela\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09493473\"]}");
	add("09493680", "{\"term\":\"vent\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"01266940\", \"04533711\", \"09493680\", \"01326542\", \"04533536\"]}");
	add("09493680", "{\"term\":\"volcano\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09495727\", \"09493680\"]}");
	add("09493892", "{\"term\":\"venus\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01960380\", \"09578256\", \"09493892\"]}");
	add("09494354", "{\"term\":\"vesta\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09494354\", \"09587306\"]}");
	add("09494479", "{\"term\":\"vesture\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03055525\", \"09494479\"]}");
	add("09494611", "{\"term\":\"vetluga\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09494611\"]}");
	add("09494611", "{\"term\":\"vetluga river\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09494611\"]}");
	add("09494768", "{\"term\":\"victoria\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"08842306\", \"08852674\", \"09019084\", \"09169418\", \"09494768\", \"09591042\", \"11385852\"]}");
	add("09494768", "{\"term\":\"victoria falls\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09332362\", \"09494768\"]}");
	add("09494995", "{\"term\":\"viral delivery vector\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09494995\"]}");
	add("09495106", "{\"term\":\"virgo\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08704717\", \"09495106\", \"09772258\"]}");
	add("09495265", "{\"term\":\"vistula\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09495265\"]}");
	add("09495265", "{\"term\":\"vistula river\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09495265\"]}");
	add("09495398", "{\"term\":\"volans\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09495398\"]}");
	add("09495543", "{\"term\":\"crater\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"09282125\", \"09282282\", \"09495543\"]}");
	add("09495543", "{\"term\":\"volcanic crater\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09495543\"]}");
	add("09495727", "{\"term\":\"volcano\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09495727\", \"09493680\"]}");
	add("09496369", "{\"term\":\"volga\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09496369\"]}");
	add("09496369", "{\"term\":\"volga river\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09496369\"]}");
	add("09496527", "{\"term\":\"volkhov\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09496527\"]}");
	add("09496527", "{\"term\":\"volkhov river\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09496527\"]}");
	add("09496688", "{\"term\":\"volta\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09496688\", \"11388363\"]}");
	add("09496815", "{\"term\":\"vulpecula\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09496815\"]}");
	add("09496938", "{\"term\":\"wabash\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09496938\"]}");
	add("09496938", "{\"term\":\"wabash river\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09496938\"]}");
	add("09497140", "{\"term\":\"wadi\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09497140\"]}");
	add("09497292", "{\"term\":\"wall\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"04058937\", \"04554878\", \"04555107\", \"09497542\", \"14588360\", \"05612009\", \"09497292\", \"04554141\"]}");
	add("09497542", "{\"term\":\"wall\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"04058937\", \"04554878\", \"04555107\", \"09497542\", \"14588360\", \"05612009\", \"09497292\", \"04554141\"]}");
	add("09497687", "{\"term\":\"wallow\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07457474\", \"09497687\"]}");
	add("09497793", "{\"term\":\"wall rock\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09497793\"]}");
	add("09497895", "{\"term\":\"rabbit warren\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09497895\", \"08696253\"]}");
	add("09497895", "{\"term\":\"warren\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"08013040\", \"08696253\", \"09497895\", \"11394784\", \"11394947\"]}");
	add("09498025", "{\"term\":\"dry wash\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09498025\"]}");
	add("09498025", "{\"term\":\"wash\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"01098579\", \"03653533\", \"04560531\", \"11443311\", \"13595396\", \"09498025\", \"00256577\", \"04560675\"]}");
	add("09498174", "{\"term\":\"hornet\u0027s nest\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09498174\", \"13958605\"]}");
	add("09498174", "{\"term\":\"hornets\u0027 nest\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09498174\", \"13958605\"]}");
	add("09498174", "{\"term\":\"wasp\u0027s nest\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09498174\"]}");
	add("09498174", "{\"term\":\"wasps\u0027 nest\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09498174\"]}");
	add("09498309", "{\"term\":\"watercourse\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04566561\", \"09471510\", \"09498309\"]}");
	add("09498422", "{\"term\":\"falls\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09498422\", \"12436270\"]}");
	add("09498422", "{\"term\":\"waterfall\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09498422\"]}");
	add("09498846", "{\"term\":\"water gap\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09498846\"]}");
	add("09498957", "{\"term\":\"water hole\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09498957\"]}");
	add("09499055", "{\"term\":\"waterside\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09499055\"]}");
	add("09499141", "{\"term\":\"water system\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04569944\", \"09499141\"]}");
	add("09499253", "{\"term\":\"groundwater level\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09499253\"]}");
	add("09499253", "{\"term\":\"water level\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04568296\", \"08696521\", \"09499253\", \"05139486\"]}");
	add("09499253", "{\"term\":\"water table\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09499253\"]}");
	add("09499461", "{\"term\":\"waterway\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04566561\", \"09499461\"]}");
	add("09499651", "{\"term\":\"weakener\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09499651\"]}");
	add("09499847", "{\"term\":\"weakly interacting massive particle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09499847\"]}");
	add("09499847", "{\"term\":\"wimp\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09499847\", \"10801493\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }