package org.swtk.commons.dict.wordnet.byid.generated.p1.p0;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexById1010 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("10100106", "{\"term\":\"fastener\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03328648\", \"10100106\"]}");
	add("10100277", "{\"term\":\"determinist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10100277\"]}");
	add("10100277", "{\"term\":\"fatalist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10100277\"]}");
	add("10100277", "{\"term\":\"predestinarian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10100277\"]}");
	add("10100277", "{\"term\":\"predestinationist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10100277\"]}");
	add("10100553", "{\"term\":\"fat cat\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10100553\"]}");
	add("10100638", "{\"term\":\"begetter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10100638\"]}");
	add("10100638", "{\"term\":\"father\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"10045020\", \"10127072\", \"09560084\", \"10101225\", \"09941250\", \"10100973\", \"10122569\", \"10100638\"]}");
	add("10100638", "{\"term\":\"male parent\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10100638\"]}");
	add("10100973", "{\"term\":\"father\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"10045020\", \"10127072\", \"09560084\", \"10101225\", \"09941250\", \"10100973\", \"10122569\", \"10100638\"]}");
	add("10100973", "{\"term\":\"padre\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10100973\", \"10336185\"]}");
	add("10101225", "{\"term\":\"father\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"10045020\", \"10127072\", \"09560084\", \"10101225\", \"09941250\", \"10100973\", \"10122569\", \"10100638\"]}");
	add("10101439", "{\"term\":\"father figure\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10101439\"]}");
	add("10101439", "{\"term\":\"father surrogate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10101439\"]}");
	add("10101611", "{\"term\":\"father-figure\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10101611\"]}");
	add("10101812", "{\"term\":\"father-in-law\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10101812\"]}");
	add("10101915", "{\"term\":\"butterball\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01852833\", \"10101915\"]}");
	add("10101915", "{\"term\":\"fat person\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10101915\"]}");
	add("10101915", "{\"term\":\"fatso\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10101915\"]}");
	add("10101915", "{\"term\":\"fatty\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10101915\"]}");
	add("10101915", "{\"term\":\"roly-poly\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07635754\", \"10101915\"]}");
	add("10102068", "{\"term\":\"fauntleroy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10102068\"]}");
	add("10102068", "{\"term\":\"little lord fauntleroy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10102068\"]}");
	add("10102192", "{\"term\":\"fauve\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10102192\"]}");
	add("10102192", "{\"term\":\"fauvist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10102192\"]}");
	add("10102331", "{\"term\":\"favorite son\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10102331\"]}");
	add("10102456", "{\"term\":\"featherweight\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10102456\", \"10102574\", \"10102655\"]}");
	add("10102574", "{\"term\":\"featherweight\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10102456\", \"10102574\", \"10102655\"]}");
	add("10102655", "{\"term\":\"featherweight\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10102456\", \"10102574\", \"10102655\"]}");
	add("10102766", "{\"term\":\"federalist\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10102766\", \"10102866\"]}");
	add("10102866", "{\"term\":\"federalist\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10102766\", \"10102866\"]}");
	add("10103033", "{\"term\":\"fellah\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10103033\"]}");
	add("10103127", "{\"term\":\"buster\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"09847846\", \"09902904\", \"09903082\", \"09903192\", \"10103127\"]}");
	add("10103127", "{\"term\":\"dude\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10010564\", \"10103127\"]}");
	add("10103127", "{\"term\":\"fellow\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"09890770\", \"10103127\", \"10103295\", \"13765240\", \"09955448\", \"09965384\", \"09927483\"]}");
	add("10103295", "{\"term\":\"fellow\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"09890770\", \"10103127\", \"10103295\", \"13765240\", \"09955448\", \"09965384\", \"09927483\"]}");
	add("10103446", "{\"term\":\"fellow traveler\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09965757\", \"10103446\"]}");
	add("10103446", "{\"term\":\"fellow traveller\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09965757\", \"10103446\"]}");
	add("10103592", "{\"term\":\"female aristocrat\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10103592\"]}");
	add("10103812", "{\"term\":\"female offspring\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10103812\"]}");
	add("10103950", "{\"term\":\"female sibling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10103950\"]}");
	add("10104064", "{\"term\":\"female child\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10104064\"]}");
	add("10104064", "{\"term\":\"girl\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"10149967\", \"10150206\", \"10012375\", \"10104064\", \"10149362\"]}");
	add("10104064", "{\"term\":\"little girl\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10104064\"]}");
	add("10104404", "{\"term\":\"feminist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10104404\"]}");
	add("10104404", "{\"term\":\"libber\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10104404\"]}");
	add("10104404", "{\"term\":\"women\u0027s liberationist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10104404\"]}");
	add("10104404", "{\"term\":\"women\u0027s rightist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10104404\"]}");
	add("10104870", "{\"term\":\"fence\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10104870\", \"03332179\"]}");
	add("10104986", "{\"term\":\"fencer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10104986\"]}");
	add("10104986", "{\"term\":\"swordsman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10104986\"]}");
	add("10105113", "{\"term\":\"fence-sitter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10105113\"]}");
	add("10105218", "{\"term\":\"ferryman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10105218\"]}");
	add("10105317", "{\"term\":\"fetishist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10105317\"]}");
	add("10105505", "{\"term\":\"feudal lord\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10105505\"]}");
	add("10105505", "{\"term\":\"seigneur\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10105505\"]}");
	add("10105505", "{\"term\":\"seignior\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10105505\"]}");
	add("10105638", "{\"term\":\"fiance\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10105638\"]}");
	add("10105638", "{\"term\":\"groom-to-be\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10105638\"]}");
	add("10105739", "{\"term\":\"bride-to-be\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10105739\"]}");
	add("10105739", "{\"term\":\"fiancee\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10105739\"]}");
	add("10105843", "{\"term\":\"fiduciary\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10105843\"]}");
	add("10106152", "{\"term\":\"fielder\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10106152\", \"10106337\"]}");
	add("10106152", "{\"term\":\"fieldsman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10106152\"]}");
	add("10106337", "{\"term\":\"fielder\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10106152\", \"10106337\"]}");
	add("10106513", "{\"term\":\"field judge\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10106513\"]}");
	add("10106590", "{\"term\":\"field marshal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10106590\"]}");
	add("10106849", "{\"term\":\"field-grade officer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10106849\"]}");
	add("10106849", "{\"term\":\"field officer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10106849\"]}");
	add("10106849", "{\"term\":\"fo\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10106849\"]}");
	add("10107024", "{\"term\":\"fifth columnist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10107024\"]}");
	add("10107024", "{\"term\":\"saboteur\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10107024\", \"10564305\"]}");
	add("10107203", "{\"term\":\"fighter pilot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10107203\"]}");
	add("10107343", "{\"term\":\"file clerk\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10107343\"]}");
	add("10107343", "{\"term\":\"filer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10107343\", \"10107505\"]}");
	add("10107343", "{\"term\":\"filing clerk\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10107343\"]}");
	add("10107505", "{\"term\":\"filer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10107343\", \"10107505\"]}");
	add("10107637", "{\"term\":\"filibuster\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01069936\", \"10107637\"]}");
	add("10107637", "{\"term\":\"filibusterer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10107637\"]}");
	add("10107870", "{\"term\":\"filicide\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00223022\", \"10107870\"]}");
	add("10107969", "{\"term\":\"director\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"09972018\", \"10107969\", \"10034960\", \"10035230\", \"10034684\"]}");
	add("10107969", "{\"term\":\"film director\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10107969\"]}");
	add("10108159", "{\"term\":\"film maker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10108159\"]}");
	add("10108159", "{\"term\":\"film producer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10108159\"]}");
	add("10108159", "{\"term\":\"filmmaker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10108159\"]}");
	add("10108159", "{\"term\":\"movie maker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10108159\"]}");
	add("10109253", "{\"term\":\"film star\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10109253\"]}");
	add("10109253", "{\"term\":\"movie star\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10109253\"]}");
	add("10109384", "{\"term\":\"finagler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10109384\"]}");
	add("10109384", "{\"term\":\"wangler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10109384\"]}");
	add("10109548", "{\"term\":\"finalist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10109548\"]}");
	add("10109661", "{\"term\":\"finance minister\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10109661\"]}");
	add("10109661", "{\"term\":\"minister of finance\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10109661\"]}");
	add("10109789", "{\"term\":\"financier\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10109789\"]}");
	add("10109789", "{\"term\":\"moneyman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10109789\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }