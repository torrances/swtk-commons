package org.swtk.commons.dict.wordnet.index.name.instance.w.i.n.d;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceWIND {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"wind\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"00346467\", \"00841258\", \"04594218\", \"06664322\", \"07151419\", \"00838198\", \"11435606\", \"11546388\"]}");
	add("{\"term\":\"windage\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"05018615\", \"05051366\", \"05110803\", \"11525628\"]}");
	add("{\"term\":\"windaus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11412749\"]}");
	add("{\"term\":\"windbag\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10141124\"]}");
	add("{\"term\":\"windbreak\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04593358\"]}");
	add("{\"term\":\"windbreaker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03896748\"]}");
	add("{\"term\":\"windburn\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14314253\"]}");
	add("{\"term\":\"windcheater\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03896748\"]}");
	add("{\"term\":\"winder\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04593707\", \"04593867\", \"10801660\"]}");
	add("{\"term\":\"windfall\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07492727\", \"07755011\"]}");
	add("{\"term\":\"windflower\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11745484\"]}");
	add("{\"term\":\"windhoek\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08717947\"]}");
	add("{\"term\":\"windiness\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07104300\", \"14547389\"]}");
	add("{\"term\":\"winding\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00346467\"]}");
	add("{\"term\":\"windjammer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04594630\"]}");
	add("{\"term\":\"windlass\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04593031\"]}");
	add("{\"term\":\"windlessness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14546411\"]}");
	add("{\"term\":\"windmill\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04594707\", \"04594862\"]}");
	add("{\"term\":\"window\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"04596042\", \"04596289\", \"04597048\", \"15325026\", \"09503207\", \"04595890\", \"04595668\", \"04594951\"]}");
	add("{\"term\":\"windowpane\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02665455\", \"04597048\"]}");
	add("{\"term\":\"windows\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06593999\"]}");
	add("{\"term\":\"windowsill\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04597566\"]}");
	add("{\"term\":\"windpipe\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05539447\"]}");
	add("{\"term\":\"windscreen\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04597856\"]}");
	add("{\"term\":\"windshield\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04597856\"]}");
	add("{\"term\":\"windsock\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07272250\"]}");
	add("{\"term\":\"windsor\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08176639\", \"08847619\"]}");
	add("{\"term\":\"windstorm\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11547465\"]}");
	add("{\"term\":\"windtalker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09953071\"]}");
	add("{\"term\":\"windup\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00211959\"]}");
	add("{\"term\":\"windward\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08627580\", \"13851799\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public boolean has(final String TERM) { 		return map.containsKey(TERM); 	} }