package org.swtk.commons.dict.wordnet.index.name.controller.k.n;  import java.util.Collection; import java.util.Set; import java.util.TreeSet;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  	import org.swtk.commons.dict.wordnet.index.name.instance.k.n.a.c.WordnetNounIndexNameInstanceKNAC;
	import org.swtk.commons.dict.wordnet.index.name.instance.k.n.a.p.WordnetNounIndexNameInstanceKNAP;
	import org.swtk.commons.dict.wordnet.index.name.instance.k.n.a.v.WordnetNounIndexNameInstanceKNAV;
	import org.swtk.commons.dict.wordnet.index.name.instance.k.n.a.w.WordnetNounIndexNameInstanceKNAW;
	import org.swtk.commons.dict.wordnet.index.name.instance.k.n.e.e.WordnetNounIndexNameInstanceKNEE;
	import org.swtk.commons.dict.wordnet.index.name.instance.k.n.e.l.WordnetNounIndexNameInstanceKNEL;
	import org.swtk.commons.dict.wordnet.index.name.instance.k.n.e.s.WordnetNounIndexNameInstanceKNES;
	import org.swtk.commons.dict.wordnet.index.name.instance.k.n.i.c.WordnetNounIndexNameInstanceKNIC;
	import org.swtk.commons.dict.wordnet.index.name.instance.k.n.i.f.WordnetNounIndexNameInstanceKNIF;
	import org.swtk.commons.dict.wordnet.index.name.instance.k.n.i.g.WordnetNounIndexNameInstanceKNIG;
	import org.swtk.commons.dict.wordnet.index.name.instance.k.n.i.p.WordnetNounIndexNameInstanceKNIP;
	import org.swtk.commons.dict.wordnet.index.name.instance.k.n.i.s.WordnetNounIndexNameInstanceKNIS;
	import org.swtk.commons.dict.wordnet.index.name.instance.k.n.i.t.WordnetNounIndexNameInstanceKNIT;
	import org.swtk.commons.dict.wordnet.index.name.instance.k.n.o.b.WordnetNounIndexNameInstanceKNOB;
	import org.swtk.commons.dict.wordnet.index.name.instance.k.n.o.c.WordnetNounIndexNameInstanceKNOC;
	import org.swtk.commons.dict.wordnet.index.name.instance.k.n.o.l.WordnetNounIndexNameInstanceKNOL;
	import org.swtk.commons.dict.wordnet.index.name.instance.k.n.o.s.WordnetNounIndexNameInstanceKNOS;
	import org.swtk.commons.dict.wordnet.index.name.instance.k.n.o.t.WordnetNounIndexNameInstanceKNOT;
	import org.swtk.commons.dict.wordnet.index.name.instance.k.n.o.u.WordnetNounIndexNameInstanceKNOU;
	import org.swtk.commons.dict.wordnet.index.name.instance.k.n.o.w.WordnetNounIndexNameInstanceKNOW;
	import org.swtk.commons.dict.wordnet.index.name.instance.k.n.o.x.WordnetNounIndexNameInstanceKNOX;
	import org.swtk.commons.dict.wordnet.index.name.instance.k.n.u.c.WordnetNounIndexNameInstanceKNUC;
	import org.swtk.commons.dict.wordnet.index.name.instance.k.n.u.t.WordnetNounIndexNameInstanceKNUT;
  import com.trimc.blogger.commons.exception.BusinessException;  public final class WordnetNounIndexNameControllerKN {  	public static Collection<IndexNoun> get(final String TERM) throws BusinessException {  		String key = TERM.substring(0, 4).toLowerCase(); 			if ("knac".equals(key)) return WordnetNounIndexNameInstanceKNAC.get(TERM);
	if ("knap".equals(key)) return WordnetNounIndexNameInstanceKNAP.get(TERM);
	if ("knav".equals(key)) return WordnetNounIndexNameInstanceKNAV.get(TERM);
	if ("knaw".equals(key)) return WordnetNounIndexNameInstanceKNAW.get(TERM);
	if ("knee".equals(key)) return WordnetNounIndexNameInstanceKNEE.get(TERM);
	if ("knel".equals(key)) return WordnetNounIndexNameInstanceKNEL.get(TERM);
	if ("knes".equals(key)) return WordnetNounIndexNameInstanceKNES.get(TERM);
	if ("knic".equals(key)) return WordnetNounIndexNameInstanceKNIC.get(TERM);
	if ("knif".equals(key)) return WordnetNounIndexNameInstanceKNIF.get(TERM);
	if ("knig".equals(key)) return WordnetNounIndexNameInstanceKNIG.get(TERM);
	if ("knip".equals(key)) return WordnetNounIndexNameInstanceKNIP.get(TERM);
	if ("knis".equals(key)) return WordnetNounIndexNameInstanceKNIS.get(TERM);
	if ("knit".equals(key)) return WordnetNounIndexNameInstanceKNIT.get(TERM);
	if ("knob".equals(key)) return WordnetNounIndexNameInstanceKNOB.get(TERM);
	if ("knoc".equals(key)) return WordnetNounIndexNameInstanceKNOC.get(TERM);
	if ("knol".equals(key)) return WordnetNounIndexNameInstanceKNOL.get(TERM);
	if ("knos".equals(key)) return WordnetNounIndexNameInstanceKNOS.get(TERM);
	if ("knot".equals(key)) return WordnetNounIndexNameInstanceKNOT.get(TERM);
	if ("knou".equals(key)) return WordnetNounIndexNameInstanceKNOU.get(TERM);
	if ("know".equals(key)) return WordnetNounIndexNameInstanceKNOW.get(TERM);
	if ("knox".equals(key)) return WordnetNounIndexNameInstanceKNOX.get(TERM);
	if ("knuc".equals(key)) return WordnetNounIndexNameInstanceKNUC.get(TERM);
	if ("knut".equals(key)) return WordnetNounIndexNameInstanceKNUT.get(TERM);
  		throw new BusinessException("TERM not found (id = %s)", TERM); 	} 	 	public static Collection<String> terms() throws BusinessException { 		Set<String> set = new TreeSet<String>();  			set.addAll(WordnetNounIndexNameInstanceKNAC.terms());
	set.addAll(WordnetNounIndexNameInstanceKNAP.terms());
	set.addAll(WordnetNounIndexNameInstanceKNAV.terms());
	set.addAll(WordnetNounIndexNameInstanceKNAW.terms());
	set.addAll(WordnetNounIndexNameInstanceKNEE.terms());
	set.addAll(WordnetNounIndexNameInstanceKNEL.terms());
	set.addAll(WordnetNounIndexNameInstanceKNES.terms());
	set.addAll(WordnetNounIndexNameInstanceKNIC.terms());
	set.addAll(WordnetNounIndexNameInstanceKNIF.terms());
	set.addAll(WordnetNounIndexNameInstanceKNIG.terms());
	set.addAll(WordnetNounIndexNameInstanceKNIP.terms());
	set.addAll(WordnetNounIndexNameInstanceKNIS.terms());
	set.addAll(WordnetNounIndexNameInstanceKNIT.terms());
	set.addAll(WordnetNounIndexNameInstanceKNOB.terms());
	set.addAll(WordnetNounIndexNameInstanceKNOC.terms());
	set.addAll(WordnetNounIndexNameInstanceKNOL.terms());
	set.addAll(WordnetNounIndexNameInstanceKNOS.terms());
	set.addAll(WordnetNounIndexNameInstanceKNOT.terms());
	set.addAll(WordnetNounIndexNameInstanceKNOU.terms());
	set.addAll(WordnetNounIndexNameInstanceKNOW.terms());
	set.addAll(WordnetNounIndexNameInstanceKNOX.terms());
	set.addAll(WordnetNounIndexNameInstanceKNUC.terms());
	set.addAll(WordnetNounIndexNameInstanceKNUT.terms());
  		return set; 	} }