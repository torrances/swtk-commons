package org.swtk.commons.dict.wordnet.index.byid.instance.p0.p7;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0738 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("07380032", "{\"term\":\"debacle\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07491763\", \"11475370\", \"07380032\"]}");
	add("07380032", "{\"term\":\"fiasco\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07380032\"]}");
	add("07380124", "{\"term\":\"implosion\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07131012\", \"07380124\"]}");
	add("07380273", "{\"term\":\"gravitational collapse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07380273\"]}");
	add("07380449", "{\"term\":\"halt\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01065621\", \"07380449\", \"14034398\"]}");
	add("07380449", "{\"term\":\"stop\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"02856708\", \"02986245\", \"03193767\", \"04334462\", \"06856570\", \"07130622\", \"08674524\", \"14034398\", \"01058335\", \"01077970\", \"07380449\"]}");
	add("07380745", "{\"term\":\"stand\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"00962962\", \"02790007\", \"04307879\", \"01058977\", \"04306353\", \"06220098\", \"07380745\", \"04044916\", \"04308138\", \"08455376\", \"08671281\", \"02800851\"]}");
	add("07380745", "{\"term\":\"standstill\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07380745\", \"14038832\"]}");
	add("07380745", "{\"term\":\"tie-up\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07380745\", \"13953418\"]}");
	add("07380889", "{\"term\":\"departure\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07348249\", \"07380889\", \"00043495\"]}");
	add("07380889", "{\"term\":\"deviation\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00351206\", \"00738697\", \"04810025\", \"06031640\", \"07380889\"]}");
	add("07380889", "{\"term\":\"difference\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"13751346\", \"13881504\", \"07196595\", \"07380889\", \"04756076\"]}");
	add("07380889", "{\"term\":\"divergence\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04756982\", \"05871886\", \"07380889\", \"01006014\"]}");
	add("07381227", "{\"term\":\"discrepancy\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07381227\", \"04756982\"]}");
	add("07381227", "{\"term\":\"variance\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00195818\", \"01144471\", \"04742473\", \"04756982\", \"06034344\", \"07196502\", \"07381227\"]}");
	add("07381227", "{\"term\":\"variant\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"05849159\", \"05872761\", \"08128123\", \"07381227\"]}");
	add("07381399", "{\"term\":\"driftage\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07381399\"]}");
	add("07381571", "{\"term\":\"flection\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07381571\", \"14059391\"]}");
	add("07381571", "{\"term\":\"flexion\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00406181\", \"07381571\", \"14059391\"]}");
	add("07381571", "{\"term\":\"inflection\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"07098150\", \"07381571\", \"07097924\", \"13825994\"]}");
	add("07381691", "{\"term\":\"malformation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07381691\", \"14236994\"]}");
	add("07381691", "{\"term\":\"miscreation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07381691\"]}");
	add("07381831", "{\"term\":\"monstrosity\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07381831\", \"10129212\"]}");
	add("07381985", "{\"term\":\"dislocation\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"14315063\", \"00554399\", \"07381985\"]}");
	add("07381985", "{\"term\":\"disruption\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00554210\", \"07381985\", \"14000813\", \"00384760\"]}");
	add("07382148", "{\"term\":\"break\", \"synsetCount\":16, \"upperType\":\"NOUN\", \"ids\":[\"00060809\", \"00188856\", \"00295592\", \"00384760\", \"00483903\", \"00501291\", \"07312251\", \"07382148\", \"14315592\", \"15295994\", \"00377208\", \"01064921\", \"07328414\", \"09301443\", \"07331456\", \"07382412\"]}");
	add("07382308", "{\"term\":\"snap\", \"synsetCount\":13, \"upperType\":\"NOUN\", \"ids\":[\"00121763\", \"00345525\", \"00576402\", \"04255319\", \"04255717\", \"05027524\", \"07382308\", \"07396023\", \"07408836\", \"07651993\", \"07744029\", \"15324340\", \"00139776\"]}");
	add("07382412", "{\"term\":\"break\", \"synsetCount\":16, \"upperType\":\"NOUN\", \"ids\":[\"00060809\", \"00188856\", \"00295592\", \"00384760\", \"00483903\", \"00501291\", \"07312251\", \"07382148\", \"14315592\", \"15295994\", \"00377208\", \"01064921\", \"07328414\", \"09301443\", \"07331456\", \"07382412\"]}");
	add("07382412", "{\"term\":\"interruption\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"15295994\", \"07382412\", \"00384760\"]}");
	add("07382730", "{\"term\":\"punctuation\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00391006\", \"06854415\", \"07382730\"]}");
	add("07382856", "{\"term\":\"abatement\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00362159\", \"07382856\"]}");
	add("07382856", "{\"term\":\"hiatus\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"05553072\", \"07022063\", \"07382856\"]}");
	add("07382856", "{\"term\":\"reprieve\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"01261714\", \"06560308\", \"07382856\", \"14469500\"]}");
	add("07382856", "{\"term\":\"respite\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"01261714\", \"15299060\", \"07382856\", \"01064921\", \"14469500\"]}");
	add("07382856", "{\"term\":\"suspension\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00209981\", \"01019643\", \"04373203\", \"07382856\", \"14034107\", \"15295994\", \"14615271\"]}");
	add("07383082", "{\"term\":\"defervescence\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07383082\"]}");
	add("07383246", "{\"term\":\"eclipse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07383246\"]}");
	add("07383246", "{\"term\":\"occultation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07383246\"]}");
	add("07383477", "{\"term\":\"solar eclipse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07383477\"]}");
	add("07383593", "{\"term\":\"lunar eclipse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07383593\"]}");
	add("07383699", "{\"term\":\"annular eclipse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07383699\"]}");
	add("07383806", "{\"term\":\"total eclipse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07383806\"]}");
	add("07383944", "{\"term\":\"partial eclipse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07383944\"]}");
	add("07384070", "{\"term\":\"augmentation\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00366057\", \"07043863\", \"07384070\"]}");
	add("07384204", "{\"term\":\"accommodation\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00194074\", \"01213306\", \"02675001\", \"05763483\", \"07192097\", \"07384204\"]}");
	add("07384204", "{\"term\":\"adjustment\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"13295115\", \"13448251\", \"01001729\", \"00200556\", \"07384204\"]}");
	add("07384204", "{\"term\":\"fitting\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00796669\", \"02733566\", \"03358462\", \"07384204\"]}");
	add("07384522", "{\"term\":\"shakedown\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00786588\", \"00995873\", \"07384522\"]}");
	add("07384725", "{\"term\":\"entering\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00049744\", \"07384725\"]}");
	add("07384725", "{\"term\":\"entrance\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00049744\", \"07384725\", \"03295682\"]}");
	add("07384870", "{\"term\":\"fall\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"05119135\", \"07376986\", \"07486511\", \"15194468\", \"00068527\", \"07384870\", \"07442328\", \"00758272\", \"09288526\", \"07493671\", \"00077704\", \"15261656\"]}");
	add("07385010", "{\"term\":\"climb\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00325936\", \"07385010\", \"09229873\"]}");
	add("07385010", "{\"term\":\"climbing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07385010\"]}");
	add("07385010", "{\"term\":\"mounting\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03798719\", \"07385010\"]}");
	add("07385271", "{\"term\":\"elevation\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"00374352\", \"03285963\", \"05094110\", \"05138548\", \"09389214\", \"13858749\", \"13963489\", \"07385271\"]}");
	add("07385271", "{\"term\":\"lift\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"00117196\", \"00310102\", \"00317420\", \"00675401\", \"03286056\", \"03669700\", \"03669840\", \"04238755\", \"07362999\", \"07385271\", \"11442391\", \"01211977\"]}");
	add("07385271", "{\"term\":\"raising\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01131853\", \"04929290\", \"07385271\"]}");
	add("07385568", "{\"term\":\"heave\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00106091\", \"00117196\", \"00227818\", \"00325660\", \"07364669\", \"07385568\"]}");
	add("07385568", "{\"term\":\"heaving\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00106091\", \"00325660\", \"00835796\", \"07385568\"]}");
	add("07385768", "{\"term\":\"liftoff\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07385768\"]}");
	add("07385893", "{\"term\":\"sound\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"09463090\", \"09469019\", \"07125755\", \"06288789\", \"07385893\", \"11501330\", \"05726201\", \"04988388\"]}");
	add("07387165", "{\"term\":\"bother\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05838383\", \"07387165\"]}");
	add("07387165", "{\"term\":\"fuss\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00556175\", \"07199395\", \"07387165\", \"14427176\"]}");
	add("07387165", "{\"term\":\"hassle\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01174931\", \"07387165\"]}");
	add("07387165", "{\"term\":\"trouble\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"14070233\", \"07539481\", \"00625102\", \"07303737\", \"07387165\", \"05695143\"]}");
	add("07387379", "{\"term\":\"head\", \"synsetCount\":33, \"upperType\":\"NOUN\", \"ids\":[\"00856505\", \"03254982\", \"03506432\", \"03506664\", \"03506758\", \"03506955\", \"04065833\", \"05298255\", \"05603592\", \"06355341\", \"06796625\", \"06834918\", \"07387379\", \"07433422\", \"08590014\", \"09324750\", \"09324937\", \"09422467\", \"10182373\", \"10182947\", \"10494230\", \"13154545\", \"13675998\", \"14335908\", \"06302589\", \"08525470\", \"08681922\", \"11516007\", \"08499282\", \"10182584\", \"05619057\", \"01320872\", \"05546258\"]}");
	add("07387379", "{\"term\":\"headway\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07387379\", \"13800473\"]}");
	add("07387559", "{\"term\":\"trial\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"07387559\", \"07492371\", \"01198357\", \"00796028\", \"05807220\", \"00792739\"]}");
	add("07387559", "{\"term\":\"tribulation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07387559\"]}");
	add("07387559", "{\"term\":\"visitation\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00653312\", \"07331324\", \"07387559\"]}");
	add("07387877", "{\"term\":\"union\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"00382488\", \"04517110\", \"07387877\", \"08015154\", \"08321825\", \"13592568\", \"13987306\", \"14441799\", \"00848970\", \"09074770\", \"08249977\"]}");
	add("07388081", "{\"term\":\"amphimixis\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07388081\", \"13576443\"]}");
	add("07388202", "{\"term\":\"fusion\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00381376\", \"00700770\", \"05945279\", \"13506728\", \"13506970\", \"14442066\", \"07388202\"]}");
	add("07388202", "{\"term\":\"merger\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07388202\", \"01240989\"]}");
	add("07388202", "{\"term\":\"unification\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00382488\", \"14441799\", \"07388202\"]}");
	add("07388403", "{\"term\":\"combine\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07388403\", \"08253542\", \"03079638\"]}");
	add("07388403", "{\"term\":\"combining\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00379793\", \"07388403\"]}");
	add("07388752", "{\"term\":\"recombination\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07388752\", \"07388957\"]}");
	add("07388957", "{\"term\":\"recombination\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07388752\", \"07388957\"]}");
	add("07389233", "{\"term\":\"consolidation\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"09275492\", \"01239980\", \"07389233\"]}");
	add("07389356", "{\"term\":\"mix\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00380891\", \"07389356\", \"07898861\"]}");
	add("07389356", "{\"term\":\"mixture\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00380891\", \"07389356\", \"08415730\", \"07898472\", \"14610438\"]}");
	add("07389653", "{\"term\":\"concoction\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00928483\", \"05642064\", \"07389653\", \"07898472\"]}");
	add("07389814", "{\"term\":\"conglobation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07389814\", \"13888407\"]}");
	add("07389814", "{\"term\":\"conglomeration\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07389814\", \"08435060\", \"13888407\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }