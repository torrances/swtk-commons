package org.swtk.commons.dict.wordnet.index.byid.instance.p0.p8;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0879 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("08790140", "{\"term\":\"cologne\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03075025\", \"08790140\"]}");
	add("08790140", "{\"term\":\"koln\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08790140\"]}");
	add("08790384", "{\"term\":\"braunschweig\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08790384\"]}");
	add("08790384", "{\"term\":\"brunswick\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08790384\", \"09099777\", \"09115650\"]}");
	add("08790500", "{\"term\":\"dusseldorf\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08790500\"]}");
	add("08790627", "{\"term\":\"essen\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08790627\"]}");
	add("08790755", "{\"term\":\"frankfort\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08790755\", \"09112196\"]}");
	add("08790755", "{\"term\":\"frankfurt\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08790755\"]}");
	add("08790755", "{\"term\":\"frankfurt on the main\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08790755\"]}");
	add("08790931", "{\"term\":\"halle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08790931\"]}");
	add("08790931", "{\"term\":\"halle-an-der-saale\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08790931\"]}");
	add("08791169", "{\"term\":\"hamburg\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08791169\"]}");
	add("08791512", "{\"term\":\"hannover\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08791512\"]}");
	add("08791512", "{\"term\":\"hanover\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08171859\", \"08791512\"]}");
	add("08791713", "{\"term\":\"lubeck\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08791713\"]}");
	add("08791906", "{\"term\":\"mannheim\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08791906\"]}");
	add("08792060", "{\"term\":\"muenchen\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08792060\"]}");
	add("08792060", "{\"term\":\"munich\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08792060\"]}");
	add("08792207", "{\"term\":\"nuremberg\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08792207\"]}");
	add("08792207", "{\"term\":\"nurnberg\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08792207\"]}");
	add("08792379", "{\"term\":\"potsdam\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08792379\"]}");
	add("08792537", "{\"term\":\"rostock\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08792537\"]}");
	add("08792745", "{\"term\":\"stuttgart\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08792745\"]}");
	add("08792886", "{\"term\":\"wiesbaden\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08792886\"]}");
	add("08793012", "{\"term\":\"wuerzburg\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08793012\"]}");
	add("08793012", "{\"term\":\"wurzburg\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08793012\"]}");
	add("08793130", "{\"term\":\"rheinland\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08793130\"]}");
	add("08793130", "{\"term\":\"rhineland\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08793130\"]}");
	add("08793272", "{\"term\":\"palatinate\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08570961\", \"08793272\"]}");
	add("08793272", "{\"term\":\"pfalz\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08793272\"]}");
	add("08793430", "{\"term\":\"brandenburg\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08793430\"]}");
	add("08793617", "{\"term\":\"preussen\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08793617\"]}");
	add("08793617", "{\"term\":\"prussia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08793617\"]}");
	add("08793971", "{\"term\":\"ruhr\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08793971\", \"09440438\"]}");
	add("08793971", "{\"term\":\"ruhr valley\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08793971\"]}");
	add("08794153", "{\"term\":\"thuringia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08794153\"]}");
	add("08794268", "{\"term\":\"east timor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08794268\"]}");
	add("08794520", "{\"term\":\"ecuador\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08794520\"]}");
	add("08794520", "{\"term\":\"republic of ecuador\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08794520\"]}");
	add("08794982", "{\"term\":\"guayaquil\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08794982\"]}");
	add("08795085", "{\"term\":\"capital of ecuador\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08795085\"]}");
	add("08795085", "{\"term\":\"quito\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08795085\"]}");
	add("08795200", "{\"term\":\"galapagos\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08795200\"]}");
	add("08795200", "{\"term\":\"galapagos islands\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08795200\"]}");
	add("08795396", "{\"term\":\"eritrea\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08795396\"]}");
	add("08795396", "{\"term\":\"state of eritrea\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08795396\"]}");
	add("08795667", "{\"term\":\"asmara\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08795667\"]}");
	add("08795667", "{\"term\":\"asmera\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08795667\"]}");
	add("08795771", "{\"term\":\"massawa\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08795771\"]}");
	add("08795913", "{\"term\":\"abyssinia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08795913\"]}");
	add("08795913", "{\"term\":\"ethiopia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08795913\"]}");
	add("08795913", "{\"term\":\"federal democratic republic of ethiopia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08795913\"]}");
	add("08795913", "{\"term\":\"yaltopya\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08795913\"]}");
	add("08796253", "{\"term\":\"addis ababa\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08796253\"]}");
	add("08796253", "{\"term\":\"capital of ethiopia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08796253\"]}");
	add("08796253", "{\"term\":\"new flower\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08796253\"]}");
	add("08796449", "{\"term\":\"fiji islands\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08796449\"]}");
	add("08796449", "{\"term\":\"fijis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08796449\"]}");
	add("08796788", "{\"term\":\"viti levu\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08796788\"]}");
	add("08796894", "{\"term\":\"vanua levu\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08796894\"]}");
	add("08797001", "{\"term\":\"fiji\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08797001\"]}");
	add("08797001", "{\"term\":\"republic of fiji\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08797001\"]}");
	add("08797227", "{\"term\":\"suva\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08797227\"]}");
	add("08797356", "{\"term\":\"finland\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08797356\"]}");
	add("08797356", "{\"term\":\"republic of finland\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08797356\"]}");
	add("08797356", "{\"term\":\"suomi\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06970995\", \"08797356\"]}");
	add("08797682", "{\"term\":\"karelia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08797682\"]}");
	add("08797870", "{\"term\":\"capital of finland\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08797870\"]}");
	add("08797870", "{\"term\":\"finnish capital\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08797870\"]}");
	add("08797870", "{\"term\":\"helsingfors\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08797870\"]}");
	add("08797870", "{\"term\":\"helsinki\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08797870\"]}");
	add("08798134", "{\"term\":\"espoo\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08798134\"]}");
	add("08798232", "{\"term\":\"tammerfors\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08798232\"]}");
	add("08798232", "{\"term\":\"tampere\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08798232\"]}");
	add("08798362", "{\"term\":\"aaland islands\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08798362\"]}");
	add("08798362", "{\"term\":\"ahvenanmaa\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08798362\"]}");
	add("08798362", "{\"term\":\"aland islands\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08798362\"]}");
	add("08798572", "{\"term\":\"maarianhamina\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08798572\"]}");
	add("08798572", "{\"term\":\"mariehamn\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08798572\"]}");
	add("08798733", "{\"term\":\"ellas\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08798733\"]}");
	add("08798733", "{\"term\":\"greece\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08800171\", \"08798733\"]}");
	add("08798733", "{\"term\":\"hellenic republic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08798733\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }