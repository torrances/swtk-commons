package org.swtk.commons.dict.wordnet.byid.generated.p0.p3;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexById0339 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("03390141", "{\"term\":\"formica\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02223892\", \"03390141\"]}");
	add("03390266", "{\"term\":\"forte\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03390266\", \"07059027\", \"05166608\"]}");
	add("03390403", "{\"term\":\"fortification\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00265372\", \"05643469\", \"03390403\"]}");
	add("03390403", "{\"term\":\"munition\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03390403\", \"03805132\", \"04573543\"]}");
	add("03390857", "{\"term\":\"fort\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03390857\", \"03425469\"]}");
	add("03390857", "{\"term\":\"fortress\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03390857\"]}");
	add("03391189", "{\"term\":\"forty-five\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03391189\"]}");
	add("03391266", "{\"term\":\"assembly\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"01232427\", \"02752958\", \"08180691\", \"03391266\", \"00913832\", \"02752795\"]}");
	add("03391266", "{\"term\":\"forum\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03391266\", \"08326684\"]}");
	add("03391266", "{\"term\":\"meeting place\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03391266\"]}");
	add("03391390", "{\"term\":\"foucault pendulum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03391390\"]}");
	add("03391572", "{\"term\":\"foulard\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03391572\"]}");
	add("03391716", "{\"term\":\"foul-weather gear\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03391716\"]}");
	add("03391862", "{\"term\":\"base\", \"synsetCount\":20, \"upperType\":\"NOUN\", \"ids\":[\"02801276\", \"02801733\", \"02801928\", \"03575144\", \"06311183\", \"08030577\", \"08507412\", \"13619037\", \"13831981\", \"13920530\", \"14642431\", \"14988729\", \"02800851\", \"05801562\", \"06670863\", \"08528849\", \"09238222\", \"02801040\", \"03391862\", \"02801449\"]}");
	add("03391862", "{\"term\":\"foot\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"03383288\", \"07109509\", \"08407114\", \"10120847\", \"00285509\", \"02324865\", \"03391862\", \"02156097\", \"08528642\", \"13671663\", \"05570899\"]}");
	add("03391862", "{\"term\":\"foundation\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00241051\", \"03392169\", \"05801562\", \"05995479\", \"03391862\", \"08423443\", \"13812924\"]}");
	add("03391862", "{\"term\":\"fundament\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03391862\", \"05566889\", \"05801562\"]}");
	add("03391862", "{\"term\":\"groundwork\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01146093\", \"03391862\", \"05801562\"]}");
	add("03391862", "{\"term\":\"substructure\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03391862\", \"03575552\"]}");
	add("03391862", "{\"term\":\"understructure\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03391862\"]}");
	add("03392169", "{\"term\":\"foundation\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00241051\", \"03392169\", \"05801562\", \"05995479\", \"03391862\", \"08423443\", \"13812924\"]}");
	add("03392169", "{\"term\":\"foundation garment\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03392169\"]}");
	add("03392352", "{\"term\":\"foundation stone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03392352\"]}");
	add("03392499", "{\"term\":\"foundry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03392499\"]}");
	add("03392499", "{\"term\":\"metalworks\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03392499\"]}");
	add("03392661", "{\"term\":\"fount\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03392661\", \"06838449\"]}");
	add("03392661", "{\"term\":\"fountain\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03392661\", \"03392772\", \"09466357\", \"03392889\"]}");
	add("03392772", "{\"term\":\"fountain\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03392661\", \"03392772\", \"09466357\", \"03392889\"]}");
	add("03392772", "{\"term\":\"jet\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"03392772\", \"03611785\", \"11495467\", \"14949516\", \"07450700\", \"03601053\"]}");
	add("03392889", "{\"term\":\"fountain\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03392661\", \"03392772\", \"09466357\", \"03392889\"]}");
	add("03393029", "{\"term\":\"fountain pen\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03393029\"]}");
	add("03393169", "{\"term\":\"four-in-hand\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03059655\", \"03393169\"]}");
	add("03393312", "{\"term\":\"fourpenny nail\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03393312\"]}");
	add("03393395", "{\"term\":\"four-poster\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03393395\"]}");
	add("03393557", "{\"term\":\"four-pounder\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03393557\"]}");
	add("03393672", "{\"term\":\"four\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03393672\", \"13766444\"]}");
	add("03393672", "{\"term\":\"four-spot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03393672\"]}");
	add("03393836", "{\"term\":\"four-stroke engine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03393836\"]}");
	add("03393836", "{\"term\":\"four-stroke internal-combustion engine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03393836\"]}");
	add("03394199", "{\"term\":\"four-tailed bandage\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03394199\"]}");
	add("03394457", "{\"term\":\"4wd\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03394457\", \"03394607\"]}");
	add("03394457", "{\"term\":\"four-wheel drive\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03394457\", \"03394607\"]}");
	add("03394607", "{\"term\":\"4wd\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03394457\", \"03394607\"]}");
	add("03394607", "{\"term\":\"four-wheel drive\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03394457\", \"03394607\"]}");
	add("03394735", "{\"term\":\"four-wheeler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03394735\"]}");
	add("03394829", "{\"term\":\"fowling piece\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03394829\"]}");
	add("03394921", "{\"term\":\"fox hole\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03394921\"]}");
	add("03394921", "{\"term\":\"foxhole\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03394921\"]}");
	add("03395053", "{\"term\":\"fraction\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13754218\", \"03395053\", \"14946245\"]}");
	add("03395173", "{\"term\":\"anti-personnel bomb\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03395173\"]}");
	add("03395173", "{\"term\":\"antipersonnel bomb\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03395173\"]}");
	add("03395173", "{\"term\":\"daisy cutter\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00132167\", \"03395173\"]}");
	add("03395173", "{\"term\":\"fragmentation bomb\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03395173\"]}");
	add("03395519", "{\"term\":\"frail\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03395519\", \"13740151\"]}");
	add("03395632", "{\"term\":\"fraise\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03395632\", \"03395732\"]}");
	add("03395732", "{\"term\":\"fraise\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03395632\", \"03395732\"]}");
	add("03395829", "{\"term\":\"frame\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"00463177\", \"03395829\", \"03396616\", \"04233599\", \"05593033\", \"05670948\", \"06582981\", \"07016684\", \"15280615\", \"05224424\", \"03396310\", \"03396147\"]}");
	add("03395829", "{\"term\":\"framing\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03395829\", \"00943267\"]}");
	add("03396147", "{\"term\":\"frame\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"00463177\", \"03395829\", \"03396616\", \"04233599\", \"05593033\", \"05670948\", \"06582981\", \"07016684\", \"15280615\", \"05224424\", \"03396310\", \"03396147\"]}");
	add("03396310", "{\"term\":\"frame\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"00463177\", \"03395829\", \"03396616\", \"04233599\", \"05593033\", \"05670948\", \"06582981\", \"07016684\", \"15280615\", \"05224424\", \"03396310\", \"03396147\"]}");
	add("03396459", "{\"term\":\"frame buffer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03396459\"]}");
	add("03396616", "{\"term\":\"frame\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"00463177\", \"03395829\", \"03396616\", \"04233599\", \"05593033\", \"05670948\", \"06582981\", \"07016684\", \"15280615\", \"05224424\", \"03396310\", \"03396147\"]}");
	add("03396616", "{\"term\":\"framework\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03396616\", \"04940540\", \"05898856\"]}");
	add("03397502", "{\"term\":\"francis turbine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03397502\"]}");
	add("03397595", "{\"term\":\"franking machine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03397595\"]}");
	add("03397762", "{\"term\":\"freeboard deck\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03397762\"]}");
	add("03397871", "{\"term\":\"free house\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03397871\"]}");
	add("03398053", "{\"term\":\"free-reed\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03398053\"]}");
	add("03398178", "{\"term\":\"free-reed instrument\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03398178\"]}");
	add("03398370", "{\"term\":\"free throw lane\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03398370\"]}");
	add("03398597", "{\"term\":\"freewheel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03398597\"]}");
	add("03398748", "{\"term\":\"freight car\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03398748\"]}");
	add("03398985", "{\"term\":\"freight elevator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03398985\"]}");
	add("03398985", "{\"term\":\"service elevator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03398985\"]}");
	add("03399108", "{\"term\":\"freight liner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03399108\"]}");
	add("03399108", "{\"term\":\"liner train\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03399108\"]}");
	add("03399316", "{\"term\":\"freight train\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03399316\"]}");
	add("03399316", "{\"term\":\"rattler\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03399316\", \"01757517\"]}");
	add("03399485", "{\"term\":\"french door\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03399485\"]}");
	add("03399652", "{\"term\":\"french heel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03399652\"]}");
	add("03399752", "{\"term\":\"french horn\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03399752\"]}");
	add("03399752", "{\"term\":\"horn\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"02764839\", \"03399752\", \"03541941\", \"03542421\", \"14782206\", \"01328494\", \"03115320\", \"03542111\", \"07280214\", \"01328058\", \"03542265\"]}");
	add("03399931", "{\"term\":\"french knot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03399931\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }