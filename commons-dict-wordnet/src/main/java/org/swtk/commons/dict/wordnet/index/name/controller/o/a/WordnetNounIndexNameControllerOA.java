package org.swtk.commons.dict.wordnet.index.name.controller.o.a;  import java.util.Collection; import java.util.Set; import java.util.TreeSet;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  	import org.swtk.commons.dict.wordnet.index.name.instance.o.a.h.u.WordnetNounIndexNameInstanceOAHU;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.a.k.l.WordnetNounIndexNameInstanceOAKL;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.a.k.u.WordnetNounIndexNameInstanceOAKU;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.a.r.f.WordnetNounIndexNameInstanceOARF;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.a.r.l.WordnetNounIndexNameInstanceOARL;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.a.r.s.WordnetNounIndexNameInstanceOARS;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.a.s.i.WordnetNounIndexNameInstanceOASI;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.a.s.t.WordnetNounIndexNameInstanceOAST;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.a.t.c.WordnetNounIndexNameInstanceOATC;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.a.t.e.WordnetNounIndexNameInstanceOATE;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.a.t.h.WordnetNounIndexNameInstanceOATH;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.a.t.m.WordnetNounIndexNameInstanceOATM;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.a.x.a.WordnetNounIndexNameInstanceOAXA;
  import com.trimc.blogger.commons.exception.BusinessException;  public final class WordnetNounIndexNameControllerOA {  	public static Collection<IndexNoun> get(final String TERM) throws BusinessException {  		String key = TERM.substring(0, 4).toLowerCase(); 			if ("oahu".equals(key)) return WordnetNounIndexNameInstanceOAHU.get(TERM);
	if ("oakl".equals(key)) return WordnetNounIndexNameInstanceOAKL.get(TERM);
	if ("oaku".equals(key)) return WordnetNounIndexNameInstanceOAKU.get(TERM);
	if ("oarf".equals(key)) return WordnetNounIndexNameInstanceOARF.get(TERM);
	if ("oarl".equals(key)) return WordnetNounIndexNameInstanceOARL.get(TERM);
	if ("oars".equals(key)) return WordnetNounIndexNameInstanceOARS.get(TERM);
	if ("oasi".equals(key)) return WordnetNounIndexNameInstanceOASI.get(TERM);
	if ("oast".equals(key)) return WordnetNounIndexNameInstanceOAST.get(TERM);
	if ("oatc".equals(key)) return WordnetNounIndexNameInstanceOATC.get(TERM);
	if ("oate".equals(key)) return WordnetNounIndexNameInstanceOATE.get(TERM);
	if ("oath".equals(key)) return WordnetNounIndexNameInstanceOATH.get(TERM);
	if ("oatm".equals(key)) return WordnetNounIndexNameInstanceOATM.get(TERM);
	if ("oaxa".equals(key)) return WordnetNounIndexNameInstanceOAXA.get(TERM);
  		throw new BusinessException("TERM not found (id = %s)", TERM); 	} 	 	public static Collection<String> terms() throws BusinessException { 		Set<String> set = new TreeSet<String>();  			set.addAll(WordnetNounIndexNameInstanceOAHU.terms());
	set.addAll(WordnetNounIndexNameInstanceOAKL.terms());
	set.addAll(WordnetNounIndexNameInstanceOAKU.terms());
	set.addAll(WordnetNounIndexNameInstanceOARF.terms());
	set.addAll(WordnetNounIndexNameInstanceOARL.terms());
	set.addAll(WordnetNounIndexNameInstanceOARS.terms());
	set.addAll(WordnetNounIndexNameInstanceOASI.terms());
	set.addAll(WordnetNounIndexNameInstanceOAST.terms());
	set.addAll(WordnetNounIndexNameInstanceOATC.terms());
	set.addAll(WordnetNounIndexNameInstanceOATE.terms());
	set.addAll(WordnetNounIndexNameInstanceOATH.terms());
	set.addAll(WordnetNounIndexNameInstanceOATM.terms());
	set.addAll(WordnetNounIndexNameInstanceOAXA.terms());
  		return set; 	} }