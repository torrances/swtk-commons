package org.swtk.commons.dict.wordnet.index.name.instance.s.a.r.c;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceSARC {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"sarcasm\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06790003\"]}");
	add("{\"term\":\"sarcenet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04143016\"]}");
	add("{\"term\":\"sarcobatus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11855583\"]}");
	add("{\"term\":\"sarcocephalus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12690933\"]}");
	add("{\"term\":\"sarcochilus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12102352\"]}");
	add("{\"term\":\"sarcocystidean\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01428955\"]}");
	add("{\"term\":\"sarcocystieian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01428955\"]}");
	add("{\"term\":\"sarcocystis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01428801\"]}");
	add("{\"term\":\"sarcodes\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12280132\"]}");
	add("{\"term\":\"sarcodina\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01392516\"]}");
	add("{\"term\":\"sarcodine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01392764\"]}");
	add("{\"term\":\"sarcodinian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01392764\"]}");
	add("{\"term\":\"sarcoidosis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14588515\"]}");
	add("{\"term\":\"sarcolemma\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05435147\"]}");
	add("{\"term\":\"sarcoma\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14269841\"]}");
	add("{\"term\":\"sarcomere\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05467739\"]}");
	add("{\"term\":\"sarcophaga\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02195040\"]}");
	add("{\"term\":\"sarcophagus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04143128\"]}");
	add("{\"term\":\"sarcophilus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01887344\"]}");
	add("{\"term\":\"sarcoplasm\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05454547\"]}");
	add("{\"term\":\"sarcoptes\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01784051\"]}");
	add("{\"term\":\"sarcoptid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01784339\"]}");
	add("{\"term\":\"sarcoptidae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01783915\"]}");
	add("{\"term\":\"sarcorhamphus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01623216\"]}");
	add("{\"term\":\"sarcoscyphaceae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13055037\"]}");
	add("{\"term\":\"sarcosine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15044212\"]}");
	add("{\"term\":\"sarcosomataceae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13004721\"]}");
	add("{\"term\":\"sarcosome\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05453122\"]}");
	add("{\"term\":\"sarcosporidia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01428624\"]}");
	add("{\"term\":\"sarcosporidian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01428955\"]}");
	add("{\"term\":\"sarcostemma\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13258686\"]}");
	add("{\"term\":\"sarcostyle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05467529\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public boolean has(final String TERM) { 		return map.containsKey(TERM); 	} }