package org.swtk.commons.dict.wordnet.index.name.instance.t.e.m.p;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceTEMP {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"temp\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10718911\"]}");
	add("{\"term\":\"temper\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"05028701\", \"04649615\", \"07566518\", \"07533707\"]}");
	add("{\"term\":\"tempera\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04414392\"]}");
	add("{\"term\":\"temperament\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01002353\", \"04635823\", \"04630969\"]}");
	add("{\"term\":\"temperance\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00382375\", \"01071701\", \"04890809\"]}");
	add("{\"term\":\"temperateness\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04890438\", \"11476879\"]}");
	add("{\"term\":\"temperature\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05733323\", \"05018974\"]}");
	add("{\"term\":\"tempering\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00403759\"]}");
	add("{\"term\":\"tempest\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11538927\", \"14001791\"]}");
	add("{\"term\":\"tempestuousness\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"14002988\", \"14547525\"]}");
	add("{\"term\":\"templar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10259026\"]}");
	add("{\"term\":\"template\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05947694\"]}");
	add("{\"term\":\"temple\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04381822\", \"04414821\", \"05610438\", \"04414570\"]}");
	add("{\"term\":\"templet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05947694\"]}");
	add("{\"term\":\"templetonia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12592526\"]}");
	add("{\"term\":\"tempo\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"15308315\", \"15289174\"]}");
	add("{\"term\":\"temporal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06344471\"]}");
	add("{\"term\":\"temporalis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05610059\"]}");
	add("{\"term\":\"temporality\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13268880\"]}");
	add("{\"term\":\"temporalty\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08170001\", \"13268880\"]}");
	add("{\"term\":\"temporariness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05062292\"]}");
	add("{\"term\":\"temporary\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10718911\"]}");
	add("{\"term\":\"temporiser\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10719207\"]}");
	add("{\"term\":\"temporizer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10719207\"]}");
	add("{\"term\":\"tempra\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02677336\"]}");
	add("{\"term\":\"temptation\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00160440\", \"07500421\", \"05702756\"]}");
	add("{\"term\":\"tempter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10719401\"]}");
	add("{\"term\":\"temptingness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04696191\"]}");
	add("{\"term\":\"temptress\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10075218\"]}");
	add("{\"term\":\"tempura\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07895928\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }