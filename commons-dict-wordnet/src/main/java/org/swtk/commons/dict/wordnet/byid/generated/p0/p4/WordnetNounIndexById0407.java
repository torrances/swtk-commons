package org.swtk.commons.dict.wordnet.byid.generated.p0.p4;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexById0407 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("04070101", "{\"term\":\"restoration\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"01310097\", \"04070101\", \"04090580\", \"14447921\", \"00090171\", \"00269401\", \"15286679\"]}");
	add("04070266", "{\"term\":\"auto-changer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04070266\"]}");
	add("04070266", "{\"term\":\"changer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04070266\", \"09632901\"]}");
	add("04070266", "{\"term\":\"record changer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04070266\"]}");
	add("04070485", "{\"term\":\"recorder\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03348200\", \"10531553\", \"10536467\", \"04070485\"]}");
	add("04070485", "{\"term\":\"recording equipment\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04070485\"]}");
	add("04070485", "{\"term\":\"recording machine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04070485\"]}");
	add("04070773", "{\"term\":\"recording\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04070980\", \"00911901\", \"04070773\"]}");
	add("04070980", "{\"term\":\"recording\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04070980\", \"00911901\", \"04070773\"]}");
	add("04071219", "{\"term\":\"recording studio\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04071219\"]}");
	add("04071325", "{\"term\":\"recording system\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04071325\"]}");
	add("04071419", "{\"term\":\"record jacket\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04071419\"]}");
	add("04071513", "{\"term\":\"phonograph\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04071513\"]}");
	add("04071513", "{\"term\":\"record player\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04071513\"]}");
	add("04071859", "{\"term\":\"record cover\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04071859\"]}");
	add("04071859", "{\"term\":\"record sleeve\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04071859\"]}");
	add("04071974", "{\"term\":\"recovery room\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04071974\"]}");
	add("04072100", "{\"term\":\"recreational drug\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04072100\"]}");
	add("04072244", "{\"term\":\"recreation facility\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04072244\"]}");
	add("04072244", "{\"term\":\"recreational facility\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04072244\"]}");
	add("04072384", "{\"term\":\"r.v.\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04072384\"]}");
	add("04072384", "{\"term\":\"recreational vehicle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04072384\"]}");
	add("04072384", "{\"term\":\"rv\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04072384\"]}");
	add("04072576", "{\"term\":\"rec room\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04072576\"]}");
	add("04072576", "{\"term\":\"recreation room\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04072576\"]}");
	add("04072744", "{\"term\":\"rectifier\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10532575\", \"04072744\"]}");
	add("04072901", "{\"term\":\"recycling bin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04072901\"]}");
	add("04073021", "{\"term\":\"recycling plant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04073021\"]}");
	add("04073135", "{\"term\":\"redbrick university\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04073135\"]}");
	add("04073382", "{\"term\":\"red carpet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04073382\"]}");
	add("04073500", "{\"term\":\"redoubt\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04073500\", \"04073588\"]}");
	add("04073588", "{\"term\":\"redoubt\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04073500\", \"04073588\"]}");
	add("04073771", "{\"term\":\"reducer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04073771\", \"14804426\"]}");
	add("04073879", "{\"term\":\"reduction gear\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04073879\"]}");
	add("04074000", "{\"term\":\"reed\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"02820934\", \"04074000\", \"11276325\", \"11276484\", \"12157237\"]}");
	add("04074000", "{\"term\":\"vibrating reed\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04074000\"]}");
	add("04074255", "{\"term\":\"reed pipe\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04074255\"]}");
	add("04074343", "{\"term\":\"reed stop\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04074343\"]}");
	add("04074465", "{\"term\":\"flat knot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04074465\"]}");
	add("04074465", "{\"term\":\"reef knot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04074465\"]}");
	add("04074584", "{\"term\":\"reel\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00540711\", \"00541248\", \"02863755\", \"04074584\", \"07070720\", \"04074770\"]}");
	add("04074770", "{\"term\":\"reel\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00540711\", \"00541248\", \"02863755\", \"04074584\", \"07070720\", \"04074770\"]}");
	add("04074930", "{\"term\":\"refectory\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04074930\"]}");
	add("04075033", "{\"term\":\"refectory table\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04075033\"]}");
	add("04075167", "{\"term\":\"refill\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04075167\", \"04075373\"]}");
	add("04075373", "{\"term\":\"refill\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04075167\", \"04075373\"]}");
	add("04075553", "{\"term\":\"refinery\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04075553\"]}");
	add("04075713", "{\"term\":\"reflecting telescope\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04075713\"]}");
	add("04075713", "{\"term\":\"reflector\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04075713\", \"04076388\"]}");
	add("04076088", "{\"term\":\"reflection\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"05017811\", \"06779826\", \"13807616\", \"04076088\", \"04754355\", \"06893299\", \"11523478\", \"05793513\"]}");
	add("04076088", "{\"term\":\"reflexion\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"04076088\", \"04754355\", \"05017811\", \"05793513\", \"06779826\", \"06893299\", \"11523478\"]}");
	add("04076278", "{\"term\":\"reflectometer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04076278\"]}");
	add("04076388", "{\"term\":\"reflector\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04075713\", \"04076388\"]}");
	add("04076546", "{\"term\":\"reflex camera\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04076546\"]}");
	add("04076694", "{\"term\":\"reflux condenser\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04076694\"]}");
	add("04076889", "{\"term\":\"reform school\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04076889\"]}");
	add("04076889", "{\"term\":\"reformatory\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04076889\"]}");
	add("04076889", "{\"term\":\"training school\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04076889\", \"08302960\"]}");
	add("04077115", "{\"term\":\"reformer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04077115\", \"10534787\"]}");
	add("04077319", "{\"term\":\"refracting telescope\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04077319\"]}");
	add("04077527", "{\"term\":\"refractometer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04077527\"]}");
	add("04077657", "{\"term\":\"refrigeration system\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04077657\"]}");
	add("04077839", "{\"term\":\"icebox\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04077839\"]}");
	add("04077839", "{\"term\":\"refrigerator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04077839\"]}");
	add("04078076", "{\"term\":\"refrigerator car\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04078076\"]}");
	add("04078214", "{\"term\":\"asylum\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03752065\", \"04078214\"]}");
	add("04078214", "{\"term\":\"refuge\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"01211087\", \"04078214\", \"05162506\", \"08661508\"]}");
	add("04078214", "{\"term\":\"sanctuary\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03008428\", \"04078214\", \"04140731\"]}");
	add("04078375", "{\"term\":\"regalia\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02745327\", \"04078375\"]}");
	add("04078505", "{\"term\":\"regimentals\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04078505\"]}");
	add("04078648", "{\"term\":\"register\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"02980897\", \"04078648\", \"04078824\", \"04078988\", \"13433494\", \"05134114\", \"06519032\"]}");
	add("04078824", "{\"term\":\"register\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"02980897\", \"04078648\", \"04078824\", \"04078988\", \"13433494\", \"05134114\", \"06519032\"]}");
	add("04078988", "{\"term\":\"register\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"02980897\", \"04078648\", \"04078824\", \"04078988\", \"13433494\", \"05134114\", \"06519032\"]}");
	add("04079305", "{\"term\":\"regulator\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03454962\", \"10537419\", \"04079305\"]}");
	add("04079663", "{\"term\":\"rein\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05204842\", \"04079663\"]}");
	add("04079923", "{\"term\":\"relaxant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04079923\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }