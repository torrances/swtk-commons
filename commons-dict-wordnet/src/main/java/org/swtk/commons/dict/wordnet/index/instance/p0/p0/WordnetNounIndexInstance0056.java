package org.swtk.commons.dict.wordnet.index.instance.p0.p0;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexInstance0056 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("00560366", "{\"term\":\"draw\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00115856\", \"00498547\", \"00560366\", \"00573322\", \"03237949\", \"03238126\", \"07368316\", \"10052401\", \"09292788\"]}");
	add("00560366", "{\"term\":\"draw play\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00560366\"]}");
	add("00560592", "{\"term\":\"end run\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00560592\"]}");
	add("00560592", "{\"term\":\"sweep\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00345975\", \"00560592\", \"04378042\", \"07489785\", \"09938519\", \"05135224\"]}");
	add("00560761", "{\"term\":\"return\", \"synsetCount\":13, \"upperType\":\"NOUN\", \"ids\":[\"00051707\", \"00560761\", \"00567335\", \"01237294\", \"04091629\", \"07214582\", \"07357963\", \"13281089\", \"00328841\", \"00090171\", \"07461622\", \"00052012\", \"06560662\"]}");
	add("00560953", "{\"term\":\"reverse\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00347519\", \"00560953\", \"04092293\", \"07491010\", \"04092129\", \"13880801\"]}");
	add("00561178", "{\"term\":\"double reverse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00561178\"]}");
	add("00561330", "{\"term\":\"rush\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00561330\", \"07450952\", \"07543858\", \"11294259\", \"11763763\", \"07454840\", \"00556685\"]}");
	add("00561330", "{\"term\":\"rushing\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00556685\", \"00561330\"]}");
	add("00561566", "{\"term\":\"pass\", \"synsetCount\":16, \"upperType\":\"NOUN\", \"ids\":[\"00066395\", \"00106640\", \"00788715\", \"06531360\", \"06702971\", \"07191150\", \"07356460\", \"07433422\", \"13959972\", \"00305418\", \"06703153\", \"06703828\", \"09409735\", \"00561566\", \"15164512\", \"00128106\"]}");
	add("00561566", "{\"term\":\"passing\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00066395\", \"00341018\", \"00867278\", \"07307301\", \"07325260\", \"07348249\", \"00561566\"]}");
	add("00561566", "{\"term\":\"passing game\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00561566\"]}");
	add("00561566", "{\"term\":\"passing play\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00561566\"]}");
	add("00561903", "{\"term\":\"power play\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00559433\", \"00561903\", \"00789758\"]}");
	add("00562115", "{\"term\":\"handoff\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00562115\"]}");
	add("00562263", "{\"term\":\"aerial\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02718140\", \"00562263\"]}");
	add("00562263", "{\"term\":\"forward pass\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00562263\"]}");
	add("00562413", "{\"term\":\"flare\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"00150917\", \"00562413\", \"03362739\", \"07028111\", \"11474727\", \"11530641\", \"14105271\", \"14250839\", \"06887980\", \"13503086\", \"13885247\"]}");
	add("00562413", "{\"term\":\"flare pass\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00562413\"]}");
	add("00562607", "{\"term\":\"screen pass\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00562607\"]}");
	add("00562744", "{\"term\":\"lateral\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00562744\"]}");
	add("00562744", "{\"term\":\"lateral pass\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00562744\"]}");
	add("00562857", "{\"term\":\"spot pass\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00562857\"]}");
	add("00563022", "{\"term\":\"tackle\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00563022\", \"00729199\", \"03356280\", \"04098805\", \"10707566\"]}");
	add("00563216", "{\"term\":\"jugglery\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00563216\", \"00755461\"]}");
	add("00563317", "{\"term\":\"obstruction\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00563317\", \"01076422\", \"05698074\", \"14531553\", \"03845513\"]}");
	add("00563435", "{\"term\":\"block\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"00563435\", \"02759606\", \"02856708\", \"03293136\", \"04026692\", \"05653044\", \"13647935\", \"02856275\", \"07970600\", \"13937623\", \"08659720\", \"02855782\"]}");
	add("00563435", "{\"term\":\"blocking\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00563435\"]}");
	add("00563680", "{\"term\":\"interference\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"03525974\", \"00563680\", \"07444811\", \"01075919\", \"06674307\"]}");
	add("00563860", "{\"term\":\"trap block\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00563860\"]}");
	add("00563972", "{\"term\":\"check\", \"synsetCount\":13, \"upperType\":\"NOUN\", \"ids\":[\"00168267\", \"00563972\", \"01148552\", \"03014816\", \"04700256\", \"05697054\", \"06831605\", \"00142626\", \"05833569\", \"14034398\", \"06529933\", \"05746570\", \"13402907\"]}");
	add("00564134", "{\"term\":\"crosscheck\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00564134\", \"05834126\"]}");
	add("00564249", "{\"term\":\"poke check\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00564249\"]}");
	add("00564367", "{\"term\":\"razmataz\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00564367\"]}");
	add("00564367", "{\"term\":\"razzle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00564367\"]}");
	add("00564367", "{\"term\":\"razzle-dazzle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00564367\"]}");
	add("00564367", "{\"term\":\"razzmatazz\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00564367\"]}");
	add("00564531", "{\"term\":\"basketball play\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00564531\"]}");
	add("00564702", "{\"term\":\"pick\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00162063\", \"00564702\", \"03935440\", \"03935681\", \"03935898\", \"04606292\", \"08403766\", \"13781698\", \"05798247\"]}");
	add("00564860", "{\"term\":\"switch\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00196933\", \"00564860\", \"04379258\", \"04379843\", \"04380035\", \"07458361\", \"04379457\"]}");
	add("00565035", "{\"term\":\"give-and-go\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00565035\"]}");
	add("00565214", "{\"term\":\"baseball play\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00565214\"]}");
	add("00565410", "{\"term\":\"double play\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00565410\"]}");
	add("00565514", "{\"term\":\"triple play\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00565514\"]}");
	add("00565620", "{\"term\":\"pick-off\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00565620\"]}");
	add("00565747", "{\"term\":\"squeeze play\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00565747\", \"00789758\"]}");
	add("00565934", "{\"term\":\"suicide squeeze\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00565934\"]}");
	add("00565934", "{\"term\":\"suicide squeeze play\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00565934\"]}");
	add("00566088", "{\"term\":\"safety squeeze\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00566088\"]}");
	add("00566088", "{\"term\":\"safety squeeze play\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00566088\"]}");
	add("00566256", "{\"term\":\"footwork\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00173168\", \"00566256\"]}");
	add("00566339", "{\"term\":\"shot\", \"synsetCount\":17, \"upperType\":\"NOUN\", \"ids\":[\"00104410\", \"00790134\", \"00790293\", \"01178123\", \"04213050\", \"04213137\", \"04255717\", \"05811946\", \"06780713\", \"13795390\", \"00698618\", \"06627082\", \"10612523\", \"14509257\", \"00566339\", \"04212826\", \"00123481\"]}");
	add("00566339", "{\"term\":\"stroke\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"00350195\", \"00570935\", \"06812118\", \"06857953\", \"07315578\", \"10684289\", \"13616337\", \"00145452\", \"07428415\", \"14105785\", \"07365795\", \"00566339\"]}");
	add("00566846", "{\"term\":\"cut\", \"synsetCount\":20, \"upperType\":\"NOUN\", \"ids\":[\"00068074\", \"00353157\", \"00360064\", \"00387723\", \"00388465\", \"00490486\", \"00566846\", \"00572481\", \"01228486\", \"03157409\", \"05758945\", \"06439886\", \"06625218\", \"06734210\", \"07669003\", \"14310615\", \"14453311\", \"03157285\", \"06630741\", \"13310182\"]}");
	add("00566846", "{\"term\":\"undercut\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00388334\", \"00566846\", \"04515186\", \"07675538\", \"15108541\"]}");
	add("00567077", "{\"term\":\"swipe\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00567077\"]}");
	add("00567172", "{\"term\":\"tennis shot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00567172\"]}");
	add("00567172", "{\"term\":\"tennis stroke\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00567172\"]}");
	add("00567335", "{\"term\":\"return\", \"synsetCount\":13, \"upperType\":\"NOUN\", \"ids\":[\"00051707\", \"00560761\", \"00567335\", \"01237294\", \"04091629\", \"07214582\", \"07357963\", \"13281089\", \"00328841\", \"00090171\", \"07461622\", \"00052012\", \"06560662\"]}");
	add("00567727", "{\"term\":\"backhand\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00567727\"]}");
	add("00567727", "{\"term\":\"backhand shot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00567727\"]}");
	add("00567727", "{\"term\":\"backhand stroke\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00567727\"]}");
	add("00567926", "{\"term\":\"chop\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00130137\", \"00567926\", \"05553931\", \"07669591\", \"11548218\"]}");
	add("00567926", "{\"term\":\"chop shot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00567926\"]}");
	add("00568081", "{\"term\":\"drive\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"00568081\", \"03247416\", \"03247921\", \"14058780\", \"00308457\", \"00318420\", \"00573526\", \"04842955\", \"03249091\", \"00799906\", \"03247698\", \"00104654\"]}");
	add("00568317", "{\"term\":\"dink\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00568317\", \"08005662\"]}");
	add("00568317", "{\"term\":\"drop shot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00568317\"]}");
	add("00568455", "{\"term\":\"forehand\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00568455\"]}");
	add("00568455", "{\"term\":\"forehand shot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00568455\"]}");
	add("00568455", "{\"term\":\"forehand stroke\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00568455\"]}");
	add("00568722", "{\"term\":\"forehand drive\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00568722\"]}");
	add("00568933", "{\"term\":\"get\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00568933\"]}");
	add("00569094", "{\"term\":\"backhand drive\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00569094\"]}");
	add("00569203", "{\"term\":\"two-handed backhand\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00569203\"]}");
	add("00569323", "{\"term\":\"ground stroke\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00569323\"]}");
	add("00569467", "{\"term\":\"serve\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00569467\"]}");
	add("00569467", "{\"term\":\"service\", \"synsetCount\":15, \"upperType\":\"NOUN\", \"ids\":[\"00099445\", \"00268956\", \"00319217\", \"00569467\", \"00580601\", \"00855279\", \"04182441\", \"05157079\", \"11313626\", \"08215077\", \"00585928\", \"08202965\", \"01034072\", \"01212066\", \"00578562\"]}");
	add("00569738", "{\"term\":\"ace\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00569738\", \"08192397\", \"14759821\", \"09781932\", \"02676145\", \"13764713\"]}");
	add("00569850", "{\"term\":\"fault\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00569850\", \"04677049\", \"07436844\", \"09301443\", \"05146359\", \"14487787\", \"00071785\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }