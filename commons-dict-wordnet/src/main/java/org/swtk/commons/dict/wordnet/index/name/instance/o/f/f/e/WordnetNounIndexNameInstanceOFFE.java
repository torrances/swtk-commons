package org.swtk.commons.dict.wordnet.index.name.instance.o.f.f.e;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceOFFE {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"offenbach\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11232524\"]}");
	add("{\"term\":\"offence\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00767587\", \"01226520\", \"07532789\", \"08098121\", \"00982124\"]}");
	add("{\"term\":\"offender\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09657157\"]}");
	add("{\"term\":\"offense\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00982124\", \"08098121\", \"00767587\", \"07532789\", \"01226520\"]}");
	add("{\"term\":\"offensive\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00982124\"]}");
	add("{\"term\":\"offensiveness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04788240\"]}");
	add("{\"term\":\"offer\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00788715\", \"07179197\", \"07199736\"]}");
	add("{\"term\":\"offerer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10390751\"]}");
	add("{\"term\":\"offering\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"01043530\", \"07199736\", \"13291396\", \"07179197\"]}");
	add("{\"term\":\"offeror\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10390751\"]}");
	add("{\"term\":\"offertory\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01038226\", \"13291671\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public boolean has(final String TERM) { 		return map.containsKey(TERM); 	} }