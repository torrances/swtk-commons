package org.swtk.commons.dict.wordnet.index.name.instance.m.i.n.i;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceMINI {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"mini\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03775972\"]}");
	add("{\"term\":\"miniature\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03774770\", \"03774932\"]}");
	add("{\"term\":\"miniaturisation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00361427\"]}");
	add("{\"term\":\"miniaturist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10339764\"]}");
	add("{\"term\":\"miniaturization\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00361427\"]}");
	add("{\"term\":\"minibar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03775145\"]}");
	add("{\"term\":\"minibike\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03775257\"]}");
	add("{\"term\":\"minibus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03775416\"]}");
	add("{\"term\":\"minicab\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03775502\"]}");
	add("{\"term\":\"minicar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03775620\"]}");
	add("{\"term\":\"minicomputer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03775759\"]}");
	add("{\"term\":\"miniconju\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09680525\"]}");
	add("{\"term\":\"minim\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06883894\", \"13639789\", \"13642292\"]}");
	add("{\"term\":\"minimalism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08486244\"]}");
	add("{\"term\":\"minimalist\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10339888\", \"10340012\"]}");
	add("{\"term\":\"minimisation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00356745\"]}");
	add("{\"term\":\"minimization\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00356745\"]}");
	add("{\"term\":\"minimum\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08617830\", \"13785524\"]}");
	add("{\"term\":\"minimus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05573999\"]}");
	add("{\"term\":\"mining\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00964073\", \"00924141\"]}");
	add("{\"term\":\"minion\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10340270\"]}");
	add("{\"term\":\"minipress\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04004883\"]}");
	add("{\"term\":\"miniskirt\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03775972\"]}");
	add("{\"term\":\"minister\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00586847\", \"10340353\", \"10340521\", \"10003102\"]}");
	add("{\"term\":\"ministrant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10340784\"]}");
	add("{\"term\":\"ministration\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01211710\"]}");
	add("{\"term\":\"ministry\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00315097\", \"08130970\", \"03775851\", \"08130763\"]}");
	add("{\"term\":\"minisub\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03776053\"]}");
	add("{\"term\":\"minisubmarine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03776053\"]}");
	add("{\"term\":\"minium\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15027896\"]}");
	add("{\"term\":\"minivan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03776212\"]}");
	add("{\"term\":\"miniver\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03776367\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }