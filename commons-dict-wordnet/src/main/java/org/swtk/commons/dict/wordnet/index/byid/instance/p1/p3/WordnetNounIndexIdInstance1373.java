package org.swtk.commons.dict.wordnet.index.byid.instance.p1.p3;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance1373 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("13730002", "{\"term\":\"bangladeshi monetary unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13730002\"]}");
	add("13730119", "{\"term\":\"taka\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13730119\"]}");
	add("13730246", "{\"term\":\"western samoan monetary unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13730246\"]}");
	add("13730387", "{\"term\":\"tala\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13730387\"]}");
	add("13730497", "{\"term\":\"sene\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13730497\"]}");
	add("13730605", "{\"term\":\"mongolian monetary unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13730605\"]}");
	add("13730736", "{\"term\":\"tughrik\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13730736\"]}");
	add("13730736", "{\"term\":\"tugrik\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13730736\"]}");
	add("13730853", "{\"term\":\"mongo\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13730853\"]}");
	add("13730960", "{\"term\":\"north korean monetary unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13730960\"]}");
	add("13731097", "{\"term\":\"north korean won\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13731097\"]}");
	add("13731097", "{\"term\":\"won\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13731097\", \"13731465\"]}");
	add("13731223", "{\"term\":\"chon\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13731223\", \"13731591\"]}");
	add("13731328", "{\"term\":\"south korean monetary unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13731328\"]}");
	add("13731465", "{\"term\":\"south korean won\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13731465\"]}");
	add("13731465", "{\"term\":\"won\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13731097\", \"13731465\"]}");
	add("13731591", "{\"term\":\"chon\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13731223\", \"13731591\"]}");
	add("13731696", "{\"term\":\"japanese monetary unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13731696\"]}");
	add("13731805", "{\"term\":\"yen\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13731805\", \"07502062\"]}");
	add("13731924", "{\"term\":\"chinese monetary unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13731924\"]}");
	add("13732097", "{\"term\":\"kwai\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13732097\"]}");
	add("13732097", "{\"term\":\"yuan\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08177045\", \"13732097\"]}");
	add("13732206", "{\"term\":\"jiao\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13732206\"]}");
	add("13732324", "{\"term\":\"fen\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09370676\", \"13732324\"]}");
	add("13732422", "{\"term\":\"zairese monetary unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13732422\"]}");
	add("13732548", "{\"term\":\"zaire\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08752218\", \"13732548\"]}");
	add("13732651", "{\"term\":\"likuta\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13732651\"]}");
	add("13732756", "{\"term\":\"polish monetary unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13732756\"]}");
	add("13732882", "{\"term\":\"zloty\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13732882\"]}");
	add("13732986", "{\"term\":\"grosz\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13732986\"]}");
	add("13733091", "{\"term\":\"dol\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08154495\", \"13733091\"]}");
	add("13733165", "{\"term\":\"atm\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02980517\", \"06289724\", \"13733165\"]}");
	add("13733165", "{\"term\":\"atmosphere\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"04734472\", \"09233511\", \"14543880\", \"08516085\", \"13733165\", \"14548451\"]}");
	add("13733165", "{\"term\":\"standard atmosphere\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13733165\"]}");
	add("13733165", "{\"term\":\"standard pressure\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13733165\"]}");
	add("13733408", "{\"term\":\"pa\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"04024549\", \"09157081\", \"13733408\", \"14675887\", \"10007601\"]}");
	add("13733408", "{\"term\":\"pascal\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06915891\", \"11244409\", \"13733408\"]}");
	add("13733521", "{\"term\":\"millimeter of mercury\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13733521\"]}");
	add("13733521", "{\"term\":\"mm hg\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13733521\"]}");
	add("13733521", "{\"term\":\"torr\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13733521\"]}");
	add("13733675", "{\"term\":\"pounds per square inch\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13733675\"]}");
	add("13733675", "{\"term\":\"psi\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06849543\", \"13733675\"]}");
	add("13733768", "{\"term\":\"millibar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13733768\"]}");
	add("13733960", "{\"term\":\"bar\", \"synsetCount\":15, \"upperType\":\"NOUN\", \"ids\":[\"02792793\", \"02793035\", \"02793177\", \"02910716\", \"02940853\", \"04690493\", \"08129368\", \"09236967\", \"13733960\", \"01079274\", \"02792294\", \"06877775\", \"02791712\", \"02792510\", \"02800154\"]}");
	add("13734225", "{\"term\":\"bar absolute\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13734225\"]}");
	add("13734225", "{\"term\":\"barye\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13734225\"]}");
	add("13734225", "{\"term\":\"microbar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13734225\"]}");
	add("13734391", "{\"term\":\"point\", \"synsetCount\":26, \"upperType\":\"NOUN\", \"ids\":[\"03218529\", \"03981029\", \"03981127\", \"04739307\", \"05078725\", \"06825147\", \"06834918\", \"06856570\", \"13421323\", \"13734391\", \"13852504\", \"03980573\", \"04739165\", \"13817097\", \"06494090\", \"09419340\", \"13631405\", \"13934887\", \"13925175\", \"05992951\", \"15205381\", \"13962925\", \"05825971\", \"06619161\", \"08637636\", \"05874582\"]}");
	add("13734533", "{\"term\":\"em\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13734533\", \"13734794\"]}");
	add("13734533", "{\"term\":\"pica\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01584752\", \"13734533\", \"14079459\"]}");
	add("13734533", "{\"term\":\"pica em\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13734533\"]}");
	add("13734697", "{\"term\":\"en\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13734697\"]}");
	add("13734697", "{\"term\":\"nut\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"05532266\", \"09788499\", \"09994026\", \"13734697\", \"03841711\", \"09535970\", \"13157333\"]}");
	add("13734794", "{\"term\":\"em\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13734533\", \"13734794\"]}");
	add("13734794", "{\"term\":\"em quad\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13734794\"]}");
	add("13734794", "{\"term\":\"mutton quad\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13734794\"]}");
	add("13734995", "{\"term\":\"cicero\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10917698\", \"13734995\"]}");
	add("13735108", "{\"term\":\"agate line\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13735108\"]}");
	add("13735108", "{\"term\":\"line\", \"synsetCount\":30, \"upperType\":\"NOUN\", \"ids\":[\"04014761\", \"05756783\", \"06638793\", \"07026095\", \"07041860\", \"13400586\", \"13735108\", \"03676799\", \"03676994\", \"06270774\", \"08611480\", \"00583425\", \"03676175\", \"08118903\", \"01206784\", \"04409192\", \"03676598\", \"03952601\", \"13928798\", \"08610818\", \"08393816\", \"02937552\", \"05781046\", \"08611842\", \"11495037\", \"07025650\", \"13886392\", \"08447160\", \"06812755\", \"08447525\"]}");
	add("13735264", "{\"term\":\"milline\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13735264\"]}");
	add("13735405", "{\"term\":\"column inch\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13735405\"]}");
	add("13735405", "{\"term\":\"inch\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13735405\", \"13671409\"]}");
	add("13735513", "{\"term\":\"linage\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13347997\", \"13735513\"]}");
	add("13735513", "{\"term\":\"lineage\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"04929964\", \"13347997\", \"13735513\", \"13835254\", \"08118903\"]}");
	add("13735626", "{\"term\":\"b\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"05408321\", \"06844334\", \"13635537\", \"13735626\", \"14656049\", \"15115309\", \"01352589\"]}");
	add("13735626", "{\"term\":\"bel\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09540016\", \"13735626\"]}");
	add("13735738", "{\"term\":\"db\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13735738\", \"14660701\"]}");
	add("13735738", "{\"term\":\"decibel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13735738\"]}");
	add("13735922", "{\"term\":\"sone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13735922\"]}");
	add("13736088", "{\"term\":\"phon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13736088\"]}");
	add("13736187", "{\"term\":\"erlang\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13736187\"]}");
	add("13736289", "{\"term\":\"degree\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"05101827\", \"13736289\", \"05869901\", \"13632450\", \"06710094\", \"13962925\", \"05101152\"]}");
	add("13736481", "{\"term\":\"millidegree\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13736481\"]}");
	add("13736596", "{\"term\":\"c\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"03070747\", \"06844441\", \"06879382\", \"06915472\", \"13658127\", \"13772555\", \"14657384\", \"14852681\", \"14853935\", \"15117865\", \"15309503\", \"13736596\"]}");
	add("13736596", "{\"term\":\"degree celsius\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13736596\"]}");
	add("13736596", "{\"term\":\"degree centigrade\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13736596\"]}");
	add("13736746", "{\"term\":\"degree fahrenheit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13736746\"]}");
	add("13736746", "{\"term\":\"f\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"06844762\", \"13657765\", \"14661685\", \"13736746\"]}");
	add("13736861", "{\"term\":\"k\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"03611785\", \"06845298\", \"13648977\", \"13649142\", \"13772984\", \"14674986\", \"13736861\"]}");
	add("13736861", "{\"term\":\"kelvin\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11120250\", \"13736861\"]}");
	add("13737010", "{\"term\":\"rankine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13737010\"]}");
	add("13737106", "{\"term\":\"degree day\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13737106\", \"15183651\"]}");
	add("13737229", "{\"term\":\"standard temperature\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13737229\"]}");
	add("13737345", "{\"term\":\"poise\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04911339\", \"14027365\", \"13737345\"]}");
	add("13737600", "{\"term\":\"atomic mass unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13737600\"]}");
	add("13737719", "{\"term\":\"mass number\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13737719\"]}");
	add("13737719", "{\"term\":\"nucleon number\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13737719\"]}");
	add("13737860", "{\"term\":\"system of weights\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13737860\"]}");
	add("13737860", "{\"term\":\"weight\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"13610524\", \"13630031\", \"13737860\", \"07554200\", \"04578374\", \"05179849\", \"04578578\", \"05034009\"]}");
	add("13738026", "{\"term\":\"avoirdupois\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05006566\", \"13738026\"]}");
	add("13738026", "{\"term\":\"avoirdupois weight\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13738026\"]}");
	add("13738189", "{\"term\":\"avoirdupois unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13738189\"]}");
	add("13738595", "{\"term\":\"troy\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08806739\", \"13738595\"]}");
	add("13738595", "{\"term\":\"troy weight\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13738595\"]}");
	add("13738791", "{\"term\":\"troy unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13738791\"]}");
	add("13738983", "{\"term\":\"apothecaries\u0027 unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13738983\"]}");
	add("13738983", "{\"term\":\"apothecaries\u0027 weight\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13738983\"]}");
	add("13739260", "{\"term\":\"metric weight unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13739260\"]}");
	add("13739260", "{\"term\":\"weight unit\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13630031\", \"13739260\"]}");
	add("13739724", "{\"term\":\"arroba\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13637708\", \"13739724\"]}");
	add("13739833", "{\"term\":\"cattie\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13739833\"]}");
	add("13739833", "{\"term\":\"catty\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13739833\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }