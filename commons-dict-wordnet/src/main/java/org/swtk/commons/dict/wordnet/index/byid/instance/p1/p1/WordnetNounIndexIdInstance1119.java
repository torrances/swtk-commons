package org.swtk.commons.dict.wordnet.index.byid.instance.p1.p1;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance1119 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("11190113", "{\"term\":\"george herbert mead\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11190113\"]}");
	add("11190113", "{\"term\":\"mead\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07906725\", \"11190113\", \"11190238\"]}");
	add("11190238", "{\"term\":\"margaret mead\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11190238\"]}");
	add("11190238", "{\"term\":\"mead\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07906725\", \"11190113\", \"11190238\"]}");
	add("11190428", "{\"term\":\"george gordon meade\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11190428\"]}");
	add("11190428", "{\"term\":\"meade\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11190428\", \"11190594\"]}");
	add("11190594", "{\"term\":\"james edward meade\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11190594\"]}");
	add("11190594", "{\"term\":\"meade\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11190428\", \"11190594\"]}");
	add("11190754", "{\"term\":\"george meany\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11190754\"]}");
	add("11190754", "{\"term\":\"meany\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10323945\", \"11190754\"]}");
	add("11190903", "{\"term\":\"medawar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11190903\"]}");
	add("11190903", "{\"term\":\"peter medawar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11190903\"]}");
	add("11190903", "{\"term\":\"sir peter brian medawar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11190903\"]}");
	add("11191147", "{\"term\":\"meiji tenno\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11191147\"]}");
	add("11191147", "{\"term\":\"mutsuhito\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11191147\"]}");
	add("11191288", "{\"term\":\"golda meir\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11191288\"]}");
	add("11191288", "{\"term\":\"meir\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11191288\"]}");
	add("11191399", "{\"term\":\"fritz w. meissner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11191399\"]}");
	add("11191399", "{\"term\":\"meissner\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11191399\", \"11191503\"]}");
	add("11191503", "{\"term\":\"georg meissner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11191503\"]}");
	add("11191503", "{\"term\":\"meissner\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11191399\", \"11191503\"]}");
	add("11191604", "{\"term\":\"lise meitner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11191604\"]}");
	add("11191604", "{\"term\":\"meitner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11191604\"]}");
	add("11191841", "{\"term\":\"melanchthon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11191841\"]}");
	add("11191841", "{\"term\":\"philipp melanchthon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11191841\"]}");
	add("11191841", "{\"term\":\"philipp schwarzerd\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11191841\"]}");
	add("11192035", "{\"term\":\"dame nellie melba\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11192035\"]}");
	add("11192035", "{\"term\":\"helen porter mitchell\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11192035\"]}");
	add("11192035", "{\"term\":\"melba\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11192035\"]}");
	add("11192171", "{\"term\":\"melchior\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11192171\", \"11192401\"]}");
	add("11192401", "{\"term\":\"lauritz lebrecht hommel melchior\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11192401\"]}");
	add("11192401", "{\"term\":\"lauritz melchior\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11192401\"]}");
	add("11192401", "{\"term\":\"melchior\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11192171\", \"11192401\"]}");
	add("11192599", "{\"term\":\"andrew mellon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11192599\"]}");
	add("11192599", "{\"term\":\"andrew w. mellon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11192599\"]}");
	add("11192599", "{\"term\":\"andrew william mellon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11192599\"]}");
	add("11192599", "{\"term\":\"mellon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11192599\"]}");
	add("11192785", "{\"term\":\"herman melville\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11192785\"]}");
	add("11192785", "{\"term\":\"melville\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11192785\"]}");
	add("11192919", "{\"term\":\"menander\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11192919\"]}");
	add("11193021", "{\"term\":\"h. l. mencken\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11193021\"]}");
	add("11193021", "{\"term\":\"henry louis mencken\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11193021\"]}");
	add("11193021", "{\"term\":\"mencken\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11193021\"]}");
	add("11193189", "{\"term\":\"gregor mendel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11193189\"]}");
	add("11193189", "{\"term\":\"johann mendel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11193189\"]}");
	add("11193189", "{\"term\":\"mendel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11193189\"]}");
	add("11193465", "{\"term\":\"dmitri ivanovich mendeleev\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11193465\"]}");
	add("11193465", "{\"term\":\"dmitri ivanovich mendeleyev\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11193465\"]}");
	add("11193465", "{\"term\":\"dmitri mendeleev\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11193465\"]}");
	add("11193465", "{\"term\":\"dmitri mendeleyev\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11193465\"]}");
	add("11193465", "{\"term\":\"mendeleev\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11193465\"]}");
	add("11193465", "{\"term\":\"mendeleyev\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11193465\"]}");
	add("11193768", "{\"term\":\"erich mendelsohn\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11193768\"]}");
	add("11193768", "{\"term\":\"mendelsohn\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11193768\"]}");
	add("11193907", "{\"term\":\"felix mendelssohn\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11193907\"]}");
	add("11193907", "{\"term\":\"jakob ludwig felix mendelssohn-bartholdy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11193907\"]}");
	add("11193907", "{\"term\":\"mendelssohn\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11193907\"]}");
	add("11194109", "{\"term\":\"meniere\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11194109\"]}");
	add("11194109", "{\"term\":\"prosper meniere\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11194109\"]}");
	add("11194344", "{\"term\":\"charles frederick menninger\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11194344\"]}");
	add("11194344", "{\"term\":\"charles menninger\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11194344\"]}");
	add("11194344", "{\"term\":\"menninger\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"11194344\", \"11194553\", \"11194720\"]}");
	add("11194553", "{\"term\":\"karl augustus menninger\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11194553\"]}");
	add("11194553", "{\"term\":\"karl menninger\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11194553\"]}");
	add("11194553", "{\"term\":\"menninger\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"11194344\", \"11194553\", \"11194720\"]}");
	add("11194720", "{\"term\":\"menninger\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"11194344\", \"11194553\", \"11194720\"]}");
	add("11194720", "{\"term\":\"william claire menninger\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11194720\"]}");
	add("11194720", "{\"term\":\"william menninger\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11194720\"]}");
	add("11194891", "{\"term\":\"gian carlo menotti\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11194891\"]}");
	add("11194891", "{\"term\":\"menotti\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11194891\"]}");
	add("11195030", "{\"term\":\"menuhin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11195030\"]}");
	add("11195030", "{\"term\":\"sir yehudi menuhin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11195030\"]}");
	add("11195030", "{\"term\":\"yehudi menuhin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11195030\"]}");
	add("11195233", "{\"term\":\"gerardus mercator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11195233\"]}");
	add("11195233", "{\"term\":\"gerhard kremer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11195233\"]}");
	add("11195233", "{\"term\":\"mercator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11195233\"]}");
	add("11195435", "{\"term\":\"john mercer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11195435\"]}");
	add("11195435", "{\"term\":\"mercer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11195435\", \"10329452\"]}");
	add("11195595", "{\"term\":\"eddy merckx\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11195595\"]}");
	add("11195595", "{\"term\":\"merckx\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11195595\"]}");
	add("11195738", "{\"term\":\"anna amalia mercouri\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11195738\"]}");
	add("11195738", "{\"term\":\"melina mercouri\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11195738\"]}");
	add("11195738", "{\"term\":\"mercouri\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11195738\"]}");
	add("11195865", "{\"term\":\"george meredith\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11195865\"]}");
	add("11195865", "{\"term\":\"meredith\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11195865\", \"11195995\"]}");
	add("11195995", "{\"term\":\"james howard meredith\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11195995\"]}");
	add("11195995", "{\"term\":\"james meredith\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11195995\"]}");
	add("11195995", "{\"term\":\"meredith\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11195865\", \"11195995\"]}");
	add("11196220", "{\"term\":\"mergenthaler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11196220\"]}");
	add("11196220", "{\"term\":\"ottmar mergenthaler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11196220\"]}");
	add("11196378", "{\"term\":\"merlin\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01614916\", \"11196378\"]}");
	add("11196517", "{\"term\":\"ethel merman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11196517\"]}");
	add("11196517", "{\"term\":\"merman\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09512827\", \"11196517\"]}");
	add("11196659", "{\"term\":\"merton\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11196659\", \"11196787\"]}");
	add("11196659", "{\"term\":\"robert king merton\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11196659\"]}");
	add("11196659", "{\"term\":\"robert merton\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11196659\"]}");
	add("11196787", "{\"term\":\"merton\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11196659\", \"11196787\"]}");
	add("11196787", "{\"term\":\"thomas merton\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11196787\"]}");
	add("11196922", "{\"term\":\"franz anton mesmer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11196922\"]}");
	add("11196922", "{\"term\":\"friedrich anton mesmer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11196922\"]}");
	add("11196922", "{\"term\":\"mesmer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11196922\"]}");
	add("11197141", "{\"term\":\"elie metchnikoff\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11197141\"]}");
	add("11197141", "{\"term\":\"elie metchnikov\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11197141\"]}");
	add("11197141", "{\"term\":\"ilya ilich metchnikov\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11197141\"]}");
	add("11197141", "{\"term\":\"metchnikoff\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11197141\"]}");
	add("11197141", "{\"term\":\"metchnikov\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11197141\"]}");
	add("11197360", "{\"term\":\"methuselah\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10395205\", \"11197360\"]}");
	add("11197522", "{\"term\":\"klemens metternich\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11197522\"]}");
	add("11197522", "{\"term\":\"metternich\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11197522\"]}");
	add("11197522", "{\"term\":\"prince klemens wenzel nepomuk lothar von metternich\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11197522\"]}");
	add("11197685", "{\"term\":\"giacomo meyerbeer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11197685\"]}");
	add("11197685", "{\"term\":\"jakob liebmann beer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11197685\"]}");
	add("11197685", "{\"term\":\"meyerbeer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11197685\"]}");
	add("11197863", "{\"term\":\"meyerhof\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11197863\"]}");
	add("11197863", "{\"term\":\"otto fritz meyerhof\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11197863\"]}");
	add("11197863", "{\"term\":\"otto meyerhof\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11197863\"]}");
	add("11198049", "{\"term\":\"micah\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06451772\", \"11198049\"]}");
	add("11198049", "{\"term\":\"micheas\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06451772\", \"11198049\"]}");
	add("11198151", "{\"term\":\"michelangelo\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11198151\"]}");
	add("11198151", "{\"term\":\"michelangelo buonarroti\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11198151\"]}");
	add("11198383", "{\"term\":\"a. a. michelson\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11198383\"]}");
	add("11198383", "{\"term\":\"albert abraham michelson\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11198383\"]}");
	add("11198383", "{\"term\":\"albert michelson\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11198383\"]}");
	add("11198383", "{\"term\":\"michelson\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11198383\"]}");
	add("11198621", "{\"term\":\"james albert michener\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11198621\"]}");
	add("11198621", "{\"term\":\"james michener\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11198621\"]}");
	add("11198621", "{\"term\":\"michener\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11198621\"]}");
	add("11198771", "{\"term\":\"middleton\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11198771\"]}");
	add("11198771", "{\"term\":\"thomas middleton\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11198771\"]}");
	add("11198912", "{\"term\":\"ludwig mies van der rohe\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11198912\"]}");
	add("11198912", "{\"term\":\"mies van der rohe\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11198912\"]}");
	add("11199114", "{\"term\":\"darius milhaud\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11199114\"]}");
	add("11199114", "{\"term\":\"milhaud\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11199114\"]}");
	add("11199277", "{\"term\":\"john mill\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11199277\"]}");
	add("11199277", "{\"term\":\"john stuart mill\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11199277\"]}");
	add("11199277", "{\"term\":\"mill\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00359116\", \"03771096\", \"11199277\", \"11199492\", \"03321351\"]}");
	add("11199492", "{\"term\":\"james mill\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11199492\"]}");
	add("11199492", "{\"term\":\"mill\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00359116\", \"03771096\", \"11199277\", \"11199492\", \"03321351\"]}");
	add("11199656", "{\"term\":\"millais\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11199656\"]}");
	add("11199656", "{\"term\":\"sir john everett millais\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11199656\"]}");
	add("11199787", "{\"term\":\"edna millay\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11199787\"]}");
	add("11199787", "{\"term\":\"edna saint vincent millay\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11199787\"]}");
	add("11199787", "{\"term\":\"millay\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11199787\"]}");
	add("11199913", "{\"term\":\"arthur miller\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11199913\"]}");
	add("11199913", "{\"term\":\"miller\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"02286269\", \"03771579\", \"10337745\", \"11199913\", \"11200019\", \"11200199\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }