package org.swtk.commons.dict.wordnet.index.byid.instance.p0.p0;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0064 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("00640013", "{\"term\":\"nuclear transplantation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00640013\"]}");
	add("00640013", "{\"term\":\"scnt\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00640013\"]}");
	add("00640013", "{\"term\":\"somatic cell nuclear transfer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00640013\"]}");
	add("00640013", "{\"term\":\"somatic cell nuclear transplantation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00640013\"]}");
	add("00640250", "{\"term\":\"biomedical cloning\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00640250\"]}");
	add("00640250", "{\"term\":\"therapeutic cloning\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00640250\"]}");
	add("00640510", "{\"term\":\"stem-cell research\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00640510\"]}");
	add("00640641", "{\"term\":\"embryonic stem-cell research\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00640641\"]}");
	add("00640799", "{\"term\":\"experiment\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00787613\", \"05806051\", \"00640799\"]}");
	add("00640799", "{\"term\":\"experimentation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00640799\", \"05806051\"]}");
	add("00641076", "{\"term\":\"field work\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00641076\"]}");
	add("00641218", "{\"term\":\"testing\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00637704\", \"00645945\", \"00641218\"]}");
	add("00641431", "{\"term\":\"market research\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00641431\"]}");
	add("00641431", "{\"term\":\"marketing research\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00641431\"]}");
	add("00641677", "{\"term\":\"market analysis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00641677\"]}");
	add("00641803", "{\"term\":\"product research\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00641803\"]}");
	add("00641964", "{\"term\":\"consumer research\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00641964\"]}");
	add("00642132", "{\"term\":\"microscopy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00642132\"]}");
	add("00642352", "{\"term\":\"electron microscopy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00642352\"]}");
	add("00642465", "{\"term\":\"electron paramagnetic resonance\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00642465\"]}");
	add("00642465", "{\"term\":\"electron spin resonance\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00642465\"]}");
	add("00642465", "{\"term\":\"esr\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00642465\", \"15302448\"]}");
	add("00642664", "{\"term\":\"trial and error\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00642664\"]}");
	add("00642765", "{\"term\":\"probe\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00642765\", \"00948857\", \"04012787\", \"05808619\"]}");
	add("00642936", "{\"term\":\"human genome project\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00642936\"]}");
	add("00643063", "{\"term\":\"research project\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00643063\"]}");
	add("00643063", "{\"term\":\"scientific research\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00643063\"]}");
	add("00643288", "{\"term\":\"endoscopy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00643288\"]}");
	add("00643568", "{\"term\":\"celioscopy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00643568\"]}");
	add("00643689", "{\"term\":\"colonoscopy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00643689\"]}");
	add("00643847", "{\"term\":\"culdoscopy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00643847\"]}");
	add("00644005", "{\"term\":\"gastroscopy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00644005\"]}");
	add("00644153", "{\"term\":\"hysteroscopy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00644153\"]}");
	add("00644310", "{\"term\":\"proctoscopy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00644310\"]}");
	add("00644451", "{\"term\":\"flexible sigmoidoscopy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00644451\"]}");
	add("00644451", "{\"term\":\"sigmoidoscopy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00644451\"]}");
	add("00644632", "{\"term\":\"gonioscopy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00644632\"]}");
	add("00644864", "{\"term\":\"keratoscopy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00644864\"]}");
	add("00645015", "{\"term\":\"rhinoscopy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00645015\"]}");
	add("00645186", "{\"term\":\"scan\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04149614\", \"00645186\"]}");
	add("00645399", "{\"term\":\"scanning\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00645399\", \"13574286\"]}");
	add("00645609", "{\"term\":\"search\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00645609\", \"05778055\", \"13574763\", \"00638597\", \"00947217\"]}");
	add("00645746", "{\"term\":\"study\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"07062685\", \"10685903\", \"05792247\", \"04234206\", \"06005806\", \"04352106\", \"05713302\", \"07233130\", \"05763880\", \"00645746\"]}");
	add("00645746", "{\"term\":\"survey\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00883327\", \"06481365\", \"00645746\"]}");
	add("00645945", "{\"term\":\"testing\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00637704\", \"00645945\", \"00641218\"]}");
	add("00646210", "{\"term\":\"screening\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00646210\", \"01051609\", \"04160391\", \"06901395\"]}");
	add("00646405", "{\"term\":\"genetic screening\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00646405\"]}");
	add("00646608", "{\"term\":\"motion study\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00646608\"]}");
	add("00646608", "{\"term\":\"time-and-motion study\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00646608\"]}");
	add("00646608", "{\"term\":\"time-motion study\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00646608\"]}");
	add("00646608", "{\"term\":\"time and motion study\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00646608\"]}");
	add("00646608", "{\"term\":\"time study\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00646608\"]}");
	add("00646608", "{\"term\":\"work study\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00646608\"]}");
	add("00646865", "{\"term\":\"dark field illumination\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00646865\"]}");
	add("00646865", "{\"term\":\"dark ground illumination\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00646865\"]}");
	add("00647086", "{\"term\":\"fluorescence microscopy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00647086\"]}");
	add("00647267", "{\"term\":\"indirect immunofluorescence\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00647267\"]}");
	add("00647430", "{\"term\":\"anatomy\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00647430\", \"05224424\", \"06067070\"]}");
	add("00647575", "{\"term\":\"uranalysis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00647575\"]}");
	add("00647575", "{\"term\":\"urinalysis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00647575\"]}");
	add("00647747", "{\"term\":\"scatology\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00647747\", \"07139636\"]}");
	add("00647923", "{\"term\":\"case study\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00647923\", \"07233957\"]}");
	add("00648076", "{\"term\":\"chemical analysis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00648076\"]}");
	add("00648076", "{\"term\":\"qualitative analysis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00648076\"]}");
	add("00648390", "{\"term\":\"polarography\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00648390\"]}");
	add("00648513", "{\"term\":\"quantitative analysis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00648513\"]}");
	add("00648513", "{\"term\":\"quantitative chemical analysis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00648513\"]}");
	add("00648779", "{\"term\":\"colorimetric analysis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00648779\"]}");
	add("00648779", "{\"term\":\"colorimetry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00648779\"]}");
	add("00648956", "{\"term\":\"volumetric analysis\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00648956\", \"00649785\"]}");
	add("00649162", "{\"term\":\"acidimetry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00649162\"]}");
	add("00649330", "{\"term\":\"alkalimetry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00649330\"]}");
	add("00649480", "{\"term\":\"titration\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00649480\"]}");
	add("00649785", "{\"term\":\"volumetric analysis\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00648956\", \"00649785\"]}");
	add("00649935", "{\"term\":\"gravimetric analysis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00649935\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }