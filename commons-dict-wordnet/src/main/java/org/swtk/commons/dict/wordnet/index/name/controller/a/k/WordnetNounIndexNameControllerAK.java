package org.swtk.commons.dict.wordnet.index.name.controller.a.k;  import java.util.Collection; import java.util.Set; import java.util.TreeSet;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  	import org.swtk.commons.dict.wordnet.index.name.instance.a.k.a.b.WordnetNounIndexNameInstanceAKAB;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.k.a.n.WordnetNounIndexNameInstanceAKAN;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.k.a.r.WordnetNounIndexNameInstanceAKAR;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.k.e.e.WordnetNounIndexNameInstanceAKEE;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.k.e.n.WordnetNounIndexNameInstanceAKEN;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.k.e.r.WordnetNounIndexNameInstanceAKER;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.k.h.a.WordnetNounIndexNameInstanceAKHA;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.k.h.b.WordnetNounIndexNameInstanceAKHB;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.k.h.e.WordnetNounIndexNameInstanceAKHE;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.k.i.n.WordnetNounIndexNameInstanceAKIN;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.k.k.a.WordnetNounIndexNameInstanceAKKA;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.k.k.o.WordnetNounIndexNameInstanceAKKO;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.k.m.o.WordnetNounIndexNameInstanceAKMO;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.k.r.o.WordnetNounIndexNameInstanceAKRO;
	import org.swtk.commons.dict.wordnet.index.name.instance.a.k.v.a.WordnetNounIndexNameInstanceAKVA;
  import com.trimc.blogger.commons.exception.BusinessException;  public final class WordnetNounIndexNameControllerAK {  	public static Collection<IndexNoun> get(final String TERM) throws BusinessException {  		String key = TERM.substring(0, 4).toLowerCase(); 			if ("akab".equals(key)) return WordnetNounIndexNameInstanceAKAB.get(TERM);
	if ("akan".equals(key)) return WordnetNounIndexNameInstanceAKAN.get(TERM);
	if ("akar".equals(key)) return WordnetNounIndexNameInstanceAKAR.get(TERM);
	if ("akee".equals(key)) return WordnetNounIndexNameInstanceAKEE.get(TERM);
	if ("aken".equals(key)) return WordnetNounIndexNameInstanceAKEN.get(TERM);
	if ("aker".equals(key)) return WordnetNounIndexNameInstanceAKER.get(TERM);
	if ("akha".equals(key)) return WordnetNounIndexNameInstanceAKHA.get(TERM);
	if ("akhb".equals(key)) return WordnetNounIndexNameInstanceAKHB.get(TERM);
	if ("akhe".equals(key)) return WordnetNounIndexNameInstanceAKHE.get(TERM);
	if ("akin".equals(key)) return WordnetNounIndexNameInstanceAKIN.get(TERM);
	if ("akka".equals(key)) return WordnetNounIndexNameInstanceAKKA.get(TERM);
	if ("akko".equals(key)) return WordnetNounIndexNameInstanceAKKO.get(TERM);
	if ("akmo".equals(key)) return WordnetNounIndexNameInstanceAKMO.get(TERM);
	if ("akro".equals(key)) return WordnetNounIndexNameInstanceAKRO.get(TERM);
	if ("akva".equals(key)) return WordnetNounIndexNameInstanceAKVA.get(TERM);
  		throw new BusinessException("TERM not found (id = %s)", TERM); 	} 	 	public static Collection<String> terms() throws BusinessException { 		Set<String> set = new TreeSet<String>();  			set.addAll(WordnetNounIndexNameInstanceAKAB.terms());
	set.addAll(WordnetNounIndexNameInstanceAKAN.terms());
	set.addAll(WordnetNounIndexNameInstanceAKAR.terms());
	set.addAll(WordnetNounIndexNameInstanceAKEE.terms());
	set.addAll(WordnetNounIndexNameInstanceAKEN.terms());
	set.addAll(WordnetNounIndexNameInstanceAKER.terms());
	set.addAll(WordnetNounIndexNameInstanceAKHA.terms());
	set.addAll(WordnetNounIndexNameInstanceAKHB.terms());
	set.addAll(WordnetNounIndexNameInstanceAKHE.terms());
	set.addAll(WordnetNounIndexNameInstanceAKIN.terms());
	set.addAll(WordnetNounIndexNameInstanceAKKA.terms());
	set.addAll(WordnetNounIndexNameInstanceAKKO.terms());
	set.addAll(WordnetNounIndexNameInstanceAKMO.terms());
	set.addAll(WordnetNounIndexNameInstanceAKRO.terms());
	set.addAll(WordnetNounIndexNameInstanceAKVA.terms());
  		return set; 	} }