package org.swtk.commons.dict.wordnet.index.byid.instance.p0.p9;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0972 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("09720102", "{\"term\":\"copt\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09700630\", \"09720102\"]}");
	add("09720219", "{\"term\":\"salvadoran\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09720219\"]}");
	add("09720219", "{\"term\":\"salvadorean\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09720219\"]}");
	add("09720219", "{\"term\":\"salvadorian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09720219\"]}");
	add("09720360", "{\"term\":\"brit\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01999549\", \"02532819\", \"09720360\"]}");
	add("09720360", "{\"term\":\"britisher\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09720360\"]}");
	add("09720360", "{\"term\":\"briton\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09707762\", \"09720360\"]}");
	add("09720544", "{\"term\":\"english person\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09720544\"]}");
	add("09720999", "{\"term\":\"englishman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09720999\"]}");
	add("09721229", "{\"term\":\"englishwoman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09721229\"]}");
	add("09721373", "{\"term\":\"anglo-saxon\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06962353\", \"09721530\", \"09721373\"]}");
	add("09721530", "{\"term\":\"anglo-saxon\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06962353\", \"09721530\", \"09721373\"]}");
	add("09721937", "{\"term\":\"anglo-indian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09721937\"]}");
	add("09722069", "{\"term\":\"angle\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"09722069\", \"06220813\", \"13910202\"]}");
	add("09722232", "{\"term\":\"saxon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09722232\"]}");
	add("09722497", "{\"term\":\"west saxon\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06962169\", \"06962524\", \"09722497\"]}");
	add("09722577", "{\"term\":\"jute\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09722577\", \"14949783\"]}");
	add("09722740", "{\"term\":\"langobard\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09722740\"]}");
	add("09722740", "{\"term\":\"lombard\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09722740\"]}");
	add("09722881", "{\"term\":\"john bull\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09722881\"]}");
	add("09722881", "{\"term\":\"limey\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09722881\"]}");
	add("09722969", "{\"term\":\"pom\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09722969\"]}");
	add("09722969", "{\"term\":\"pommy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09722969\"]}");
	add("09723104", "{\"term\":\"cantabrigian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09723104\"]}");
	add("09723205", "{\"term\":\"cornishman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09723205\"]}");
	add("09723328", "{\"term\":\"cornishwoman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09723328\"]}");
	add("09723453", "{\"term\":\"lancastrian\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09723453\", \"09723553\"]}");
	add("09723553", "{\"term\":\"lancastrian\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09723453\", \"09723553\"]}");
	add("09723679", "{\"term\":\"geordie\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06960911\", \"09723679\"]}");
	add("09723764", "{\"term\":\"hanoverian\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09723764\", \"10179445\"]}");
	add("09723905", "{\"term\":\"liverpudlian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09723905\"]}");
	add("09723905", "{\"term\":\"scouser\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09723905\"]}");
	add("09724026", "{\"term\":\"londoner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09724026\"]}");
	add("09724166", "{\"term\":\"cockney\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06960779\", \"09724166\"]}");
	add("09724272", "{\"term\":\"mancunian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09724272\"]}");
	add("09724399", "{\"term\":\"oxonian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09724399\"]}");
	add("09724520", "{\"term\":\"ethiopian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09724520\"]}");
	add("09724683", "{\"term\":\"ewe\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02414645\", \"07010247\", \"09724683\"]}");
	add("09724867", "{\"term\":\"fellata\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09724867\"]}");
	add("09724867", "{\"term\":\"fula\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07009170\", \"09724867\"]}");
	add("09724867", "{\"term\":\"fulah\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09724867\"]}");
	add("09724867", "{\"term\":\"fulani\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07009170\", \"09724867\"]}");
	add("09724867", "{\"term\":\"fulbe\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09724867\"]}");
	add("09725067", "{\"term\":\"amhara\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09725067\"]}");
	add("09725180", "{\"term\":\"eritrean\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09725180\"]}");
	add("09725305", "{\"term\":\"fijian\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06951400\", \"09725305\"]}");
	add("09725425", "{\"term\":\"finn\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09725425\"]}");
	add("09725528", "{\"term\":\"fleming\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"09725528\", \"10992817\", \"10992977\"]}");
	add("09725651", "{\"term\":\"komi\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06969782\", \"09725651\"]}");
	add("09725792", "{\"term\":\"cheremis\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06970027\", \"09725792\"]}");
	add("09725792", "{\"term\":\"cheremiss\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06970027\", \"09725792\"]}");
	add("09725792", "{\"term\":\"mari\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06970027\", \"09725792\"]}");
	add("09725944", "{\"term\":\"inger\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09725944\"]}");
	add("09725944", "{\"term\":\"ingerman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09725944\"]}");
	add("09725944", "{\"term\":\"ingrian\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06971262\", \"09725944\"]}");
	add("09726142", "{\"term\":\"carelian\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06970803\", \"09726142\"]}");
	add("09726142", "{\"term\":\"karelian\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06970803\", \"09726142\"]}");
	add("09726307", "{\"term\":\"khanty\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06971758\", \"09726307\"]}");
	add("09726307", "{\"term\":\"ostyak\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06971758\", \"09726307\"]}");
	add("09726457", "{\"term\":\"livonian\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06970508\", \"09726457\"]}");
	add("09726562", "{\"term\":\"latvian\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06959117\", \"09726562\"]}");
	add("09726685", "{\"term\":\"lithuanian\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06958961\", \"09726685\"]}");
	add("09726796", "{\"term\":\"mordva\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06970143\", \"09726796\"]}");
	add("09726796", "{\"term\":\"mordvin\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06970143\", \"09726796\"]}");
	add("09726796", "{\"term\":\"mordvinian\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06970143\", \"09726796\"]}");
	add("09726983", "{\"term\":\"nganasan\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06972823\", \"09726983\"]}");
	add("09727131", "{\"term\":\"ostyak-samoyed\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06972920\", \"09727131\"]}");
	add("09727131", "{\"term\":\"selkup\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06972920\", \"09727131\"]}");
	add("09727283", "{\"term\":\"samoyed\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02114541\", \"06972324\", \"09727283\"]}");
	add("09727388", "{\"term\":\"veps\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06971157\", \"09727388\"]}");
	add("09727388", "{\"term\":\"vepse\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06971157\", \"09727388\"]}");
	add("09727388", "{\"term\":\"vepsian\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06971157\", \"09727388\"]}");
	add("09727514", "{\"term\":\"mansi\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06971880\", \"09727514\"]}");
	add("09727514", "{\"term\":\"vogul\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06971880\", \"09727514\"]}");
	add("09727643", "{\"term\":\"yeniseian\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06972672\", \"09727643\"]}");
	add("09727801", "{\"term\":\"french person\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09727801\"]}");
	add("09727801", "{\"term\":\"frenchman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09727801\"]}");
	add("09727801", "{\"term\":\"frenchwoman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09727801\"]}");
	add("09728044", "{\"term\":\"frog\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03403297\", \"09728044\", \"01642406\"]}");
	add("09728044", "{\"term\":\"gaul\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08949495\", \"09707883\", \"09728044\"]}");
	add("09728146", "{\"term\":\"parisian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09728146\"]}");
	add("09728285", "{\"term\":\"parisienne\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09728285\"]}");
	add("09728397", "{\"term\":\"breton\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06974511\", \"09728397\"]}");
	add("09728551", "{\"term\":\"savoyard\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09728551\", \"10573452\"]}");
	add("09728625", "{\"term\":\"angevin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09728625\"]}");
	add("09728625", "{\"term\":\"angevine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09728625\"]}");
	add("09728728", "{\"term\":\"balkan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09728728\"]}");
	add("09728837", "{\"term\":\"castillian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09728837\"]}");
	add("09728927", "{\"term\":\"creole\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06918134\", \"09728927\", \"09729069\"]}");
	add("09729069", "{\"term\":\"creole\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06918134\", \"09728927\", \"09729069\"]}");
	add("09729191", "{\"term\":\"cretan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09729191\"]}");
	add("09729312", "{\"term\":\"minoan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09729312\"]}");
	add("09729437", "{\"term\":\"gabonese\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09729437\"]}");
	add("09729560", "{\"term\":\"greek\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09729560\", \"06989052\"]}");
	add("09729560", "{\"term\":\"hellene\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09729560\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }