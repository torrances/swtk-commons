package org.swtk.commons.dict.wordnet.index.name.instance.l.e.a.d;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceLEAD {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"lead\", \"synsetCount\":17, \"upperType\":\"NOUN\", \"ids\":[\"01258857\", \"03610056\", \"03656410\", \"03656591\", \"03658258\", \"05058239\", \"06281845\", \"06664322\", \"08609721\", \"10668135\", \"13617665\", \"06281532\", \"13915822\", \"01259362\", \"05835238\", \"14667645\", \"05164526\"]}");
	add("{\"term\":\"leadbelly\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11143252\"]}");
	add("{\"term\":\"leader\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03239498\", \"09646208\"]}");
	add("{\"term\":\"leaders\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08398167\"]}");
	add("{\"term\":\"leadership\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"05625093\", \"14456827\", \"08398167\", \"01259004\"]}");
	add("{\"term\":\"leading\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01259004\", \"03656591\"]}");
	add("{\"term\":\"leadplant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12524811\"]}");
	add("{\"term\":\"leadwort\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12119041\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }