package org.swtk.commons.dict.wordnet.index.byid.instance.p0.p0;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0021 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("00210150", "{\"term\":\"rustication\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00209543\", \"00210150\", \"00213400\", \"00915105\", \"14602760\"]}");
	add("00210295", "{\"term\":\"displacement\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00210295\", \"00316656\", \"13488212\", \"13488427\", \"00331810\", \"07459268\", \"00198459\"]}");
	add("00210395", "{\"term\":\"veto\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05206196\", \"00210395\"]}");
	add("00210529", "{\"term\":\"pocket veto\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00210529\"]}");
	add("00210638", "{\"term\":\"write-in\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00210638\", \"10813439\"]}");
	add("00210792", "{\"term\":\"conclusion\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00163453\", \"06410044\", \"07192282\", \"00210792\", \"06765744\", \"07306035\", \"15292365\", \"05789538\", \"05846685\"]}");
	add("00210792", "{\"term\":\"ending\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"06410044\", \"07306035\", \"15291722\", \"00210792\", \"06319755\"]}");
	add("00210792", "{\"term\":\"termination\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00210792\", \"06319755\", \"07307418\", \"08584083\", \"15293639\"]}");
	add("00211367", "{\"term\":\"finish\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00211367\", \"05725694\", \"07306035\", \"07347762\", \"07367976\", \"08585406\", \"14483408\", \"15292365\", \"04707990\"]}");
	add("00211367", "{\"term\":\"finishing\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00211367\", \"04707990\"]}");
	add("00211646", "{\"term\":\"close\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00211646\", \"06410044\", \"15292365\"]}");
	add("00211646", "{\"term\":\"closing curtain\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00211646\"]}");
	add("00211646", "{\"term\":\"finale\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00211646\", \"15292365\", \"07053224\"]}");
	add("00211646", "{\"term\":\"finis\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00211646\", \"15292365\"]}");
	add("00211789", "{\"term\":\"release\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"00211789\", \"00214561\", \"00330445\", \"01266940\", \"04080537\", \"06564805\", \"07348249\", \"00217041\", \"06760197\", \"13570875\", \"00096322\", \"04080320\"]}");
	add("00211789", "{\"term\":\"tone ending\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00211789\"]}");
	add("00211959", "{\"term\":\"closing\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00211959\", \"00230127\", \"00282306\", \"06410044\", \"00344866\"]}");
	add("00211959", "{\"term\":\"completion\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00211959\", \"00558456\"]}");
	add("00211959", "{\"term\":\"culmination\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00211959\", \"06385370\", \"08565814\", \"15316435\"]}");
	add("00211959", "{\"term\":\"mop up\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00211959\"]}");
	add("00211959", "{\"term\":\"windup\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00211959\"]}");
	add("00212311", "{\"term\":\"finalisation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00212311\"]}");
	add("00212311", "{\"term\":\"finalization\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00212311\"]}");
	add("00212442", "{\"term\":\"follow-through\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00212625\", \"00212442\"]}");
	add("00212625", "{\"term\":\"follow-through\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00212625\", \"00212442\"]}");
	add("00212914", "{\"term\":\"graduation\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"01005671\", \"06814823\", \"07469368\", \"00212914\"]}");
	add("00213054", "{\"term\":\"retirement\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00055472\", \"00213054\", \"13977336\"]}");
	add("00213226", "{\"term\":\"hibernation\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00213226\", \"14037452\", \"14038320\"]}");
	add("00213400", "{\"term\":\"rustication\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00209543\", \"00210150\", \"00213400\", \"00915105\", \"14602760\"]}");
	add("00213527", "{\"term\":\"last hurrah\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00213527\"]}");
	add("00213527", "{\"term\":\"swan song\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00213527\"]}");
	add("00213657", "{\"term\":\"relinquishing\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00213657\", \"07269504\"]}");
	add("00213657", "{\"term\":\"relinquishment\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00213657\", \"07269504\"]}");
	add("00213901", "{\"term\":\"ceding\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00213901\"]}");
	add("00213901", "{\"term\":\"cession\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00213901\"]}");
	add("00214035", "{\"term\":\"handover\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00214035\"]}");
	add("00214192", "{\"term\":\"surrender\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00068527\", \"00214192\", \"07269695\", \"07557821\"]}");
	add("00214349", "{\"term\":\"extradition\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00214349\"]}");
	add("00214561", "{\"term\":\"discharge\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00124054\", \"00214561\", \"00217041\", \"07422377\", \"11531956\", \"13487789\", \"14876637\", \"01255864\", \"07322372\"]}");
	add("00214561", "{\"term\":\"release\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"00211789\", \"00214561\", \"00330445\", \"01266940\", \"04080537\", \"06564805\", \"07348249\", \"00217041\", \"06760197\", \"13570875\", \"00096322\", \"04080320\"]}");
	add("00214561", "{\"term\":\"waiver\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00214561\"]}");
	add("00214770", "{\"term\":\"exemption\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00214770\", \"13332007\", \"14552475\"]}");
	add("00214770", "{\"term\":\"granting immunity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00214770\"]}");
	add("00214770", "{\"term\":\"immunity\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00214770\", \"05041061\", \"14550773\", \"14550366\"]}");
	add("00215015", "{\"term\":\"fix\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00156307\", \"00215015\", \"00267650\", \"00324088\", \"14432893\"]}");
	add("00215182", "{\"term\":\"official immunity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00215182\"]}");
	add("00215393", "{\"term\":\"sovereign immunity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00215393\"]}");
	add("00215661", "{\"term\":\"transactional immunity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00215661\"]}");
	add("00215880", "{\"term\":\"testimonial immunity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00215880\"]}");
	add("00215880", "{\"term\":\"use immunity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00215880\"]}");
	add("00216181", "{\"term\":\"breakup\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07346000\", \"00216181\"]}");
	add("00216181", "{\"term\":\"dissolution\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00216181\", \"00216905\", \"00749605\", \"13489297\", \"13489119\"]}");
	add("00216401", "{\"term\":\"splitsville\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00216401\"]}");
	add("00216550", "{\"term\":\"overthrow\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00555887\", \"00216550\"]}");
	add("00216705", "{\"term\":\"subversion\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00216705\", \"00273292\"]}");
	add("00216705", "{\"term\":\"subversive activity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00216705\"]}");
	add("00216905", "{\"term\":\"adjournment\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01068994\", \"00216905\"]}");
	add("00216905", "{\"term\":\"dissolution\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00216181\", \"00216905\", \"00749605\", \"13489297\", \"13489119\"]}");
	add("00217041", "{\"term\":\"discharge\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00124054\", \"00214561\", \"00217041\", \"07422377\", \"11531956\", \"13487789\", \"14876637\", \"01255864\", \"07322372\"]}");
	add("00217041", "{\"term\":\"dismissal\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00217041\", \"06702574\", \"07227739\", \"01192662\"]}");
	add("00217041", "{\"term\":\"dismission\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00217041\", \"07227739\"]}");
	add("00217041", "{\"term\":\"firing\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00217041\", \"00379287\", \"00124054\", \"00989024\"]}");
	add("00217041", "{\"term\":\"liberation\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00217041\", \"00789493\", \"00096322\"]}");
	add("00217041", "{\"term\":\"release\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"00211789\", \"00214561\", \"00330445\", \"01266940\", \"04080537\", \"06564805\", \"07348249\", \"00217041\", \"06760197\", \"13570875\", \"00096322\", \"04080320\"]}");
	add("00217041", "{\"term\":\"sack\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00217041\", \"00969550\", \"03017092\", \"03487335\", \"04130120\", \"07913950\", \"13791346\", \"13937488\", \"04129919\"]}");
	add("00217041", "{\"term\":\"sacking\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00217041\", \"04130661\"]}");
	add("00217474", "{\"term\":\"conge\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00217474\", \"01144050\", \"03095054\"]}");
	add("00217474", "{\"term\":\"congee\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00217474\", \"01144050\", \"03095054\", \"07719950\"]}");
	add("00217590", "{\"term\":\"removal\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00217590\", \"00392407\"]}");
	add("00217701", "{\"term\":\"purge\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00217701\", \"00253297\", \"00253529\"]}");
	add("00217881", "{\"term\":\"destruction\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"14586552\", \"07349090\", \"00217881\"]}");
	add("00217881", "{\"term\":\"devastation\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00217881\", \"00969261\", \"07350014\", \"07525066\", \"14585734\"]}");
	add("00218366", "{\"term\":\"disaster\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00218366\", \"07329438\", \"14499874\"]}");
	add("00218460", "{\"term\":\"kill\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01325752\", \"00218460\", \"00219879\"]}");
	add("00218640", "{\"term\":\"laying waste\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00218640\"]}");
	add("00218640", "{\"term\":\"ruin\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00218640\", \"07332733\", \"07349843\", \"13487515\", \"04125729\", \"14585916\"]}");
	add("00218640", "{\"term\":\"ruination\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00218640\", \"07332733\", \"07349843\", \"14585916\"]}");
	add("00218640", "{\"term\":\"ruining\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00218640\"]}");
	add("00218640", "{\"term\":\"wrecking\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00218640\", \"07349697\"]}");
	add("00218912", "{\"term\":\"demolishing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00218912\"]}");
	add("00218912", "{\"term\":\"leveling\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00045411\", \"00218912\", \"00914407\"]}");
	add("00218912", "{\"term\":\"razing\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00218912\", \"07349697\"]}");
	add("00218912", "{\"term\":\"tearing down\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00218912\"]}");
	add("00219075", "{\"term\":\"annihilation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07345428\", \"00219075\"]}");
	add("00219075", "{\"term\":\"obliteration\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07345613\", \"00219075\"]}");
	add("00219294", "{\"term\":\"decimation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00219294\"]}");
	add("00219469", "{\"term\":\"atomisation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00219469\", \"00389018\"]}");
	add("00219469", "{\"term\":\"atomization\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00219469\", \"00389018\"]}");
	add("00219620", "{\"term\":\"pulverisation\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00219620\", \"00359116\", \"15021579\"]}");
	add("00219620", "{\"term\":\"pulverization\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00219620\", \"00359116\", \"15021579\"]}");
	add("00219769", "{\"term\":\"vaporisation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00219769\", \"13593639\"]}");
	add("00219769", "{\"term\":\"vaporization\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13593639\", \"00219769\"]}");
	add("00219879", "{\"term\":\"kill\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01325752\", \"00218460\", \"00219879\"]}");
	add("00219879", "{\"term\":\"killing\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13280696\", \"00219879\", \"07376176\"]}");
	add("00219879", "{\"term\":\"putting to death\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00219879\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }