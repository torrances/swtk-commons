package org.swtk.commons.dict.wordnet.index.byid.instance.p1.p0;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance1038 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("10380065", "{\"term\":\"noncandidate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10380065\"]}");
	add("10380277", "{\"term\":\"noncombatant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10380277\"]}");
	add("10380446", "{\"term\":\"enlisted officer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10380446\"]}");
	add("10380446", "{\"term\":\"noncom\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10380446\"]}");
	add("10380446", "{\"term\":\"noncommissioned officer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10380446\"]}");
	add("10380759", "{\"term\":\"nondescript\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10380759\"]}");
	add("10380893", "{\"term\":\"nondriver\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10380893\"]}");
	add("10380995", "{\"term\":\"nonparticipant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10380995\"]}");
	add("10381089", "{\"term\":\"nonpartisan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10381089\"]}");
	add("10381089", "{\"term\":\"nonpartizan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10381089\"]}");
	add("10381224", "{\"term\":\"nonperson\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10381224\"]}");
	add("10381224", "{\"term\":\"unperson\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10381224\"]}");
	add("10381600", "{\"term\":\"nonreader\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10218722\", \"10381600\"]}");
	add("10381702", "{\"term\":\"nonresident\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10381702\"]}");
	add("10381894", "{\"term\":\"non-resistant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10381894\"]}");
	add("10381894", "{\"term\":\"passive resister\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10381894\"]}");
	add("10382018", "{\"term\":\"nonsmoker\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03833560\", \"10382018\"]}");
	add("10382127", "{\"term\":\"normaliser\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10382127\"]}");
	add("10382127", "{\"term\":\"normalizer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10382127\"]}");
	add("10382256", "{\"term\":\"northern baptist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10382256\"]}");
	add("10382381", "{\"term\":\"northerner\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10821887\", \"10382381\"]}");
	add("10382464", "{\"term\":\"nosher\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10382464\"]}");
	add("10382464", "{\"term\":\"snacker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10382464\"]}");
	add("10382616", "{\"term\":\"no-show\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10382616\", \"10382716\"]}");
	add("10382616", "{\"term\":\"nonattender\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10382616\"]}");
	add("10382616", "{\"term\":\"truant\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10382616\", \"10751389\"]}");
	add("10382716", "{\"term\":\"no-show\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10382616\", \"10382716\"]}");
	add("10382848", "{\"term\":\"notary\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10382848\"]}");
	add("10382848", "{\"term\":\"notary public\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10382848\"]}");
	add("10383059", "{\"term\":\"noticer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10383059\", \"10383144\"]}");
	add("10383144", "{\"term\":\"noticer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10383059\", \"10383144\"]}");
	add("10383272", "{\"term\":\"novelist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10383272\"]}");
	add("10383612", "{\"term\":\"beginner\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10127072\", \"10383612\"]}");
	add("10383612", "{\"term\":\"initiate\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07965104\", \"10226506\", \"10383612\"]}");
	add("10383612", "{\"term\":\"novice\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10383612\", \"10383897\"]}");
	add("10383612", "{\"term\":\"tiro\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10383612\"]}");
	add("10383612", "{\"term\":\"tyro\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10383612\"]}");
	add("10383897", "{\"term\":\"novice\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10383612\", \"10383897\"]}");
	add("10383897", "{\"term\":\"novitiate\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10383897\", \"15320127\"]}");
	add("10384032", "{\"term\":\"nubian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10384032\"]}");
	add("10384201", "{\"term\":\"nuclear chemist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10384201\"]}");
	add("10384201", "{\"term\":\"radiochemist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10384201\"]}");
	add("10384342", "{\"term\":\"nuclear physicist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10384342\"]}");
	add("10385098", "{\"term\":\"nude\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03840838\", \"10385098\", \"14479883\", \"03840737\"]}");
	add("10385098", "{\"term\":\"nude person\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10385098\"]}");
	add("10385213", "{\"term\":\"nudger\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10385213\"]}");
	add("10385400", "{\"term\":\"naturist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10385400\"]}");
	add("10385400", "{\"term\":\"nudist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10385400\"]}");
	add("10385545", "{\"term\":\"nudnick\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10385545\"]}");
	add("10385545", "{\"term\":\"nudnik\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10385545\"]}");
	add("10385683", "{\"term\":\"nullifier\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10234060\", \"10385683\"]}");
	add("10385844", "{\"term\":\"nullipara\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10385844\"]}");
	add("10385975", "{\"term\":\"number theorist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10385975\"]}");
	add("10386082", "{\"term\":\"numerologist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10386082\"]}");
	add("10386183", "{\"term\":\"numen\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10386183\"]}");
	add("10386391", "{\"term\":\"numidian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10386391\"]}");
	add("10386478", "{\"term\":\"coin collector\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10386478\"]}");
	add("10386478", "{\"term\":\"numismatist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10386478\"]}");
	add("10386478", "{\"term\":\"numismatologist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10386478\"]}");
	add("10386665", "{\"term\":\"nurse\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10364831\", \"10386665\"]}");
	add("10387108", "{\"term\":\"nurser\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10387108\"]}");
	add("10387247", "{\"term\":\"nurse\u0027s aide\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10387247\"]}");
	add("10387247", "{\"term\":\"nursing aide\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10387247\"]}");
	add("10387393", "{\"term\":\"nurse-midwife\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10387393\"]}");
	add("10387518", "{\"term\":\"np\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10387518\", \"14670581\"]}");
	add("10387518", "{\"term\":\"nurse clinician\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10387518\"]}");
	add("10387518", "{\"term\":\"nurse practitioner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10387518\"]}");
	add("10387708", "{\"term\":\"nun\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06851162\", \"07281584\", \"10387708\"]}");
	add("10387812", "{\"term\":\"nuncio\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10387812\"]}");
	add("10387812", "{\"term\":\"papal nuncio\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10387812\"]}");
	add("10387990", "{\"term\":\"nurseling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10387990\"]}");
	add("10387990", "{\"term\":\"nursling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10387990\"]}");
	add("10387990", "{\"term\":\"suckling\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00844658\", \"01325902\", \"10387990\", \"11343443\"]}");
	add("10388113", "{\"term\":\"nutter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10388113\"]}");
	add("10388113", "{\"term\":\"wacko\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10388113\"]}");
	add("10388113", "{\"term\":\"whacko\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10388113\"]}");
	add("10388227", "{\"term\":\"houri\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09568129\", \"10388227\"]}");
	add("10388227", "{\"term\":\"nymph\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10388227\", \"02314269\", \"09571761\"]}");
	add("10388323", "{\"term\":\"nymphet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10388323\"]}");
	add("10388410", "{\"term\":\"nympholept\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10388410\"]}");
	add("10388497", "{\"term\":\"nympho\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10388497\"]}");
	add("10388497", "{\"term\":\"nymphomaniac\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10388497\"]}");
	add("10388619", "{\"term\":\"oarsman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10388619\"]}");
	add("10388619", "{\"term\":\"rower\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10388619\"]}");
	add("10388794", "{\"term\":\"oarswoman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10388794\"]}");
	add("10388865", "{\"term\":\"accommodator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10388865\"]}");
	add("10388865", "{\"term\":\"obliger\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10388865\"]}");
	add("10389016", "{\"term\":\"oboist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10389016\"]}");
	add("10389116", "{\"term\":\"obscurantist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10389116\"]}");
	add("10389227", "{\"term\":\"commentator\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09961910\", \"10389227\"]}");
	add("10389227", "{\"term\":\"observer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10389227\", \"09649777\"]}");
	add("10389398", "{\"term\":\"accoucheur\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10389398\"]}");
	add("10389398", "{\"term\":\"obstetrician\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10389398\"]}");
	add("10389544", "{\"term\":\"occidental\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06910250\", \"10389544\"]}");
	add("10389654", "{\"term\":\"occupier\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10389654\", \"10543112\"]}");
	add("10389821", "{\"term\":\"oceanographer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10389821\"]}");
	add("10389985", "{\"term\":\"octogenarian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10389985\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }