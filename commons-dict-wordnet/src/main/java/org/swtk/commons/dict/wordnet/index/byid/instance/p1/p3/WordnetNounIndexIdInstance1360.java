package org.swtk.commons.dict.wordnet.index.byid.instance.p1.p3;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance1360 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("13600033", "{\"term\":\"united states customary system\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13600033\"]}");
	add("13600369", "{\"term\":\"point system\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06374035\", \"13600369\", \"05672484\"]}");
	add("13600490", "{\"term\":\"information measure\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13600490\"]}");
	add("13600713", "{\"term\":\"bandwidth\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13600713\"]}");
	add("13600882", "{\"term\":\"baud\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13600882\"]}");
	add("13600882", "{\"term\":\"baud rate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13600882\"]}");
	add("13601032", "{\"term\":\"cordage\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03111697\", \"13601032\"]}");
	add("13601136", "{\"term\":\"octane number\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13601136\"]}");
	add("13601136", "{\"term\":\"octane rating\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13601136\"]}");
	add("13601261", "{\"term\":\"utility\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"04524169\", \"06593586\", \"13601261\", \"00580371\", \"05155946\", \"08202676\"]}");
	add("13601431", "{\"term\":\"marginal utility\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13601431\"]}");
	add("13601618", "{\"term\":\"enough\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13601618\"]}");
	add("13601618", "{\"term\":\"sufficiency\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"05119909\", \"13601618\", \"14516537\"]}");
	add("13601926", "{\"term\":\"fill\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"14892394\", \"13601926\"]}");
	add("13602112", "{\"term\":\"n\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"06845622\", \"13602112\", \"13669285\", \"13853375\", \"14671413\"]}");
	add("13602112", "{\"term\":\"normality\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04721334\", \"04802662\", \"13602112\", \"14524492\"]}");
	add("13602270", "{\"term\":\"absolute majority\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13602270\"]}");
	add("13602270", "{\"term\":\"majority\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"15177022\", \"13602270\", \"05129822\"]}");
	add("13602421", "{\"term\":\"plurality\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13602421\", \"13797293\", \"14593425\"]}");
	add("13602421", "{\"term\":\"relative majority\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13602421\"]}");
	add("13602668", "{\"term\":\"absolute value\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13602668\"]}");
	add("13602668", "{\"term\":\"numerical value\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13602668\"]}");
	add("13602801", "{\"term\":\"acid value\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13602801\"]}");
	add("13603074", "{\"term\":\"chlorinity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13603074\"]}");
	add("13603216", "{\"term\":\"number\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"03840952\", \"06337519\", \"06609408\", \"05103556\", \"06436708\", \"08497523\", \"06609182\", \"06820056\", \"06437781\", \"06905066\", \"13603216\", \"05128718\"]}");
	add("13604233", "{\"term\":\"quire\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13604233\"]}");
	add("13604340", "{\"term\":\"ream\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13604340\", \"13799310\"]}");
	add("13604475", "{\"term\":\"solubility\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"05217489\", \"05222751\", \"13604475\"]}");
	add("13604681", "{\"term\":\"toxicity\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04798152\", \"13604681\"]}");
	add("13604814", "{\"term\":\"cytotoxicity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13604814\"]}");
	add("13604927", "{\"term\":\"unit\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00003553\", \"09488589\", \"05878479\", \"08206589\", \"13832535\", \"13604927\"]}");
	add("13604927", "{\"term\":\"unit of measurement\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13604927\"]}");
	add("13605849", "{\"term\":\"measuring block\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13605849\"]}");
	add("13605849", "{\"term\":\"measuring unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13605849\"]}");
	add("13605949", "{\"term\":\"denier\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10022945\", \"13410532\", \"13605949\"]}");
	add("13606121", "{\"term\":\"diopter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13606121\"]}");
	add("13606121", "{\"term\":\"dioptre\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13606121\"]}");
	add("13606330", "{\"term\":\"carat\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13606330\", \"13745687\"]}");
	add("13606330", "{\"term\":\"karat\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13606330\"]}");
	add("13606330", "{\"term\":\"kt\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13606330\"]}");
	add("13606512", "{\"term\":\"decimal\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13606512\", \"13758337\"]}");
	add("13606632", "{\"term\":\"constant\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13606632\", \"05867520\"]}");
	add("13607022", "{\"term\":\"avogadro\u0027s number\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13607022\"]}");
	add("13607022", "{\"term\":\"avogadro number\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13607022\"]}");
	add("13607200", "{\"term\":\"boltzmann\u0027s constant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13607200\"]}");
	add("13607325", "{\"term\":\"coefficient\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13607325\"]}");
	add("13607658", "{\"term\":\"absorptance\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13607658\"]}");
	add("13607658", "{\"term\":\"absorption coefficient\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13607658\"]}");
	add("13607658", "{\"term\":\"coefficient of absorption\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13607658\"]}");
	add("13608034", "{\"term\":\"coefficient of drag\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13608034\"]}");
	add("13608034", "{\"term\":\"drag coefficient\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13608034\"]}");
	add("13608233", "{\"term\":\"coefficient of friction\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13608233\"]}");
	add("13608439", "{\"term\":\"coefficient of mutual induction\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13608439\"]}");
	add("13608439", "{\"term\":\"mutual inductance\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13608439\"]}");
	add("13608728", "{\"term\":\"coefficient of self induction\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13608728\"]}");
	add("13608728", "{\"term\":\"self-inductance\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13608728\"]}");
	add("13608966", "{\"term\":\"modulus\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13608966\", \"13752487\", \"13757762\"]}");
	add("13609166", "{\"term\":\"coefficient of elasticity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13609166\"]}");
	add("13609166", "{\"term\":\"elastic modulus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13609166\"]}");
	add("13609166", "{\"term\":\"modulus of elasticity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13609166\"]}");
	add("13609436", "{\"term\":\"bulk modulus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13609436\"]}");
	add("13609584", "{\"term\":\"modulus of rigidity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13609584\"]}");
	add("13609700", "{\"term\":\"young\u0027s modulus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13609700\"]}");
	add("13609828", "{\"term\":\"coefficient of expansion\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13609828\"]}");
	add("13609828", "{\"term\":\"expansivity\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04658366\", \"04736968\", \"13609828\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }