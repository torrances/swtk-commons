package org.swtk.commons.dict.wordnet.byid.generated.p0.p8;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexById0844 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("08440014", "{\"term\":\"savings bank\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04146942\", \"08440014\"]}");
	add("08440255", "{\"term\":\"home loan bank\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08440255\"]}");
	add("08440447", "{\"term\":\"federal home loan bank system\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08440447\"]}");
	add("08440591", "{\"term\":\"federal housing administration\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08440591\"]}");
	add("08440591", "{\"term\":\"fha\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08440591\"]}");
	add("08440797", "{\"term\":\"child welfare agency\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08440797\"]}");
	add("08440797", "{\"term\":\"child welfare service\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08440797\"]}");
	add("08441001", "{\"term\":\"sec\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08441001\", \"13810902\", \"15259923\"]}");
	add("08441001", "{\"term\":\"securities and exchange commission\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08441001\"]}");
	add("08441179", "{\"term\":\"trust company\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08441179\"]}");
	add("08441179", "{\"term\":\"trust corporation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08441179\"]}");
	add("08441458", "{\"term\":\"msb\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08441458\"]}");
	add("08441458", "{\"term\":\"mutual savings bank\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08441458\"]}");
	add("08441619", "{\"term\":\"federal savings bank\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08441619\"]}");
	add("08441619", "{\"term\":\"fsb\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08441619\", \"08502608\"]}");
	add("08441726", "{\"term\":\"firing party\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08441726\"]}");
	add("08441726", "{\"term\":\"firing squad\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08441726\"]}");
	add("08441908", "{\"term\":\"market\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"03727779\", \"08089673\", \"03466317\", \"08441908\", \"01099197\"]}");
	add("08442130", "{\"term\":\"black market\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01099644\", \"08442130\"]}");
	add("08442260", "{\"term\":\"traffic\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00041542\", \"07294158\", \"01115977\", \"08442260\"]}");
	add("08442513", "{\"term\":\"air traffic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08442513\"]}");
	add("08442614", "{\"term\":\"commuter traffic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08442614\"]}");
	add("08442734", "{\"term\":\"foot traffic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08442734\"]}");
	add("08442734", "{\"term\":\"pedestrian traffic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08442734\"]}");
	add("08442845", "{\"term\":\"vehicle traffic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08442845\"]}");
	add("08442845", "{\"term\":\"vehicular traffic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08442845\"]}");
	add("08443068", "{\"term\":\"automobile traffic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08443068\"]}");
	add("08443068", "{\"term\":\"car traffic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08443068\"]}");
	add("08443168", "{\"term\":\"bicycle traffic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08443168\"]}");
	add("08443255", "{\"term\":\"bus traffic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08443255\"]}");
	add("08443335", "{\"term\":\"truck traffic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08443335\"]}");
	add("08443418", "{\"term\":\"formation\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00929331\", \"13504691\", \"03389963\", \"09310874\", \"00237945\", \"00927021\", \"08443418\"]}");
	add("08443773", "{\"term\":\"military formation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08443773\"]}");
	add("08443950", "{\"term\":\"open order\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08443950\"]}");
	add("08444120", "{\"term\":\"close order\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08444120\"]}");
	add("08444239", "{\"term\":\"extended order\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08444239\"]}");
	add("08444410", "{\"term\":\"sick call\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08444410\"]}");
	add("08444410", "{\"term\":\"sick parade\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08444410\"]}");
	add("08444586", "{\"term\":\"caravan\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04527677\", \"08444586\"]}");
	add("08444586", "{\"term\":\"train\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"03436655\", \"04475711\", \"07309535\", \"08444586\", \"08476659\", \"04475240\"]}");
	add("08444586", "{\"term\":\"wagon train\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08444586\"]}");
	add("08444875", "{\"term\":\"cavalcade\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08444875\"]}");
	add("08444976", "{\"term\":\"march\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"06713607\", \"07072336\", \"08530235\", \"08444976\", \"00283684\", \"00291423\", \"15235666\"]}");
	add("08445209", "{\"term\":\"hunger march\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08445209\"]}");
	add("08445340", "{\"term\":\"motorcade\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08445340\"]}");
	add("08445442", "{\"term\":\"parade\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00522141\", \"08477406\", \"08445442\"]}");
	add("08445580", "{\"term\":\"callathump\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07068162\", \"08445580\"]}");
	add("08445580", "{\"term\":\"callithump\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07068162\", \"08445580\"]}");
	add("08445580", "{\"term\":\"callithump parade\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08445580\"]}");
	add("08445713", "{\"term\":\"file\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03341784\", \"03342085\", \"08445713\", \"06520807\"]}");
	add("08445713", "{\"term\":\"indian file\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08445713\"]}");
	add("08445713", "{\"term\":\"single file\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08445713\"]}");
	add("08445901", "{\"term\":\"snake dance\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00543878\", \"08445901\"]}");
	add("08446009", "{\"term\":\"column\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"05593649\", \"06279010\", \"03077981\", \"03078384\", \"06279220\", \"13923115\", \"08450585\", \"03078578\", \"08446009\"]}");
	add("08446124", "{\"term\":\"cortege\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08446124\", \"08446439\"]}");
	add("08446124", "{\"term\":\"entourage\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08446124\"]}");
	add("08446124", "{\"term\":\"retinue\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08446124\"]}");
	add("08446124", "{\"term\":\"suite\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"08023976\", \"08446124\", \"04358628\", \"07061069\"]}");
	add("08446303", "{\"term\":\"praetorian guard\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08446303\", \"10482825\"]}");
	add("08446439", "{\"term\":\"cortege\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08446124\", \"08446439\"]}");
	add("08446513", "{\"term\":\"recession\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00058306\", \"01252578\", \"08446513\", \"13895060\", \"14036839\"]}");
	add("08446513", "{\"term\":\"recessional\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07050978\", \"08446513\"]}");
	add("08446701", "{\"term\":\"backfield\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08446701\"]}");
	add("08446856", "{\"term\":\"secondary\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04171063\", \"08446856\"]}");
	add("08447011", "{\"term\":\"linemen\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08447011\"]}");
	add("08447160", "{\"term\":\"line\", \"synsetCount\":30, \"upperType\":\"NOUN\", \"ids\":[\"04014761\", \"05756783\", \"06638793\", \"07026095\", \"07041860\", \"13400586\", \"13735108\", \"03676799\", \"03676994\", \"06270774\", \"08611480\", \"00583425\", \"03676175\", \"08118903\", \"01206784\", \"04409192\", \"03676598\", \"03952601\", \"13928798\", \"08610818\", \"08393816\", \"02937552\", \"05781046\", \"08611842\", \"11495037\", \"07025650\", \"13886392\", \"08447160\", \"06812755\", \"08447525\"]}");
	add("08447525", "{\"term\":\"line\", \"synsetCount\":30, \"upperType\":\"NOUN\", \"ids\":[\"04014761\", \"05756783\", \"06638793\", \"07026095\", \"07041860\", \"13400586\", \"13735108\", \"03676799\", \"03676994\", \"06270774\", \"08611480\", \"00583425\", \"03676175\", \"08118903\", \"01206784\", \"04409192\", \"03676598\", \"03952601\", \"13928798\", \"08610818\", \"08393816\", \"02937552\", \"05781046\", \"08611842\", \"11495037\", \"07025650\", \"13886392\", \"08447160\", \"06812755\", \"08447525\"]}");
	add("08447897", "{\"term\":\"line of march\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08447897\", \"08612855\"]}");
	add("08448005", "{\"term\":\"line of succession\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08448005\"]}");
	add("08448162", "{\"term\":\"identity parade\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08448162\"]}");
	add("08448162", "{\"term\":\"lineup\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06497868\", \"08448162\", \"06497998\"]}");
	add("08448162", "{\"term\":\"police lineup\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08448162\"]}");
	add("08448355", "{\"term\":\"picket line\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08448355\"]}");
	add("08448447", "{\"term\":\"row\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00446336\", \"05052831\", \"08450457\", \"03124680\", \"09440243\", \"07198809\", \"08448447\"]}");
	add("08448610", "{\"term\":\"serration\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04181766\", \"08448610\", \"14592202\"]}");
	add("08448731", "{\"term\":\"terrace\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08448731\", \"09479337\", \"03905846\"]}");
	add("08448952", "{\"term\":\"rank\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"08417922\", \"13970595\", \"08415136\", \"14453411\", \"08448952\"]}");
	add("08449159", "{\"term\":\"conga line\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08449159\"]}");
	add("08449274", "{\"term\":\"trap line\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08449274\"]}");
	add("08449355", "{\"term\":\"queue\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"05267306\", \"06506807\", \"08449355\"]}");
	add("08449355", "{\"term\":\"waiting line\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08449355\"]}");
	add("08449616", "{\"term\":\"bread line\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08449616\"]}");
	add("08449616", "{\"term\":\"breadline\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08449616\"]}");
	add("08449724", "{\"term\":\"checkout line\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08449724\"]}");
	add("08449830", "{\"term\":\"chow line\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08449830\"]}");
	add("08449984", "{\"term\":\"gas line\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03406415\", \"03428876\", \"08449984\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }