package org.swtk.commons.dict.wordnet.byid.generated.p1.p3;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexById1326 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("13260075", "{\"term\":\"madagascar jasmine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13260075\"]}");
	add("13260075", "{\"term\":\"stephanotis floribunda\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13260075\"]}");
	add("13260075", "{\"term\":\"waxflower\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"12279402\", \"12386703\", \"13260075\"]}");
	add("13260369", "{\"term\":\"genus vincetoxicum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13260369\"]}");
	add("13260369", "{\"term\":\"vincetoxicum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13260369\"]}");
	add("13260634", "{\"term\":\"negro vine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13260634\"]}");
	add("13260634", "{\"term\":\"vincetoxicum hirsutum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13260634\"]}");
	add("13260634", "{\"term\":\"vincetoxicum negrum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13260634\"]}");
	add("13260819", "{\"term\":\"zygospore\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13260819\"]}");
	add("13260923", "{\"term\":\"old growth\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13260923\"]}");
	add("13260923", "{\"term\":\"virgin forest\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13260923\"]}");
	add("13261101", "{\"term\":\"second growth\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13261101\"]}");
	add("13261260", "{\"term\":\"tree of knowledge\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13261260\"]}");
	add("13261412", "{\"term\":\"ownership\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"14503072\", \"00811126\", \"13261412\"]}");
	add("13261737", "{\"term\":\"community\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"07957969\", \"08571072\", \"13994829\", \"08241195\", \"13261737\", \"07961512\", \"08240723\"]}");
	add("13261869", "{\"term\":\"severalty\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13261869\", \"14437907\"]}");
	add("13261955", "{\"term\":\"property right\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13261955\"]}");
	add("13262080", "{\"term\":\"preemptive right\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13262080\"]}");
	add("13262305", "{\"term\":\"subscription right\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13262305\"]}");
	add("13262498", "{\"term\":\"option\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00162063\", \"05798949\", \"13262498\"]}");
	add("13262838", "{\"term\":\"stock option\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13262838\", \"13263137\"]}");
	add("13263137", "{\"term\":\"stock option\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13262838\", \"13263137\"]}");
	add("13263308", "{\"term\":\"call option\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00081563\", \"13263308\"]}");
	add("13263382", "{\"term\":\"put option\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00081788\", \"13263382\"]}");
	add("13263456", "{\"term\":\"lock-up option\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13263456\"]}");
	add("13263617", "{\"term\":\"land tenure\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13263617\"]}");
	add("13263617", "{\"term\":\"tenure\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13263617\", \"15316734\"]}");
	add("13263821", "{\"term\":\"copyhold\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13263821\"]}");
	add("13264032", "{\"term\":\"freehold\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13264032\", \"13264159\"]}");
	add("13264159", "{\"term\":\"freehold\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13264032\", \"13264159\"]}");
	add("13264272", "{\"term\":\"villeinage\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13264272\", \"13976275\"]}");
	add("13264364", "{\"term\":\"stock buyback\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13264364\"]}");
	add("13264566", "{\"term\":\"public domain\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13264566\"]}");
	add("13264678", "{\"term\":\"proprietary\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13264678\"]}");
	add("13264678", "{\"term\":\"proprietorship\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13264678\"]}");
	add("13264889", "{\"term\":\"employee ownership\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13264889\"]}");
	add("13265007", "{\"term\":\"belongings\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13265007\"]}");
	add("13265007", "{\"term\":\"holding\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13265007\", \"00812259\"]}");
	add("13265007", "{\"term\":\"property\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"04018636\", \"05857567\", \"08530790\", \"04923519\", \"13265007\"]}");
	add("13265650", "{\"term\":\"material possession\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13265650\"]}");
	add("13265650", "{\"term\":\"tangible possession\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13265650\"]}");
	add("13265778", "{\"term\":\"worldly belongings\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13265778\"]}");
	add("13265778", "{\"term\":\"worldly goods\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13265778\"]}");
	add("13265778", "{\"term\":\"worldly possessions\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13265778\"]}");
	add("13265975", "{\"term\":\"ratables\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13265975\"]}");
	add("13265975", "{\"term\":\"rateables\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13265975\"]}");
	add("13266116", "{\"term\":\"hereditament\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13266116\"]}");
	add("13266237", "{\"term\":\"intellectual property\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13266237\"]}");
	add("13266403", "{\"term\":\"community property\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13266403\"]}");
	add("13266525", "{\"term\":\"personal estate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13266525\"]}");
	add("13266525", "{\"term\":\"personal property\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13266525\"]}");
	add("13266525", "{\"term\":\"personalty\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13266525\"]}");
	add("13266525", "{\"term\":\"private property\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13266525\"]}");
	add("13266745", "{\"term\":\"chattel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13266745\"]}");
	add("13266745", "{\"term\":\"movable\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13266745\"]}");
	add("13266745", "{\"term\":\"personal chattel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13266745\"]}");
	add("13266978", "{\"term\":\"effects\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13266978\"]}");
	add("13266978", "{\"term\":\"personal effects\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13266978\"]}");
	add("13267231", "{\"term\":\"things\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13267231\"]}");
	add("13267374", "{\"term\":\"immovable\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13267374\"]}");
	add("13267374", "{\"term\":\"real estate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13267374\"]}");
	add("13267374", "{\"term\":\"real property\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13267374\"]}");
	add("13267374", "{\"term\":\"realty\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13267374\"]}");
	add("13267561", "{\"term\":\"acres\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13267561\"]}");
	add("13267561", "{\"term\":\"demesne\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08574028\", \"13267561\"]}");
	add("13267561", "{\"term\":\"estate\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08184264\", \"13267561\", \"13271829\"]}");
	add("13267561", "{\"term\":\"land\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"00454755\", \"11135548\", \"08185877\", \"08183451\", \"13267561\", \"14538407\", \"08562388\", \"09357302\", \"08574028\", \"09358146\", \"13270947\"]}");
	add("13267561", "{\"term\":\"landed estate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13267561\"]}");
	add("13268048", "{\"term\":\"commonage\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13268048\"]}");
	add("13268127", "{\"term\":\"glebe\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13268127\"]}");
	add("13268257", "{\"term\":\"landholding\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13268257\", \"13268344\"]}");
	add("13268344", "{\"term\":\"landholding\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13268257\", \"13268344\"]}");
	add("13268453", "{\"term\":\"salvage\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00097031\", \"00097163\", \"13268453\"]}");
	add("13268611", "{\"term\":\"shareholding\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13268611\"]}");
	add("13268717", "{\"term\":\"church property\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13268717\"]}");
	add("13268717", "{\"term\":\"spirituality\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04628671\", \"13268717\"]}");
	add("13268717", "{\"term\":\"spiritualty\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13268717\"]}");
	add("13268880", "{\"term\":\"temporality\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13268880\"]}");
	add("13268880", "{\"term\":\"temporalty\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08170001\", \"13268880\"]}");
	add("13268986", "{\"term\":\"benefice\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13268986\"]}");
	add("13268986", "{\"term\":\"ecclesiastical benefice\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13268986\"]}");
	add("13269173", "{\"term\":\"sinecure\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00605343\", \"13269173\"]}");
	add("13269292", "{\"term\":\"lease\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"15299849\", \"06535123\", \"13269292\"]}");
	add("13269292", "{\"term\":\"letting\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13269292\"]}");
	add("13269292", "{\"term\":\"rental\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01113280\", \"13269292\"]}");
	add("13269497", "{\"term\":\"car rental\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13269497\"]}");
	add("13269497", "{\"term\":\"hire car\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13269497\"]}");
	add("13269497", "{\"term\":\"rent-a-car\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13269497\"]}");
	add("13269497", "{\"term\":\"self-drive\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13269497\"]}");
	add("13269497", "{\"term\":\"u-drive\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13269497\"]}");
	add("13269497", "{\"term\":\"you-drive\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13269497\"]}");
	add("13269691", "{\"term\":\"trade-in\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13269691\"]}");
	add("13269827", "{\"term\":\"sublease\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13269827\"]}");
	add("13269827", "{\"term\":\"sublet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13269827\"]}");
	add("13269961", "{\"term\":\"public property\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13269961\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }