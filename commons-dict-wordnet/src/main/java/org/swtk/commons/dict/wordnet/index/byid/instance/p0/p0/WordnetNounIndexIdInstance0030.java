package org.swtk.commons.dict.wordnet.index.byid.instance.p0.p0;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0030 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("00300043", "{\"term\":\"horseback riding\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00300043\", \"00451320\"]}");
	add("00300043", "{\"term\":\"riding\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00300043\", \"00451320\"]}");
	add("00300506", "{\"term\":\"roping\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00300506\"]}");
	add("00300652", "{\"term\":\"bronco busting\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00300652\"]}");
	add("00300759", "{\"term\":\"endurance riding\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00300759\"]}");
	add("00300863", "{\"term\":\"pack riding\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00300863\"]}");
	add("00300939", "{\"term\":\"trail riding\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00300939\"]}");
	add("00301032", "{\"term\":\"calf roping\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00301032\"]}");
	add("00301159", "{\"term\":\"steer roping\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00301159\"]}");
	add("00301267", "{\"term\":\"air\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00301267\", \"06265931\", \"07041860\", \"14866873\", \"08516085\", \"11451868\", \"04734472\", \"08670889\", \"14865437\"]}");
	add("00301267", "{\"term\":\"air travel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00301267\"]}");
	add("00301267", "{\"term\":\"aviation\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00301267\", \"05643033\", \"08084054\", \"08450737\"]}");
	add("00302018", "{\"term\":\"flight\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00302018\", \"08237541\", \"11501734\", \"05632993\", \"08237361\", \"00059563\", \"03367905\", \"00303220\", \"08237455\"]}");
	add("00302269", "{\"term\":\"connecting flight\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00302269\"]}");
	add("00302424", "{\"term\":\"direct flight\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00302424\"]}");
	add("00302554", "{\"term\":\"domestic flight\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00302554\"]}");
	add("00302683", "{\"term\":\"international flight\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00302683\"]}");
	add("00302827", "{\"term\":\"nonstop\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00302827\"]}");
	add("00302827", "{\"term\":\"nonstop flight\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00302827\"]}");
	add("00303011", "{\"term\":\"redeye\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00303011\"]}");
	add("00303011", "{\"term\":\"redeye flight\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00303011\"]}");
	add("00303220", "{\"term\":\"flight\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00302018\", \"08237541\", \"11501734\", \"05632993\", \"08237361\", \"00059563\", \"03367905\", \"00303220\", \"08237455\"]}");
	add("00303220", "{\"term\":\"flying\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00303220\"]}");
	add("00303687", "{\"term\":\"acrobatics\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00303687\", \"00435015\"]}");
	add("00303687", "{\"term\":\"aerobatics\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00303687\"]}");
	add("00303687", "{\"term\":\"stunt flying\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00303687\"]}");
	add("00303687", "{\"term\":\"stunting\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00303687\"]}");
	add("00303875", "{\"term\":\"blind flying\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00303875\"]}");
	add("00303875", "{\"term\":\"blind landing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00303875\"]}");
	add("00304047", "{\"term\":\"ballooning\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00304047\"]}");
	add("00304123", "{\"term\":\"fly-by\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00304123\"]}");
	add("00304123", "{\"term\":\"flyover\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00304123\", \"03871095\"]}");
	add("00304123", "{\"term\":\"flypast\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00304123\"]}");
	add("00304321", "{\"term\":\"glide\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00304321\", \"00329328\", \"07129117\"]}");
	add("00304321", "{\"term\":\"gliding\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00304321\"]}");
	add("00304321", "{\"term\":\"sailing\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00304321\", \"00058477\", \"00314632\", \"00315295\"]}");
	add("00304321", "{\"term\":\"sailplaning\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00304321\"]}");
	add("00304321", "{\"term\":\"soaring\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00304321\"]}");
	add("00304574", "{\"term\":\"hang gliding\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00304574\"]}");
	add("00304675", "{\"term\":\"jump\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00120388\", \"00304675\", \"00869035\", \"06630934\", \"07373585\", \"07428822\"]}");
	add("00304675", "{\"term\":\"parachuting\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00304675\"]}");
	add("00304866", "{\"term\":\"skydiving\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00304866\"]}");
	add("00305034", "{\"term\":\"maiden flight\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00305034\"]}");
	add("00305175", "{\"term\":\"paragliding\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00305175\"]}");
	add("00305175", "{\"term\":\"parasailing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00305175\"]}");
	add("00305268", "{\"term\":\"overflight\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00305268\"]}");
	add("00305418", "{\"term\":\"pass\", \"synsetCount\":16, \"upperType\":\"NOUN\", \"ids\":[\"00066395\", \"00106640\", \"00788715\", \"06531360\", \"06702971\", \"07191150\", \"07356460\", \"07433422\", \"13959972\", \"00305418\", \"06703153\", \"06703828\", \"09409735\", \"00561566\", \"15164512\", \"00128106\"]}");
	add("00305555", "{\"term\":\"solo\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00305555\", \"07054685\", \"01260098\"]}");
	add("00305677", "{\"term\":\"sortie\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00305677\", \"00973413\"]}");
	add("00305831", "{\"term\":\"touchdown\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00305831\", \"00189615\"]}");
	add("00305979", "{\"term\":\"aircraft landing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00305979\"]}");
	add("00305979", "{\"term\":\"airplane landing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00305979\"]}");
	add("00306152", "{\"term\":\"gca\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00306152\"]}");
	add("00306152", "{\"term\":\"ground-controlled approach\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00306152\"]}");
	add("00306345", "{\"term\":\"crash landing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00306345\"]}");
	add("00306533", "{\"term\":\"three-point landing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00306533\"]}");
	add("00306684", "{\"term\":\"instrument landing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00306684\"]}");
	add("00306806", "{\"term\":\"splashdown\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00306806\"]}");
	add("00306928", "{\"term\":\"takeoff\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00550647\", \"06793148\", \"07390235\", \"00306928\"]}");
	add("00307036", "{\"term\":\"spin\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00101823\", \"00307036\", \"00310366\", \"00344075\", \"07456888\"]}");
	add("00307036", "{\"term\":\"tailspin\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00307036\", \"14427446\"]}");
	add("00307144", "{\"term\":\"low level flight\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00307144\"]}");
	add("00307144", "{\"term\":\"terrain flight\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00307144\"]}");
	add("00307252", "{\"term\":\"journey\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00307252\"]}");
	add("00307252", "{\"term\":\"journeying\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00307252\"]}");
	add("00307726", "{\"term\":\"leg\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00307726\", \"00308002\", \"03659902\", \"03912225\", \"07671114\", \"13936864\", \"03660152\", \"05569140\", \"05568420\"]}");
	add("00307726", "{\"term\":\"stage\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"04304087\", \"08664141\", \"00307726\", \"04304236\", \"07019828\", \"04303700\", \"13962925\", \"15315573\"]}");
	add("00307928", "{\"term\":\"staging\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00092224\", \"00307928\", \"04148777\", \"07020287\"]}");
	add("00308002", "{\"term\":\"leg\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00307726\", \"00308002\", \"03659902\", \"03912225\", \"07671114\", \"13936864\", \"03660152\", \"05569140\", \"05568420\"]}");
	add("00308140", "{\"term\":\"fare-stage\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00308140\"]}");
	add("00308281", "{\"term\":\"commute\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00308281\"]}");
	add("00308457", "{\"term\":\"drive\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"00568081\", \"03247416\", \"03247921\", \"14058780\", \"00308457\", \"00318420\", \"00573526\", \"04842955\", \"03249091\", \"00799906\", \"03247698\", \"00104654\"]}");
	add("00308457", "{\"term\":\"ride\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04095909\", \"00308457\"]}");
	add("00308899", "{\"term\":\"long haul\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"15268162\", \"00308899\"]}");
	add("00309034", "{\"term\":\"mush\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00309034\", \"06788770\", \"07719078\", \"09423701\"]}");
	add("00309105", "{\"term\":\"odyssey\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06393816\", \"00309105\"]}");
	add("00309196", "{\"term\":\"trip\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00077383\", \"00287084\", \"04492482\", \"07303090\", \"07332119\", \"14401716\", \"00309196\"]}");
	add("00309507", "{\"term\":\"junket\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00309507\", \"00312635\", \"07627342\"]}");
	add("00309605", "{\"term\":\"round trip\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00309605\"]}");
	add("00309697", "{\"term\":\"run\", \"synsetCount\":16, \"upperType\":\"NOUN\", \"ids\":[\"00309837\", \"05052992\", \"07422377\", \"07457610\", \"07488069\", \"09438816\", \"13782269\", \"14019420\", \"15286931\", \"00294760\", \"00309697\", \"00559920\", \"08477596\", \"07475061\", \"00792739\", \"00190414\"]}");
	add("00309837", "{\"term\":\"run\", \"synsetCount\":16, \"upperType\":\"NOUN\", \"ids\":[\"00309837\", \"05052992\", \"07422377\", \"07457610\", \"07488069\", \"09438816\", \"13782269\", \"14019420\", \"15286931\", \"00294760\", \"00309697\", \"00559920\", \"08477596\", \"07475061\", \"00792739\", \"00190414\"]}");
	add("00309941", "{\"term\":\"passage\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"00318861\", \"07325260\", \"00867278\", \"05255524\", \"07058663\", \"00309941\", \"01129177\", \"03900990\", \"06411914\", \"00201907\"]}");
	add("00309941", "{\"term\":\"transit\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00309941\", \"04480667\", \"04426208\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }