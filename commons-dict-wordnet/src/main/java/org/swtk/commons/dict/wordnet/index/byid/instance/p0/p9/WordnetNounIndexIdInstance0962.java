package org.swtk.commons.dict.wordnet.index.byid.instance.p0.p9;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0962 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("09620058", "{\"term\":\"electra\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09620058\"]}");
	add("09620315", "{\"term\":\"laocoon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09620315\"]}");
	add("09620652", "{\"term\":\"laius\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09620652\"]}");
	add("09620802", "{\"term\":\"myrmidon\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09620802\", \"10363180\"]}");
	add("09620972", "{\"term\":\"king oedipus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09620972\"]}");
	add("09620972", "{\"term\":\"oedipus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09620972\"]}");
	add("09620972", "{\"term\":\"oedipus rex\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09620972\"]}");
	add("09621240", "{\"term\":\"tiresias\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09621240\"]}");
	add("09621444", "{\"term\":\"peleus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09621444\"]}");
	add("09621544", "{\"term\":\"don quixote\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10045986\", \"09621544\"]}");
	add("09621665", "{\"term\":\"el cid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09621665\"]}");
	add("09621772", "{\"term\":\"fagin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09621772\"]}");
	add("09621924", "{\"term\":\"falstaff\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09621924\"]}");
	add("09621924", "{\"term\":\"sir john falstaff\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09621924\"]}");
	add("09622062", "{\"term\":\"father brown\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09622062\"]}");
	add("09622197", "{\"term\":\"faust\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09622197\"]}");
	add("09622197", "{\"term\":\"faustus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09622197\"]}");
	add("09622369", "{\"term\":\"frankenstein\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"09622369\", \"09622575\", \"14031235\"]}");
	add("09622575", "{\"term\":\"frankenstein\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"09622369\", \"09622575\", \"14031235\"]}");
	add("09622575", "{\"term\":\"frankenstein\u0027s monster\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09622575\"]}");
	add("09622807", "{\"term\":\"goofy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09622807\"]}");
	add("09622902", "{\"term\":\"gulliver\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09622902\"]}");
	add("09623065", "{\"term\":\"hamlet\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08690476\", \"09623065\", \"08243899\"]}");
	add("09623205", "{\"term\":\"hector\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09623205\"]}");
	add("09623362", "{\"term\":\"helen\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09623362\"]}");
	add("09623362", "{\"term\":\"helen of troy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09623362\"]}");
	add("09623613", "{\"term\":\"captain horatio hornblower\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09623613\"]}");
	add("09623613", "{\"term\":\"horatio hornblower\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09623613\"]}");
	add("09623798", "{\"term\":\"iago\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09623798\"]}");
	add("09623938", "{\"term\":\"commissaire maigret\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09623938\"]}");
	add("09623938", "{\"term\":\"inspector maigret\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09623938\"]}");
	add("09624075", "{\"term\":\"kilroy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09624075\"]}");
	add("09624223", "{\"term\":\"king lear\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09624223\"]}");
	add("09624223", "{\"term\":\"lear\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09624223\", \"11142429\"]}");
	add("09624393", "{\"term\":\"leda\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09624393\"]}");
	add("09624603", "{\"term\":\"lilliputian\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09624603\", \"10282577\"]}");
	add("09624745", "{\"term\":\"marlowe\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09624745\", \"11177709\"]}");
	add("09624745", "{\"term\":\"philip marlowe\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09624745\"]}");
	add("09624943", "{\"term\":\"mephistopheles\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09624943\"]}");
	add("09625080", "{\"term\":\"micawber\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09625080\"]}");
	add("09625080", "{\"term\":\"wilkins micawber\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09625080\"]}");
	add("09625222", "{\"term\":\"mother goose\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09625222\"]}");
	add("09625336", "{\"term\":\"mr. moto\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09625336\"]}");
	add("09625432", "{\"term\":\"othello\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09625432\"]}");
	add("09625557", "{\"term\":\"pangloss\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09625557\"]}");
	add("09625658", "{\"term\":\"pantaloon\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03890251\", \"09625658\", \"09625784\"]}");
	add("09625784", "{\"term\":\"pantaloon\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03890251\", \"09625658\", \"09625784\"]}");
	add("09625890", "{\"term\":\"perry mason\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09625890\"]}");
	add("09626002", "{\"term\":\"peter pan\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09626002\", \"10439530\"]}");
	add("09626138", "{\"term\":\"pied piper\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09626138\", \"10452084\"]}");
	add("09626138", "{\"term\":\"pied piper of hamelin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09626138\"]}");
	add("09626294", "{\"term\":\"pierrot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09626294\"]}");
	add("09626432", "{\"term\":\"pluto\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"09418792\", \"09593643\", \"09626432\"]}");
	add("09626527", "{\"term\":\"huck finn\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09626527\"]}");
	add("09626527", "{\"term\":\"huckleberry finn\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09626527\"]}");
	add("09626645", "{\"term\":\"rip van winkle\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"09626645\", \"10551950\", \"10552036\"]}");
	add("09626841", "{\"term\":\"ruritanian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09626841\"]}");
	add("09626935", "{\"term\":\"tarzan\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09626935\", \"10711586\"]}");
	add("09626935", "{\"term\":\"tarzan of the apes\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09626935\"]}");
	add("09627093", "{\"term\":\"tom sawyer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09627093\"]}");
	add("09627188", "{\"term\":\"uncle remus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09627188\"]}");
	add("09627401", "{\"term\":\"uncle tom\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09627401\"]}");
	add("09627519", "{\"term\":\"uncle sam\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09627519\"]}");
	add("09627625", "{\"term\":\"holmes\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"11076794\", \"11076942\", \"11077071\", \"09627625\"]}");
	add("09627625", "{\"term\":\"sherlock holmes\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09627625\"]}");
	add("09627748", "{\"term\":\"simon legree\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09627748\", \"10629476\"]}");
	add("09627880", "{\"term\":\"sinbad\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09627880\"]}");
	add("09627880", "{\"term\":\"sinbad the sailor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09627880\"]}");
	add("09628042", "{\"term\":\"snoopy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09628042\"]}");
	add("09628155", "{\"term\":\"self\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09628155\", \"05683445\"]}");
	add("09628284", "{\"term\":\"number one\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13618687\", \"13868396\", \"09628284\"]}");
	add("09628463", "{\"term\":\"adult\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01323947\", \"09628463\"]}");
	add("09628463", "{\"term\":\"grownup\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09628463\"]}");
	add("09629201", "{\"term\":\"adventurer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10092496\", \"09629201\"]}");
	add("09629201", "{\"term\":\"venturer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09629201\", \"10767810\"]}");
	add("09629572", "{\"term\":\"anomalist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09629572\"]}");
	add("09629719", "{\"term\":\"anomaly\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08640338\", \"09629719\", \"14529423\"]}");
	add("09629719", "{\"term\":\"unusual person\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09629719\"]}");
	add("09629903", "{\"term\":\"anachronism\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"09629903\", \"02709895\", \"15205157\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }