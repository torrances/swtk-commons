package org.swtk.commons.dict.wordnet.index.byid.instance.p0.p9;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0953 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("09530105", "{\"term\":\"sun god\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09530105\"]}");
	add("09530229", "{\"term\":\"celtic deity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09530229\"]}");
	add("09530771", "{\"term\":\"amaethon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09530771\"]}");
	add("09530888", "{\"term\":\"ana\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08479975\", \"09530888\"]}");
	add("09531041", "{\"term\":\"aengus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09531041\"]}");
	add("09531041", "{\"term\":\"angus\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02408581\", \"09531041\"]}");
	add("09531041", "{\"term\":\"angus og\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09531041\"]}");
	add("09531041", "{\"term\":\"oengus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09531041\"]}");
	add("09531208", "{\"term\":\"arawn\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09531208\"]}");
	add("09531360", "{\"term\":\"arianrhod\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09531360\"]}");
	add("09531360", "{\"term\":\"arianrod\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09531360\"]}");
	add("09531500", "{\"term\":\"boann\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09531500\"]}");
	add("09531606", "{\"term\":\"brigit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09531606\"]}");
	add("09531798", "{\"term\":\"dagda\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09531798\"]}");
	add("09531941", "{\"term\":\"dana\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09531941\"]}");
	add("09531941", "{\"term\":\"danu\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09531941\"]}");
	add("09532107", "{\"term\":\"don\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"06351765\", \"09291684\", \"09532107\", \"10045020\", \"10484108\", \"10044920\"]}");
	add("09532251", "{\"term\":\"dylan\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09532251\", \"10967100\"]}");
	add("09532364", "{\"term\":\"epona\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09532364\"]}");
	add("09532507", "{\"term\":\"fomor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09532507\"]}");
	add("09532507", "{\"term\":\"fomorian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09532507\"]}");
	add("09532678", "{\"term\":\"gwydion\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09532678\"]}");
	add("09532810", "{\"term\":\"gwyn\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09532810\"]}");
	add("09532902", "{\"term\":\"ler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09532902\"]}");
	add("09532902", "{\"term\":\"lir\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09532902\"]}");
	add("09533043", "{\"term\":\"llew llaw gyffes\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09533043\"]}");
	add("09533205", "{\"term\":\"llud\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09533205\"]}");
	add("09533296", "{\"term\":\"llyr\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09533296\"]}");
	add("09533437", "{\"term\":\"lug\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"01939312\", \"03700942\", \"03701902\", \"09533437\"]}");
	add("09533437", "{\"term\":\"lugh\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09533437\"]}");
	add("09533551", "{\"term\":\"manannan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09533551\"]}");
	add("09533659", "{\"term\":\"manawydan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09533659\"]}");
	add("09533659", "{\"term\":\"manawyddan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09533659\"]}");
	add("09533775", "{\"term\":\"morrigan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09533775\"]}");
	add("09533775", "{\"term\":\"morrigu\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09533775\"]}");
	add("09533878", "{\"term\":\"tuatha de\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09533878\"]}");
	add("09533878", "{\"term\":\"tuatha de danann\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09533878\"]}");
	add("09534037", "{\"term\":\"egyptian deity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09534037\"]}");
	add("09534502", "{\"term\":\"amen\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09534502\"]}");
	add("09534502", "{\"term\":\"amon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09534502\"]}");
	add("09534502", "{\"term\":\"amun\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09534502\"]}");
	add("09534654", "{\"term\":\"amen-ra\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09534654\"]}");
	add("09534654", "{\"term\":\"amon-ra\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09534654\"]}");
	add("09534654", "{\"term\":\"amun ra\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09534654\"]}");
	add("09534847", "{\"term\":\"anpu\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09534847\"]}");
	add("09534847", "{\"term\":\"anubis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09534847\"]}");
	add("09535010", "{\"term\":\"aten\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09535010\"]}");
	add("09535010", "{\"term\":\"aton\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09535010\"]}");
	add("09535163", "{\"term\":\"bast\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"09535163\", \"13119721\", \"13120203\"]}");
	add("09535292", "{\"term\":\"geb\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09535292\"]}");
	add("09535292", "{\"term\":\"keb\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09535292\"]}");
	add("09535401", "{\"term\":\"horus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09535401\"]}");
	add("09535526", "{\"term\":\"isis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09535526\"]}");
	add("09535651", "{\"term\":\"khepera\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09535651\"]}");
	add("09535746", "{\"term\":\"min\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"09535746\", \"06943410\", \"15259561\"]}");
	add("09535827", "{\"term\":\"nephthys\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09535827\"]}");
	add("09535970", "{\"term\":\"nut\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"05532266\", \"09788499\", \"09994026\", \"13734697\", \"03841711\", \"09535970\", \"13157333\"]}");
	add("09536048", "{\"term\":\"osiris\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09536048\"]}");
	add("09536200", "{\"term\":\"ptah\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09536200\"]}");
	add("09536351", "{\"term\":\"ra\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08650766\", \"09536351\", \"14676100\"]}");
	add("09536351", "{\"term\":\"re\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06881495\", \"09536351\", \"14676569\"]}");
	add("09536565", "{\"term\":\"eye of ra\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09536565\"]}");
	add("09536565", "{\"term\":\"sekhet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09536565\"]}");
	add("09536704", "{\"term\":\"set\", \"synsetCount\":13, \"upperType\":\"NOUN\", \"ids\":[\"04183589\", \"05682428\", \"07378145\", \"09536704\", \"13512263\", \"15281228\", \"01054777\", \"06209437\", \"08257090\", \"04304614\", \"00626939\", \"08016141\", \"08013131\"]}");
	add("09536704", "{\"term\":\"seth\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09536704\", \"09610584\"]}");
	add("09536879", "{\"term\":\"thoth\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09536879\"]}");
	add("09537037", "{\"term\":\"semitic deity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09537037\"]}");
	add("09538162", "{\"term\":\"adad\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09538162\"]}");
	add("09538266", "{\"term\":\"adapa\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09538266\"]}");
	add("09538404", "{\"term\":\"anshar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09538404\"]}");
	add("09538608", "{\"term\":\"antum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09538608\"]}");
	add("09538705", "{\"term\":\"anu\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09538705\"]}");
	add("09538847", "{\"term\":\"anunnaki\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09538847\"]}");
	add("09538847", "{\"term\":\"enuki\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09538847\"]}");
	add("09539012", "{\"term\":\"apsu\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09539012\"]}");
	add("09539123", "{\"term\":\"aruru\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09539123\"]}");
	add("09539281", "{\"term\":\"ashir\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09539281\"]}");
	add("09539281", "{\"term\":\"ashur\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08939014\", \"09539281\"]}");
	add("09539458", "{\"term\":\"ashtoreth\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09539458\"]}");
	add("09539458", "{\"term\":\"astarte\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09539458\"]}");
	add("09539633", "{\"term\":\"ishtar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09539633\"]}");
	add("09539633", "{\"term\":\"mylitta\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09539633\"]}");
	add("09539835", "{\"term\":\"baal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09539835\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }