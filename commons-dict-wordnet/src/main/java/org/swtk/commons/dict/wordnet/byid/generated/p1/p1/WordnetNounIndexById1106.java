package org.swtk.commons.dict.wordnet.byid.generated.p1.p1;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexById1106 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("11060020", "{\"term\":\"hendrix\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11060020\"]}");
	add("11060020", "{\"term\":\"james marshall hendrix\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11060020\"]}");
	add("11060020", "{\"term\":\"jimi hendrix\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11060020\"]}");
	add("11060236", "{\"term\":\"henry\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"11060236\", \"11060377\", \"11060592\", \"13660884\"]}");
	add("11060236", "{\"term\":\"joseph henry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11060236\"]}");
	add("11060377", "{\"term\":\"henry\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"11060236\", \"11060377\", \"11060592\", \"13660884\"]}");
	add("11060377", "{\"term\":\"patrick henry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11060377\"]}");
	add("11060592", "{\"term\":\"henry\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"11060236\", \"11060377\", \"11060592\", \"13660884\"]}");
	add("11060592", "{\"term\":\"william henry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11060592\"]}");
	add("11060796", "{\"term\":\"henry beauclerc\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11060796\"]}");
	add("11060796", "{\"term\":\"henry i\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11060796\"]}");
	add("11060981", "{\"term\":\"henry ii\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11060981\", \"11061232\"]}");
	add("11061232", "{\"term\":\"henry ii\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11060981\", \"11061232\"]}");
	add("11061443", "{\"term\":\"henry iii\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11061443\", \"11061656\"]}");
	add("11061656", "{\"term\":\"henry iii\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11061443\", \"11061656\"]}");
	add("11061810", "{\"term\":\"bolingbroke\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11061810\"]}");
	add("11061810", "{\"term\":\"henry bolingbroke\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11061810\"]}");
	add("11061810", "{\"term\":\"henry iv\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"11061810\", \"11062032\", \"11062161\"]}");
	add("11062032", "{\"term\":\"henry iv\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"11061810\", \"11062032\", \"11062161\"]}");
	add("11062161", "{\"term\":\"henry iv\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"11061810\", \"11062032\", \"11062161\"]}");
	add("11062161", "{\"term\":\"henry of navarre\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11062161\"]}");
	add("11062161", "{\"term\":\"henry the great\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11062161\"]}");
	add("11062477", "{\"term\":\"henry v\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11062477\"]}");
	add("11062686", "{\"term\":\"henry vi\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11062686\"]}");
	add("11063035", "{\"term\":\"henry tudor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11063035\"]}");
	add("11063035", "{\"term\":\"henry vii\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11063035\", \"11063384\"]}");
	add("11063384", "{\"term\":\"henry vii\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11063035\", \"11063384\"]}");
	add("11063514", "{\"term\":\"henry viii\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11063514\"]}");
	add("11063831", "{\"term\":\"henson\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11063831\"]}");
	add("11063831", "{\"term\":\"jim henson\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11063831\"]}");
	add("11063975", "{\"term\":\"hepburn\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11063975\"]}");
	add("11063975", "{\"term\":\"katharine hepburn\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11063975\"]}");
	add("11063975", "{\"term\":\"katharine houghton hepburn\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11063975\"]}");
	add("11064163", "{\"term\":\"barbara hepworth\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11064163\"]}");
	add("11064163", "{\"term\":\"dame barbara hepworth\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11064163\"]}");
	add("11064163", "{\"term\":\"hepworth\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11064163\"]}");
	add("11064290", "{\"term\":\"heraclitus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11064290\"]}");
	add("11064512", "{\"term\":\"herbart\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11064512\"]}");
	add("11064512", "{\"term\":\"johann friedrich herbart\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11064512\"]}");
	add("11064624", "{\"term\":\"herbert\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11064624\"]}");
	add("11064624", "{\"term\":\"victor herbert\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11064624\"]}");
	add("11064784", "{\"term\":\"herder\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10191239\", \"11064784\"]}");
	add("11064784", "{\"term\":\"johann gottfried von herder\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11064784\"]}");
	add("11064934", "{\"term\":\"herman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11064934\"]}");
	add("11064934", "{\"term\":\"woodrow charles herman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11064934\"]}");
	add("11064934", "{\"term\":\"woody herman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11064934\"]}");
	add("11065101", "{\"term\":\"hero\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"07713570\", \"09577426\", \"10192757\", \"11065101\", \"09925991\", \"05938456\", \"10344679\"]}");
	add("11065101", "{\"term\":\"hero of alexandria\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11065101\"]}");
	add("11065101", "{\"term\":\"heron\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02010695\", \"11065101\"]}");
	add("11065348", "{\"term\":\"herod\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11065348\"]}");
	add("11065348", "{\"term\":\"herod the great\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11065348\"]}");
	add("11065564", "{\"term\":\"herodotus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11065564\"]}");
	add("11065791", "{\"term\":\"herrick\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11065791\"]}");
	add("11065791", "{\"term\":\"robert herrick\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11065791\"]}");
	add("11065893", "{\"term\":\"herschel\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11065893\", \"11066164\"]}");
	add("11065893", "{\"term\":\"sir frederick william herschel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11065893\"]}");
	add("11065893", "{\"term\":\"sir william herschel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11065893\"]}");
	add("11065893", "{\"term\":\"william herschel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11065893\"]}");
	add("11066164", "{\"term\":\"herschel\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11065893\", \"11066164\"]}");
	add("11066164", "{\"term\":\"john herschel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11066164\"]}");
	add("11066164", "{\"term\":\"sir john frederick william herschel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11066164\"]}");
	add("11066164", "{\"term\":\"sir john herschel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11066164\"]}");
	add("11066452", "{\"term\":\"hershey\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09158595\", \"11066452\"]}");
	add("11066452", "{\"term\":\"milton snavely hershey\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11066452\"]}");
	add("11066717", "{\"term\":\"gustav hertz\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11066717\"]}");
	add("11066717", "{\"term\":\"gustav ludwig hertz\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11066717\"]}");
	add("11066717", "{\"term\":\"hertz\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"11066717\", \"11066929\", \"15304090\"]}");
	add("11066929", "{\"term\":\"heinrich hertz\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11066929\"]}");
	add("11066929", "{\"term\":\"heinrich rudolph hertz\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11066929\"]}");
	add("11066929", "{\"term\":\"hertz\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"11066717\", \"11066929\", \"15304090\"]}");
	add("11067134", "{\"term\":\"gerhard herzberg\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11067134\"]}");
	add("11067134", "{\"term\":\"herzberg\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11067134\"]}");
	add("11067328", "{\"term\":\"hesiod\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11067328\"]}");
	add("11067516", "{\"term\":\"hess\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"11067516\", \"11067696\", \"11067956\", \"11068104\"]}");
	add("11067516", "{\"term\":\"victor franz hess\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11067516\"]}");
	add("11067516", "{\"term\":\"victor hess\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11067516\"]}");
	add("11067696", "{\"term\":\"hess\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"11067516\", \"11067696\", \"11067956\", \"11068104\"]}");
	add("11067696", "{\"term\":\"rudolf hess\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11067696\"]}");
	add("11067696", "{\"term\":\"walther richard rudolf hess\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11067696\"]}");
	add("11067956", "{\"term\":\"hess\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"11067516\", \"11067696\", \"11067956\", \"11068104\"]}");
	add("11067956", "{\"term\":\"walter hess\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11067956\"]}");
	add("11067956", "{\"term\":\"walter rudolf hess\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11067956\"]}");
	add("11068104", "{\"term\":\"dame myra hess\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11068104\"]}");
	add("11068104", "{\"term\":\"hess\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"11067516\", \"11067696\", \"11067956\", \"11068104\"]}");
	add("11068200", "{\"term\":\"hermann hesse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11068200\"]}");
	add("11068200", "{\"term\":\"hesse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11068200\"]}");
	add("11068384", "{\"term\":\"george charles hevesy de hevesy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11068384\"]}");
	add("11068384", "{\"term\":\"hevesy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11068384\"]}");
	add("11068581", "{\"term\":\"heyerdahl\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11068581\"]}");
	add("11068581", "{\"term\":\"thor hyerdahl\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11068581\"]}");
	add("11068734", "{\"term\":\"heyrovsky\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11068734\"]}");
	add("11068734", "{\"term\":\"joroslav heyrovsky\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11068734\"]}");
	add("11068874", "{\"term\":\"heyse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11068874\"]}");
	add("11068874", "{\"term\":\"paul heyse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11068874\"]}");
	add("11068874", "{\"term\":\"paul johann ludwig von heyse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11068874\"]}");
	add("11068996", "{\"term\":\"dubois heyward\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11068996\"]}");
	add("11068996", "{\"term\":\"edwin dubois hayward\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11068996\"]}");
	add("11068996", "{\"term\":\"heyward\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11068996\"]}");
	add("11069123", "{\"term\":\"ezekias\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11069123\"]}");
	add("11069123", "{\"term\":\"hezekiah\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11069123\"]}");
	add("11069273", "{\"term\":\"hiawatha\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11069273\"]}");
	add("11069438", "{\"term\":\"hickock\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11069438\"]}");
	add("11069438", "{\"term\":\"james butler hickock\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11069438\"]}");
	add("11069438", "{\"term\":\"wild bill hickock\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11069438\"]}");
	add("11069603", "{\"term\":\"higginson\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11069603\"]}");
	add("11069603", "{\"term\":\"thomas higginson\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11069603\"]}");
	add("11069603", "{\"term\":\"thomas wentworth storrow higginson\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11069603\"]}");
	add("11069830", "{\"term\":\"david hilbert\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11069830\"]}");
	add("11069830", "{\"term\":\"hilbert\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11069830\"]}");
	add("11069933", "{\"term\":\"alfred hawthorne\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11069933\"]}");
	add("11069933", "{\"term\":\"benny hill\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11069933\"]}");
	add("11069933", "{\"term\":\"hill\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"03797867\", \"11069933\", \"11070052\", \"03797581\", \"09325914\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }