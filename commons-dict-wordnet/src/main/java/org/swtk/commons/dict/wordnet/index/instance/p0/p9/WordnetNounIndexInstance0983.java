package org.swtk.commons.dict.wordnet.index.instance.p0.p9;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexInstance0983 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("09830038", "{\"term\":\"arrowsmith\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09830038\"]}");
	add("09830112", "{\"term\":\"arsonist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09830112\"]}");
	add("09830112", "{\"term\":\"firebug\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02247763\", \"09830112\"]}");
	add("09830112", "{\"term\":\"incendiary\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03571171\", \"09830112\"]}");
	add("09830272", "{\"term\":\"art critic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09830272\"]}");
	add("09830388", "{\"term\":\"art dealer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09830388\"]}");
	add("09830517", "{\"term\":\"art director\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09830517\"]}");
	add("09830686", "{\"term\":\"art editor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09830686\"]}");
	add("09830819", "{\"term\":\"art historian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09830819\"]}");
	add("09830973", "{\"term\":\"arthritic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09830973\"]}");
	add("09831117", "{\"term\":\"articulator\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05308891\", \"09831117\"]}");
	add("09831257", "{\"term\":\"artilleryman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09831257\"]}");
	add("09831257", "{\"term\":\"cannoneer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09831257\"]}");
	add("09831257", "{\"term\":\"gunner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09831257\"]}");
	add("09831257", "{\"term\":\"machine gunner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09831257\"]}");
	add("09831473", "{\"term\":\"illustrator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09831473\"]}");
	add("09831743", "{\"term\":\"artist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09831743\"]}");
	add("09831743", "{\"term\":\"creative person\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09831743\"]}");
	add("09832531", "{\"term\":\"artiste\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09832531\"]}");
	add("09832624", "{\"term\":\"artist\u0027s model\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09832624\"]}");
	add("09832624", "{\"term\":\"sitter\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"01795596\", \"09832624\", \"09848551\", \"10623367\", \"11323517\"]}");
	add("09832756", "{\"term\":\"art student\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09832756\"]}");
	add("09832846", "{\"term\":\"art teacher\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09832846\"]}");
	add("09832927", "{\"term\":\"ascender\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06813390\", \"06843611\", \"09832927\"]}");
	add("09833037", "{\"term\":\"ass\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00847651\", \"02391998\", \"09833037\", \"05566889\"]}");
	add("09833101", "{\"term\":\"assassin\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09833489\", \"09833101\"]}");
	add("09833101", "{\"term\":\"assassinator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09833101\"]}");
	add("09833101", "{\"term\":\"bravo\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06705579\", \"09833101\"]}");
	add("09833489", "{\"term\":\"assassin\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09833489\", \"09833101\"]}");
	add("09833657", "{\"term\":\"assayer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09833657\"]}");
	add("09833786", "{\"term\":\"assemblyman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09833786\"]}");
	add("09833893", "{\"term\":\"assemblywoman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09833893\"]}");
	add("09833972", "{\"term\":\"assenter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09833972\"]}");
	add("09834065", "{\"term\":\"affirmer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09834065\"]}");
	add("09834065", "{\"term\":\"asserter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09834065\"]}");
	add("09834065", "{\"term\":\"asseverator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09834065\"]}");
	add("09834065", "{\"term\":\"avower\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09834065\", \"09846100\"]}");
	add("09834065", "{\"term\":\"declarer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09834065\", \"09980491\"]}");
	add("09834481", "{\"term\":\"assessee\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09834481\"]}");
	add("09834593", "{\"term\":\"asshole\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05545848\", \"09834593\"]}");
	add("09834593", "{\"term\":\"bastard\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02807938\", \"09862211\", \"09834593\"]}");
	add("09834593", "{\"term\":\"cocksucker\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09834593\", \"09952782\"]}");
	add("09834593", "{\"term\":\"dickhead\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09834593\"]}");
	add("09834593", "{\"term\":\"mother fucker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09834593\"]}");
	add("09834593", "{\"term\":\"motherfucker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09834593\"]}");
	add("09834593", "{\"term\":\"prick\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00946605\", \"05534354\", \"13927849\", \"09834593\"]}");
	add("09834593", "{\"term\":\"shit\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"05148040\", \"09834593\", \"13576978\", \"13795187\", \"06623729\", \"14878732\"]}");
	add("09834593", "{\"term\":\"sob\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00870347\", \"09834593\", \"14393527\"]}");
	add("09834593", "{\"term\":\"son of a bitch\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09834593\"]}");
	add("09834593", "{\"term\":\"whoreson\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09834593\", \"09862211\"]}");
	add("09834860", "{\"term\":\"assignee\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09834860\"]}");
	add("09835082", "{\"term\":\"assignor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09835082\"]}");
	add("09835195", "{\"term\":\"assistant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09835195\"]}");
	add("09835195", "{\"term\":\"help\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"05157079\", \"05162155\", \"09835195\", \"01210099\"]}");
	add("09835195", "{\"term\":\"helper\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09631739\", \"09835195\"]}");
	add("09835195", "{\"term\":\"supporter\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"02755620\", \"03426027\", \"09835195\", \"10427699\", \"10697152\"]}");
	add("09836059", "{\"term\":\"assistant professor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09836059\"]}");
	add("09836176", "{\"term\":\"associate\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"06710466\", \"07299553\", \"09836579\", \"09965384\", \"09836176\"]}");
	add("09836579", "{\"term\":\"associate\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"06710466\", \"07299553\", \"09836579\", \"09965384\", \"09836176\"]}");
	add("09836791", "{\"term\":\"associate professor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09836791\"]}");
	add("09836941", "{\"term\":\"asthmatic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09836941\"]}");
	add("09837099", "{\"term\":\"astrogator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09837099\"]}");
	add("09837221", "{\"term\":\"astrologer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09837221\"]}");
	add("09837221", "{\"term\":\"astrologist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09837221\"]}");
	add("09837427", "{\"term\":\"astronaut\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09837427\"]}");
	add("09837427", "{\"term\":\"cosmonaut\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09837427\"]}");
	add("09837427", "{\"term\":\"spaceman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09837427\"]}");
	add("09837748", "{\"term\":\"astronomer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09837748\"]}");
	add("09837748", "{\"term\":\"stargazer\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02614528\", \"09837748\", \"10013657\"]}");
	add("09837748", "{\"term\":\"uranologist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09837748\"]}");
	add("09838696", "{\"term\":\"astrophysicist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09838696\"]}");
	add("09838882", "{\"term\":\"cosmographer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09838882\"]}");
	add("09838882", "{\"term\":\"cosmographist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09838882\"]}");
	add("09839072", "{\"term\":\"cosmologist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09839072\"]}");
	add("09839265", "{\"term\":\"atavist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09839265\"]}");
	add("09839265", "{\"term\":\"throwback\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07358174\", \"09839265\"]}");
	add("09839449", "{\"term\":\"atheist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09839449\"]}");
	add("09839665", "{\"term\":\"athlete\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09839665\"]}");
	add("09839665", "{\"term\":\"jock\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02755620\", \"09839665\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }