package org.swtk.commons.dict.wordnet.index.name.controller.o.v;  import java.util.Collection; import java.util.Set; import java.util.TreeSet;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  	import org.swtk.commons.dict.wordnet.index.name.instance.o.v.a.l.WordnetNounIndexNameInstanceOVAL;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.v.a.r.WordnetNounIndexNameInstanceOVAR;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.v.a.t.WordnetNounIndexNameInstanceOVAT;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.v.e.n.WordnetNounIndexNameInstanceOVEN;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.v.e.r.WordnetNounIndexNameInstanceOVER;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.v.i.b.WordnetNounIndexNameInstanceOVIB;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.v.i.d.WordnetNounIndexNameInstanceOVID;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.v.i.e.WordnetNounIndexNameInstanceOVIE;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.v.i.m.WordnetNounIndexNameInstanceOVIM;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.v.i.p.WordnetNounIndexNameInstanceOVIP;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.v.i.r.WordnetNounIndexNameInstanceOVIR;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.v.i.s.WordnetNounIndexNameInstanceOVIS;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.v.o.c.WordnetNounIndexNameInstanceOVOC;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.v.o.f.WordnetNounIndexNameInstanceOVOF;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.v.o.i.WordnetNounIndexNameInstanceOVOI;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.v.o.l.WordnetNounIndexNameInstanceOVOL;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.v.o.t.WordnetNounIndexNameInstanceOVOT;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.v.r.a.WordnetNounIndexNameInstanceOVRA;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.v.r.e.WordnetNounIndexNameInstanceOVRE;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.v.u.l.WordnetNounIndexNameInstanceOVUL;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.v.u.m.WordnetNounIndexNameInstanceOVUM;
  import com.trimc.blogger.commons.exception.BusinessException;  public final class WordnetNounIndexNameControllerOV {  	public static Collection<IndexNoun> get(final String TERM) throws BusinessException {  		String key = TERM.substring(0, 4).toLowerCase(); 			if ("oval".equals(key)) return WordnetNounIndexNameInstanceOVAL.get(TERM);
	if ("ovar".equals(key)) return WordnetNounIndexNameInstanceOVAR.get(TERM);
	if ("ovat".equals(key)) return WordnetNounIndexNameInstanceOVAT.get(TERM);
	if ("oven".equals(key)) return WordnetNounIndexNameInstanceOVEN.get(TERM);
	if ("over".equals(key)) return WordnetNounIndexNameInstanceOVER.get(TERM);
	if ("ovib".equals(key)) return WordnetNounIndexNameInstanceOVIB.get(TERM);
	if ("ovid".equals(key)) return WordnetNounIndexNameInstanceOVID.get(TERM);
	if ("ovie".equals(key)) return WordnetNounIndexNameInstanceOVIE.get(TERM);
	if ("ovim".equals(key)) return WordnetNounIndexNameInstanceOVIM.get(TERM);
	if ("ovip".equals(key)) return WordnetNounIndexNameInstanceOVIP.get(TERM);
	if ("ovir".equals(key)) return WordnetNounIndexNameInstanceOVIR.get(TERM);
	if ("ovis".equals(key)) return WordnetNounIndexNameInstanceOVIS.get(TERM);
	if ("ovoc".equals(key)) return WordnetNounIndexNameInstanceOVOC.get(TERM);
	if ("ovof".equals(key)) return WordnetNounIndexNameInstanceOVOF.get(TERM);
	if ("ovoi".equals(key)) return WordnetNounIndexNameInstanceOVOI.get(TERM);
	if ("ovol".equals(key)) return WordnetNounIndexNameInstanceOVOL.get(TERM);
	if ("ovot".equals(key)) return WordnetNounIndexNameInstanceOVOT.get(TERM);
	if ("ovra".equals(key)) return WordnetNounIndexNameInstanceOVRA.get(TERM);
	if ("ovre".equals(key)) return WordnetNounIndexNameInstanceOVRE.get(TERM);
	if ("ovul".equals(key)) return WordnetNounIndexNameInstanceOVUL.get(TERM);
	if ("ovum".equals(key)) return WordnetNounIndexNameInstanceOVUM.get(TERM);
  		throw new BusinessException("TERM not found (id = %s)", TERM); 	} 	 	public static Collection<String> terms() throws BusinessException { 		Set<String> set = new TreeSet<String>();  			set.addAll(WordnetNounIndexNameInstanceOVAL.terms());
	set.addAll(WordnetNounIndexNameInstanceOVAR.terms());
	set.addAll(WordnetNounIndexNameInstanceOVAT.terms());
	set.addAll(WordnetNounIndexNameInstanceOVEN.terms());
	set.addAll(WordnetNounIndexNameInstanceOVER.terms());
	set.addAll(WordnetNounIndexNameInstanceOVIB.terms());
	set.addAll(WordnetNounIndexNameInstanceOVID.terms());
	set.addAll(WordnetNounIndexNameInstanceOVIE.terms());
	set.addAll(WordnetNounIndexNameInstanceOVIM.terms());
	set.addAll(WordnetNounIndexNameInstanceOVIP.terms());
	set.addAll(WordnetNounIndexNameInstanceOVIR.terms());
	set.addAll(WordnetNounIndexNameInstanceOVIS.terms());
	set.addAll(WordnetNounIndexNameInstanceOVOC.terms());
	set.addAll(WordnetNounIndexNameInstanceOVOF.terms());
	set.addAll(WordnetNounIndexNameInstanceOVOI.terms());
	set.addAll(WordnetNounIndexNameInstanceOVOL.terms());
	set.addAll(WordnetNounIndexNameInstanceOVOT.terms());
	set.addAll(WordnetNounIndexNameInstanceOVRA.terms());
	set.addAll(WordnetNounIndexNameInstanceOVRE.terms());
	set.addAll(WordnetNounIndexNameInstanceOVUL.terms());
	set.addAll(WordnetNounIndexNameInstanceOVUM.terms());
  		return set; 	} }