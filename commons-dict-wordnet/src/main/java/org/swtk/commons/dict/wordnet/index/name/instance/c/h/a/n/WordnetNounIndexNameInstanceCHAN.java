package org.swtk.commons.dict.wordnet.index.name.instance.c.h.a.n;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceCHAN {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"chanal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12551833\"]}");
	add("{\"term\":\"chanar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12551833\"]}");
	add("{\"term\":\"chance\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"14506552\", \"05098974\", \"00804290\", \"11438252\", \"14507501\"]}");
	add("{\"term\":\"chancel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03008428\"]}");
	add("{\"term\":\"chancellery\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03008637\"]}");
	add("{\"term\":\"chancellor\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"09926301\", \"09926439\", \"09926866\"]}");
	add("{\"term\":\"chancellorship\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00591263\"]}");
	add("{\"term\":\"chancellorsville\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01277402\", \"09174718\"]}");
	add("{\"term\":\"chancery\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03008751\", \"08347938\"]}");
	add("{\"term\":\"chancre\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14207549\"]}");
	add("{\"term\":\"chancroid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14235785\"]}");
	add("{\"term\":\"chandelier\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03008889\"]}");
	add("{\"term\":\"chandelle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00170472\"]}");
	add("{\"term\":\"chandi\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09548621\"]}");
	add("{\"term\":\"chandler\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"09927024\", \"09927262\", \"10910189\"]}");
	add("{\"term\":\"chandlery\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03009029\", \"03009119\"]}");
	add("{\"term\":\"chanfron\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03009223\"]}");
	add("{\"term\":\"chang\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09504653\"]}");
	add("{\"term\":\"changan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08747285\"]}");
	add("{\"term\":\"change\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"04759289\", \"13408652\", \"13409284\", \"03009373\", \"03009524\", \"13408862\", \"11432841\", \"00191991\", \"13881240\", \"07311046\"]}");
	add("{\"term\":\"changeability\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04740880\"]}");
	add("{\"term\":\"changeableness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04740880\"]}");
	add("{\"term\":\"changefulness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04742125\"]}");
	add("{\"term\":\"changelessness\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04745174\", \"05061463\"]}");
	add("{\"term\":\"changeling\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09927377\", \"10217144\"]}");
	add("{\"term\":\"changeover\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07430330\"]}");
	add("{\"term\":\"changer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04070266\", \"09632901\"]}");
	add("{\"term\":\"changjiang\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09504653\"]}");
	add("{\"term\":\"changtzu\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09263953\"]}");
	add("{\"term\":\"channel\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"01115705\", \"03010002\", \"05258141\", \"06270774\", \"09264153\", \"13916479\", \"03009709\", \"06270551\"]}");
	add("{\"term\":\"channelisation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01144840\"]}");
	add("{\"term\":\"channelization\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01144840\"]}");
	add("{\"term\":\"channels\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06272117\"]}");
	add("{\"term\":\"channidae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02516829\"]}");
	add("{\"term\":\"channukah\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15223868\"]}");
	add("{\"term\":\"channukkah\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15223868\"]}");
	add("{\"term\":\"chanoyu\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01029173\"]}");
	add("{\"term\":\"chant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07048121\"]}");
	add("{\"term\":\"chantarelle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13025183\"]}");
	add("{\"term\":\"chanter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03010230\"]}");
	add("{\"term\":\"chanterelle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13025183\"]}");
	add("{\"term\":\"chantey\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07064082\"]}");
	add("{\"term\":\"chanting\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01257272\"]}");
	add("{\"term\":\"chantry\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03010392\", \"13292728\"]}");
	add("{\"term\":\"chanty\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07064082\"]}");
	add("{\"term\":\"chanukah\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15223868\"]}");
	add("{\"term\":\"chanukkah\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15223868\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }