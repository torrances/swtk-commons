package org.swtk.commons.dict.wordnet.index.name.instance.p.l.a.y;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstancePLAY {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"play\", \"synsetCount\":17, \"upperType\":\"NOUN\", \"ids\":[\"00042206\", \"00431125\", \"00458406\", \"00512828\", \"04781750\", \"06793739\", \"07426451\", \"14017327\", \"15281726\", \"00432833\", \"00788541\", \"00949412\", \"14033234\", \"00557350\", \"00558625\", \"07032045\", \"07021061\"]}");
	add("{\"term\":\"playacting\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00549363\"]}");
	add("{\"term\":\"playactor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09859438\"]}");
	add("{\"term\":\"playback\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03969588\", \"01022712\"]}");
	add("{\"term\":\"playbill\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06761417\"]}");
	add("{\"term\":\"playbook\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"05916073\", \"06428241\", \"06428409\"]}");
	add("{\"term\":\"playbox\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03969777\"]}");
	add("{\"term\":\"playboy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10459494\"]}");
	add("{\"term\":\"playday\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15163560\"]}");
	add("{\"term\":\"player\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"10421528\", \"10460154\", \"09784701\", \"10360025\", \"10459618\"]}");
	add("{\"term\":\"playfellow\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10460611\"]}");
	add("{\"term\":\"playfulness\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00430934\", \"04656618\", \"07527278\"]}");
	add("{\"term\":\"playgoer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10460291\"]}");
	add("{\"term\":\"playground\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03969939\", \"08658314\"]}");
	add("{\"term\":\"playhouse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03970107\"]}");
	add("{\"term\":\"playing\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00549363\", \"00041926\", \"00102011\"]}");
	add("{\"term\":\"playlet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07022654\"]}");
	add("{\"term\":\"playlist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06506007\"]}");
	add("{\"term\":\"playmaker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10460460\"]}");
	add("{\"term\":\"playmate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10460611\"]}");
	add("{\"term\":\"playoff\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07480247\"]}");
	add("{\"term\":\"playpen\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03970789\"]}");
	add("{\"term\":\"playroom\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04126572\"]}");
	add("{\"term\":\"playschool\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08429319\"]}");
	add("{\"term\":\"playscript\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07023062\"]}");
	add("{\"term\":\"playsuit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03970905\"]}");
	add("{\"term\":\"plaything\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03971038\"]}");
	add("{\"term\":\"playtime\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15163560\"]}");
	add("{\"term\":\"playwright\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10050002\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public boolean has(final String TERM) { 		return map.containsKey(TERM); 	} }