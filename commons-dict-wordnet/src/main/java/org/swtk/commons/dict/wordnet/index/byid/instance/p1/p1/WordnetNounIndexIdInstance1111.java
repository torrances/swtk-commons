package org.swtk.commons.dict.wordnet.index.byid.instance.p1.p1;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance1111 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("11110126", "{\"term\":\"daniel jones\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11110126\"]}");
	add("11110126", "{\"term\":\"jones\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"11110126\", \"11110225\", \"11110368\", \"11110502\", \"11110621\", \"11110874\"]}");
	add("11110225", "{\"term\":\"inigo jones\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11110225\"]}");
	add("11110225", "{\"term\":\"jones\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"11110126\", \"11110225\", \"11110368\", \"11110502\", \"11110621\", \"11110874\"]}");
	add("11110368", "{\"term\":\"john paul jones\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11110368\"]}");
	add("11110368", "{\"term\":\"jones\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"11110126\", \"11110225\", \"11110368\", \"11110502\", \"11110621\", \"11110874\"]}");
	add("11110502", "{\"term\":\"bobby jones\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11110502\"]}");
	add("11110502", "{\"term\":\"jones\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"11110126\", \"11110225\", \"11110368\", \"11110502\", \"11110621\", \"11110874\"]}");
	add("11110502", "{\"term\":\"robert tyre jones\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11110502\"]}");
	add("11110621", "{\"term\":\"casey jones\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11110621\"]}");
	add("11110621", "{\"term\":\"john luther jones\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11110621\"]}");
	add("11110621", "{\"term\":\"jones\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"11110126\", \"11110225\", \"11110368\", \"11110502\", \"11110621\", \"11110874\"]}");
	add("11110874", "{\"term\":\"jones\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"11110126\", \"11110225\", \"11110368\", \"11110502\", \"11110621\", \"11110874\"]}");
	add("11110874", "{\"term\":\"mary harris jones\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11110874\"]}");
	add("11110874", "{\"term\":\"mother jones\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11110874\"]}");
	add("11111074", "{\"term\":\"erica jong\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11111074\"]}");
	add("11111074", "{\"term\":\"jong\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11111074\"]}");
	add("11111174", "{\"term\":\"ben jonson\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11111174\"]}");
	add("11111174", "{\"term\":\"benjamin jonson\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11111174\"]}");
	add("11111174", "{\"term\":\"jonson\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11111174\"]}");
	add("11111364", "{\"term\":\"joplin\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11111364\", \"11111535\"]}");
	add("11111364", "{\"term\":\"scott joplin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11111364\"]}");
	add("11111535", "{\"term\":\"janis joplin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11111535\"]}");
	add("11111535", "{\"term\":\"joplin\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11111364\", \"11111535\"]}");
	add("11111696", "{\"term\":\"joseph\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"11111696\", \"11111853\", \"11112116\"]}");
	add("11111853", "{\"term\":\"joseph\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"11111696\", \"11111853\", \"11112116\"]}");
	add("11112116", "{\"term\":\"chief joseph\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11112116\"]}");
	add("11112116", "{\"term\":\"joseph\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"11111696\", \"11111853\", \"11112116\"]}");
	add("11112282", "{\"term\":\"flavius josephus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11112282\"]}");
	add("11112282", "{\"term\":\"joseph ben matthias\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11112282\"]}");
	add("11112282", "{\"term\":\"josephus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11112282\"]}");
	add("11112531", "{\"term\":\"joshua\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06445593\", \"11112531\"]}");
	add("11112730", "{\"term\":\"james prescott joule\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11112730\"]}");
	add("11112730", "{\"term\":\"joule\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11112730\", \"13748184\"]}");
	add("11112928", "{\"term\":\"benjamin jowett\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11112928\"]}");
	add("11112928", "{\"term\":\"jowett\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11112928\"]}");
	add("11113106", "{\"term\":\"james augustine aloysius joyce\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11113106\"]}");
	add("11113106", "{\"term\":\"james joyce\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11113106\"]}");
	add("11113106", "{\"term\":\"joyce\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11113106\"]}");
	add("11113315", "{\"term\":\"juan carlos\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11113315\"]}");
	add("11113315", "{\"term\":\"juan carlos victor maria de borbon y borbon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11113315\"]}");
	add("11113459", "{\"term\":\"judah\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08816975\", \"11113459\"]}");
	add("11113664", "{\"term\":\"judas\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03608332\", \"10244788\", \"11113664\", \"11114045\"]}");
	add("11113664", "{\"term\":\"judas iscariot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11113664\"]}");
	add("11113838", "{\"term\":\"judas maccabaeus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11113838\"]}");
	add("11114045", "{\"term\":\"judas\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03608332\", \"10244788\", \"11113664\", \"11114045\"]}");
	add("11114045", "{\"term\":\"jude\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06459433\", \"11114045\"]}");
	add("11114045", "{\"term\":\"saint jude\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11114045\"]}");
	add("11114045", "{\"term\":\"st. jude\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11114045\"]}");
	add("11114045", "{\"term\":\"thaddaeus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11114045\"]}");
	add("11114302", "{\"term\":\"flavius claudius julianus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11114302\"]}");
	add("11114302", "{\"term\":\"julian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11114302\"]}");
	add("11114302", "{\"term\":\"julian the apostate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11114302\"]}");
	add("11114601", "{\"term\":\"carl gustav jung\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11114601\"]}");
	add("11114601", "{\"term\":\"carl jung\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11114601\"]}");
	add("11114601", "{\"term\":\"jung\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11114601\"]}");
	add("11114770", "{\"term\":\"hugo junkers\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11114770\"]}");
	add("11114770", "{\"term\":\"junkers\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11114770\"]}");
	add("11114918", "{\"term\":\"antoine laurent de jussieu\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11114918\"]}");
	add("11114918", "{\"term\":\"jussieu\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11114918\"]}");
	add("11115113", "{\"term\":\"justinian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11115113\"]}");
	add("11115113", "{\"term\":\"justinian i\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11115113\"]}");
	add("11115113", "{\"term\":\"justinian the great\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11115113\"]}");
	add("11115381", "{\"term\":\"decimus junius juvenalis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11115381\"]}");
	add("11115381", "{\"term\":\"juvenal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11115381\"]}");
	add("11115577", "{\"term\":\"aram kachaturian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11115577\"]}");
	add("11115577", "{\"term\":\"kachaturian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11115577\"]}");
	add("11115721", "{\"term\":\"franz kafka\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11115721\"]}");
	add("11115721", "{\"term\":\"kafka\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11115721\"]}");
	add("11115897", "{\"term\":\"kahn\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11115897\"]}");
	add("11115897", "{\"term\":\"louis isadore kahn\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11115897\"]}");
	add("11116023", "{\"term\":\"kalinin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11116023\"]}");
	add("11116023", "{\"term\":\"mikhail ivanovich kalinin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11116023\"]}");
	add("11116023", "{\"term\":\"mikhail kalinin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11116023\"]}");
	add("11116182", "{\"term\":\"kamehameha i\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11116182\"]}");
	add("11116182", "{\"term\":\"kamehameha the great\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11116182\"]}");
	add("11116328", "{\"term\":\"kandinski\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11116328\"]}");
	add("11116328", "{\"term\":\"kandinsky\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11116328\"]}");
	add("11116328", "{\"term\":\"wassily kandinski\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11116328\"]}");
	add("11116328", "{\"term\":\"wassily kandinsky\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11116328\"]}");
	add("11116498", "{\"term\":\"immanuel kant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11116498\"]}");
	add("11116498", "{\"term\":\"kant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11116498\"]}");
	add("11116635", "{\"term\":\"erik axel karlfeldt\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11116635\"]}");
	add("11116635", "{\"term\":\"karlfeldt\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11116635\"]}");
	add("11116791", "{\"term\":\"boris karloff\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11116791\"]}");
	add("11116791", "{\"term\":\"karloff\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11116791\"]}");
	add("11116791", "{\"term\":\"william henry pratt\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11116791\"]}");
	add("11116981", "{\"term\":\"anatoli karpov\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11116981\"]}");
	add("11116981", "{\"term\":\"anatoli yevgenevich karpov\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11116981\"]}");
	add("11116981", "{\"term\":\"karpov\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11116981\"]}");
	add("11117198", "{\"term\":\"karsavina\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11117198\"]}");
	add("11117198", "{\"term\":\"tamara karsavina\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11117198\"]}");
	add("11117325", "{\"term\":\"gary kasparov\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11117325\"]}");
	add("11117325", "{\"term\":\"gary weinstein\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11117325\"]}");
	add("11117325", "{\"term\":\"kasparov\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11117325\"]}");
	add("11117515", "{\"term\":\"alfred kastler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11117515\"]}");
	add("11117515", "{\"term\":\"kastler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11117515\"]}");
	add("11117615", "{\"term\":\"george s. kaufman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11117615\"]}");
	add("11117615", "{\"term\":\"george simon kaufman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11117615\"]}");
	add("11117615", "{\"term\":\"kaufman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11117615\"]}");
	add("11117810", "{\"term\":\"kaunda\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11117810\"]}");
	add("11117810", "{\"term\":\"kenneth david kaunda\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11117810\"]}");
	add("11117810", "{\"term\":\"kenneth kaunda\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11117810\"]}");
	add("11118029", "{\"term\":\"elia kazan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11118029\"]}");
	add("11118029", "{\"term\":\"elia kazanjoglous\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11118029\"]}");
	add("11118029", "{\"term\":\"kazan\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09030703\", \"11118029\"]}");
	add("11118213", "{\"term\":\"edmund kean\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11118213\"]}");
	add("11118213", "{\"term\":\"kean\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11118213\"]}");
	add("11118370", "{\"term\":\"buster keaton\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11118370\"]}");
	add("11118370", "{\"term\":\"joseph francis keaton\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11118370\"]}");
	add("11118370", "{\"term\":\"keaton\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11118370\"]}");
	add("11118591", "{\"term\":\"john keats\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11118591\"]}");
	add("11118591", "{\"term\":\"keats\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11118591\"]}");
	add("11118697", "{\"term\":\"john keble\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11118697\"]}");
	add("11118697", "{\"term\":\"keble\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11118697\"]}");
	add("11118866", "{\"term\":\"friedrich august kekule\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11118866\"]}");
	add("11118866", "{\"term\":\"friedrich august kekule von stradonitz\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11118866\"]}");
	add("11118866", "{\"term\":\"kekule\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11118866\"]}");
	add("11119075", "{\"term\":\"helen adams keller\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11119075\"]}");
	add("11119075", "{\"term\":\"helen keller\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11119075\"]}");
	add("11119075", "{\"term\":\"keller\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11119075\"]}");
	add("11119428", "{\"term\":\"kellogg\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11119428\"]}");
	add("11119428", "{\"term\":\"w. k. kellogg\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11119428\"]}");
	add("11119428", "{\"term\":\"will keith kellog\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11119428\"]}");
	add("11119719", "{\"term\":\"eugene curran kelly\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11119719\"]}");
	add("11119719", "{\"term\":\"gene kelly\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11119719\"]}");
	add("11119719", "{\"term\":\"kelly\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"11119719\", \"11119913\", \"11120129\"]}");
	add("11119913", "{\"term\":\"grace kelly\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11119913\"]}");
	add("11119913", "{\"term\":\"grace patricia kelly\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11119913\"]}");
	add("11119913", "{\"term\":\"kelly\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"11119719\", \"11119913\", \"11120129\"]}");
	add("11119913", "{\"term\":\"princess grace of monaco\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11119913\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }