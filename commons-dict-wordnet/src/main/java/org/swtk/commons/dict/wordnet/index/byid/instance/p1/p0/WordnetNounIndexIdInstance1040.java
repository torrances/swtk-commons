package org.swtk.commons.dict.wordnet.index.byid.instance.p1.p0;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance1040 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("10400004", "{\"term\":\"oculist\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10398772\", \"10400004\"]}");
	add("10400004", "{\"term\":\"optometrist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10400004\"]}");
	add("10400198", "{\"term\":\"orangeman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10400198\"]}");
	add("10400371", "{\"term\":\"orator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10400371\"]}");
	add("10400371", "{\"term\":\"public speaker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10400371\"]}");
	add("10400371", "{\"term\":\"rhetorician\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10400371\"]}");
	add("10400371", "{\"term\":\"speechifier\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10400371\"]}");
	add("10400371", "{\"term\":\"speechmaker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10400371\"]}");
	add("10400799", "{\"term\":\"orchestrator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10400799\"]}");
	add("10400913", "{\"term\":\"ordainer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10400913\"]}");
	add("10401068", "{\"term\":\"orderer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10401068\", \"10401397\"]}");
	add("10401068", "{\"term\":\"systematiser\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10401068\"]}");
	add("10401068", "{\"term\":\"systematist\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10401068\", \"10713320\"]}");
	add("10401068", "{\"term\":\"systematizer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10401068\"]}");
	add("10401068", "{\"term\":\"systemiser\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10401068\"]}");
	add("10401068", "{\"term\":\"systemizer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10401068\"]}");
	add("10401397", "{\"term\":\"orderer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10401068\", \"10401397\"]}");
	add("10401503", "{\"term\":\"hospital attendant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10401503\"]}");
	add("10401503", "{\"term\":\"orderly\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10401503\", \"10401680\"]}");
	add("10401680", "{\"term\":\"orderly\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10401503\", \"10401680\"]}");
	add("10401856", "{\"term\":\"orderly sergeant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10401856\"]}");
	add("10402001", "{\"term\":\"ordinand\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10402001\"]}");
	add("10402079", "{\"term\":\"ordinary\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"03859254\", \"03859444\", \"10402179\", \"13965795\", \"10402079\"]}");
	add("10402179", "{\"term\":\"ordinary\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"03859254\", \"03859444\", \"10402179\", \"13965795\", \"10402079\"]}");
	add("10402296", "{\"term\":\"organ donor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10402296\"]}");
	add("10402409", "{\"term\":\"organ-grinder\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10402409\"]}");
	add("10402524", "{\"term\":\"organist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10402524\"]}");
	add("10402793", "{\"term\":\"organization man\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10402793\"]}");
	add("10402936", "{\"term\":\"arranger\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09829330\", \"10402936\"]}");
	add("10402936", "{\"term\":\"organiser\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03924859\", \"10402936\", \"10403204\"]}");
	add("10402936", "{\"term\":\"organizer\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03924859\", \"10403204\", \"10402936\"]}");
	add("10403204", "{\"term\":\"labor organizer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10403204\"]}");
	add("10403204", "{\"term\":\"organiser\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03924859\", \"10402936\", \"10403204\"]}");
	add("10403204", "{\"term\":\"organizer\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03924859\", \"10403204\", \"10402936\"]}");
	add("10403388", "{\"term\":\"orientalist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10403388\"]}");
	add("10403515", "{\"term\":\"conceiver\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10403515\"]}");
	add("10403515", "{\"term\":\"mastermind\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10146463\", \"10403515\"]}");
	add("10403515", "{\"term\":\"originator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10403515\"]}");
	add("10403753", "{\"term\":\"orleanist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10403753\"]}");
	add("10403913", "{\"term\":\"bird watcher\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09875906\", \"10403913\"]}");
	add("10403913", "{\"term\":\"ornithologist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10403913\"]}");
	add("10404091", "{\"term\":\"orphan\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"01324261\", \"07026385\", \"10404195\", \"10404091\"]}");
	add("10404195", "{\"term\":\"orphan\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"01324261\", \"07026385\", \"10404195\", \"10404091\"]}");
	add("10404309", "{\"term\":\"orthodontist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10404309\"]}");
	add("10404471", "{\"term\":\"orthodox jew\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10404471\"]}");
	add("10404634", "{\"term\":\"orthoepist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10404634\"]}");
	add("10404858", "{\"term\":\"orthopaedist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10404858\"]}");
	add("10404858", "{\"term\":\"orthopedist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10404858\"]}");
	add("10405053", "{\"term\":\"orthoptist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10405053\"]}");
	add("10405154", "{\"term\":\"osteologer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10405154\"]}");
	add("10405154", "{\"term\":\"osteologist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10405154\"]}");
	add("10405265", "{\"term\":\"osteopath\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10405265\"]}");
	add("10405265", "{\"term\":\"osteopathist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10405265\"]}");
	add("10405406", "{\"term\":\"ostrich\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01521519\", \"10405406\"]}");
	add("10405622", "{\"term\":\"ostrogoth\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10405622\"]}");
	add("10405770", "{\"term\":\"ejector\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02975992\", \"10405770\"]}");
	add("10405770", "{\"term\":\"ouster\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00209646\", \"01197105\", \"10405770\"]}");
	add("10405895", "{\"term\":\"out-and-outer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10405895\"]}");
	add("10406011", "{\"term\":\"castaway\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09918890\", \"10406011\"]}");
	add("10406011", "{\"term\":\"ishmael\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10406011\", \"11094563\"]}");
	add("10406011", "{\"term\":\"outcast\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10406011\"]}");
	add("10406011", "{\"term\":\"pariah\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10406011\"]}");
	add("10406214", "{\"term\":\"outcaste\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10406214\"]}");
	add("10406317", "{\"term\":\"outdoorsman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10406317\"]}");
	add("10406453", "{\"term\":\"outdoorswoman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10406453\"]}");
	add("10406573", "{\"term\":\"outfielder\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10406573\", \"10406683\"]}");
	add("10406683", "{\"term\":\"outfielder\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10406573\", \"10406683\"]}");
	add("10406895", "{\"term\":\"right fielder\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10406895\"]}");
	add("10407023", "{\"term\":\"right-handed pitcher\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10407023\"]}");
	add("10407023", "{\"term\":\"right-hander\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10550534\", \"10407023\"]}");
	add("10407175", "{\"term\":\"center fielder\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10407175\"]}");
	add("10407175", "{\"term\":\"centerfielder\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10407175\"]}");
	add("10407285", "{\"term\":\"left fielder\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10407285\"]}");
	add("10407411", "{\"term\":\"outfitter\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03865754\", \"10407411\"]}");
	add("10407535", "{\"term\":\"outlier\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06032718\", \"10407535\"]}");
	add("10407635", "{\"term\":\"outpatient\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10407635\"]}");
	add("10407781", "{\"term\":\"outrider\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10407781\"]}");
	add("10407891", "{\"term\":\"outsider\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10407891\", \"10123690\"]}");
	add("10408020", "{\"term\":\"overachiever\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10408020\"]}");
	add("10408139", "{\"term\":\"lord\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10291374\", \"10408139\", \"09559474\"]}");
	add("10408139", "{\"term\":\"master\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"03902681\", \"10318149\", \"10318465\", \"10318579\", \"03732765\", \"10183826\", \"10318314\", \"10772598\", \"10408139\", \"10299827\"]}");
	add("10408139", "{\"term\":\"overlord\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10408139\"]}");
	add("10408346", "{\"term\":\"overnighter\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03870909\", \"10408346\"]}");
	add("10408431", "{\"term\":\"overseer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10408431\"]}");
	add("10408431", "{\"term\":\"superintendent\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10695160\", \"10408431\"]}");
	add("10408623", "{\"term\":\"owner\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10409097\", \"10408623\"]}");
	add("10408623", "{\"term\":\"proprietor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10408623\"]}");
	add("10409097", "{\"term\":\"owner\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10409097\", \"10408623\"]}");
	add("10409097", "{\"term\":\"possessor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10409097\"]}");
	add("10409459", "{\"term\":\"owner-driver\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10409459\"]}");
	add("10409564", "{\"term\":\"owner-occupier\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10409564\"]}");
	add("10409675", "{\"term\":\"oyabun\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10409675\"]}");
	add("10409749", "{\"term\":\"pachuco\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10409749\"]}");
	add("10409898", "{\"term\":\"disarmer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10409898\"]}");
	add("10409898", "{\"term\":\"pacificist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10409898\"]}");
	add("10409898", "{\"term\":\"pacifist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10409898\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }