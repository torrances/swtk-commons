package org.swtk.commons.dict.wordnet.index.name.instance.s.t.r.e;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceSTRE {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"streak\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"07428229\", \"04690493\", \"04927612\", \"08477596\"]}");
	add("{\"term\":\"streaker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10681745\"]}");
	add("{\"term\":\"stream\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"07421365\", \"14029377\", \"00330053\", \"08478606\", \"09471510\"]}");
	add("{\"term\":\"streambed\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09471839\"]}");
	add("{\"term\":\"streamer\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"02791044\", \"03917985\", \"06357248\", \"11536167\"]}");
	add("{\"term\":\"streaming\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11464025\"]}");
	add("{\"term\":\"streamlet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09438816\"]}");
	add("{\"term\":\"streamliner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04341642\"]}");
	add("{\"term\":\"streep\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11342063\"]}");
	add("{\"term\":\"street\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"08242347\", \"14509395\", \"14539858\", \"04342347\", \"04341737\"]}");
	add("{\"term\":\"streetcar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04342573\"]}");
	add("{\"term\":\"streetlight\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04343024\"]}");
	add("{\"term\":\"streetwalker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10682754\"]}");
	add("{\"term\":\"streisand\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11342173\"]}");
	add("{\"term\":\"strekelia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12442904\"]}");
	add("{\"term\":\"strelitzia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12374891\"]}");
	add("{\"term\":\"strelitziaceae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12374585\"]}");
	add("{\"term\":\"strength\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"05060839\", \"14498140\", \"05041380\", \"05107058\", \"05199100\", \"05166608\", \"05042508\", \"05210917\", \"05036872\"]}");
	add("{\"term\":\"strengthener\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04343172\"]}");
	add("{\"term\":\"strengthening\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00374871\", \"07441824\"]}");
	add("{\"term\":\"strenuosity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05043392\"]}");
	add("{\"term\":\"strenuousness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04717035\"]}");
	add("{\"term\":\"strep\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01383685\"]}");
	add("{\"term\":\"strepera\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01586014\"]}");
	add("{\"term\":\"strepsiceros\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02426433\"]}");
	add("{\"term\":\"strepsirhini\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02499845\"]}");
	add("{\"term\":\"streptobacillus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01380335\"]}");
	add("{\"term\":\"streptocarpus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12854745\"]}");
	add("{\"term\":\"streptococci\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01383685\"]}");
	add("{\"term\":\"streptococcus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01383685\"]}");
	add("{\"term\":\"streptodornase\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15085504\"]}");
	add("{\"term\":\"streptokinase\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15085738\"]}");
	add("{\"term\":\"streptolysin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15085995\"]}");
	add("{\"term\":\"streptomyces\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01378878\"]}");
	add("{\"term\":\"streptomycetaceae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01378554\"]}");
	add("{\"term\":\"streptomycin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04343518\"]}");
	add("{\"term\":\"streptopelia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01815897\"]}");
	add("{\"term\":\"streptosolen\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12934808\"]}");
	add("{\"term\":\"streptothricin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04343671\"]}");
	add("{\"term\":\"stress\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"11535238\", \"14433493\", \"14458653\", \"14399593\", \"07099567\"]}");
	add("{\"term\":\"stressor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09471978\"]}");
	add("{\"term\":\"stretch\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"05028511\", \"15159442\", \"00371867\", \"00629932\", \"04343783\", \"00342069\", \"09472094\"]}");
	add("{\"term\":\"stretchability\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05028511\"]}");
	add("{\"term\":\"stretcher\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"02960863\", \"04343930\", \"04344134\", \"04344295\"]}");
	add("{\"term\":\"stretchiness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05028511\"]}");
	add("{\"term\":\"stretching\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00629932\", \"00367347\"]}");
	add("{\"term\":\"streusel\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07637585\", \"07639185\"]}");
	add("{\"term\":\"strewing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00369946\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }