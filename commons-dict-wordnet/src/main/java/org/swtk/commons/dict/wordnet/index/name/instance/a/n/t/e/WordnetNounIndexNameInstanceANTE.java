package org.swtk.commons.dict.wordnet.index.name.instance.a.n.t.e;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceANTE {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"ante\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13364932\"]}");
	add("{\"term\":\"anteater\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"01875042\", \"01875413\", \"01888139\", \"02085443\", \"02462640\", \"02464461\"]}");
	add("{\"term\":\"antecedence\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05054430\"]}");
	add("{\"term\":\"antecedency\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05054430\"]}");
	add("{\"term\":\"antecedent\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"06616004\", \"13867120\", \"07341480\", \"09811996\"]}");
	add("{\"term\":\"antechamber\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02718424\"]}");
	add("{\"term\":\"antediluvian\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09812689\", \"09815335\"]}");
	add("{\"term\":\"antedon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02323540\"]}");
	add("{\"term\":\"antedonidae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02323273\"]}");
	add("{\"term\":\"antefix\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02718007\"]}");
	add("{\"term\":\"antelope\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02422442\"]}");
	add("{\"term\":\"antenna\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02587546\", \"04850501\", \"02718140\"]}");
	add("{\"term\":\"antennaria\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11942418\"]}");
	add("{\"term\":\"antennariidae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02551621\"]}");
	add("{\"term\":\"antepenult\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06316213\"]}");
	add("{\"term\":\"antepenultima\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06316213\"]}");
	add("{\"term\":\"antepenultimate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06316213\"]}");
	add("{\"term\":\"anterior\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05313689\"]}");
	add("{\"term\":\"anteriority\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05054430\", \"05085496\"]}");
	add("{\"term\":\"anteroom\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02718424\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public boolean has(final String TERM) { 		return map.containsKey(TERM); 	} }