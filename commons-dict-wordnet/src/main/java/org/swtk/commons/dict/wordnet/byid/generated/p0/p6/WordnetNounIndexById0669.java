package org.swtk.commons.dict.wordnet.byid.generated.p0.p6;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexById0669 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("06690047", "{\"term\":\"printing\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"06602491\", \"06690047\", \"01105064\", \"06414934\"]}");
	add("06690047", "{\"term\":\"printing process\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06690047\"]}");
	add("06690719", "{\"term\":\"composition\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"03085664\", \"06421395\", \"06690719\", \"00931533\", \"00941268\", \"07051211\", \"14612672\", \"04940721\", \"05083641\"]}");
	add("06690719", "{\"term\":\"typography\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06690719\", \"01104905\"]}");
	add("06690891", "{\"term\":\"print\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"03932813\", \"04010232\", \"04010358\", \"06690891\", \"06811608\", \"04009955\", \"06691047\"]}");
	add("06691047", "{\"term\":\"print\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"03932813\", \"04010232\", \"04010358\", \"06690891\", \"06811608\", \"04009955\", \"06691047\"]}");
	add("06691251", "{\"term\":\"fine print\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06691251\", \"06774705\"]}");
	add("06691251", "{\"term\":\"small print\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06691251\", \"06774705\"]}");
	add("06691409", "{\"term\":\"letterpress\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06691409\"]}");
	add("06691409", "{\"term\":\"relief printing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06691409\"]}");
	add("06691529", "{\"term\":\"gravure\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"01105279\", \"03460746\", \"03460867\", \"06691529\"]}");
	add("06691529", "{\"term\":\"intaglio\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03581612\", \"06691529\"]}");
	add("06691529", "{\"term\":\"intaglio printing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06691529\"]}");
	add("06691786", "{\"term\":\"process printing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06691786\"]}");
	add("06691912", "{\"term\":\"photogravure\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01105397\", \"03460746\", \"06691912\"]}");
	add("06692053", "{\"term\":\"rotogravure\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01105397\", \"06277626\", \"06692053\"]}");
	add("06692202", "{\"term\":\"planographic printing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06692202\"]}");
	add("06692202", "{\"term\":\"planography\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06692202\"]}");
	add("06692471", "{\"term\":\"collotype\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06692471\"]}");
	add("06692471", "{\"term\":\"collotype printing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06692471\"]}");
	add("06692471", "{\"term\":\"photogelatin process\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06692471\"]}");
	add("06692747", "{\"term\":\"lithography\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00941154\", \"06692747\"]}");
	add("06692940", "{\"term\":\"photolithography\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06692940\"]}");
	add("06693078", "{\"term\":\"chromolithography\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06693078\"]}");
	add("06693176", "{\"term\":\"photo-offset\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06693176\"]}");
	add("06693176", "{\"term\":\"photo-offset printing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06693176\"]}");
	add("06693315", "{\"term\":\"offset\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"04183808\", \"06693315\", \"11435835\", \"13148602\", \"13312212\", \"15290329\"]}");
	add("06693315", "{\"term\":\"offset printing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06693315\"]}");
	add("06693563", "{\"term\":\"offset lithography\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06693563\"]}");
	add("06693658", "{\"term\":\"letterset printing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06693658\"]}");
	add("06693780", "{\"term\":\"carbon process\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06693780\"]}");
	add("06693922", "{\"term\":\"news\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"05200165\", \"06654987\", \"06632357\", \"06693922\", \"06654787\"]}");
	add("06694199", "{\"term\":\"business news\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06694199\"]}");
	add("06694296", "{\"term\":\"account\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"05165115\", \"06528946\", \"07232584\", \"13376000\", \"05176564\", \"09202279\", \"06751030\", \"13952070\", \"06694296\", \"06526084\"]}");
	add("06694296", "{\"term\":\"news report\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06694296\"]}");
	add("06694296", "{\"term\":\"report\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"06216934\", \"06421395\", \"07234960\", \"07406116\", \"06694296\", \"07232584\", \"07233130\"]}");
	add("06694296", "{\"term\":\"story\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"06769768\", \"06694296\", \"06526084\", \"03370837\", \"06381452\", \"07235754\"]}");
	add("06694296", "{\"term\":\"write up\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06694296\"]}");
	add("06694721", "{\"term\":\"newsletter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06694721\"]}");
	add("06694721", "{\"term\":\"newssheet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06694721\"]}");
	add("06694897", "{\"term\":\"market letter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06694897\"]}");
	add("06695035", "{\"term\":\"bulletin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06695035\"]}");
	add("06695239", "{\"term\":\"flash\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"03363018\", \"03363226\", \"06695239\", \"06887980\", \"06902380\", \"15271921\", \"05816450\", \"07301793\", \"04960363\", \"07426692\"]}");
	add("06695239", "{\"term\":\"news bulletin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06695239\"]}");
	add("06695239", "{\"term\":\"newsbreak\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06695239\"]}");
	add("06695239", "{\"term\":\"newsflash\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06695239\"]}");
	add("06695428", "{\"term\":\"information bulletin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06695428\"]}");
	add("06695539", "{\"term\":\"communique\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06695539\"]}");
	add("06695539", "{\"term\":\"despatch\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00062110\", \"00223115\", \"05066981\", \"06695539\"]}");
	add("06695539", "{\"term\":\"dispatch\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00223115\", \"05066981\", \"00062110\", \"06695539\"]}");
	add("06695697", "{\"term\":\"urban legend\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06695697\"]}");
	add("06695928", "{\"term\":\"exclusive\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06695928\"]}");
	add("06695928", "{\"term\":\"scoop\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"04156148\", \"04156273\", \"04260861\", \"06695928\", \"13916999\", \"13791457\"]}");
	add("06696104", "{\"term\":\"newscast\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06696104\"]}");
	add("06696258", "{\"term\":\"radio news\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06696258\"]}");
	add("06696340", "{\"term\":\"sportscast\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06696340\"]}");
	add("06696437", "{\"term\":\"television news\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06696437\"]}");
	add("06696529", "{\"term\":\"coverage\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06696529\", \"05131025\", \"13365679\"]}");
	add("06696529", "{\"term\":\"reportage\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06696529\"]}");
	add("06696529", "{\"term\":\"reporting\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06696529\"]}");
	add("06696797", "{\"term\":\"hard news\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06696797\"]}");
	add("06696898", "{\"term\":\"soft news\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06696898\"]}");
	add("06697007", "{\"term\":\"stop press\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06697007\"]}");
	add("06697128", "{\"term\":\"commitment\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"01168182\", \"06697128\", \"01242433\", \"01208643\", \"04654347\"]}");
	add("06697128", "{\"term\":\"dedication\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"01208643\", \"06417960\", \"06697128\", \"07466958\", \"04884616\"]}");
	add("06697317", "{\"term\":\"oath\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07241501\", \"06697317\", \"07139804\"]}");
	add("06697317", "{\"term\":\"swearing\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06697317\", \"07139804\"]}");
	add("06697543", "{\"term\":\"affirmation\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"01188682\", \"06697543\", \"07217786\", \"06745099\"]}");
	add("06697785", "{\"term\":\"profession\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"06697785\", \"06745674\", \"00611221\", \"08129062\"]}");
	add("06697943", "{\"term\":\"giving\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00091599\", \"06697943\", \"01088005\"]}");
	add("06698201", "{\"term\":\"guarantee\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13374019\", \"06698919\", \"06698201\"]}");
	add("06698201", "{\"term\":\"warrant\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"06698201\", \"06700103\", \"13439392\", \"06559050\"]}");
	add("06698201", "{\"term\":\"warrantee\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06698201\", \"10787816\", \"10787940\"]}");
	add("06698201", "{\"term\":\"warranty\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06698201\"]}");
	add("06698499", "{\"term\":\"security\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00824977\", \"04173006\", \"06698499\", \"08137885\", \"13370410\", \"13437518\", \"07541577\", \"13365086\", \"14562870\"]}");
	add("06698499", "{\"term\":\"surety\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"06698499\", \"10169047\", \"10207176\", \"13370410\", \"04762035\"]}");
	add("06698605", "{\"term\":\"deposit\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00373256\", \"03182015\", \"06698605\", \"13370677\", \"13370849\", \"13402318\", \"13483394\", \"09451871\", \"11465491\"]}");
	add("06698720", "{\"term\":\"stock warrant\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06698720\", \"13439392\"]}");
	add("06698919", "{\"term\":\"guarantee\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13374019\", \"06698919\", \"06698201\"]}");
	add("06699212", "{\"term\":\"safety net\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04134218\", \"06699212\"]}");
	add("06699318", "{\"term\":\"full faith and credit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06699318\"]}");
	add("06699481", "{\"term\":\"approval\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"06699481\", \"14435778\", \"07515398\", \"01217882\"]}");
	add("06699481", "{\"term\":\"commendation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06699481\", \"06718888\"]}");
	add("06699923", "{\"term\":\"approbation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06699923\", \"07515851\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }