package org.swtk.commons.dict.wordnet.index.name.instance.m.i.l.l;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceMILL {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"mill\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00359116\", \"03771096\", \"11199277\", \"11199492\", \"03321351\"]}");
	add("{\"term\":\"millais\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11199656\"]}");
	add("{\"term\":\"millay\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11199787\"]}");
	add("{\"term\":\"millboard\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14825572\"]}");
	add("{\"term\":\"milldam\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03771469\"]}");
	add("{\"term\":\"millenarian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10338072\"]}");
	add("{\"term\":\"millenarianism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06199286\"]}");
	add("{\"term\":\"millenarism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06199286\"]}");
	add("{\"term\":\"millenarist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10338072\"]}");
	add("{\"term\":\"millenary\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13773176\", \"15166173\", \"15276957\"]}");
	add("{\"term\":\"millennium\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"15276957\", \"15288094\", \"15166173\"]}");
	add("{\"term\":\"millenniumism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06199286\"]}");
	add("{\"term\":\"millepede\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01789287\"]}");
	add("{\"term\":\"miller\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"02286269\", \"03771579\", \"10337745\", \"11199913\", \"11200019\", \"11200199\"]}");
	add("{\"term\":\"millerite\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14706148\"]}");
	add("{\"term\":\"millet\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07818939\", \"11200347\", \"12156415\"]}");
	add("{\"term\":\"millettia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12570304\"]}");
	add("{\"term\":\"milliammeter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03771753\"]}");
	add("{\"term\":\"milliampere\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13659092\"]}");
	add("{\"term\":\"milliard\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13774173\"]}");
	add("{\"term\":\"millibar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13733768\"]}");
	add("{\"term\":\"millicurie\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13666944\"]}");
	add("{\"term\":\"millidegree\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13736481\"]}");
	add("{\"term\":\"milliequivalent\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05033910\"]}");
	add("{\"term\":\"millifarad\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13657614\"]}");
	add("{\"term\":\"milligram\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13745171\"]}");
	add("{\"term\":\"millihenry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13660753\"]}");
	add("{\"term\":\"millikan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11200466\"]}");
	add("{\"term\":\"milliliter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13644955\"]}");
	add("{\"term\":\"millilitre\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13644955\"]}");
	add("{\"term\":\"millime\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13693040\"]}");
	add("{\"term\":\"millimeter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13680427\"]}");
	add("{\"term\":\"millimetre\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13680427\"]}");
	add("{\"term\":\"millimicron\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13679972\"]}");
	add("{\"term\":\"milline\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13735264\"]}");
	add("{\"term\":\"milliner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10181947\"]}");
	add("{\"term\":\"millinery\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03771857\", \"03772043\"]}");
	add("{\"term\":\"milling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03772135\"]}");
	add("{\"term\":\"million\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13798632\", \"13773673\"]}");
	add("{\"term\":\"millionaire\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10549130\"]}");
	add("{\"term\":\"millionairess\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10338265\"]}");
	add("{\"term\":\"millionth\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13761647\", \"13872110\"]}");
	add("{\"term\":\"milliped\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01789287\"]}");
	add("{\"term\":\"millipede\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01789287\"]}");
	add("{\"term\":\"milliradian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13633127\"]}");
	add("{\"term\":\"millirem\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13668036\"]}");
	add("{\"term\":\"millisecond\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15261135\"]}");
	add("{\"term\":\"millivolt\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13664075\"]}");
	add("{\"term\":\"millivoltmeter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03772232\"]}");
	add("{\"term\":\"milliwatt\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13665858\"]}");
	add("{\"term\":\"millpond\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09378158\"]}");
	add("{\"term\":\"millrace\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03772351\"]}");
	add("{\"term\":\"millrun\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03772351\"]}");
	add("{\"term\":\"mills\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11200633\"]}");
	add("{\"term\":\"millstone\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03772470\", \"03772647\", \"05697450\"]}");
	add("{\"term\":\"millwheel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03772738\"]}");
	add("{\"term\":\"millwork\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03772898\"]}");
	add("{\"term\":\"millwright\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10338344\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }