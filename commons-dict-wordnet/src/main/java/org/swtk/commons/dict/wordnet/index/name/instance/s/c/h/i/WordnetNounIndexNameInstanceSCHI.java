package org.swtk.commons.dict.wordnet.index.name.instance.s.c.h.i;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceSCHI {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"schiaparelli\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11304014\", \"11304206\"]}");
	add("{\"term\":\"schiller\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11304399\"]}");
	add("{\"term\":\"schilling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13728034\"]}");
	add("{\"term\":\"schinus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12785463\"]}");
	add("{\"term\":\"schipperke\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02107017\"]}");
	add("{\"term\":\"schism\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07328678\", \"00387484\"]}");
	add("{\"term\":\"schist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14913522\"]}");
	add("{\"term\":\"schistorrhachis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14494808\"]}");
	add("{\"term\":\"schistosoma\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01929629\"]}");
	add("{\"term\":\"schistosomatidae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01929481\"]}");
	add("{\"term\":\"schistosome\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01929800\"]}");
	add("{\"term\":\"schistosomiasis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14204047\"]}");
	add("{\"term\":\"schizachyrium\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12153849\"]}");
	add("{\"term\":\"schizaea\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12975951\"]}");
	add("{\"term\":\"schizaeaceae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12975738\"]}");
	add("{\"term\":\"schizanthus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12933904\"]}");
	add("{\"term\":\"schizocarp\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13171369\"]}");
	add("{\"term\":\"schizogony\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13574621\"]}");
	add("{\"term\":\"schizoid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14412163\"]}");
	add("{\"term\":\"schizomycetes\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01360776\"]}");
	add("{\"term\":\"schizopetalon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11916610\"]}");
	add("{\"term\":\"schizophragma\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12812299\"]}");
	add("{\"term\":\"schizophrenia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14421927\"]}");
	add("{\"term\":\"schizophrenic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10576132\"]}");
	add("{\"term\":\"schizophyceae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01361545\"]}");
	add("{\"term\":\"schizophyta\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01360608\"]}");
	add("{\"term\":\"schizopoda\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01990960\"]}");
	add("{\"term\":\"schizosaccharomyces\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13047099\"]}");
	add("{\"term\":\"schizosaccharomycetaceae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13046906\"]}");
	add("{\"term\":\"schizothymia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14416438\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }