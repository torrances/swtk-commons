package org.swtk.commons.dict.wordnet.index.instance.p1.p4;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexInstance1491 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("14910008", "{\"term\":\"glycerinated gelatin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14910008\"]}");
	add("14910188", "{\"term\":\"glycerin jelly\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14910188\"]}");
	add("14910331", "{\"term\":\"glycerite\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14910331\"]}");
	add("14910331", "{\"term\":\"glycerole\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14910331\"]}");
	add("14910448", "{\"term\":\"glycerogel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14910448\"]}");
	add("14910448", "{\"term\":\"glycerogelatin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14910448\"]}");
	add("14910594", "{\"term\":\"glyceryl\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14910594\"]}");
	add("14910730", "{\"term\":\"glyceryl trinitrate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14910730\"]}");
	add("14910730", "{\"term\":\"nitroglycerin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14910730\"]}");
	add("14910730", "{\"term\":\"nitroglycerine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14910730\"]}");
	add("14910730", "{\"term\":\"nitrospan\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03832302\", \"14910730\"]}");
	add("14910730", "{\"term\":\"nitrostat\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03832302\", \"14910730\"]}");
	add("14910730", "{\"term\":\"trinitroglycerin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14910730\"]}");
	add("14911177", "{\"term\":\"glyceryl ester\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14911177\"]}");
	add("14911456", "{\"term\":\"glycoside\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14911456\"]}");
	add("14911615", "{\"term\":\"amygdalin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14911615\"]}");
	add("14911784", "{\"term\":\"laetrile\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14911784\"]}");
	add("14911952", "{\"term\":\"glucoside\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14911952\"]}");
	add("14912076", "{\"term\":\"saponin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14912076\"]}");
	add("14912275", "{\"term\":\"glycolic acid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14912275\"]}");
	add("14912275", "{\"term\":\"glycollic acid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14912275\"]}");
	add("14912275", "{\"term\":\"hydroxyacetic acid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14912275\"]}");
	add("14912461", "{\"term\":\"glycoprotein\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14912461\"]}");
	add("14912680", "{\"term\":\"cd4\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14912680\"]}");
	add("14912680", "{\"term\":\"cluster of differentiation 4\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14912680\"]}");
	add("14912871", "{\"term\":\"cd8\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14912871\"]}");
	add("14912871", "{\"term\":\"cluster of differentiation 8\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14912871\"]}");
	add("14913035", "{\"term\":\"haemoprotein\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14913035\"]}");
	add("14913035", "{\"term\":\"hemoprotein\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14913035\"]}");
	add("14913225", "{\"term\":\"lectin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14913225\"]}");
	add("14913422", "{\"term\":\"gneiss\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14913422\"]}");
	add("14913522", "{\"term\":\"schist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14913522\"]}");
	add("14913630", "{\"term\":\"rust\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"13084029\", \"13573473\", \"14301157\", \"14913630\"]}");
	add("14913879", "{\"term\":\"goitrogen\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14913879\"]}");
	add("14914008", "{\"term\":\"goldstone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14914008\"]}");
	add("14914124", "{\"term\":\"fig wax\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14914124\"]}");
	add("14914124", "{\"term\":\"gondang wax\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14914124\"]}");
	add("14914250", "{\"term\":\"goose grease\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14914250\"]}");
	add("14914334", "{\"term\":\"graph paper\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14914334\"]}");
	add("14914437", "{\"term\":\"granite\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04785353\", \"14914437\"]}");
	add("14914636", "{\"term\":\"globular pearlite\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14914636\"]}");
	add("14914636", "{\"term\":\"granular pearlite\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14914636\"]}");
	add("14914810", "{\"term\":\"lube\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14914810\"]}");
	add("14914810", "{\"term\":\"lubricant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14914810\"]}");
	add("14914810", "{\"term\":\"lubricating substance\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14914810\"]}");
	add("14914810", "{\"term\":\"lubricator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14914810\"]}");
	add("14915096", "{\"term\":\"grease\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"14521680\", \"14915096\"]}");
	add("14915096", "{\"term\":\"lubricating oil\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14915096\"]}");
	add("14915283", "{\"term\":\"greaseproof paper\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14915283\"]}");
	add("14915406", "{\"term\":\"greek fire\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14915406\"]}");
	add("14915576", "{\"term\":\"green gold\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14915576\"]}");
	add("14915732", "{\"term\":\"greisen\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14915732\"]}");
	add("14915829", "{\"term\":\"groundmass\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14915829\"]}");
	add("14916019", "{\"term\":\"grid metal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14916019\"]}");
	add("14916139", "{\"term\":\"grout\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14916139\"]}");
	add("14916289", "{\"term\":\"g\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"06844869\", \"13611530\", \"13650222\", \"13650416\", \"13670214\", \"13772984\", \"14854134\", \"14916289\", \"13745822\"]}");
	add("14916289", "{\"term\":\"guanine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14916289\"]}");
	add("14916440", "{\"term\":\"guano\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14916440\"]}");
	add("14916556", "{\"term\":\"guinea gold\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"14916556\", \"15027706\"]}");
	add("14916661", "{\"term\":\"gunite\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14916661\"]}");
	add("14916806", "{\"term\":\"essential oil\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14916806\"]}");
	add("14916806", "{\"term\":\"volatile oil\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14916806\"]}");
	add("14917140", "{\"term\":\"atar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14917140\"]}");
	add("14917140", "{\"term\":\"athar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14917140\"]}");
	add("14917140", "{\"term\":\"attar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14917140\"]}");
	add("14917140", "{\"term\":\"ottar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14917140\"]}");
	add("14917279", "{\"term\":\"attar of roses\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14917279\"]}");
	add("14917279", "{\"term\":\"rose oil\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14917279\"]}");
	add("14917422", "{\"term\":\"clove oil\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14917422\"]}");
	add("14917422", "{\"term\":\"oil of cloves\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14917422\"]}");
	add("14917557", "{\"term\":\"costus oil\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14917557\"]}");
	add("14917688", "{\"term\":\"eucalyptus oil\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14917688\"]}");
	add("14917803", "{\"term\":\"oil of turpentine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14917803\"]}");
	add("14917803", "{\"term\":\"spirit of turpentine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14917803\"]}");
	add("14917803", "{\"term\":\"turpentine\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"14917803\", \"14921520\"]}");
	add("14917803", "{\"term\":\"turps\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14917803\"]}");
	add("14918032", "{\"term\":\"absinthe oil\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14918032\"]}");
	add("14918032", "{\"term\":\"wormwood oil\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14918032\"]}");
	add("14918180", "{\"term\":\"linalool\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14918180\"]}");
	add("14918291", "{\"term\":\"resin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14918291\"]}");
	add("14918291", "{\"term\":\"rosin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14918291\"]}");
	add("14918632", "{\"term\":\"natural resin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14918632\"]}");
	add("14919031", "{\"term\":\"amber\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"14919031\", \"04973417\"]}");
	add("14919154", "{\"term\":\"urea-formaldehyde resin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14919154\"]}");
	add("14919340", "{\"term\":\"copal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14919340\"]}");
	add("14919524", "{\"term\":\"copaline\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14919524\"]}");
	add("14919524", "{\"term\":\"copalite\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14919524\"]}");
	add("14919524", "{\"term\":\"fossil copal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14919524\"]}");
	add("14919649", "{\"term\":\"congo copal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14919649\"]}");
	add("14919649", "{\"term\":\"congo gum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14919649\"]}");
	add("14919750", "{\"term\":\"kauri\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"11667999\", \"11668154\", \"14919750\"]}");
	add("14919750", "{\"term\":\"kauri copal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14919750\"]}");
	add("14919750", "{\"term\":\"kauri gum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14919750\"]}");
	add("14919750", "{\"term\":\"kauri resin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14919750\"]}");
	add("14919958", "{\"term\":\"damar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14919958\"]}");
	add("14919958", "{\"term\":\"dammar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14919958\"]}");
	add("14919958", "{\"term\":\"dammar resin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14919958\"]}");
	add("14919958", "{\"term\":\"gum dammar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14919958\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }