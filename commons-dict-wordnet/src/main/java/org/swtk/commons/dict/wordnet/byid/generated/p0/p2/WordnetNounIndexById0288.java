package org.swtk.commons.dict.wordnet.byid.generated.p0.p2;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexById0288 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("02880508", "{\"term\":\"bottle\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02880508\", \"13787536\", \"02879899\"]}");
	add("02880508", "{\"term\":\"feeding bottle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02880508\"]}");
	add("02880508", "{\"term\":\"nursing bottle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02880508\"]}");
	add("02880755", "{\"term\":\"bottle bank\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02880755\"]}");
	add("02880884", "{\"term\":\"bottlebrush\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02880884\"]}");
	add("02881007", "{\"term\":\"bottlecap\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02881007\"]}");
	add("02881107", "{\"term\":\"bottleneck\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02881107\", \"13936007\"]}");
	add("02881204", "{\"term\":\"bottle opener\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02881204\"]}");
	add("02881349", "{\"term\":\"bottling plant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02881349\"]}");
	add("02881464", "{\"term\":\"bottom\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"02881464\", \"09250335\", \"09240545\", \"15281056\", \"05566889\", \"08529042\", \"08528313\"]}");
	add("02881464", "{\"term\":\"freighter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02881464\"]}");
	add("02881464", "{\"term\":\"merchant ship\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02881464\"]}");
	add("02881464", "{\"term\":\"merchantman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02881464\"]}");
	add("02881667", "{\"term\":\"boucle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02881667\"]}");
	add("02881776", "{\"term\":\"boudoir\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02881776\"]}");
	add("02881870", "{\"term\":\"boule\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02881870\"]}");
	add("02881870", "{\"term\":\"boulle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02881870\"]}");
	add("02881870", "{\"term\":\"buhl\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02881870\"]}");
	add("02882038", "{\"term\":\"bouncing betty\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02882038\"]}");
	add("02882125", "{\"term\":\"bounty\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"02882125\", \"04839475\", \"05122718\", \"13293082\"]}");
	add("02882125", "{\"term\":\"h.m.s. bounty\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02882125\"]}");
	add("02882329", "{\"term\":\"bouquet\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04987712\", \"02882329\"]}");
	add("02882329", "{\"term\":\"corsage\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02882329\"]}");
	add("02882329", "{\"term\":\"nosegay\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02882329\"]}");
	add("02882329", "{\"term\":\"posy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02882329\"]}");
	add("02882470", "{\"term\":\"bourse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02882470\"]}");
	add("02882551", "{\"term\":\"boutique\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02882551\"]}");
	add("02882551", "{\"term\":\"dress shop\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02882551\"]}");
	add("02882664", "{\"term\":\"boutonniere\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02882664\"]}");
	add("02882759", "{\"term\":\"bow\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00548802\", \"02883550\", \"07244001\", \"07289130\", \"13918793\", \"02882960\", \"02883250\", \"02882759\", \"02883431\"]}");
	add("02882960", "{\"term\":\"bow\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00548802\", \"02883550\", \"07244001\", \"07289130\", \"13918793\", \"02882960\", \"02883250\", \"02882759\", \"02883431\"]}");
	add("02883250", "{\"term\":\"bow\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00548802\", \"02883550\", \"07244001\", \"07289130\", \"13918793\", \"02882960\", \"02883250\", \"02882759\", \"02883431\"]}");
	add("02883250", "{\"term\":\"fore\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02883250\"]}");
	add("02883250", "{\"term\":\"prow\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02883250\"]}");
	add("02883250", "{\"term\":\"stem\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00442441\", \"02883250\", \"04320909\", \"04191138\", \"13149924\", \"06311183\"]}");
	add("02883431", "{\"term\":\"bow\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00548802\", \"02883550\", \"07244001\", \"07289130\", \"13918793\", \"02882960\", \"02883250\", \"02882759\", \"02883431\"]}");
	add("02883431", "{\"term\":\"bowknot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02883431\"]}");
	add("02883550", "{\"term\":\"bow\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00548802\", \"02883550\", \"07244001\", \"07289130\", \"13918793\", \"02882960\", \"02883250\", \"02882759\", \"02883431\"]}");
	add("02883635", "{\"term\":\"bow and arrow\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02883635\"]}");
	add("02883788", "{\"term\":\"bowed stringed instrument\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02883788\"]}");
	add("02883788", "{\"term\":\"string\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"03003364\", \"04345456\", \"09472431\", \"14891516\", \"03240263\", \"07026665\", \"08476659\", \"04345281\", \"02883788\", \"04345112\"]}");
	add("02884084", "{\"term\":\"bowie knife\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02884084\"]}");
	add("02884182", "{\"term\":\"bowl\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00105229\", \"02884638\", \"02884787\", \"02885542\", \"04303019\", \"13787671\", \"02884182\", \"13916387\", \"02884435\"]}");
	add("02884435", "{\"term\":\"bowl\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00105229\", \"02884638\", \"02884787\", \"02885542\", \"04303019\", \"13787671\", \"02884182\", \"13916387\", \"02884435\"]}");
	add("02884638", "{\"term\":\"bowl\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00105229\", \"02884638\", \"02884787\", \"02885542\", \"04303019\", \"13787671\", \"02884182\", \"13916387\", \"02884435\"]}");
	add("02884638", "{\"term\":\"pipe bowl\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02884638\"]}");
	add("02884787", "{\"term\":\"bowl\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00105229\", \"02884638\", \"02884787\", \"02885542\", \"04303019\", \"13787671\", \"02884182\", \"13916387\", \"02884435\"]}");
	add("02884998", "{\"term\":\"bowler\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02884998\", \"09889367\", \"09889502\"]}");
	add("02884998", "{\"term\":\"bowler hat\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02884998\"]}");
	add("02884998", "{\"term\":\"derby\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02884998\"]}");
	add("02884998", "{\"term\":\"derby hat\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02884998\"]}");
	add("02884998", "{\"term\":\"plug hat\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02884998\"]}");
	add("02885147", "{\"term\":\"bowline\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02885147\"]}");
	add("02885147", "{\"term\":\"bowline knot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02885147\"]}");
	add("02885255", "{\"term\":\"alley\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02885255\", \"02700618\"]}");
	add("02885255", "{\"term\":\"bowling alley\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02885255\", \"02885431\"]}");
	add("02885255", "{\"term\":\"skittle alley\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02885255\"]}");
	add("02885431", "{\"term\":\"bowling alley\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02885255\", \"02885431\"]}");
	add("02885542", "{\"term\":\"bowl\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00105229\", \"02884638\", \"02884787\", \"02885542\", \"04303019\", \"13787671\", \"02884182\", \"13916387\", \"02884435\"]}");
	add("02885542", "{\"term\":\"bowling ball\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02885542\"]}");
	add("02885724", "{\"term\":\"bowling equipment\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02885724\"]}");
	add("02885888", "{\"term\":\"bowling pin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02885888\"]}");
	add("02885888", "{\"term\":\"pin\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"02885888\", \"03911849\", \"03946532\", \"03947170\", \"03947289\", \"03958247\", \"05569340\", \"06900491\", \"07286496\", \"07486511\", \"03946989\"]}");
	add("02886135", "{\"term\":\"bowling shoe\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02886135\"]}");
	add("02886245", "{\"term\":\"bowsprit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02886245\"]}");
	add("02886342", "{\"term\":\"bowstring\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02886342\"]}");
	add("02886446", "{\"term\":\"bow-tie\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02886446\"]}");
	add("02886446", "{\"term\":\"bow tie\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02886446\"]}");
	add("02886446", "{\"term\":\"bowtie\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02886446\"]}");
	add("02886585", "{\"term\":\"box\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"00135968\", \"02887252\", \"02887691\", \"02887848\", \"12766866\", \"13906151\", \"14432355\", \"13787764\", \"02887466\", \"02886585\"]}");
	add("02887252", "{\"term\":\"box\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"00135968\", \"02887252\", \"02887691\", \"02887848\", \"12766866\", \"13906151\", \"14432355\", \"13787764\", \"02887466\", \"02886585\"]}");
	add("02887466", "{\"term\":\"box\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"00135968\", \"02887252\", \"02887691\", \"02887848\", \"12766866\", \"13906151\", \"14432355\", \"13787764\", \"02887466\", \"02886585\"]}");
	add("02887466", "{\"term\":\"loge\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02887466\", \"03692329\"]}");
	add("02887691", "{\"term\":\"box\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"00135968\", \"02887252\", \"02887691\", \"02887848\", \"12766866\", \"13906151\", \"14432355\", \"13787764\", \"02887466\", \"02886585\"]}");
	add("02887691", "{\"term\":\"box seat\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02887691\", \"02889424\"]}");
	add("02887848", "{\"term\":\"box\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"00135968\", \"02887252\", \"02887691\", \"02887848\", \"12766866\", \"13906151\", \"14432355\", \"13787764\", \"02887466\", \"02886585\"]}");
	add("02888100", "{\"term\":\"box beam\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02888100\"]}");
	add("02888100", "{\"term\":\"box girder\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02888100\"]}");
	add("02888235", "{\"term\":\"box camera\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02888235\"]}");
	add("02888235", "{\"term\":\"box kodak\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02888235\"]}");
	add("02888349", "{\"term\":\"boxcar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02888349\"]}");
	add("02888474", "{\"term\":\"box coat\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02888474\"]}");
	add("02888579", "{\"term\":\"boxing equipment\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02888579\"]}");
	add("02888703", "{\"term\":\"boxing glove\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02888703\"]}");
	add("02888703", "{\"term\":\"glove\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02888703\", \"03446036\", \"02803372\"]}");
	add("02888904", "{\"term\":\"boxing ring\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02888904\"]}");
	add("02888904", "{\"term\":\"prize ring\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02888904\"]}");
	add("02889026", "{\"term\":\"box kite\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02889026\"]}");
	add("02889123", "{\"term\":\"box office\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02889123\", \"13279066\"]}");
	add("02889123", "{\"term\":\"ticket booth\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02889123\"]}");
	add("02889123", "{\"term\":\"ticket office\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02889123\"]}");
	add("02889276", "{\"term\":\"box pleat\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02889276\"]}");
	add("02889424", "{\"term\":\"box seat\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02887691\", \"02889424\"]}");
	add("02889562", "{\"term\":\"box spring\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02889562\"]}");
	add("02889675", "{\"term\":\"box end wrench\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02889675\"]}");
	add("02889675", "{\"term\":\"box wrench\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02889675\"]}");
	add("02889840", "{\"term\":\"brace\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"02889840\", \"02890148\", \"02890320\", \"02890730\", \"02890924\", \"06855215\", \"08001665\", \"13765745\", \"02890450\"]}");
	add("02889840", "{\"term\":\"bracing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02889840\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }