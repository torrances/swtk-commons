package org.swtk.commons.dict.wordnet.index.byid.instance.p0.p4;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0459 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("04590057", "{\"term\":\"hoop\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"02805381\", \"04590057\", \"03539152\", \"03539609\"]}");
	add("04590057", "{\"term\":\"wicket\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04589740\", \"04589911\", \"04590057\", \"04590155\"]}");
	add("04590155", "{\"term\":\"wicket\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04589740\", \"04589911\", \"04590057\", \"04590155\"]}");
	add("04590308", "{\"term\":\"wickiup\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04590308\"]}");
	add("04590308", "{\"term\":\"wikiup\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04590308\"]}");
	add("04590498", "{\"term\":\"fisheye lens\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04590498\"]}");
	add("04590498", "{\"term\":\"wide-angle lens\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04590498\"]}");
	add("04590763", "{\"term\":\"wan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04590763\"]}");
	add("04590763", "{\"term\":\"wide area network\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04590763\"]}");
	add("04590906", "{\"term\":\"twin-aisle airplane\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04590906\"]}");
	add("04590906", "{\"term\":\"wide-body\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04590906\"]}");
	add("04590906", "{\"term\":\"wide-body aircraft\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04590906\"]}");
	add("04590906", "{\"term\":\"widebody aircraft\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04590906\"]}");
	add("04591062", "{\"term\":\"wide screen\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04591062\"]}");
	add("04591174", "{\"term\":\"wide wale\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04591174\"]}");
	add("04591253", "{\"term\":\"widow\u0027s walk\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04591253\"]}");
	add("04591342", "{\"term\":\"wiffle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04591342\"]}");
	add("04591342", "{\"term\":\"wiffle ball\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04591342\"]}");
	add("04591493", "{\"term\":\"wig\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06726038\", \"04591493\"]}");
	add("04591659", "{\"term\":\"wigwam\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04591659\"]}");
	add("04591798", "{\"term\":\"wild card\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04591798\", \"07343246\"]}");
	add("04591925", "{\"term\":\"wildcat\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02127275\", \"09864997\", \"04591925\"]}");
	add("04591925", "{\"term\":\"wildcat well\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04591925\"]}");
	add("04592080", "{\"term\":\"willow\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04592080\", \"12745702\"]}");
	add("04592230", "{\"term\":\"willow-pattern\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04592230\"]}");
	add("04592230", "{\"term\":\"willowware\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04592230\"]}");
	add("04592414", "{\"term\":\"wilton\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04592414\"]}");
	add("04592414", "{\"term\":\"wilton carpet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04592414\"]}");
	add("04592604", "{\"term\":\"wimple\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04592604\"]}");
	add("04592742", "{\"term\":\"wincey\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04592742\"]}");
	add("04592912", "{\"term\":\"winceyette\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04592912\"]}");
	add("04593031", "{\"term\":\"winch\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04593031\"]}");
	add("04593031", "{\"term\":\"windlass\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04593031\"]}");
	add("04593266", "{\"term\":\"winchester\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04593266\", \"08901086\"]}");
	add("04593358", "{\"term\":\"shelterbelt\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04593358\"]}");
	add("04593358", "{\"term\":\"windbreak\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04593358\"]}");
	add("04593511", "{\"term\":\"wind bell\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04593511\"]}");
	add("04593511", "{\"term\":\"wind chime\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04593511\"]}");
	add("04593707", "{\"term\":\"winder\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04593707\", \"04593867\", \"10801660\"]}");
	add("04593867", "{\"term\":\"key\", \"synsetCount\":15, \"upperType\":\"NOUN\", \"ids\":[\"03618801\", \"03620342\", \"04593867\", \"06436512\", \"06504179\", \"06504429\", \"08608465\", \"09348301\", \"11123094\", \"12056695\", \"13746948\", \"06876801\", \"04993396\", \"05802065\", \"03618503\"]}");
	add("04593867", "{\"term\":\"winder\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04593707\", \"04593867\", \"10801660\"]}");
	add("04594047", "{\"term\":\"wind energy facility\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04594047\"]}");
	add("04594047", "{\"term\":\"wind farm\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04594047\"]}");
	add("04594047", "{\"term\":\"wind park\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04594047\"]}");
	add("04594218", "{\"term\":\"wind\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"00346467\", \"00841258\", \"04594218\", \"06664322\", \"07151419\", \"00838198\", \"11435606\", \"11546388\"]}");
	add("04594218", "{\"term\":\"wind instrument\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04594218\"]}");
	add("04594630", "{\"term\":\"windjammer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04594630\"]}");
	add("04594707", "{\"term\":\"aerogenerator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04594707\"]}");
	add("04594707", "{\"term\":\"wind generator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04594707\"]}");
	add("04594707", "{\"term\":\"windmill\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04594707\", \"04594862\"]}");
	add("04594862", "{\"term\":\"windmill\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04594707\", \"04594862\"]}");
	add("04594951", "{\"term\":\"window\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"04596042\", \"04596289\", \"04597048\", \"15325026\", \"09503207\", \"04595890\", \"04595668\", \"04594951\"]}");
	add("04595668", "{\"term\":\"window\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"04596042\", \"04596289\", \"04597048\", \"15325026\", \"09503207\", \"04595890\", \"04595668\", \"04594951\"]}");
	add("04595890", "{\"term\":\"window\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"04596042\", \"04596289\", \"04597048\", \"15325026\", \"09503207\", \"04595890\", \"04595668\", \"04594951\"]}");
	add("04596042", "{\"term\":\"window\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"04596042\", \"04596289\", \"04597048\", \"15325026\", \"09503207\", \"04595890\", \"04595668\", \"04594951\"]}");
	add("04596289", "{\"term\":\"window\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"04596042\", \"04596289\", \"04597048\", \"15325026\", \"09503207\", \"04595890\", \"04595668\", \"04594951\"]}");
	add("04596493", "{\"term\":\"window blind\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04596493\"]}");
	add("04596628", "{\"term\":\"window box\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04596628\"]}");
	add("04596737", "{\"term\":\"window envelope\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04596737\"]}");
	add("04596896", "{\"term\":\"window frame\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04596896\"]}");
	add("04597048", "{\"term\":\"window\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"04596042\", \"04596289\", \"04597048\", \"15325026\", \"09503207\", \"04595890\", \"04595668\", \"04594951\"]}");
	add("04597048", "{\"term\":\"windowpane\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02665455\", \"04597048\"]}");
	add("04597193", "{\"term\":\"window screen\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04597193\"]}");
	add("04597324", "{\"term\":\"window seat\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04597324\"]}");
	add("04597432", "{\"term\":\"window shade\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04597432\"]}");
	add("04597566", "{\"term\":\"windowsill\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04597566\"]}");
	add("04597719", "{\"term\":\"wind rose\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04597719\"]}");
	add("04597856", "{\"term\":\"windscreen\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04597856\"]}");
	add("04597856", "{\"term\":\"windshield\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04597856\"]}");
	add("04598049", "{\"term\":\"windscreen wiper\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04598049\"]}");
	add("04598049", "{\"term\":\"windshield wiper\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04598049\"]}");
	add("04598049", "{\"term\":\"wiper\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04598049\", \"04601193\", \"10803322\"]}");
	add("04598049", "{\"term\":\"wiper blade\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04598049\"]}");
	add("04598236", "{\"term\":\"windsor chair\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04598236\"]}");
	add("04598359", "{\"term\":\"windsor knot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04598359\"]}");
	add("04598460", "{\"term\":\"windsor tie\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04598460\"]}");
	add("04598552", "{\"term\":\"wind tee\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04598552\"]}");
	add("04598662", "{\"term\":\"wind tunnel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04598662\"]}");
	add("04598820", "{\"term\":\"wind turbine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04598820\"]}");
	add("04598934", "{\"term\":\"wine bar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04598934\"]}");
	add("04599016", "{\"term\":\"wine bottle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04599016\"]}");
	add("04599190", "{\"term\":\"wine bucket\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04599190\"]}");
	add("04599190", "{\"term\":\"wine cooler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04599190\"]}");
	add("04599308", "{\"term\":\"wine barrel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04599308\"]}");
	add("04599308", "{\"term\":\"wine cask\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04599308\"]}");
	add("04599402", "{\"term\":\"wineglass\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04599402\"]}");
	add("04599546", "{\"term\":\"wineglass heel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04599546\"]}");
	add("04599659", "{\"term\":\"winepress\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04599659\"]}");
	add("04599768", "{\"term\":\"wine maker\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04599768\", \"10773756\"]}");
	add("04599768", "{\"term\":\"winery\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04599768\"]}");
	add("04599923", "{\"term\":\"wineskin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04599923\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }