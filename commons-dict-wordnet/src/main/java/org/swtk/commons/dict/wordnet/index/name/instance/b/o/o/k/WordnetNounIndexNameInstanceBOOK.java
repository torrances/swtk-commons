package org.swtk.commons.dict.wordnet.index.name.instance.b.o.o.k;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceBOOK {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"book\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"02873887\", \"06406508\", \"06443410\", \"06473279\", \"07970797\", \"07971027\", \"13425421\", \"07023062\", \"06649049\", \"02873453\", \"06422547\"]}");
	add("{\"term\":\"bookbinder\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09885150\"]}");
	add("{\"term\":\"bookbindery\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02874133\"]}");
	add("{\"term\":\"bookbinding\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00608489\"]}");
	add("{\"term\":\"bookcase\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02874241\"]}");
	add("{\"term\":\"bookclub\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08245459\"]}");
	add("{\"term\":\"bookdealer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09885244\"]}");
	add("{\"term\":\"bookend\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02874366\"]}");
	add("{\"term\":\"booker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09885360\"]}");
	add("{\"term\":\"bookfair\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01120659\", \"08425375\"]}");
	add("{\"term\":\"bookie\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09885628\"]}");
	add("{\"term\":\"booking\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01220817\", \"00271763\"]}");
	add("{\"term\":\"bookishness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04873596\"]}");
	add("{\"term\":\"bookkeeper\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09885521\"]}");
	add("{\"term\":\"bookkeeping\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00620470\"]}");
	add("{\"term\":\"booklet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06425532\"]}");
	add("{\"term\":\"booklouse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02264071\"]}");
	add("{\"term\":\"booklover\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09872087\"]}");
	add("{\"term\":\"bookmaker\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09885628\", \"09885760\"]}");
	add("{\"term\":\"bookman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10577282\"]}");
	add("{\"term\":\"bookmark\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02874508\"]}");
	add("{\"term\":\"bookmarker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02874508\"]}");
	add("{\"term\":\"bookmobile\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02874675\"]}");
	add("{\"term\":\"bookplate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07287121\"]}");
	add("{\"term\":\"bookseller\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09885879\"]}");
	add("{\"term\":\"bookshelf\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02874800\"]}");
	add("{\"term\":\"bookshop\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02874886\"]}");
	add("{\"term\":\"bookstall\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02874886\"]}");
	add("{\"term\":\"bookstore\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02874886\"]}");
	add("{\"term\":\"bookworm\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09885965\", \"10431101\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public boolean has(final String TERM) { 		return map.containsKey(TERM); 	} }