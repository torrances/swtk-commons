package org.swtk.commons.dict.wordnet.byid.generated.p0.p6;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexById0688 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("06880107", "{\"term\":\"double flat\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06880107\"]}");
	add("06880268", "{\"term\":\"cancel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06880268\"]}");
	add("06880268", "{\"term\":\"natural\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01248497\", \"06880268\", \"10366123\"]}");
	add("06880395", "{\"term\":\"accidental\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06880395\"]}");
	add("06880560", "{\"term\":\"fermata\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05059394\", \"06880560\"]}");
	add("06880725", "{\"term\":\"solmisation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06880725\"]}");
	add("06880725", "{\"term\":\"solmization\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01258522\", \"06880725\"]}");
	add("06880930", "{\"term\":\"solfa\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06880930\"]}");
	add("06880930", "{\"term\":\"tonic solfa\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06880930\"]}");
	add("06881093", "{\"term\":\"solfa syllable\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06881093\"]}");
	add("06881359", "{\"term\":\"do\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06716496\", \"06881359\", \"07462638\"]}");
	add("06881359", "{\"term\":\"doh\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06881359\"]}");
	add("06881359", "{\"term\":\"ut\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06881359\", \"09169783\", \"15155157\"]}");
	add("06881495", "{\"term\":\"ray\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"01498342\", \"01903360\", \"06881495\", \"11448493\", \"13936442\", \"13152275\", \"11448137\"]}");
	add("06881495", "{\"term\":\"re\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06881495\", \"09536351\", \"14676569\"]}");
	add("06881632", "{\"term\":\"mi\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"06881632\", \"08363582\", \"08364133\", \"09122118\", \"13672836\", \"13682449\", \"13682724\", \"14136503\"]}");
	add("06881759", "{\"term\":\"fa\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06881759\"]}");
	add("06881894", "{\"term\":\"so\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06881894\"]}");
	add("06881894", "{\"term\":\"soh\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06881894\"]}");
	add("06881894", "{\"term\":\"sol\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06881894\", \"09584722\", \"14614975\"]}");
	add("06882036", "{\"term\":\"la\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06882036\", \"09113391\", \"14667296\"]}");
	add("06882036", "{\"term\":\"lah\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06882036\"]}");
	add("06882179", "{\"term\":\"si\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06882179\", \"13599470\", \"14678720\"]}");
	add("06882179", "{\"term\":\"te\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06882179\", \"14681407\"]}");
	add("06882179", "{\"term\":\"ti\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06882179\", \"12499011\", \"14683390\"]}");
	add("06882321", "{\"term\":\"segno\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06882321\"]}");
	add("06882478", "{\"term\":\"sforzando\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06882478\", \"06882792\"]}");
	add("06882660", "{\"term\":\"arpeggio\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06882660\"]}");
	add("06882792", "{\"term\":\"sforzando\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06882478\", \"06882792\"]}");
	add("06882865", "{\"term\":\"middle c\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06882865\"]}");
	add("06883001", "{\"term\":\"chord\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06883001\", \"13897566\"]}");
	add("06883261", "{\"term\":\"common chord\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06883261\"]}");
	add("06883261", "{\"term\":\"triad\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"06883261\", \"08002508\", \"08002640\", \"13766184\"]}");
	add("06883399", "{\"term\":\"seventh chord\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06883399\"]}");
	add("06883487", "{\"term\":\"passing note\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06883487\"]}");
	add("06883487", "{\"term\":\"passing tone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06883487\"]}");
	add("06883626", "{\"term\":\"semibreve\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06883626\"]}");
	add("06883626", "{\"term\":\"whole note\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06883626\"]}");
	add("06883776", "{\"term\":\"whole rest\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06883776\"]}");
	add("06883894", "{\"term\":\"half note\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06883894\"]}");
	add("06883894", "{\"term\":\"minim\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06883894\", \"13639789\", \"13642292\"]}");
	add("06884015", "{\"term\":\"half rest\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06884015\"]}");
	add("06884177", "{\"term\":\"crotchet\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03142779\", \"04805073\", \"06884177\", \"13892186\"]}");
	add("06884177", "{\"term\":\"quarter note\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06884177\"]}");
	add("06884312", "{\"term\":\"quarter rest\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06884312\"]}");
	add("06884434", "{\"term\":\"eighth note\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06884434\"]}");
	add("06884434", "{\"term\":\"quaver\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06884434\", \"07405457\"]}");
	add("06884584", "{\"term\":\"semiquaver\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06884584\"]}");
	add("06884584", "{\"term\":\"sixteenth note\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06884584\"]}");
	add("06884725", "{\"term\":\"demisemiquaver\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06884725\"]}");
	add("06884725", "{\"term\":\"thirty-second note\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06884725\"]}");
	add("06884878", "{\"term\":\"hemidemisemiquaver\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06884878\"]}");
	add("06884878", "{\"term\":\"sixty-fourth note\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06884878\"]}");
	add("06885033", "{\"term\":\"acciaccatura\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06885033\"]}");
	add("06885033", "{\"term\":\"appoggiatura\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06885033\"]}");
	add("06885033", "{\"term\":\"grace note\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06885033\"]}");
	add("06885172", "{\"term\":\"singing voice\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06885172\"]}");
	add("06885404", "{\"term\":\"bass\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"02568204\", \"02806515\", \"06885404\", \"07793488\", \"07793921\", \"09861916\", \"07045779\", \"04994045\"]}");
	add("06885404", "{\"term\":\"bass voice\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06885404\"]}");
	add("06885404", "{\"term\":\"basso\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06885404\", \"09861916\"]}");
	add("06885529", "{\"term\":\"basso profundo\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06885529\"]}");
	add("06885612", "{\"term\":\"baritone\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02796112\", \"06885612\", \"09858824\"]}");
	add("06885612", "{\"term\":\"baritone voice\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06885612\"]}");
	add("06885726", "{\"term\":\"tenor\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"05931082\", \"06207238\", \"10721432\", \"04993303\", \"06885726\"]}");
	add("06885726", "{\"term\":\"tenor voice\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06885726\"]}");
	add("06885835", "{\"term\":\"alto\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"04993775\", \"04993886\", \"06885835\", \"06885955\", \"09805556\"]}");
	add("06885835", "{\"term\":\"countertenor\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06885835\", \"09989825\"]}");
	add("06885955", "{\"term\":\"alto\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"04993775\", \"04993886\", \"06885835\", \"06885955\", \"09805556\"]}");
	add("06885955", "{\"term\":\"contralto\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06885955\", \"09980677\"]}");
	add("06886067", "{\"term\":\"mezzo\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06886067\", \"10333099\"]}");
	add("06886067", "{\"term\":\"mezzo-soprano\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06886067\", \"10333099\"]}");
	add("06886189", "{\"term\":\"soprano\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04993179\", \"06886189\", \"10644908\"]}");
	add("06886302", "{\"term\":\"visual communication\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06886302\"]}");
	add("06886621", "{\"term\":\"visual signal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06886621\"]}");
	add("06886977", "{\"term\":\"watch fire\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06886977\"]}");
	add("06887069", "{\"term\":\"light\", \"synsetCount\":15, \"upperType\":\"NOUN\", \"ids\":[\"03671917\", \"06887069\", \"09207565\", \"05620489\", \"04960557\", \"05815941\", \"14006789\", \"10296356\", \"04958550\", \"14587365\", \"08663763\", \"05025269\", \"06220526\", \"03670692\", \"11494354\"]}");
	add("06887235", "{\"term\":\"stoplight\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06887235\", \"07280695\"]}");
	add("06887235", "{\"term\":\"traffic light\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06887235\"]}");
	add("06887235", "{\"term\":\"traffic signal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06887235\"]}");
	add("06887441", "{\"term\":\"go-ahead\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04843305\", \"06887441\"]}");
	add("06887441", "{\"term\":\"green light\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06702693\", \"06887441\"]}");
	add("06887547", "{\"term\":\"red light\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06887547\", \"06887621\"]}");
	add("06887621", "{\"term\":\"red light\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06887547\", \"06887621\"]}");
	add("06887621", "{\"term\":\"warning light\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06887621\"]}");
	add("06887738", "{\"term\":\"idiot light\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06887738\"]}");
	add("06887887", "{\"term\":\"yellow light\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06887887\"]}");
	add("06887980", "{\"term\":\"flare\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"00150917\", \"00562413\", \"03362739\", \"07028111\", \"11474727\", \"11530641\", \"14105271\", \"14250839\", \"06887980\", \"13503086\", \"13885247\"]}");
	add("06887980", "{\"term\":\"flash\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"03363018\", \"03363226\", \"06695239\", \"06887980\", \"06902380\", \"15271921\", \"05816450\", \"07301793\", \"04960363\", \"07426692\"]}");
	add("06888144", "{\"term\":\"flag\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"02161498\", \"03360185\", \"03947170\", \"06888144\", \"12432427\", \"06505149\", \"03359749\"]}");
	add("06888144", "{\"term\":\"signal flag\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06888144\"]}");
	add("06888338", "{\"term\":\"pennant\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03917985\", \"06888338\", \"06718654\"]}");
	add("06888442", "{\"term\":\"code flag\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06888442\"]}");
	add("06888442", "{\"term\":\"nautical signal flag\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06888442\"]}");
	add("06888602", "{\"term\":\"blue peter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06888602\"]}");
	add("06888747", "{\"term\":\"sign language\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06888747\"]}");
	add("06888747", "{\"term\":\"signing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06888747\"]}");
	add("06888933", "{\"term\":\"finger spelling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06888933\"]}");
	add("06888933", "{\"term\":\"fingerspelling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06888933\"]}");
	add("06889057", "{\"term\":\"american sign language\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06889057\"]}");
	add("06889057", "{\"term\":\"asl\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06889057\"]}");
	add("06889194", "{\"term\":\"sign\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"06824483\", \"07290723\", \"06889194\", \"07300719\", \"13878771\", \"14325305\", \"08703415\", \"04224949\", \"06804229\", \"06806088\", \"06659006\"]}");
	add("06889359", "{\"term\":\"gesture\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01230869\", \"06889359\", \"00335335\"]}");
	add("06889359", "{\"term\":\"motion\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"11445202\", \"00280679\", \"07178244\", \"14027802\", \"00332776\", \"07324399\", \"06889359\"]}");
	add("06889821", "{\"term\":\"gesticulation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06889821\"]}");
	add("06889942", "{\"term\":\"body language\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06889942\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }