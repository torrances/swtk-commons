package org.swtk.commons.dict.wordnet.index.byid.instance.p0.p3;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0387 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("03870080", "{\"term\":\"overhead\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00570511\", \"03870080\", \"04542074\", \"08573602\", \"15323254\", \"13298202\"]}");
	add("03870230", "{\"term\":\"overhead projector\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03870230\"]}");
	add("03870372", "{\"term\":\"overlay\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03870372\", \"04194276\"]}");
	add("03870532", "{\"term\":\"overburden\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03870532\", \"09404773\"]}");
	add("03870532", "{\"term\":\"overload\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03870532\", \"03870709\"]}");
	add("03870709", "{\"term\":\"overload\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03870532\", \"03870709\"]}");
	add("03870826", "{\"term\":\"overmantel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03870826\"]}");
	add("03870909", "{\"term\":\"overnight bag\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03870909\"]}");
	add("03870909", "{\"term\":\"overnight case\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03870909\"]}");
	add("03870909", "{\"term\":\"overnighter\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03870909\", \"10408346\"]}");
	add("03871095", "{\"term\":\"flyover\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00304123\", \"03871095\"]}");
	add("03871095", "{\"term\":\"overpass\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03871095\"]}");
	add("03871242", "{\"term\":\"monotype\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03789672\", \"03871242\", \"08126738\"]}");
	add("03871382", "{\"term\":\"overprint\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03871382\"]}");
	add("03871382", "{\"term\":\"surprint\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03871382\"]}");
	add("03871498", "{\"term\":\"override\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00232434\", \"03871498\"]}");
	add("03871627", "{\"term\":\"overshoe\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03871627\"]}");
	add("03871760", "{\"term\":\"overskirt\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03871760\"]}");
	add("03871854", "{\"term\":\"over-the-counter drug\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03871854\"]}");
	add("03871854", "{\"term\":\"over-the-counter medicine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03871854\"]}");
	add("03872028", "{\"term\":\"otc market\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03872028\"]}");
	add("03872028", "{\"term\":\"over-the-counter market\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03872028\"]}");
	add("03872233", "{\"term\":\"ovocon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03872233\"]}");
	add("03872399", "{\"term\":\"ovolo\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03872399\"]}");
	add("03872399", "{\"term\":\"quarter round\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03872399\"]}");
	add("03872399", "{\"term\":\"thumb\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03872399\", \"04438030\", \"05574850\"]}");
	add("03872586", "{\"term\":\"ovral\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03872586\"]}");
	add("03872748", "{\"term\":\"ovrette\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03872748\"]}");
	add("03872879", "{\"term\":\"ovulen\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03872879\"]}");
	add("03873033", "{\"term\":\"oxacillin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03873033\"]}");
	add("03873193", "{\"term\":\"daypro\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03873193\"]}");
	add("03873193", "{\"term\":\"oxaprozin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03873193\"]}");
	add("03873353", "{\"term\":\"oxazepam\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03873353\"]}");
	add("03873353", "{\"term\":\"serax\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03873353\"]}");
	add("03873532", "{\"term\":\"oxbow\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03873532\", \"09404912\", \"09404992\"]}");
	add("03873722", "{\"term\":\"oxbridge\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03873722\"]}");
	add("03873920", "{\"term\":\"oxcart\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03873920\"]}");
	add("03874002", "{\"term\":\"oxeye\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03874002\", \"11962956\", \"12001151\"]}");
	add("03874084", "{\"term\":\"oxford\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03874084\", \"03874187\", \"09100192\", \"08898034\"]}");
	add("03874187", "{\"term\":\"oxford\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03874084\", \"03874187\", \"09100192\", \"08898034\"]}");
	add("03874187", "{\"term\":\"oxford university\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03874187\"]}");
	add("03874321", "{\"term\":\"oximeter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03874321\"]}");
	add("03874441", "{\"term\":\"oxyacetylene torch\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03874441\"]}");
	add("03874541", "{\"term\":\"oxygen mask\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03874541\"]}");
	add("03874722", "{\"term\":\"oxyphenbutazone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03874722\"]}");
	add("03874722", "{\"term\":\"tandearil\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03874722\"]}");
	add("03874900", "{\"term\":\"daricon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03874900\"]}");
	add("03874900", "{\"term\":\"oxyphencyclimine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03874900\"]}");
	add("03875067", "{\"term\":\"hydroxytetracycline\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03875067\"]}");
	add("03875067", "{\"term\":\"oxytetracycline\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03875067\"]}");
	add("03875067", "{\"term\":\"oxytetracycline hydrochloride\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03875067\"]}");
	add("03875067", "{\"term\":\"terramycin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03875067\"]}");
	add("03875363", "{\"term\":\"oxytocic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03875363\"]}");
	add("03875363", "{\"term\":\"oxytocic drug\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03875363\"]}");
	add("03875516", "{\"term\":\"oyster bar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03875516\"]}");
	add("03875654", "{\"term\":\"oyster bank\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03875654\"]}");
	add("03875654", "{\"term\":\"oyster bed\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03875654\"]}");
	add("03875654", "{\"term\":\"oyster park\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03875654\"]}");
	add("03875783", "{\"term\":\"pace car\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03875783\"]}");
	add("03875968", "{\"term\":\"artificial pacemaker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03875968\"]}");
	add("03875968", "{\"term\":\"pacemaker\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"02390795\", \"03875968\", \"05396803\", \"05947351\"]}");
	add("03876139", "{\"term\":\"pacifier\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03079772\", \"03876139\", \"09971642\"]}");
	add("03876224", "{\"term\":\"pack\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"03876350\", \"03876500\", \"03876658\", \"08011383\", \"08257554\", \"08260983\", \"03876224\", \"07973040\", \"13797293\"]}");
	add("03876350", "{\"term\":\"pack\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"03876350\", \"03876500\", \"03876658\", \"08011383\", \"08257554\", \"08260983\", \"03876224\", \"07973040\", \"13797293\"]}");
	add("03876500", "{\"term\":\"pack\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"03876350\", \"03876500\", \"03876658\", \"08011383\", \"08257554\", \"08260983\", \"03876224\", \"07973040\", \"13797293\"]}");
	add("03876658", "{\"term\":\"face pack\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03876658\"]}");
	add("03876658", "{\"term\":\"pack\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"03876350\", \"03876500\", \"03876658\", \"08011383\", \"08257554\", \"08260983\", \"03876224\", \"07973040\", \"13797293\"]}");
	add("03876761", "{\"term\":\"package\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06578068\", \"03876761\", \"08024575\"]}");
	add("03876761", "{\"term\":\"parcel\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"08024575\", \"08691133\", \"01087022\", \"03876761\"]}");
	add("03876933", "{\"term\":\"packaged goods\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03876933\"]}");
	add("03877049", "{\"term\":\"liquor store\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03877049\"]}");
	add("03877049", "{\"term\":\"off-licence\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03877049\"]}");
	add("03877049", "{\"term\":\"package store\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03877049\"]}");
	add("03877202", "{\"term\":\"packaging\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03877202\", \"07261731\", \"01105693\"]}");
	add("03877306", "{\"term\":\"packet\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03715618\", \"03877306\", \"07295804\", \"08024575\"]}");
	add("03877402", "{\"term\":\"packing box\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03877402\", \"04352673\"]}");
	add("03877402", "{\"term\":\"packing case\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03877402\"]}");
	add("03877538", "{\"term\":\"packing plant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03877538\"]}");
	add("03877538", "{\"term\":\"packinghouse\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03877538\", \"03877694\"]}");
	add("03877694", "{\"term\":\"packinghouse\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03877538\", \"03877694\"]}");
	add("03877845", "{\"term\":\"packing needle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03877845\"]}");
	add("03877951", "{\"term\":\"packsaddle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03877951\"]}");
	add("03878064", "{\"term\":\"packthread\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03878064\"]}");
	add("03878173", "{\"term\":\"pad\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"02443154\", \"03200169\", \"03653005\", \"03878173\", \"03878563\", \"13175381\", \"14997692\"]}");
	add("03878563", "{\"term\":\"inking pad\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03878563\"]}");
	add("03878563", "{\"term\":\"inkpad\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03878563\"]}");
	add("03878563", "{\"term\":\"pad\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"02443154\", \"03200169\", \"03653005\", \"03878173\", \"03878563\", \"13175381\", \"14997692\"]}");
	add("03878563", "{\"term\":\"stamp pad\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03878563\"]}");
	add("03878742", "{\"term\":\"cushioning\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03878742\"]}");
	add("03878742", "{\"term\":\"padding\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03878742\"]}");
	add("03879094", "{\"term\":\"boat paddle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03879094\"]}");
	add("03879094", "{\"term\":\"paddle\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03879094\", \"03879252\", \"03879377\", \"03879526\"]}");
	add("03879252", "{\"term\":\"paddle\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03879094\", \"03879252\", \"03879377\", \"03879526\"]}");
	add("03879377", "{\"term\":\"paddle\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03879094\", \"03879252\", \"03879377\", \"03879526\"]}");
	add("03879526", "{\"term\":\"paddle\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03879094\", \"03879252\", \"03879377\", \"03879526\"]}");
	add("03879674", "{\"term\":\"paddle-box\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03879674\"]}");
	add("03879674", "{\"term\":\"paddle box\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03879674\"]}");
	add("03879816", "{\"term\":\"paddle-wheeler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03879816\"]}");
	add("03879816", "{\"term\":\"paddle steamer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03879816\"]}");
	add("03879971", "{\"term\":\"paddle wheel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03879971\"]}");
	add("03879971", "{\"term\":\"paddlewheel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03879971\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }