package org.swtk.commons.dict.wordnet.index.byid.instance.p0.p3;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0385 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("03850070", "{\"term\":\"oil pump\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03850070\"]}");
	add("03850193", "{\"term\":\"oil refinery\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03850193\"]}");
	add("03850193", "{\"term\":\"petroleum refinery\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03850193\"]}");
	add("03850335", "{\"term\":\"oilskin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03850335\"]}");
	add("03850335", "{\"term\":\"slicker\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10017621\", \"10631385\", \"03850335\"]}");
	add("03850485", "{\"term\":\"oil slick\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03850485\"]}");
	add("03850627", "{\"term\":\"oilstone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03850627\"]}");
	add("03850710", "{\"term\":\"oil tanker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03850710\"]}");
	add("03850710", "{\"term\":\"oiler\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03850710\", \"03850880\", \"10394114\"]}");
	add("03850710", "{\"term\":\"tank ship\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03850710\"]}");
	add("03850710", "{\"term\":\"tanker\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10710144\", \"03850710\"]}");
	add("03850880", "{\"term\":\"oil well\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03850880\"]}");
	add("03850880", "{\"term\":\"oiler\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03850710\", \"03850880\", \"10394114\"]}");
	add("03851070", "{\"term\":\"balm\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03851070\", \"14921074\"]}");
	add("03851070", "{\"term\":\"ointment\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03133170\", \"03851070\"]}");
	add("03851070", "{\"term\":\"salve\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00260235\", \"03851070\"]}");
	add("03851070", "{\"term\":\"unction\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"01043706\", \"03851070\", \"04875718\", \"06709053\"]}");
	add("03851070", "{\"term\":\"unguent\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03851070\"]}");
	add("03851510", "{\"term\":\"old school tie\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03851510\"]}");
	add("03851620", "{\"term\":\"olive drab\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03851620\", \"03851754\", \"04981730\"]}");
	add("03851754", "{\"term\":\"olive-drab uniform\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03851754\"]}");
	add("03851754", "{\"term\":\"olive drab\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03851620\", \"03851754\", \"04981730\"]}");
	add("03851951", "{\"term\":\"olympian zeus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03851951\"]}");
	add("03852197", "{\"term\":\"omelet pan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03852197\"]}");
	add("03852197", "{\"term\":\"omelette pan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03852197\"]}");
	add("03852292", "{\"term\":\"nondirectional antenna\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03852292\"]}");
	add("03852292", "{\"term\":\"omnidirectional antenna\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03852292\"]}");
	add("03852490", "{\"term\":\"omnidirectional radio range\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03852490\"]}");
	add("03852490", "{\"term\":\"omnidirectional range\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03852490\"]}");
	add("03852490", "{\"term\":\"omnirange\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03852490\"]}");
	add("03852734", "{\"term\":\"one-spot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03852734\"]}");
	add("03852854", "{\"term\":\"one-way street\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03852854\", \"05972840\"]}");
	add("03852991", "{\"term\":\"onion dome\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03852991\"]}");
	add("03853142", "{\"term\":\"op art\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03853142\"]}");
	add("03853343", "{\"term\":\"market square\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03853343\"]}");
	add("03853343", "{\"term\":\"open-air market\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03853343\"]}");
	add("03853343", "{\"term\":\"open-air marketplace\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03853343\"]}");
	add("03853553", "{\"term\":\"open circuit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03853553\"]}");
	add("03853688", "{\"term\":\"open-end wrench\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03853688\"]}");
	add("03853688", "{\"term\":\"tappet wrench\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03853688\"]}");
	add("03853868", "{\"term\":\"opener\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03853868\", \"10757088\", \"07340969\"]}");
	add("03854057", "{\"term\":\"open-hearth furnace\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03854057\"]}");
	add("03854249", "{\"term\":\"opening\", \"synsetCount\":13, \"upperType\":\"NOUN\", \"ids\":[\"00240097\", \"00458914\", \"03504286\", \"03854249\", \"05257118\", \"05800018\", \"06409119\", \"14508833\", \"00339467\", \"07343963\", \"00384198\", \"07467309\", \"09402023\"]}");
	add("03854795", "{\"term\":\"openside plane\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03854795\"]}");
	add("03854795", "{\"term\":\"rabbet plane\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03854795\"]}");
	add("03854932", "{\"term\":\"open sight\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03854932\"]}");
	add("03855058", "{\"term\":\"open weave\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03855058\"]}");
	add("03855199", "{\"term\":\"openwork\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03855199\"]}");
	add("03855334", "{\"term\":\"opera\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03855334\", \"06584114\", \"07039821\"]}");
	add("03855334", "{\"term\":\"opera house\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03855334\"]}");
	add("03855463", "{\"term\":\"opera cloak\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03855463\"]}");
	add("03855463", "{\"term\":\"opera hood\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03855463\"]}");
	add("03855573", "{\"term\":\"operating microscope\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03855573\"]}");
	add("03855765", "{\"term\":\"operating room\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03855765\"]}");
	add("03855765", "{\"term\":\"operating theater\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03855765\"]}");
	add("03855765", "{\"term\":\"operating theatre\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03855765\"]}");
	add("03855765", "{\"term\":\"or\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03855765\", \"09155698\"]}");
	add("03855765", "{\"term\":\"surgery\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00672594\", \"03855765\", \"04371078\", \"06073138\"]}");
	add("03856012", "{\"term\":\"operating table\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03856012\"]}");
	add("03856133", "{\"term\":\"ophthalmoscope\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03856133\"]}");
	add("03856266", "{\"term\":\"opiate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03856266\"]}");
	add("03856486", "{\"term\":\"opium\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03856486\"]}");
	add("03856644", "{\"term\":\"opium den\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03856644\"]}");
	add("03856739", "{\"term\":\"optical bench\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03856739\"]}");
	add("03856861", "{\"term\":\"optical device\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03856861\"]}");
	add("03857307", "{\"term\":\"optical disc\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03857307\"]}");
	add("03857307", "{\"term\":\"optical disk\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03857307\"]}");
	add("03857551", "{\"term\":\"glass fiber\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03857551\"]}");
	add("03857551", "{\"term\":\"glass fibre\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03857551\"]}");
	add("03857551", "{\"term\":\"optical fiber\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03857551\"]}");
	add("03857551", "{\"term\":\"optical fibre\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03857551\"]}");
	add("03857800", "{\"term\":\"optical instrument\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03857800\"]}");
	add("03858064", "{\"term\":\"optical pyrometer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03858064\"]}");
	add("03858064", "{\"term\":\"pyroscope\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03858064\"]}");
	add("03858208", "{\"term\":\"optical telescope\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03858208\"]}");
	add("03858428", "{\"term\":\"oracle\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03858428\", \"06763053\", \"10503115\"]}");
	add("03858543", "{\"term\":\"orange grove\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03858543\"]}");
	add("03858623", "{\"term\":\"orb web\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03858623\"]}");
	add("03858698", "{\"term\":\"orchestra\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03858698\", \"08265078\"]}");
	add("03858811", "{\"term\":\"orchestra pit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03858811\"]}");
	add("03858811", "{\"term\":\"pit\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"03074400\", \"03858811\", \"03955718\", \"03955939\", \"03956037\", \"03956200\", \"03956389\", \"05637465\", \"11705208\", \"13894850\", \"09416001\"]}");
	add("03858974", "{\"term\":\"or circuit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03858974\"]}");
	add("03858974", "{\"term\":\"or gate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03858974\"]}");
	add("03859108", "{\"term\":\"order book\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03859108\", \"06497622\"]}");
	add("03859254", "{\"term\":\"ordinary\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"03859254\", \"03859444\", \"10402179\", \"13965795\", \"10402079\"]}");
	add("03859444", "{\"term\":\"ordinary\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"03859254\", \"03859444\", \"10402179\", \"13965795\", \"10402079\"]}");
	add("03859444", "{\"term\":\"ordinary bicycle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03859444\"]}");
	add("03859585", "{\"term\":\"organ\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"03499638\", \"03859585\", \"06607260\", \"03278462\", \"08366277\", \"05305022\"]}");
	add("03859585", "{\"term\":\"pipe organ\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03859585\"]}");
	add("03859941", "{\"term\":\"organdie\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03859941\"]}");
	add("03859941", "{\"term\":\"organdy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03859941\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }