package org.swtk.commons.dict.wordnet.byid.generated.p0.p1;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexById0110 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("01100170", "{\"term\":\"seller\u0027s market\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01100170\"]}");
	add("01100170", "{\"term\":\"sellers\u0027 market\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01100170\"]}");
	add("01100309", "{\"term\":\"labor market\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01100309\"]}");
	add("01100446", "{\"term\":\"employee-owned business\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01100446\"]}");
	add("01100446", "{\"term\":\"employee-owned enterprise\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01100446\"]}");
	add("01100603", "{\"term\":\"finance\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01136358\", \"06160103\", \"01100603\"]}");
	add("01100873", "{\"term\":\"corporate finance\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01100873\"]}");
	add("01101014", "{\"term\":\"financing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01101014\"]}");
	add("01101014", "{\"term\":\"funding\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01101014\", \"13386871\"]}");
	add("01101136", "{\"term\":\"high finance\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01101136\"]}");
	add("01101341", "{\"term\":\"investing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01101341\"]}");
	add("01101341", "{\"term\":\"investment\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00199768\", \"00830123\", \"01461257\", \"04654542\", \"13354252\", \"01101341\"]}");
	add("01101673", "{\"term\":\"foreign direct investment\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00787472\", \"01101673\"]}");
	add("01101851", "{\"term\":\"leverage\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01101851\", \"05163864\", \"11493538\"]}");
	add("01101851", "{\"term\":\"leveraging\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01101851\"]}");
	add("01102052", "{\"term\":\"floatation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01102052\", \"11548418\"]}");
	add("01102052", "{\"term\":\"flotation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01102052\", \"11548418\"]}");
	add("01102178", "{\"term\":\"banking\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01102178\", \"01102563\"]}");
	add("01102396", "{\"term\":\"home banking\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01102396\"]}");
	add("01102563", "{\"term\":\"banking\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01102178\", \"01102563\"]}");
	add("01102782", "{\"term\":\"co-op\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01102782\"]}");
	add("01102782", "{\"term\":\"cooperative\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08244009\", \"01102782\"]}");
	add("01103019", "{\"term\":\"discount business\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01103019\"]}");
	add("01103132", "{\"term\":\"real-estate business\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01103132\"]}");
	add("01103234", "{\"term\":\"advertising\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01103234\", \"07263469\"]}");
	add("01103234", "{\"term\":\"publicizing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01103234\"]}");
	add("01103476", "{\"term\":\"hard sell\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01103476\"]}");
	add("01103566", "{\"term\":\"soft sell\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01103566\"]}");
	add("01103658", "{\"term\":\"circularisation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01103658\"]}");
	add("01103658", "{\"term\":\"circularization\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01103658\"]}");
	add("01103863", "{\"term\":\"publication\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"01103863\", \"01104341\", \"01105519\", \"06601855\"]}");
	add("01103863", "{\"term\":\"publishing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01103863\"]}");
	add("01104161", "{\"term\":\"desktop publishing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01104161\"]}");
	add("01104341", "{\"term\":\"publication\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"01103863\", \"01104341\", \"01105519\", \"06601855\"]}");
	add("01104479", "{\"term\":\"republication\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01104479\", \"07273632\"]}");
	add("01104479", "{\"term\":\"republishing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01104479\"]}");
	add("01104617", "{\"term\":\"contribution\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"01104617\", \"13290913\", \"01091702\", \"13291061\", \"00789119\"]}");
	add("01104767", "{\"term\":\"serialisation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01104767\"]}");
	add("01104767", "{\"term\":\"serialization\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01104767\"]}");
	add("01104905", "{\"term\":\"typography\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06690719\", \"01104905\"]}");
	add("01105064", "{\"term\":\"printing\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"06602491\", \"06690047\", \"01105064\", \"06414934\"]}");
	add("01105279", "{\"term\":\"gravure\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"01105279\", \"03460746\", \"03460867\", \"06691529\"]}");
	add("01105397", "{\"term\":\"photogravure\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01105397\", \"03460746\", \"06691912\"]}");
	add("01105397", "{\"term\":\"rotogravure\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01105397\", \"06277626\", \"06692053\"]}");
	add("01105519", "{\"term\":\"issue\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"01105519\", \"03308910\", \"07334509\", \"10393697\", \"11430739\", \"13281089\", \"13388766\", \"01062158\", \"05822417\", \"06609182\", \"05822776\"]}");
	add("01105519", "{\"term\":\"publication\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"01103863\", \"01104341\", \"01105519\", \"06601855\"]}");
	add("01105693", "{\"term\":\"packaging\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03877202\", \"07261731\", \"01105693\"]}");
	add("01105869", "{\"term\":\"meat-packing business\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01105869\"]}");
	add("01105869", "{\"term\":\"meat packing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01105869\"]}");
	add("01105869", "{\"term\":\"meatpacking\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01105869\"]}");
	add("01106079", "{\"term\":\"unitisation\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00954898\", \"01095456\", \"01106079\", \"05739513\"]}");
	add("01106079", "{\"term\":\"unitization\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00954898\", \"01095456\", \"01106079\", \"05739513\"]}");
	add("01106229", "{\"term\":\"catering\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01106229\"]}");
	add("01106311", "{\"term\":\"agribusiness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01106311\"]}");
	add("01106311", "{\"term\":\"agriculture\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"08092123\", \"08145946\", \"00918295\", \"01106311\"]}");
	add("01106311", "{\"term\":\"factory farm\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01106311\"]}");
	add("01106449", "{\"term\":\"truck farming\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01106449\"]}");
	add("01106542", "{\"term\":\"building\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"07989688\", \"01106542\", \"00912746\", \"02916498\"]}");
	add("01106542", "{\"term\":\"construction\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"01106542\", \"07188610\", \"00875059\", \"04348764\", \"05779833\", \"06324641\", \"00912746\"]}");
	add("01106943", "{\"term\":\"jerry-building\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01106943\"]}");
	add("01107057", "{\"term\":\"slating\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01107057\", \"06725437\", \"15067569\"]}");
	add("01107164", "{\"term\":\"shipping\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04203545\", \"01107164\"]}");
	add("01107164", "{\"term\":\"transport\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00316812\", \"04399851\", \"14009857\", \"01107164\", \"13591439\", \"03105141\"]}");
	add("01107164", "{\"term\":\"transportation\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00208610\", \"01107164\", \"08160653\", \"13329169\", \"00316812\", \"04480667\"]}");
	add("01107540", "{\"term\":\"air transport\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01107540\"]}");
	add("01107540", "{\"term\":\"air transportation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01107540\"]}");
	add("01107642", "{\"term\":\"navigation\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00315295\", \"01107642\", \"00817462\"]}");
	add("01107814", "{\"term\":\"hauling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01107814\"]}");
	add("01107814", "{\"term\":\"truckage\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01107814\", \"13344907\"]}");
	add("01107814", "{\"term\":\"trucking\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01107814\"]}");
	add("01108023", "{\"term\":\"cartage\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01108023\"]}");
	add("01108023", "{\"term\":\"carting\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01108023\"]}");
	add("01108177", "{\"term\":\"freight\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13347220\", \"01108177\", \"02967841\"]}");
	add("01108177", "{\"term\":\"freightage\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01108177\", \"13347220\"]}");
	add("01108365", "{\"term\":\"express\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01108365\", \"03311330\", \"06276128\"]}");
	add("01108365", "{\"term\":\"expressage\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01108365\"]}");
	add("01108492", "{\"term\":\"ferry\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01108492\", \"03334608\"]}");
	add("01108492", "{\"term\":\"ferrying\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01108492\"]}");
	add("01108620", "{\"term\":\"carriage trade\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01108620\"]}");
	add("01108713", "{\"term\":\"dealing\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01108713\", \"01137693\"]}");
	add("01108713", "{\"term\":\"dealings\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01108713\", \"13802661\", \"00041542\"]}");
	add("01108713", "{\"term\":\"transaction\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01108713\"]}");
	add("01109264", "{\"term\":\"affairs\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01109264\", \"05679520\"]}");
	add("01109454", "{\"term\":\"international affairs\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01109454\"]}");
	add("01109454", "{\"term\":\"world affairs\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01109454\"]}");
	add("01109631", "{\"term\":\"operations\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01109631\"]}");
	add("01109631", "{\"term\":\"trading operations\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01109631\"]}");
	add("01109837", "{\"term\":\"transfer\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"01109837\", \"05764200\", \"06531471\", \"00202520\", \"10744008\", \"00316812\"]}");
	add("01109837", "{\"term\":\"transference\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00202520\", \"01109837\", \"06257311\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }