package org.swtk.commons.dict.wordnet.index.instance.p1.p3;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexInstance1315 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("13150585", "{\"term\":\"internode\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13150585\"]}");
	add("13150697", "{\"term\":\"beanstalk\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13150697\"]}");
	add("13150773", "{\"term\":\"cladode\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13150773\"]}");
	add("13150773", "{\"term\":\"cladophyll\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13150773\"]}");
	add("13150773", "{\"term\":\"phylloclad\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13150773\"]}");
	add("13150773", "{\"term\":\"phylloclade\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13150773\"]}");
	add("13150920", "{\"term\":\"receptacle\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04068554\", \"13150920\", \"04068016\"]}");
	add("13151064", "{\"term\":\"caudex\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13149837\", \"13151064\"]}");
	add("13151064", "{\"term\":\"stock\", \"synsetCount\":17, \"upperType\":\"NOUN\", \"ids\":[\"01890115\", \"03820267\", \"04328942\", \"04329525\", \"11912498\", \"11913106\", \"13147850\", \"13151064\", \"14462007\", \"07600779\", \"08118376\", \"08118903\", \"13388243\", \"13438244\", \"04329164\", \"04328672\", \"13354848\"]}");
	add("13151182", "{\"term\":\"axil\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13151182\"]}");
	add("13151328", "{\"term\":\"stipe\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13151328\"]}");
	add("13151485", "{\"term\":\"flower stalk\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13151485\"]}");
	add("13151485", "{\"term\":\"scape\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04189751\", \"13151485\"]}");
	add("13151644", "{\"term\":\"meristem\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13151644\"]}");
	add("13151787", "{\"term\":\"umbel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13151787\"]}");
	add("13152041", "{\"term\":\"corymb\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13152041\"]}");
	add("13152275", "{\"term\":\"ray\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"01498342\", \"01903360\", \"06881495\", \"11448493\", \"13936442\", \"13152275\", \"11448137\"]}");
	add("13152377", "{\"term\":\"leafstalk\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13152377\"]}");
	add("13152377", "{\"term\":\"petiole\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13152377\"]}");
	add("13152511", "{\"term\":\"phyllode\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13152511\"]}");
	add("13152642", "{\"term\":\"blade\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"02851454\", \"02851761\", \"02852044\", \"05243359\", \"07676910\", \"04380981\", \"09246498\", \"09878691\", \"13152642\"]}");
	add("13152642", "{\"term\":\"leaf blade\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13152642\"]}");
	add("13152793", "{\"term\":\"peduncle\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"05484406\", \"13152793\", \"14258548\"]}");
	add("13152915", "{\"term\":\"pedicel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13152915\"]}");
	add("13152915", "{\"term\":\"pedicle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13152915\"]}");
	add("13153097", "{\"term\":\"flower cluster\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13153097\"]}");
	add("13153245", "{\"term\":\"raceme\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13153245\"]}");
	add("13153415", "{\"term\":\"panicle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13153415\"]}");
	add("13153515", "{\"term\":\"thyrse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13153515\"]}");
	add("13153515", "{\"term\":\"thyrsus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13153515\"]}");
	add("13153699", "{\"term\":\"cyme\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13153699\"]}");
	add("13153899", "{\"term\":\"cymule\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13153899\"]}");
	add("13153992", "{\"term\":\"glomerule\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13153992\"]}");
	add("13154075", "{\"term\":\"scorpioid cyme\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13154075\"]}");
	add("13154197", "{\"term\":\"spike\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"04283023\", \"04283169\", \"04283368\", \"04283523\", \"04283650\", \"04283927\", \"07494506\", \"13154197\", \"13154372\", \"04282780\", \"07323068\"]}");
	add("13154372", "{\"term\":\"capitulum\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13148915\", \"13154372\", \"13154545\"]}");
	add("13154372", "{\"term\":\"ear\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"13154372\", \"05711152\", \"05331437\", \"05665844\", \"05328447\"]}");
	add("13154372", "{\"term\":\"spike\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"04283023\", \"04283169\", \"04283368\", \"04283523\", \"04283650\", \"04283927\", \"07494506\", \"13154197\", \"13154372\", \"04282780\", \"07323068\"]}");
	add("13154545", "{\"term\":\"capitulum\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13148915\", \"13154372\", \"13154545\"]}");
	add("13154545", "{\"term\":\"head\", \"synsetCount\":33, \"upperType\":\"NOUN\", \"ids\":[\"00856505\", \"03254982\", \"03506432\", \"03506664\", \"03506758\", \"03506955\", \"04065833\", \"05298255\", \"05603592\", \"06355341\", \"06796625\", \"06834918\", \"07387379\", \"07433422\", \"08590014\", \"09324750\", \"09324937\", \"09422467\", \"10182373\", \"10182947\", \"10494230\", \"13154545\", \"13675998\", \"14335908\", \"06302589\", \"08525470\", \"08681922\", \"11516007\", \"08499282\", \"10182584\", \"05619057\", \"01320872\", \"05546258\"]}");
	add("13154691", "{\"term\":\"spadix\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13154691\"]}");
	add("13154818", "{\"term\":\"bulb\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"05234409\", \"05502823\", \"13886656\", \"02918826\", \"03671250\", \"13154818\"]}");
	add("13155061", "{\"term\":\"bulbous plant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13155061\"]}");
	add("13155290", "{\"term\":\"bulbil\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13155290\"]}");
	add("13155290", "{\"term\":\"bulblet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13155290\"]}");
	add("13155439", "{\"term\":\"corm\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13155439\"]}");
	add("13155603", "{\"term\":\"cormous plant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13155603\"]}");
	add("13155706", "{\"term\":\"fruit\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07309308\", \"04620079\", \"13155706\"]}");
	add("13156451", "{\"term\":\"fruitlet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13156451\"]}");
	add("13156591", "{\"term\":\"seed\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"05411679\", \"05843082\", \"10594907\", \"11704458\", \"13156591\"]}");
	add("13157075", "{\"term\":\"bean\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"05547087\", \"12576812\", \"13157075\", \"07740688\"]}");
	add("13157333", "{\"term\":\"nut\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"05532266\", \"09788499\", \"09994026\", \"13734697\", \"03841711\", \"09535970\", \"13157333\"]}");
	add("13157558", "{\"term\":\"nutlet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13157558\"]}");
	add("13157640", "{\"term\":\"pyrene\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13157640\", \"14983076\"]}");
	add("13157787", "{\"term\":\"kernel\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"05929717\", \"12177573\", \"13157787\"]}");
	add("13157787", "{\"term\":\"meat\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"05929717\", \"13157787\", \"07665463\"]}");
	add("13158002", "{\"term\":\"syconium\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13158002\"]}");
	add("13158186", "{\"term\":\"berry\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10868679\", \"13158186\", \"07758680\"]}");
	add("13158449", "{\"term\":\"aggregate fruit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13158449\"]}");
	add("13158449", "{\"term\":\"multiple fruit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13158449\"]}");
	add("13158449", "{\"term\":\"syncarp\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13158449\"]}");
	add("13158728", "{\"term\":\"bacca\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13158728\"]}");
	add("13158728", "{\"term\":\"simple fruit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13158728\"]}");
	add("13158932", "{\"term\":\"acinus\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05524017\", \"13158932\"]}");
	add("13159085", "{\"term\":\"drupe\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13159085\"]}");
	add("13159085", "{\"term\":\"stone fruit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13159085\"]}");
	add("13159435", "{\"term\":\"drupelet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13159435\"]}");
	add("13159619", "{\"term\":\"false fruit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13159619\"]}");
	add("13159619", "{\"term\":\"pome\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13159619\"]}");
	add("13159832", "{\"term\":\"pod\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03980303\", \"08011606\", \"13159832\", \"13160826\"]}");
	add("13159832", "{\"term\":\"seedpod\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13159832\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }