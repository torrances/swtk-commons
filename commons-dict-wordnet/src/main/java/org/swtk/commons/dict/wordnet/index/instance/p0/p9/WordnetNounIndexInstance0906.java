package org.swtk.commons.dict.wordnet.index.instance.p0.p9;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexInstance0906 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("09060313", "{\"term\":\"capital of tunisia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09060313\"]}");
	add("09060313", "{\"term\":\"tunis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09060313\"]}");
	add("09060466", "{\"term\":\"ariana\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09060466\"]}");
	add("09060554", "{\"term\":\"ehadhamen\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09060554\"]}");
	add("09060645", "{\"term\":\"gafsa\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09060645\"]}");
	add("09060747", "{\"term\":\"safaqis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09060747\"]}");
	add("09060747", "{\"term\":\"sfax\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09060747\"]}");
	add("09060914", "{\"term\":\"sousse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09060914\"]}");
	add("09060914", "{\"term\":\"susa\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09060914\"]}");
	add("09060914", "{\"term\":\"susah\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09060914\"]}");
	add("09061072", "{\"term\":\"ottoman empire\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09061072\"]}");
	add("09061072", "{\"term\":\"turkish empire\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09061072\"]}");
	add("09061465", "{\"term\":\"kurdistan\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03634391\", \"09061465\"]}");
	add("09061735", "{\"term\":\"iraqi kurdistan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09061735\"]}");
	add("09061886", "{\"term\":\"republic of turkey\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09061886\"]}");
	add("09061886", "{\"term\":\"turkey\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"07379793\", \"07663340\", \"10243965\", \"09061886\", \"01796799\"]}");
	add("09062774", "{\"term\":\"abydos\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09062774\"]}");
	add("09062950", "{\"term\":\"adana\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09062950\"]}");
	add("09062950", "{\"term\":\"seyhan\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09062950\", \"09454037\"]}");
	add("09063076", "{\"term\":\"angora\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"02126130\", \"02330802\", \"02420033\", \"09063076\"]}");
	add("09063076", "{\"term\":\"ankara\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09063076\"]}");
	add("09063076", "{\"term\":\"capital of turkey\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09063076\"]}");
	add("09063076", "{\"term\":\"turkish capital\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09063076\"]}");
	add("09063314", "{\"term\":\"adalia\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02168406\", \"09063314\"]}");
	add("09063314", "{\"term\":\"antalya\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09063314\"]}");
	add("09063473", "{\"term\":\"antakiya\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09063473\"]}");
	add("09063473", "{\"term\":\"antakya\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09063473\"]}");
	add("09063473", "{\"term\":\"antioch\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09063473\"]}");
	add("09063674", "{\"term\":\"chalcedon\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08331083\", \"09063674\"]}");
	add("09063674", "{\"term\":\"kadikoy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09063674\"]}");
	add("09063846", "{\"term\":\"canakkale bogazi\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09063846\"]}");
	add("09063846", "{\"term\":\"dardanelles\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01279781\", \"09063846\"]}");
	add("09063846", "{\"term\":\"hellespont\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09063846\"]}");
	add("09064057", "{\"term\":\"halicarnassus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09064057\"]}");
	add("09064260", "{\"term\":\"constantinople\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"08330720\", \"08331257\", \"08331431\", \"08331831\", \"09064260\"]}");
	add("09064260", "{\"term\":\"istanbul\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09064260\"]}");
	add("09064260", "{\"term\":\"stamboul\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09064260\"]}");
	add("09064260", "{\"term\":\"stambul\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09064260\"]}");
	add("09064688", "{\"term\":\"brusa\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09064688\"]}");
	add("09064688", "{\"term\":\"bursa\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05524205\", \"09064688\"]}");
	add("09064797", "{\"term\":\"izmir\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09064797\"]}");
	add("09064797", "{\"term\":\"smyrna\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09064797\"]}");
	add("09064926", "{\"term\":\"pergamum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09064926\"]}");
	add("09065150", "{\"term\":\"sardis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09065150\"]}");
	add("09065399", "{\"term\":\"ionia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09065399\"]}");
	add("09065527", "{\"term\":\"republic of uganda\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09065527\"]}");
	add("09065527", "{\"term\":\"uganda\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09065527\"]}");
	add("09065886", "{\"term\":\"buganda\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09065886\"]}");
	add("09066031", "{\"term\":\"entebbe\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09066031\"]}");
	add("09066277", "{\"term\":\"jinja\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09066277\"]}");
	add("09066401", "{\"term\":\"capital of uganda\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09066401\"]}");
	add("09066401", "{\"term\":\"kampala\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09066401\"]}");
	add("09066569", "{\"term\":\"gulu\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09066569\"]}");
	add("09066665", "{\"term\":\"united arab emirates\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09066665\"]}");
	add("09067011", "{\"term\":\"abu dhabi\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09067011\"]}");
	add("09067011", "{\"term\":\"united arab emirates\u0027s capital\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09067011\"]}");
	add("09067189", "{\"term\":\"dubai\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09067189\"]}");
	add("09067337", "{\"term\":\"america\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09218493\", \"09067337\"]}");
	add("09067337", "{\"term\":\"the states\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09067337\"]}");
	add("09067337", "{\"term\":\"u.s.\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09067337\", \"08372718\"]}");
	add("09067337", "{\"term\":\"u.s.a.\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09067337\"]}");
	add("09067337", "{\"term\":\"united states\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08372718\", \"09067337\"]}");
	add("09067337", "{\"term\":\"united states of america\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09067337\"]}");
	add("09067337", "{\"term\":\"us\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09067337\"]}");
	add("09067337", "{\"term\":\"usa\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08411879\", \"09067337\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }