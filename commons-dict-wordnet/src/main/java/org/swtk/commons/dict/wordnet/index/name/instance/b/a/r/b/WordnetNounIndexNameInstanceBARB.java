package org.swtk.commons.dict.wordnet.index.name.instance.b.a.r.b;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceBARB {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"barb\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"01900826\", \"02793345\", \"02793573\", \"06780713\"]}");
	add("{\"term\":\"barbacan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02794688\"]}");
	add("{\"term\":\"barbadian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09713378\"]}");
	add("{\"term\":\"barbados\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08773047\", \"08773269\"]}");
	add("{\"term\":\"barbarea\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11893865\"]}");
	add("{\"term\":\"barbarian\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10430560\", \"10572830\"]}");
	add("{\"term\":\"barbarisation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00272967\"]}");
	add("{\"term\":\"barbarism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00425937\"]}");
	add("{\"term\":\"barbarity\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00425937\", \"04837574\"]}");
	add("{\"term\":\"barbarization\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00272967\"]}");
	add("{\"term\":\"barbarossa\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10853933\", \"10999883\"]}");
	add("{\"term\":\"barbarousness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04837574\"]}");
	add("{\"term\":\"barbary\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08520259\"]}");
	add("{\"term\":\"barbasco\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12120704\"]}");
	add("{\"term\":\"barbecue\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02793692\", \"07592346\", \"07669757\"]}");
	add("{\"term\":\"barbecuing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00248521\"]}");
	add("{\"term\":\"barbel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02587916\"]}");
	add("{\"term\":\"barbell\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02794019\"]}");
	add("{\"term\":\"barbeque\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02793692\", \"07592346\", \"07669757\"]}");
	add("{\"term\":\"barber\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09858283\", \"10854035\"]}");
	add("{\"term\":\"barberry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11718029\"]}");
	add("{\"term\":\"barbershop\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02794293\"]}");
	add("{\"term\":\"barbet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01844876\"]}");
	add("{\"term\":\"barbette\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02794408\"]}");
	add("{\"term\":\"barbican\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02794688\"]}");
	add("{\"term\":\"barbital\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02794917\"]}");
	add("{\"term\":\"barbitone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02794917\"]}");
	add("{\"term\":\"barbiturate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02795072\"]}");
	add("{\"term\":\"barbu\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02613924\"]}");
	add("{\"term\":\"barbuda\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08727946\"]}");
	add("{\"term\":\"barbwire\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02793846\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public boolean has(final String TERM) { 		return map.containsKey(TERM); 	} }