package org.swtk.commons.dict.wordnet.index.byid.instance.p1.p3;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance1362 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("13620203", "{\"term\":\"magic number\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13620203\"]}");
	add("13620357", "{\"term\":\"baryon number\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13620357\"]}");
	add("13620591", "{\"term\":\"quota\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06673141\", \"13310767\", \"13620591\"]}");
	add("13620712", "{\"term\":\"long measure\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13620712\"]}");
	add("13620790", "{\"term\":\"magnetisation\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"05027391\", \"13531636\", \"13620790\"]}");
	add("13620790", "{\"term\":\"magnetization\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"05027391\", \"13531636\", \"13620790\"]}");
	add("13620973", "{\"term\":\"magnetic flux\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11497784\", \"13620973\"]}");
	add("13621114", "{\"term\":\"absorption unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13621114\"]}");
	add("13621225", "{\"term\":\"acceleration unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13621225\"]}");
	add("13621340", "{\"term\":\"angular unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13621340\"]}");
	add("13621647", "{\"term\":\"area unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13621647\"]}");
	add("13621647", "{\"term\":\"square measure\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13621647\"]}");
	add("13622065", "{\"term\":\"capacity measure\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13622065\"]}");
	add("13622065", "{\"term\":\"capacity unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13622065\"]}");
	add("13622065", "{\"term\":\"cubage unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13622065\"]}");
	add("13622065", "{\"term\":\"cubature unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13622065\"]}");
	add("13622065", "{\"term\":\"cubic content unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13622065\"]}");
	add("13622065", "{\"term\":\"cubic measure\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13622065\"]}");
	add("13622065", "{\"term\":\"displacement unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13622065\"]}");
	add("13622065", "{\"term\":\"volume unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13622065\"]}");
	add("13622613", "{\"term\":\"cu in\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13622613\"]}");
	add("13622613", "{\"term\":\"cubic inch\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13622613\"]}");
	add("13622726", "{\"term\":\"cu ft\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13622726\"]}");
	add("13622726", "{\"term\":\"cubic foot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13622726\"]}");
	add("13622839", "{\"term\":\"computer memory unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13622839\"]}");
	add("13623644", "{\"term\":\"cord\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03111373\", \"03111549\", \"13623644\", \"03110761\"]}");
	add("13623769", "{\"term\":\"electromagnetic unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13623769\"]}");
	add("13623769", "{\"term\":\"emu\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01522514\", \"13623769\"]}");
	add("13624165", "{\"term\":\"explosive unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13624165\"]}");
	add("13624308", "{\"term\":\"force unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13624308\"]}");
	add("13624548", "{\"term\":\"linear measure\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13624548\"]}");
	add("13624548", "{\"term\":\"linear unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13624548\"]}");
	add("13625518", "{\"term\":\"metric\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13598374\", \"13625518\", \"13807118\"]}");
	add("13625518", "{\"term\":\"metric unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13625518\"]}");
	add("13625815", "{\"term\":\"miles per gallon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13625815\"]}");
	add("13625961", "{\"term\":\"monetary unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13625961\"]}");
	add("13628430", "{\"term\":\"megaflop\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13628430\"]}");
	add("13628430", "{\"term\":\"mflop\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13628430\"]}");
	add("13628430", "{\"term\":\"million floating point operations per second\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13628430\"]}");
	add("13628648", "{\"term\":\"teraflop\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13628648\"]}");
	add("13628648", "{\"term\":\"trillion floating point operations per second\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13628648\"]}");
	add("13628859", "{\"term\":\"million instructions per second\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13628859\"]}");
	add("13628859", "{\"term\":\"mips\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13628859\"]}");
	add("13629116", "{\"term\":\"pain unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13629116\"]}");
	add("13629228", "{\"term\":\"pressure unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13629228\"]}");
	add("13629450", "{\"term\":\"printing unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13629450\"]}");
	add("13629562", "{\"term\":\"sound unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13629562\"]}");
	add("13629723", "{\"term\":\"telephone unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13629723\"]}");
	add("13629841", "{\"term\":\"temperature unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13629841\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }