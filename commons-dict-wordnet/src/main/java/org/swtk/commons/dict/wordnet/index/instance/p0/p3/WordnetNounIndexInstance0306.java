package org.swtk.commons.dict.wordnet.index.instance.p0.p3;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexInstance0306 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("03060082", "{\"term\":\"coal car\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03060082\"]}");
	add("03060200", "{\"term\":\"coal chute\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03060200\"]}");
	add("03060273", "{\"term\":\"coal house\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03060273\"]}");
	add("03060353", "{\"term\":\"coal mine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03060353\"]}");
	add("03060353", "{\"term\":\"coalpit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03060353\"]}");
	add("03060478", "{\"term\":\"coal shovel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03060478\"]}");
	add("03060568", "{\"term\":\"coaming\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03060568\"]}");
	add("03060686", "{\"term\":\"coaster\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03060686\", \"09952074\", \"09952164\"]}");
	add("03060858", "{\"term\":\"coaster brake\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03060858\"]}");
	add("03061006", "{\"term\":\"coat\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01901372\", \"03062092\", \"03061006\"]}");
	add("03061526", "{\"term\":\"coat button\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03061526\"]}");
	add("03061621", "{\"term\":\"coat closet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03061621\"]}");
	add("03061709", "{\"term\":\"coatdress\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03061709\"]}");
	add("03061826", "{\"term\":\"coatee\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03061826\"]}");
	add("03061905", "{\"term\":\"clothes hanger\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03061905\"]}");
	add("03061905", "{\"term\":\"coat hanger\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03061905\"]}");
	add("03061905", "{\"term\":\"dress hanger\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03061905\"]}");
	add("03062092", "{\"term\":\"coat\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01901372\", \"03062092\", \"03061006\"]}");
	add("03062092", "{\"term\":\"coating\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00713478\", \"03062624\", \"04707990\", \"03062092\"]}");
	add("03062624", "{\"term\":\"coating\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00713478\", \"03062624\", \"04707990\", \"03062092\"]}");
	add("03062747", "{\"term\":\"arms\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03062747\", \"04573543\"]}");
	add("03062747", "{\"term\":\"blazon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03062747\"]}");
	add("03062747", "{\"term\":\"blazonry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03062747\"]}");
	add("03062747", "{\"term\":\"coat of arms\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03062747\"]}");
	add("03062970", "{\"term\":\"coat of paint\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03062970\"]}");
	add("03063106", "{\"term\":\"coat rack\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03063106\"]}");
	add("03063106", "{\"term\":\"coatrack\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03063106\"]}");
	add("03063106", "{\"term\":\"hatrack\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03063106\"]}");
	add("03063239", "{\"term\":\"coattail\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03063239\"]}");
	add("03063369", "{\"term\":\"coax\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03063369\"]}");
	add("03063369", "{\"term\":\"coax cable\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03063369\"]}");
	add("03063369", "{\"term\":\"coaxial cable\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03063369\"]}");
	add("03063531", "{\"term\":\"cobble\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03063531\"]}");
	add("03063531", "{\"term\":\"cobblestone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03063531\"]}");
	add("03063531", "{\"term\":\"sett\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03063531\"]}");
	add("03063688", "{\"term\":\"cobweb\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03063688\", \"03063809\", \"03063937\"]}");
	add("03063809", "{\"term\":\"cobweb\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03063688\", \"03063809\", \"03063937\"]}");
	add("03063809", "{\"term\":\"gossamer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03063809\", \"03453640\"]}");
	add("03063937", "{\"term\":\"cobweb\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03063688\", \"03063809\", \"03063937\"]}");
	add("03064077", "{\"term\":\"coca\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03064077\", \"10923165\", \"12710807\"]}");
	add("03064297", "{\"term\":\"cocain\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03064297\"]}");
	add("03064297", "{\"term\":\"cocaine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03064297\"]}");
	add("03064602", "{\"term\":\"cockade\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03064602\"]}");
	add("03064731", "{\"term\":\"cockcroft-walton accelerator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03064731\"]}");
	add("03064731", "{\"term\":\"cockcroft-walton voltage multiplier\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03064731\"]}");
	add("03064731", "{\"term\":\"cockcroft and walton accelerator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03064731\"]}");
	add("03064731", "{\"term\":\"cockcroft and walton voltage multiplier\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03064731\"]}");
	add("03065053", "{\"term\":\"cocked hat\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03065053\"]}");
	add("03065214", "{\"term\":\"cockhorse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03065214\"]}");
	add("03065348", "{\"term\":\"cockleshell\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03065348\"]}");
	add("03065431", "{\"term\":\"cockloft\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03065431\"]}");
	add("03065508", "{\"term\":\"cockpit\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03065677\", \"03065822\", \"03065508\"]}");
	add("03065677", "{\"term\":\"cockpit\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03065677\", \"03065822\", \"03065508\"]}");
	add("03065822", "{\"term\":\"cockpit\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03065677\", \"03065822\", \"03065508\"]}");
	add("03065896", "{\"term\":\"cockscomb\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"01794896\", \"03065896\", \"09993020\", \"11845820\"]}");
	add("03065896", "{\"term\":\"coxcomb\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01794896\", \"03065896\", \"09993020\"]}");
	add("03066018", "{\"term\":\"cocktail dress\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03066018\"]}");
	add("03066018", "{\"term\":\"sheath\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03066018\", \"05245366\", \"04194104\"]}");
	add("03066125", "{\"term\":\"cocktail lounge\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03066125\"]}");
	add("03066248", "{\"term\":\"cocktail shaker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03066248\"]}");
	add("03066339", "{\"term\":\"cocotte\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03066339\", \"10505025\"]}");
	add("03066464", "{\"term\":\"codeine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03066464\"]}");
	add("03066654", "{\"term\":\"codpiece\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03066654\"]}");
	add("03066801", "{\"term\":\"coelostat\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03066801\"]}");
	add("03066988", "{\"term\":\"coffee can\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03066988\"]}");
	add("03067076", "{\"term\":\"coffee cup\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03067076\"]}");
	add("03067202", "{\"term\":\"coffee filter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03067202\"]}");
	add("03067341", "{\"term\":\"coffee maker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03067341\"]}");
	add("03067488", "{\"term\":\"coffee grinder\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03067488\"]}");
	add("03067488", "{\"term\":\"coffee mill\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03067488\"]}");
	add("03067602", "{\"term\":\"coffee mug\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03067602\"]}");
	add("03067692", "{\"term\":\"coffeepot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03067692\"]}");
	add("03067837", "{\"term\":\"coffee stall\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03067837\"]}");
	add("03067971", "{\"term\":\"cocktail table\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03067971\"]}");
	add("03067971", "{\"term\":\"coffee table\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03067971\"]}");
	add("03068121", "{\"term\":\"coffee-table book\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03068121\"]}");
	add("03068253", "{\"term\":\"coffee urn\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03068253\"]}");
	add("03068353", "{\"term\":\"coffer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03068353\", \"03068446\"]}");
	add("03068446", "{\"term\":\"caisson\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"02940477\", \"02940621\", \"02940720\", \"03068446\"]}");
	add("03068446", "{\"term\":\"coffer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03068353\", \"03068446\"]}");
	add("03068446", "{\"term\":\"lacunar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03068446\"]}");
	add("03068566", "{\"term\":\"coffey still\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03068566\"]}");
	add("03068762", "{\"term\":\"casket\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02981514\", \"03068762\"]}");
	add("03068762", "{\"term\":\"coffin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03068762\"]}");
	add("03068939", "{\"term\":\"cog\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03068939\", \"09953795\"]}");
	add("03068939", "{\"term\":\"sprocket\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03068939\", \"04296828\", \"04296965\"]}");
	add("03069067", "{\"term\":\"cog railway\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03069067\"]}");
	add("03069067", "{\"term\":\"rack railway\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03069067\"]}");
	add("03069247", "{\"term\":\"coif\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03069247\", \"05264345\"]}");
	add("03069428", "{\"term\":\"coil\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"03069712\", \"03070033\", \"03070134\", \"03070236\", \"13898609\", \"03069428\"]}");
	add("03069428", "{\"term\":\"helix\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01947258\", \"03069428\", \"13899200\"]}");
	add("03069428", "{\"term\":\"spiral\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00344432\", \"03069428\", \"04286804\", \"13581394\", \"13899200\", \"13899010\"]}");
	add("03069428", "{\"term\":\"volute\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03069428\", \"04286804\"]}");
	add("03069428", "{\"term\":\"whorl\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03069428\", \"05265220\", \"13898609\"]}");
	add("03069712", "{\"term\":\"coil\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"03069712\", \"03070033\", \"03070134\", \"03070236\", \"13898609\", \"03069428\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }