package org.swtk.commons.dict.wordnet.index.name.instance.i.n.c.u;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceINCU {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"incubation\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13462985\", \"15312814\", \"00660039\"]}");
	add("{\"term\":\"incubator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03572246\"]}");
	add("{\"term\":\"incubus\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10222150\", \"13959709\", \"09565997\"]}");
	add("{\"term\":\"inculcation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00890760\"]}");
	add("{\"term\":\"inculpability\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14013348\"]}");
	add("{\"term\":\"inculpableness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14013348\"]}");
	add("{\"term\":\"inculpation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07252418\"]}");
	add("{\"term\":\"incumbency\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00594627\", \"01133746\", \"15316734\"]}");
	add("{\"term\":\"incumbent\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10222243\"]}");
	add("{\"term\":\"incumbrance\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03525974\", \"05841069\", \"13424198\"]}");
	add("{\"term\":\"incurability\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04749491\", \"04864130\"]}");
	add("{\"term\":\"incurable\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10222382\"]}");
	add("{\"term\":\"incurableness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04864130\"]}");
	add("{\"term\":\"incurrence\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01242629\"]}");
	add("{\"term\":\"incurring\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00079037\"]}");
	add("{\"term\":\"incursion\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00073511\", \"00977538\", \"00050103\"]}");
	add("{\"term\":\"incurvation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00407055\", \"13887586\"]}");
	add("{\"term\":\"incurvature\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13887586\"]}");
	add("{\"term\":\"incus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05333888\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public boolean has(final String TERM) { 		return map.containsKey(TERM); 	} }