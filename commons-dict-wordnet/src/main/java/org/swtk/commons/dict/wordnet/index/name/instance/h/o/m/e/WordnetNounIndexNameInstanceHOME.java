package org.swtk.commons.dict.wordnet.index.name.instance.h.o.m.e;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceHOME {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"home\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"03533280\", \"08094856\", \"14537296\", \"08602685\", \"08507412\", \"03534081\", \"08507209\", \"03264208\", \"08577045\"]}");
	add("{\"term\":\"homebody\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10672827\"]}");
	add("{\"term\":\"homebound\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07964769\"]}");
	add("{\"term\":\"homeboy\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10201076\", \"10201178\"]}");
	add("{\"term\":\"homebrew\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07902032\"]}");
	add("{\"term\":\"homebuilder\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10201287\"]}");
	add("{\"term\":\"homecoming\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00052012\", \"00384089\"]}");
	add("{\"term\":\"homefolk\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07987745\"]}");
	add("{\"term\":\"homegirl\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10201509\"]}");
	add("{\"term\":\"homel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09034049\"]}");
	add("{\"term\":\"homeland\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08527190\"]}");
	add("{\"term\":\"homeless\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07964900\", \"10201821\"]}");
	add("{\"term\":\"homelessness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13966105\"]}");
	add("{\"term\":\"homeliness\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04698999\", \"04823759\"]}");
	add("{\"term\":\"homemaker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10209395\"]}");
	add("{\"term\":\"homemaking\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01136565\"]}");
	add("{\"term\":\"homeobox\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05446354\"]}");
	add("{\"term\":\"homeopath\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10202033\"]}");
	add("{\"term\":\"homeopathy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00712142\"]}");
	add("{\"term\":\"homeostasis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14026652\"]}");
	add("{\"term\":\"homeotherm\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01317821\"]}");
	add("{\"term\":\"homeowner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10202130\"]}");
	add("{\"term\":\"homepage\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06370503\"]}");
	add("{\"term\":\"homer\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"01817562\", \"11077543\", \"13638327\", \"11077376\", \"00133175\"]}");
	add("{\"term\":\"homeroom\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03534355\"]}");
	add("{\"term\":\"homesickness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07502734\"]}");
	add("{\"term\":\"homespun\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03534624\"]}");
	add("{\"term\":\"homestead\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03534809\", \"13270299\", \"13270598\"]}");
	add("{\"term\":\"homesteader\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10662616\"]}");
	add("{\"term\":\"homestretch\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03534920\", \"07307142\"]}");
	add("{\"term\":\"hometown\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08689382\"]}");
	add("{\"term\":\"homework\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00730406\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public boolean has(final String TERM) { 		return map.containsKey(TERM); 	} }