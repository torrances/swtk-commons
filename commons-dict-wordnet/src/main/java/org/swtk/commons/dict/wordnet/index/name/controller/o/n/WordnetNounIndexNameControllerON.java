package org.swtk.commons.dict.wordnet.index.name.controller.o.n;  import java.util.Collection; import java.util.Set; import java.util.TreeSet;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  	import org.swtk.commons.dict.wordnet.index.name.instance.o.n.a.g.WordnetNounIndexNameInstanceONAG;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.n.a.n.WordnetNounIndexNameInstanceONAN;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.n.c.h.WordnetNounIndexNameInstanceONCH;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.n.c.i.WordnetNounIndexNameInstanceONCI;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.n.c.o.WordnetNounIndexNameInstanceONCO;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.n.d.a.WordnetNounIndexNameInstanceONDA;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.n.e.g.WordnetNounIndexNameInstanceONEG;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.n.e.i.WordnetNounIndexNameInstanceONEI;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.n.e.n.WordnetNounIndexNameInstanceONEN;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.n.e.r.WordnetNounIndexNameInstanceONER;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.n.i.o.WordnetNounIndexNameInstanceONIO;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.n.i.s.WordnetNounIndexNameInstanceONIS;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.n.l.o.WordnetNounIndexNameInstanceONLO;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.n.o.b.WordnetNounIndexNameInstanceONOB;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.n.o.c.WordnetNounIndexNameInstanceONOC;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.n.o.m.WordnetNounIndexNameInstanceONOM;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.n.o.n.WordnetNounIndexNameInstanceONON;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.n.o.p.WordnetNounIndexNameInstanceONOP;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.n.o.s.WordnetNounIndexNameInstanceONOS;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.n.r.u.WordnetNounIndexNameInstanceONRU;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.n.s.a.WordnetNounIndexNameInstanceONSA;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.n.s.e.WordnetNounIndexNameInstanceONSE;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.n.s.l.WordnetNounIndexNameInstanceONSL;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.n.t.a.WordnetNounIndexNameInstanceONTA;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.n.t.o.WordnetNounIndexNameInstanceONTO;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.n.u.s.WordnetNounIndexNameInstanceONUS;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.n.y.c.WordnetNounIndexNameInstanceONYC;
	import org.swtk.commons.dict.wordnet.index.name.instance.o.n.y.x.WordnetNounIndexNameInstanceONYX;
  import com.trimc.blogger.commons.exception.BusinessException;  public final class WordnetNounIndexNameControllerON {  	public static Collection<IndexNoun> get(final String TERM) throws BusinessException {  		String key = TERM.substring(0, 4).toLowerCase(); 			if ("onag".equals(key)) return WordnetNounIndexNameInstanceONAG.get(TERM);
	if ("onan".equals(key)) return WordnetNounIndexNameInstanceONAN.get(TERM);
	if ("onch".equals(key)) return WordnetNounIndexNameInstanceONCH.get(TERM);
	if ("onci".equals(key)) return WordnetNounIndexNameInstanceONCI.get(TERM);
	if ("onco".equals(key)) return WordnetNounIndexNameInstanceONCO.get(TERM);
	if ("onda".equals(key)) return WordnetNounIndexNameInstanceONDA.get(TERM);
	if ("oneg".equals(key)) return WordnetNounIndexNameInstanceONEG.get(TERM);
	if ("onei".equals(key)) return WordnetNounIndexNameInstanceONEI.get(TERM);
	if ("onen".equals(key)) return WordnetNounIndexNameInstanceONEN.get(TERM);
	if ("oner".equals(key)) return WordnetNounIndexNameInstanceONER.get(TERM);
	if ("onio".equals(key)) return WordnetNounIndexNameInstanceONIO.get(TERM);
	if ("onis".equals(key)) return WordnetNounIndexNameInstanceONIS.get(TERM);
	if ("onlo".equals(key)) return WordnetNounIndexNameInstanceONLO.get(TERM);
	if ("onob".equals(key)) return WordnetNounIndexNameInstanceONOB.get(TERM);
	if ("onoc".equals(key)) return WordnetNounIndexNameInstanceONOC.get(TERM);
	if ("onom".equals(key)) return WordnetNounIndexNameInstanceONOM.get(TERM);
	if ("onon".equals(key)) return WordnetNounIndexNameInstanceONON.get(TERM);
	if ("onop".equals(key)) return WordnetNounIndexNameInstanceONOP.get(TERM);
	if ("onos".equals(key)) return WordnetNounIndexNameInstanceONOS.get(TERM);
	if ("onru".equals(key)) return WordnetNounIndexNameInstanceONRU.get(TERM);
	if ("onsa".equals(key)) return WordnetNounIndexNameInstanceONSA.get(TERM);
	if ("onse".equals(key)) return WordnetNounIndexNameInstanceONSE.get(TERM);
	if ("onsl".equals(key)) return WordnetNounIndexNameInstanceONSL.get(TERM);
	if ("onta".equals(key)) return WordnetNounIndexNameInstanceONTA.get(TERM);
	if ("onto".equals(key)) return WordnetNounIndexNameInstanceONTO.get(TERM);
	if ("onus".equals(key)) return WordnetNounIndexNameInstanceONUS.get(TERM);
	if ("onyc".equals(key)) return WordnetNounIndexNameInstanceONYC.get(TERM);
	if ("onyx".equals(key)) return WordnetNounIndexNameInstanceONYX.get(TERM);
  		throw new BusinessException("TERM not found (id = %s)", TERM); 	} 	 	public static Collection<String> terms() throws BusinessException { 		Set<String> set = new TreeSet<String>();  			set.addAll(WordnetNounIndexNameInstanceONAG.terms());
	set.addAll(WordnetNounIndexNameInstanceONAN.terms());
	set.addAll(WordnetNounIndexNameInstanceONCH.terms());
	set.addAll(WordnetNounIndexNameInstanceONCI.terms());
	set.addAll(WordnetNounIndexNameInstanceONCO.terms());
	set.addAll(WordnetNounIndexNameInstanceONDA.terms());
	set.addAll(WordnetNounIndexNameInstanceONEG.terms());
	set.addAll(WordnetNounIndexNameInstanceONEI.terms());
	set.addAll(WordnetNounIndexNameInstanceONEN.terms());
	set.addAll(WordnetNounIndexNameInstanceONER.terms());
	set.addAll(WordnetNounIndexNameInstanceONIO.terms());
	set.addAll(WordnetNounIndexNameInstanceONIS.terms());
	set.addAll(WordnetNounIndexNameInstanceONLO.terms());
	set.addAll(WordnetNounIndexNameInstanceONOB.terms());
	set.addAll(WordnetNounIndexNameInstanceONOC.terms());
	set.addAll(WordnetNounIndexNameInstanceONOM.terms());
	set.addAll(WordnetNounIndexNameInstanceONON.terms());
	set.addAll(WordnetNounIndexNameInstanceONOP.terms());
	set.addAll(WordnetNounIndexNameInstanceONOS.terms());
	set.addAll(WordnetNounIndexNameInstanceONRU.terms());
	set.addAll(WordnetNounIndexNameInstanceONSA.terms());
	set.addAll(WordnetNounIndexNameInstanceONSE.terms());
	set.addAll(WordnetNounIndexNameInstanceONSL.terms());
	set.addAll(WordnetNounIndexNameInstanceONTA.terms());
	set.addAll(WordnetNounIndexNameInstanceONTO.terms());
	set.addAll(WordnetNounIndexNameInstanceONUS.terms());
	set.addAll(WordnetNounIndexNameInstanceONYC.terms());
	set.addAll(WordnetNounIndexNameInstanceONYX.terms());
  		return set; 	} }