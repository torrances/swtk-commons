package org.swtk.commons.dict.wordnet.byid.generated.p0.p9;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexById0966 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("09660102", "{\"term\":\"octoroon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09660102\"]}");
	add("09660255", "{\"term\":\"caucasian\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06990840\", \"09660255\"]}");
	add("09660255", "{\"term\":\"white\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"03361927\", \"04587272\", \"07857013\", \"09501485\", \"11403541\", \"11403762\", \"11403912\", \"11404017\", \"11404154\", \"11404286\", \"04967906\", \"09660255\"]}");
	add("09660255", "{\"term\":\"white person\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09660255\"]}");
	add("09660561", "{\"term\":\"circassian\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06991187\", \"08505685\", \"09660561\"]}");
	add("09660722", "{\"term\":\"abkhas\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08504963\", \"09660722\"]}");
	add("09660722", "{\"term\":\"abkhasian\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06991316\", \"09660722\"]}");
	add("09660722", "{\"term\":\"abkhaz\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08504963\", \"09041725\", \"09660722\"]}");
	add("09660722", "{\"term\":\"abkhazian\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06991316\", \"09660722\"]}");
	add("09660898", "{\"term\":\"semite\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09660898\"]}");
	add("09661199", "{\"term\":\"babylonian\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06363853\", \"09661199\"]}");
	add("09661306", "{\"term\":\"chaldaean\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09661306\", \"09925418\"]}");
	add("09661306", "{\"term\":\"chaldean\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09661306\", \"09925418\"]}");
	add("09661306", "{\"term\":\"chaldee\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09661306\", \"09925418\"]}");
	add("09661469", "{\"term\":\"assyrian\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07000319\", \"07001344\", \"09661469\"]}");
	add("09661556", "{\"term\":\"cassite\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09661556\", \"06981275\"]}");
	add("09661556", "{\"term\":\"kassite\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06981275\", \"09661556\"]}");
	add("09661694", "{\"term\":\"elamite\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06981128\", \"09661694\"]}");
	add("09661838", "{\"term\":\"phoenician\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07002133\", \"09661838\"]}");
	add("09661981", "{\"term\":\"white man\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09661981\"]}");
	add("09662109", "{\"term\":\"white woman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09662109\"]}");
	add("09662205", "{\"term\":\"poor white trash\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09662205\"]}");
	add("09662205", "{\"term\":\"white trash\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09662205\"]}");
	add("09662401", "{\"term\":\"honkey\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09662401\"]}");
	add("09662401", "{\"term\":\"honkie\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09662401\"]}");
	add("09662401", "{\"term\":\"honky\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09662401\"]}");
	add("09662401", "{\"term\":\"whitey\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09662401\"]}");
	add("09662557", "{\"term\":\"wasp\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02214714\", \"09662557\"]}");
	add("09662557", "{\"term\":\"white anglo-saxon protestant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09662557\"]}");
	add("09662736", "{\"term\":\"asian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09662736\"]}");
	add("09662736", "{\"term\":\"asiatic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09662736\"]}");
	add("09663818", "{\"term\":\"asian american\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09663818\"]}");
	add("09663914", "{\"term\":\"coolie\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09663914\"]}");
	add("09663914", "{\"term\":\"cooly\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09663914\"]}");
	add("09664075", "{\"term\":\"evenki\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06941387\", \"09664075\"]}");
	add("09664075", "{\"term\":\"ewenki\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06941387\", \"09664075\"]}");
	add("09664219", "{\"term\":\"mongol\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09664219\"]}");
	add("09664219", "{\"term\":\"mongolian\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06941616\", \"09664219\"]}");
	add("09664399", "{\"term\":\"tatar\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06940005\", \"09664399\", \"09664724\"]}");
	add("09664585", "{\"term\":\"udmurt\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06969534\", \"09664585\"]}");
	add("09664585", "{\"term\":\"votyak\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06969534\", \"09664585\"]}");
	add("09664724", "{\"term\":\"mongol tatar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09664724\"]}");
	add("09664724", "{\"term\":\"tartar\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"09478055\", \"09664724\", \"10049454\", \"15037836\"]}");
	add("09664724", "{\"term\":\"tatar\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06940005\", \"09664399\", \"09664724\"]}");
	add("09664887", "{\"term\":\"amerindian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09664887\"]}");
	add("09664887", "{\"term\":\"native american\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09664887\"]}");
	add("09665626", "{\"term\":\"brave\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07961030\", \"09665626\"]}");
	add("09665709", "{\"term\":\"abenaki\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09665709\"]}");
	add("09665709", "{\"term\":\"abnaki\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06920824\", \"09665709\"]}");
	add("09665834", "{\"term\":\"achomawi\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06934532\", \"08505091\", \"09665834\"]}");
	add("09665950", "{\"term\":\"akwa\u0027ala\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06935166\", \"08505260\", \"09665950\"]}");
	add("09666058", "{\"term\":\"alabama\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"06925024\", \"09214753\", \"09666058\", \"09075641\"]}");
	add("09666270", "{\"term\":\"algonkian\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06920935\", \"09666270\"]}");
	add("09666270", "{\"term\":\"algonkin\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06920935\", \"09666270\"]}");
	add("09666446", "{\"term\":\"algonquian\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06919747\", \"09666446\"]}");
	add("09666446", "{\"term\":\"algonquin\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06919747\", \"09666446\"]}");
	add("09667311", "{\"term\":\"anasazi\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09667311\"]}");
	add("09667518", "{\"term\":\"atakapa\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06920343\", \"09667518\"]}");
	add("09667518", "{\"term\":\"attacapan\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06920343\", \"09667518\"]}");
	add("09667672", "{\"term\":\"athabascan\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09667672\", \"06920504\"]}");
	add("09667672", "{\"term\":\"athabaskan\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06920504\", \"09667672\"]}");
	add("09667672", "{\"term\":\"athapascan\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06920504\", \"09667672\"]}");
	add("09667672", "{\"term\":\"athapaskan\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06920504\", \"09667672\"]}");
	add("09668014", "{\"term\":\"maya\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06931991\", \"08501397\", \"09668014\"]}");
	add("09668014", "{\"term\":\"mayan\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06931991\", \"09668014\"]}");
	add("09668448", "{\"term\":\"nahuatl\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06931608\", \"09668448\"]}");
	add("09668616", "{\"term\":\"aztec\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09668616\"]}");
	add("09668772", "{\"term\":\"olmec\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09668772\"]}");
	add("09668954", "{\"term\":\"toltec\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09668954\"]}");
	add("09669077", "{\"term\":\"zapotec\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06931898\", \"09669077\"]}");
	add("09669077", "{\"term\":\"zapotecan\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06931898\", \"09669077\"]}");
	add("09669259", "{\"term\":\"buffalo indian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09669259\"]}");
	add("09669259", "{\"term\":\"plains indian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09669259\"]}");
	add("09669631", "{\"term\":\"apache\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06932210\", \"09630238\", \"09669631\"]}");
	add("09669955", "{\"term\":\"arapaho\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06921067\", \"09669955\"]}");
	add("09669955", "{\"term\":\"arapahoe\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06921067\", \"09669955\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }