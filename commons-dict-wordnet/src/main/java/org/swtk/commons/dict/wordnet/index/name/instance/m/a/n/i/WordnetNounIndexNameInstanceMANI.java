package org.swtk.commons.dict.wordnet.index.name.instance.m.a.n.i;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceMANI {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"mania\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"14415065\", \"09204454\"]}");
	add("{\"term\":\"maniac\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10310202\", \"10296461\"]}");
	add("{\"term\":\"manichaean\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10310474\"]}");
	add("{\"term\":\"manichaeanism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06253705\"]}");
	add("{\"term\":\"manichaeism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06253705\"]}");
	add("{\"term\":\"manichean\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10310474\"]}");
	add("{\"term\":\"manichee\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10310474\"]}");
	add("{\"term\":\"manicotti\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07717202\"]}");
	add("{\"term\":\"manicure\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00662026\"]}");
	add("{\"term\":\"manicurist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10310580\"]}");
	add("{\"term\":\"manidae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02464187\"]}");
	add("{\"term\":\"manifest\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06513909\"]}");
	add("{\"term\":\"manifestation\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"01180193\", \"06893299\", \"07337624\", \"06811416\", \"07337831\"]}");
	add("{\"term\":\"manifesto\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06739973\"]}");
	add("{\"term\":\"manifold\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08020990\", \"14970888\", \"03723289\"]}");
	add("{\"term\":\"manihot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12947076\"]}");
	add("{\"term\":\"manikin\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03723460\", \"10310901\", \"10311241\"]}");
	add("{\"term\":\"manila\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09004116\", \"14971077\"]}");
	add("{\"term\":\"manilkara\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12794887\"]}");
	add("{\"term\":\"manilla\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14971077\"]}");
	add("{\"term\":\"manioc\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"12947449\", \"12947773\", \"14785757\"]}");
	add("{\"term\":\"manioca\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14785757\"]}");
	add("{\"term\":\"manipulability\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04781604\"]}");
	add("{\"term\":\"manipulation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00141472\", \"00159005\"]}");
	add("{\"term\":\"manipulator\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10310771\", \"10398111\"]}");
	add("{\"term\":\"manipur\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08922510\"]}");
	add("{\"term\":\"maniraptor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01719657\"]}");
	add("{\"term\":\"maniraptora\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01719373\"]}");
	add("{\"term\":\"manis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02464332\"]}");
	add("{\"term\":\"manitoba\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08842960\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public boolean has(final String TERM) { 		return map.containsKey(TERM); 	} }