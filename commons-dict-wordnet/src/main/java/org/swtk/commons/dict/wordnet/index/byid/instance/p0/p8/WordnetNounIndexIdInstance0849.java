package org.swtk.commons.dict.wordnet.index.byid.instance.p0.p8;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0849 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("08490184", "{\"term\":\"i.w.w.\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08490184\"]}");
	add("08490184", "{\"term\":\"industrial workers of the world\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08490184\"]}");
	add("08490184", "{\"term\":\"iww\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08490184\"]}");
	add("08490493", "{\"term\":\"trade unionism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08490493\"]}");
	add("08490493", "{\"term\":\"unionism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08490493\"]}");
	add("08490634", "{\"term\":\"reform movement\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08490634\"]}");
	add("08490798", "{\"term\":\"religious movement\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08490798\"]}");
	add("08491131", "{\"term\":\"akhbari\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08491131\"]}");
	add("08491352", "{\"term\":\"usuli\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08491352\"]}");
	add("08491634", "{\"term\":\"counter reformation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08491634\"]}");
	add("08491886", "{\"term\":\"ecumenical movement\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08491886\"]}");
	add("08492081", "{\"term\":\"gallicanism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08492081\"]}");
	add("08492343", "{\"term\":\"chabad\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06244569\", \"08492343\"]}");
	add("08492343", "{\"term\":\"chabad-lubavitch\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08492343\"]}");
	add("08492343", "{\"term\":\"lubavitch\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08492343\", \"09034292\"]}");
	add("08492343", "{\"term\":\"lubavitch movement\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08492343\"]}");
	add("08492597", "{\"term\":\"oxford movement\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08492597\"]}");
	add("08492733", "{\"term\":\"pietism\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04834406\", \"08492733\"]}");
	add("08492940", "{\"term\":\"protestant reformation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08492940\"]}");
	add("08492940", "{\"term\":\"reformation\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00096791\", \"08492940\", \"14447491\"]}");
	add("08493176", "{\"term\":\"taleban\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08493176\"]}");
	add("08493176", "{\"term\":\"taliban\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08493176\"]}");
	add("08493436", "{\"term\":\"northern alliance\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08493436\"]}");
	add("08493436", "{\"term\":\"united front\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08493436\"]}");
	add("08493640", "{\"term\":\"nation of islam\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08493640\"]}");
	add("08493840", "{\"term\":\"humanism\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08493840\", \"05976058\", \"05976269\"]}");
	add("08493999", "{\"term\":\"analytical cubism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08493999\"]}");
	add("08494088", "{\"term\":\"synthetic cubism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08494088\"]}");
	add("08494175", "{\"term\":\"unconfessed\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08494175\"]}");
	add("08494318", "{\"term\":\"unemployed\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08494318\"]}");
	add("08494318", "{\"term\":\"unemployed people\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08494318\"]}");
	add("08494522", "{\"term\":\"wolf pack\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08011516\", \"08494522\"]}");
	add("08494645", "{\"term\":\"fair sex\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08494645\"]}");
	add("08494645", "{\"term\":\"woman\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"08494645\", \"09930684\", \"10808492\", \"10807146\"]}");
	add("08494645", "{\"term\":\"womanhood\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00607121\", \"08494645\", \"14449119\"]}");
	add("08494923", "{\"term\":\"womankind\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08494923\"]}");
	add("08495029", "{\"term\":\"camp\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"02949049\", \"02949268\", \"05657805\", \"02948834\", \"08257554\", \"02948616\", \"08495029\", \"02948281\"]}");
	add("08495182", "{\"term\":\"hobo camp\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08495182\"]}");
	add("08495182", "{\"term\":\"jungle\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08456014\", \"08495182\", \"08526132\"]}");
	add("08495272", "{\"term\":\"record company\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08495272\"]}");
	add("08495382", "{\"term\":\"reunion\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00383282\", \"08495382\"]}");
	add("08495493", "{\"term\":\"mover\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"08495493\", \"10355644\", \"10504111\", \"10355947\"]}");
	add("08495493", "{\"term\":\"moving company\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08495493\"]}");
	add("08495493", "{\"term\":\"public mover\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08495493\"]}");
	add("08495493", "{\"term\":\"removal company\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08495493\"]}");
	add("08495493", "{\"term\":\"removal firm\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08495493\"]}");
	add("08495713", "{\"term\":\"think factory\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08495713\"]}");
	add("08495713", "{\"term\":\"think tank\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08495713\"]}");
	add("08495862", "{\"term\":\"vestry\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04539799\", \"08495862\"]}");
	add("08496106", "{\"term\":\"jewry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08496106\"]}");
	add("08496213", "{\"term\":\"zionism\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08496213\", \"06676208\"]}");
	add("08496213", "{\"term\":\"zionist movement\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08496213\"]}");
	add("08496418", "{\"term\":\"chou\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07644185\", \"07729640\", \"08496418\"]}");
	add("08496418", "{\"term\":\"chou dynasty\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08496418\"]}");
	add("08496418", "{\"term\":\"chow\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02114789\", \"07580726\", \"08496418\"]}");
	add("08496418", "{\"term\":\"chow dynasty\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08496418\"]}");
	add("08496418", "{\"term\":\"zhou\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08496418\"]}");
	add("08496418", "{\"term\":\"zhou dynasty\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08496418\"]}");
	add("08496626", "{\"term\":\"muster\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01160337\", \"08496626\"]}");
	add("08496806", "{\"term\":\"rap group\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08496806\"]}");
	add("08496905", "{\"term\":\"rave-up\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08496905\"]}");
	add("08496997", "{\"term\":\"enrollment\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08496997\", \"00050857\"]}");
	add("08496997", "{\"term\":\"registration\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"01001729\", \"04994605\", \"06491045\", \"08496997\", \"00050857\"]}");
	add("08497146", "{\"term\":\"table\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"07580824\", \"08497146\", \"09374802\", \"04387051\", \"04386330\", \"08283156\"]}");
	add("08497314", "{\"term\":\"world council of churches\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08497314\"]}");
	add("08497523", "{\"term\":\"number\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"03840952\", \"06337519\", \"06609408\", \"05103556\", \"06436708\", \"08497523\", \"06609182\", \"06820056\", \"06437781\", \"06905066\", \"13603216\", \"05128718\"]}");
	add("08497673", "{\"term\":\"vote\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"05865749\", \"08497673\", \"05193574\", \"00183062\", \"00184354\"]}");
	add("08497858", "{\"term\":\"blue\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"02284909\", \"02706551\", \"15011152\", \"09247473\", \"08497858\", \"02859205\", \"04976072\"]}");
	add("08498020", "{\"term\":\"gray\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"11032470\", \"11032672\", \"11032842\", \"11032989\", \"13667291\", \"02384016\", \"08498020\", \"03461130\", \"04968868\"]}");
	add("08498020", "{\"term\":\"grey\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"02384016\", \"03461130\", \"04968868\", \"08498020\", \"11035646\", \"11035868\", \"11036071\"]}");
	add("08498195", "{\"term\":\"host\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"04182208\", \"07698883\", \"10206393\", \"10206975\", \"08498195\", \"08200720\", \"10318917\", \"01388168\", \"08199880\", \"10206749\"]}");
	add("08498380", "{\"term\":\"pool\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00502091\", \"08682839\", \"13390647\", \"09420482\", \"13391030\", \"08253359\", \"08498380\", \"09420266\", \"03988418\"]}");
	add("08498615", "{\"term\":\"typing pool\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08498615\"]}");
	add("08498726", "{\"term\":\"shipper\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08498726\", \"10609747\"]}");
	add("08498843", "{\"term\":\"center\", \"synsetCount\":18, \"upperType\":\"NOUN\", \"ids\":[\"00726757\", \"00728798\", \"00729762\", \"03971750\", \"07618221\", \"09924161\", \"08433480\", \"08531106\", \"09923774\", \"09924009\", \"08498843\", \"05471109\", \"05820064\", \"05929717\", \"08538999\", \"02997001\", \"02997788\", \"08540894\"]}");
	add("08498994", "{\"term\":\"diaspora\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"05095101\", \"07346532\", \"08498994\"]}");
	add("08499124", "{\"term\":\"flank\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"02466854\", \"07673366\", \"13920070\", \"08499124\"]}");
	add("08499124", "{\"term\":\"wing\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"02716453\", \"03332786\", \"07664158\", \"08503316\", \"08510835\", \"10801811\", \"08499124\", \"08236414\", \"04600289\", \"04600068\", \"02154277\"]}");
	add("08499282", "{\"term\":\"head\", \"synsetCount\":33, \"upperType\":\"NOUN\", \"ids\":[\"00856505\", \"03254982\", \"03506432\", \"03506664\", \"03506758\", \"03506955\", \"04065833\", \"05298255\", \"05603592\", \"06355341\", \"06796625\", \"06834918\", \"07387379\", \"07433422\", \"08590014\", \"09324750\", \"09324937\", \"09422467\", \"10182373\", \"10182947\", \"10494230\", \"13154545\", \"13675998\", \"14335908\", \"06302589\", \"08525470\", \"08681922\", \"11516007\", \"08499282\", \"10182584\", \"05619057\", \"01320872\", \"05546258\"]}");
	add("08499588", "{\"term\":\"local authority\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08499588\"]}");
	add("08499711", "{\"term\":\"rear\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"04066813\", \"05566889\", \"08643421\", \"08647083\", \"08499711\"]}");
	add("08499877", "{\"term\":\"smithereens\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08499877\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }