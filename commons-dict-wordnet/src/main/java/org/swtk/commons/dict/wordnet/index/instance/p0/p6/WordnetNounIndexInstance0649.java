package org.swtk.commons.dict.wordnet.index.instance.p0.p6;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexInstance0649 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("06490002", "{\"term\":\"ration card\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06490002\"]}");
	add("06490123", "{\"term\":\"birth certificate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06490123\"]}");
	add("06490253", "{\"term\":\"diploma\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06490253\"]}");
	add("06490253", "{\"term\":\"sheepskin\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06490253\", \"14783182\", \"14787687\"]}");
	add("06490405", "{\"term\":\"higher national diploma\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06490405\"]}");
	add("06490405", "{\"term\":\"hnd\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06490405\"]}");
	add("06490659", "{\"term\":\"commission\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00732520\", \"00774724\", \"06490659\", \"07184131\", \"08419399\", \"14032759\", \"01142792\", \"13341882\", \"08341444\"]}");
	add("06490659", "{\"term\":\"military commission\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06490659\"]}");
	add("06490875", "{\"term\":\"bill of health\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06490875\"]}");
	add("06491045", "{\"term\":\"registration\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"01001729\", \"04994605\", \"06491045\", \"08496997\", \"00050857\"]}");
	add("06491165", "{\"term\":\"teacher\u0027s certificate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06491165\"]}");
	add("06491165", "{\"term\":\"teaching certificate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06491165\"]}");
	add("06491336", "{\"term\":\"instrument\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"03806455\", \"06343724\", \"06491336\", \"10229217\", \"00174610\", \"03579967\"]}");
	add("06491336", "{\"term\":\"legal document\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06491336\"]}");
	add("06491336", "{\"term\":\"legal instrument\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06491336\"]}");
	add("06491336", "{\"term\":\"official document\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06491336\"]}");
	add("06492177", "{\"term\":\"derivative\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"06300831\", \"06492177\", \"14858055\", \"06024079\"]}");
	add("06492177", "{\"term\":\"derivative instrument\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06492177\"]}");
	add("06492394", "{\"term\":\"futures contract\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06492394\"]}");
	add("06492662", "{\"term\":\"stock-index futures\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06492662\"]}");
	add("06492827", "{\"term\":\"negotiable instrument\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06492827\"]}");
	add("06492991", "{\"term\":\"list\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05075249\", \"06492991\"]}");
	add("06492991", "{\"term\":\"listing\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01013108\", \"06492991\"]}");
	add("06494090", "{\"term\":\"item\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"06808603\", \"05825971\", \"03593583\", \"13832132\", \"06494090\"]}");
	add("06494090", "{\"term\":\"point\", \"synsetCount\":26, \"upperType\":\"NOUN\", \"ids\":[\"03218529\", \"03981029\", \"03981127\", \"04739307\", \"05078725\", \"06825147\", \"06834918\", \"06856570\", \"13421323\", \"13734391\", \"13852504\", \"03980573\", \"04739165\", \"13817097\", \"06494090\", \"09419340\", \"13631405\", \"13934887\", \"13925175\", \"05992951\", \"15205381\", \"13962925\", \"05825971\", \"06619161\", \"08637636\", \"05874582\"]}");
	add("06494557", "{\"term\":\"agenda item\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06494557\"]}");
	add("06494667", "{\"term\":\"incidental\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06494667\", \"13327458\"]}");
	add("06494750", "{\"term\":\"inventory item\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06494750\"]}");
	add("06494860", "{\"term\":\"line item\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06494860\"]}");
	add("06495028", "{\"term\":\"news item\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06495028\"]}");
	add("06495143", "{\"term\":\"place\", \"synsetCount\":16, \"upperType\":\"NOUN\", \"ids\":[\"06401196\", \"06495143\", \"08637370\", \"13971047\", \"06412750\", \"08665191\", \"13970825\", \"08639173\", \"00587299\", \"08577045\", \"13949819\", \"00722683\", \"08659612\", \"05619605\", \"08530790\", \"08682181\"]}");
	add("06495143", "{\"term\":\"position\", \"synsetCount\":16, \"upperType\":\"NOUN\", \"ids\":[\"00084268\", \"00722683\", \"06495143\", \"06796122\", \"06206019\", \"13948785\", \"01053255\", \"00723730\", \"08639776\", \"05081943\", \"00587299\", \"13968971\", \"05087073\", \"06218486\", \"08640161\", \"08639173\"]}");
	add("06495391", "{\"term\":\"postposition\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06495391\"]}");
	add("06495681", "{\"term\":\"preposition\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06495681\", \"06336138\"]}");
	add("06495968", "{\"term\":\"topicalization\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06495968\"]}");
	add("06496385", "{\"term\":\"ammunition\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06496385\", \"14609988\", \"02706134\"]}");
	add("06496576", "{\"term\":\"factoid\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06496576\", \"06496690\"]}");
	add("06496690", "{\"term\":\"factoid\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06496576\", \"06496690\"]}");
	add("06496867", "{\"term\":\"papyrus\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06496867\", \"12171882\", \"15000157\"]}");
	add("06496950", "{\"term\":\"agenda\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06496950\", \"05919534\"]}");
	add("06496950", "{\"term\":\"agendum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06496950\"]}");
	add("06496950", "{\"term\":\"order of business\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06496950\"]}");
	add("06497120", "{\"term\":\"a-list\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06497120\"]}");
	add("06497282", "{\"term\":\"docket\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05919534\", \"06497282\"]}");
	add("06497489", "{\"term\":\"order of the day\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06497489\"]}");
	add("06497622", "{\"term\":\"order book\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03859108\", \"06497622\"]}");
	add("06497622", "{\"term\":\"order paper\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06497622\"]}");
	add("06497731", "{\"term\":\"network programming\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06497731\"]}");
	add("06497868", "{\"term\":\"lineup\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06497868\", \"08448162\", \"06497998\"]}");
	add("06497998", "{\"term\":\"batting order\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06497998\"]}");
	add("06497998", "{\"term\":\"card\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"03037971\", \"06497998\", \"06504930\", \"06519932\", \"06645712\", \"06806283\", \"10782010\", \"14824204\", \"06639513\", \"06489042\", \"02965981\"]}");
	add("06497998", "{\"term\":\"lineup\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06497868\", \"08448162\", \"06497998\"]}");
	add("06498242", "{\"term\":\"cleanup\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00251880\", \"06498242\", \"13280696\"]}");
	add("06498242", "{\"term\":\"cleanup position\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06498242\"]}");
	add("06498242", "{\"term\":\"cleanup spot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06498242\"]}");
	add("06498467", "{\"term\":\"bibliography\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06498467\"]}");
	add("06498711", "{\"term\":\"bill\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"01760949\", \"02841963\", \"02842193\", \"06498711\", \"06806283\", \"07265007\", \"00552444\", \"13414935\", \"06528946\", \"06548844\"]}");
	add("06498887", "{\"term\":\"bill of entry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06498887\"]}");
	add("06499009", "{\"term\":\"bill of goods\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06499009\", \"06622910\"]}");
	add("06499097", "{\"term\":\"black book\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06499097\"]}");
	add("06499097", "{\"term\":\"blacklist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06499097\"]}");
	add("06499097", "{\"term\":\"shitlist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06499097\"]}");
	add("06499232", "{\"term\":\"calendar\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08283770\", \"06499232\", \"15198526\"]}");
	add("06499447", "{\"term\":\"calorie chart\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06499447\"]}");
	add("06499566", "{\"term\":\"canon\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"06442207\", \"06499566\", \"07056608\", \"09256353\", \"09911065\", \"06677339\"]}");
	add("06499734", "{\"term\":\"catalog\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06499734\", \"06427849\"]}");
	add("06499734", "{\"term\":\"catalogue\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06427849\", \"06499734\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }