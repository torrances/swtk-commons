package org.swtk.commons.dict.wordnet.index.byid.instance.p1.p0;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance1071 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("10710034", "{\"term\":\"tamer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10710034\"]}");
	add("10710144", "{\"term\":\"tank driver\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10710144\"]}");
	add("10710144", "{\"term\":\"tanker\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10710144\", \"03850710\"]}");
	add("10710238", "{\"term\":\"tanner\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10710238\", \"13412625\"]}");
	add("10710345", "{\"term\":\"tantaliser\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10710345\"]}");
	add("10710345", "{\"term\":\"tantalizer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10710345\"]}");
	add("10710548", "{\"term\":\"taoiseach\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10710548\"]}");
	add("10710644", "{\"term\":\"tap dancer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10710644\"]}");
	add("10710644", "{\"term\":\"tapper\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"10710644\", \"10710814\", \"10710981\", \"10711096\", \"10711260\"]}");
	add("10710814", "{\"term\":\"phone tapper\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10710814\"]}");
	add("10710814", "{\"term\":\"tapper\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"10710644\", \"10710814\", \"10710981\", \"10711096\", \"10711260\"]}");
	add("10710814", "{\"term\":\"wiretapper\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10710814\"]}");
	add("10710981", "{\"term\":\"tapper\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"10710644\", \"10710814\", \"10710981\", \"10711096\", \"10711260\"]}");
	add("10711096", "{\"term\":\"tapper\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"10710644\", \"10710814\", \"10710981\", \"10711096\", \"10711260\"]}");
	add("10711260", "{\"term\":\"tapper\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"10710644\", \"10710814\", \"10710981\", \"10711096\", \"10711260\"]}");
	add("10711260", "{\"term\":\"tapster\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10711260\"]}");
	add("10711433", "{\"term\":\"tartufe\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10711433\"]}");
	add("10711433", "{\"term\":\"tartuffe\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10711433\"]}");
	add("10711586", "{\"term\":\"tarzan\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09626935\", \"10711586\"]}");
	add("10711765", "{\"term\":\"taskmaster\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10711765\"]}");
	add("10711901", "{\"term\":\"taskmistress\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10711901\"]}");
	add("10711978", "{\"term\":\"sampler\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04140294\", \"08480828\", \"10711978\", \"04140429\"]}");
	add("10711978", "{\"term\":\"taste-tester\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10711978\"]}");
	add("10711978", "{\"term\":\"taste tester\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10711978\"]}");
	add("10711978", "{\"term\":\"taster\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10711978\"]}");
	add("10712192", "{\"term\":\"blabbermouth\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10712192\"]}");
	add("10712192", "{\"term\":\"talebearer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10712192\"]}");
	add("10712192", "{\"term\":\"taleteller\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10712192\"]}");
	add("10712192", "{\"term\":\"tattler\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02032941\", \"10712192\"]}");
	add("10712192", "{\"term\":\"tattletale\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10712192\"]}");
	add("10712192", "{\"term\":\"telltale\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10712192\"]}");
	add("10712379", "{\"term\":\"assessor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10712379\"]}");
	add("10712379", "{\"term\":\"tax assessor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10712379\"]}");
	add("10712548", "{\"term\":\"collector of internal revenue\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10712548\"]}");
	add("10712548", "{\"term\":\"exciseman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10712548\"]}");
	add("10712548", "{\"term\":\"internal revenue agent\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10712548\"]}");
	add("10712548", "{\"term\":\"tax collector\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10712548\"]}");
	add("10712548", "{\"term\":\"taxman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10712548\"]}");
	add("10712731", "{\"term\":\"taxer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10712731\"]}");
	add("10712830", "{\"term\":\"taxi dancer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10712830\"]}");
	add("10712955", "{\"term\":\"animal stuffer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10712955\"]}");
	add("10712955", "{\"term\":\"stuffer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07265395\", \"10712955\"]}");
	add("10712955", "{\"term\":\"taxidermist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10712955\"]}");
	add("10713142", "{\"term\":\"cabby\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10713142\"]}");
	add("10713142", "{\"term\":\"cabdriver\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10713142\"]}");
	add("10713142", "{\"term\":\"cabman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10713142\"]}");
	add("10713142", "{\"term\":\"hack-driver\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10713142\"]}");
	add("10713142", "{\"term\":\"hack driver\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10713142\"]}");
	add("10713142", "{\"term\":\"livery driver\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10713142\"]}");
	add("10713142", "{\"term\":\"taxidriver\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10713142\"]}");
	add("10713142", "{\"term\":\"taximan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10713142\"]}");
	add("10713320", "{\"term\":\"systematist\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10401068\", \"10713320\"]}");
	add("10713320", "{\"term\":\"taxonomer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10713320\"]}");
	add("10713320", "{\"term\":\"taxonomist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10713320\"]}");
	add("10713659", "{\"term\":\"taxpayer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10713659\"]}");
	add("10713754", "{\"term\":\"instructor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10713754\"]}");
	add("10713754", "{\"term\":\"teacher\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05863377\", \"10713754\"]}");
	add("10714345", "{\"term\":\"teacher\u0027s pet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10714345\"]}");
	add("10714435", "{\"term\":\"teaching fellow\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10714435\"]}");
	add("10714546", "{\"term\":\"mate\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"00168585\", \"07943025\", \"10319821\", \"12778428\", \"13765240\", \"03734302\", \"10660018\", \"10319970\", \"10714546\", \"10319708\"]}");
	add("10714546", "{\"term\":\"teammate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10714546\"]}");
	add("10714688", "{\"term\":\"teamster\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10714688\", \"10714829\"]}");
	add("10714688", "{\"term\":\"truck driver\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10714688\"]}");
	add("10714688", "{\"term\":\"trucker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10714688\"]}");
	add("10714829", "{\"term\":\"teamster\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10714688\", \"10714829\"]}");
	add("10714946", "{\"term\":\"tearaway\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10714946\"]}");
	add("10715051", "{\"term\":\"annoyer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10715051\"]}");
	add("10715051", "{\"term\":\"tease\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00426908\", \"09984664\", \"10715051\"]}");
	add("10715051", "{\"term\":\"teaser\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"04405302\", \"04463547\", \"06409288\", \"06797496\", \"07265536\", \"10715051\", \"10715318\"]}");
	add("10715051", "{\"term\":\"vexer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10715051\"]}");
	add("10715318", "{\"term\":\"teaser\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"04405302\", \"04463547\", \"06409288\", \"06797496\", \"07265536\", \"10715051\", \"10715318\"]}");
	add("10715413", "{\"term\":\"techie\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10715413\"]}");
	add("10715413", "{\"term\":\"tekki\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10715413\"]}");
	add("10715597", "{\"term\":\"technical sergeant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10715597\"]}");
	add("10715747", "{\"term\":\"technician\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10716004\", \"10715747\"]}");
	add("10716004", "{\"term\":\"technician\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10716004\", \"10715747\"]}");
	add("10716168", "{\"term\":\"technocrat\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10716168\", \"10716251\"]}");
	add("10716251", "{\"term\":\"technocrat\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10716168\", \"10716251\"]}");
	add("10716384", "{\"term\":\"technophile\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10716384\"]}");
	add("10716509", "{\"term\":\"technophobe\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10716509\"]}");
	add("10716631", "{\"term\":\"ted\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10716631\"]}");
	add("10716631", "{\"term\":\"teddy boy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10716631\"]}");
	add("10716778", "{\"term\":\"teetotaler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10716778\"]}");
	add("10716778", "{\"term\":\"teetotalist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10716778\"]}");
	add("10716778", "{\"term\":\"teetotaller\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10716778\"]}");
	add("10716916", "{\"term\":\"telecaster\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10716916\"]}");
	add("10717015", "{\"term\":\"telegraph operator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10717015\"]}");
	add("10717015", "{\"term\":\"telegrapher\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10717015\"]}");
	add("10717015", "{\"term\":\"telegraphist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10717015\"]}");
	add("10717278", "{\"term\":\"teleologist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10717278\"]}");
	add("10717375", "{\"term\":\"mental telepathist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10717375\"]}");
	add("10717375", "{\"term\":\"mind reader\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10339238\", \"10717375\"]}");
	add("10717375", "{\"term\":\"telepathist\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10339238\", \"10717375\"]}");
	add("10717375", "{\"term\":\"thought-reader\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10339238\", \"10717375\"]}");
	add("10717560", "{\"term\":\"switchboard operator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10717560\"]}");
	add("10717560", "{\"term\":\"telephone operator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10717560\"]}");
	add("10717560", "{\"term\":\"telephonist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10717560\"]}");
	add("10717737", "{\"term\":\"televangelist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10717737\"]}");
	add("10717864", "{\"term\":\"television newscaster\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10717864\"]}");
	add("10717864", "{\"term\":\"television reporter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10717864\"]}");
	add("10717864", "{\"term\":\"tv newsman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10717864\"]}");
	add("10717864", "{\"term\":\"tv reporter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10717864\"]}");
	add("10718046", "{\"term\":\"television star\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10718046\"]}");
	add("10718046", "{\"term\":\"tv star\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10718046\"]}");
	add("10718145", "{\"term\":\"tell\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10718145\"]}");
	add("10718145", "{\"term\":\"william tell\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10718145\"]}");
	add("10718466", "{\"term\":\"bank clerk\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10718466\"]}");
	add("10718466", "{\"term\":\"cashier\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09918741\", \"10718466\"]}");
	add("10718466", "{\"term\":\"teller\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"10365535\", \"10718466\", \"10718595\", \"11355036\"]}");
	add("10718595", "{\"term\":\"teller\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"10365535\", \"10718466\", \"10718595\", \"11355036\"]}");
	add("10718595", "{\"term\":\"vote counter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10718595\"]}");
	add("10718758", "{\"term\":\"earthling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10718758\"]}");
	add("10718758", "{\"term\":\"earthman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10718758\"]}");
	add("10718758", "{\"term\":\"tellurian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10718758\"]}");
	add("10718758", "{\"term\":\"worldling\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10718758\", \"10811530\"]}");
	add("10718911", "{\"term\":\"temp\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10718911\"]}");
	add("10718911", "{\"term\":\"temporary\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10718911\"]}");
	add("10718911", "{\"term\":\"temporary worker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10718911\"]}");
	add("10719072", "{\"term\":\"hobo\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10719072\", \"10742949\"]}");
	add("10719072", "{\"term\":\"migrant worker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10719072\"]}");
	add("10719207", "{\"term\":\"temporiser\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10719207\"]}");
	add("10719207", "{\"term\":\"temporizer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10719207\"]}");
	add("10719401", "{\"term\":\"tempter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10719401\"]}");
	add("10719630", "{\"term\":\"term infant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10719630\"]}");
	add("10719754", "{\"term\":\"toiler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10719754\"]}");
	add("10719850", "{\"term\":\"renter\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10540397\", \"10719850\"]}");
	add("10719850", "{\"term\":\"tenant\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10720166\", \"10720289\", \"10719850\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }