package org.swtk.commons.dict.wordnet.index.name.controller.u.s;  import java.util.Collection; import java.util.Set; import java.util.TreeSet;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  	import org.swtk.commons.dict.wordnet.index.name.instance.u.s.a.b.WordnetNounIndexNameInstanceUSAB;
	import org.swtk.commons.dict.wordnet.index.name.instance.u.s.a.c.WordnetNounIndexNameInstanceUSAC;
	import org.swtk.commons.dict.wordnet.index.name.instance.u.s.a.f.WordnetNounIndexNameInstanceUSAF;
	import org.swtk.commons.dict.wordnet.index.name.instance.u.s.a.g.WordnetNounIndexNameInstanceUSAG;
	import org.swtk.commons.dict.wordnet.index.name.instance.u.s.a.n.WordnetNounIndexNameInstanceUSAN;
	import org.swtk.commons.dict.wordnet.index.name.instance.u.s.b.e.WordnetNounIndexNameInstanceUSBE;
	import org.swtk.commons.dict.wordnet.index.name.instance.u.s.c.b.WordnetNounIndexNameInstanceUSCB;
	import org.swtk.commons.dict.wordnet.index.name.instance.u.s.d.a.WordnetNounIndexNameInstanceUSDA;
	import org.swtk.commons.dict.wordnet.index.name.instance.u.s.e.a.WordnetNounIndexNameInstanceUSEA;
	import org.swtk.commons.dict.wordnet.index.name.instance.u.s.e.f.WordnetNounIndexNameInstanceUSEF;
	import org.swtk.commons.dict.wordnet.index.name.instance.u.s.e.l.WordnetNounIndexNameInstanceUSEL;
	import org.swtk.commons.dict.wordnet.index.name.instance.u.s.e.r.WordnetNounIndexNameInstanceUSER;
	import org.swtk.commons.dict.wordnet.index.name.instance.u.s.h.a.WordnetNounIndexNameInstanceUSHA;
	import org.swtk.commons.dict.wordnet.index.name.instance.u.s.h.e.WordnetNounIndexNameInstanceUSHE;
	import org.swtk.commons.dict.wordnet.index.name.instance.u.s.i.n.WordnetNounIndexNameInstanceUSIN;
	import org.swtk.commons.dict.wordnet.index.name.instance.u.s.k.u.WordnetNounIndexNameInstanceUSKU;
	import org.swtk.commons.dict.wordnet.index.name.instance.u.s.m.c.WordnetNounIndexNameInstanceUSMC;
	import org.swtk.commons.dict.wordnet.index.name.instance.u.s.n.e.WordnetNounIndexNameInstanceUSNE;
	import org.swtk.commons.dict.wordnet.index.name.instance.u.s.p.s.WordnetNounIndexNameInstanceUSPS;
	import org.swtk.commons.dict.wordnet.index.name.instance.u.s.s.h.WordnetNounIndexNameInstanceUSSH;
	import org.swtk.commons.dict.wordnet.index.name.instance.u.s.s.r.WordnetNounIndexNameInstanceUSSR;
	import org.swtk.commons.dict.wordnet.index.name.instance.u.s.s.s.WordnetNounIndexNameInstanceUSSS;
	import org.swtk.commons.dict.wordnet.index.name.instance.u.s.t.i.WordnetNounIndexNameInstanceUSTI;
	import org.swtk.commons.dict.wordnet.index.name.instance.u.s.u.a.WordnetNounIndexNameInstanceUSUA;
	import org.swtk.commons.dict.wordnet.index.name.instance.u.s.u.f.WordnetNounIndexNameInstanceUSUF;
	import org.swtk.commons.dict.wordnet.index.name.instance.u.s.u.l.WordnetNounIndexNameInstanceUSUL;
	import org.swtk.commons.dict.wordnet.index.name.instance.u.s.u.m.WordnetNounIndexNameInstanceUSUM;
	import org.swtk.commons.dict.wordnet.index.name.instance.u.s.u.r.WordnetNounIndexNameInstanceUSUR;
  import com.trimc.blogger.commons.exception.BusinessException;  public final class WordnetNounIndexNameControllerUS {  	public static Collection<IndexNoun> get(final String TERM) throws BusinessException {  		String key = TERM.substring(0, 4).toLowerCase(); 			if ("usab".equals(key)) return WordnetNounIndexNameInstanceUSAB.get(TERM);
	if ("usac".equals(key)) return WordnetNounIndexNameInstanceUSAC.get(TERM);
	if ("usaf".equals(key)) return WordnetNounIndexNameInstanceUSAF.get(TERM);
	if ("usag".equals(key)) return WordnetNounIndexNameInstanceUSAG.get(TERM);
	if ("usan".equals(key)) return WordnetNounIndexNameInstanceUSAN.get(TERM);
	if ("usbe".equals(key)) return WordnetNounIndexNameInstanceUSBE.get(TERM);
	if ("uscb".equals(key)) return WordnetNounIndexNameInstanceUSCB.get(TERM);
	if ("usda".equals(key)) return WordnetNounIndexNameInstanceUSDA.get(TERM);
	if ("usea".equals(key)) return WordnetNounIndexNameInstanceUSEA.get(TERM);
	if ("usef".equals(key)) return WordnetNounIndexNameInstanceUSEF.get(TERM);
	if ("usel".equals(key)) return WordnetNounIndexNameInstanceUSEL.get(TERM);
	if ("user".equals(key)) return WordnetNounIndexNameInstanceUSER.get(TERM);
	if ("usha".equals(key)) return WordnetNounIndexNameInstanceUSHA.get(TERM);
	if ("ushe".equals(key)) return WordnetNounIndexNameInstanceUSHE.get(TERM);
	if ("usin".equals(key)) return WordnetNounIndexNameInstanceUSIN.get(TERM);
	if ("usku".equals(key)) return WordnetNounIndexNameInstanceUSKU.get(TERM);
	if ("usmc".equals(key)) return WordnetNounIndexNameInstanceUSMC.get(TERM);
	if ("usne".equals(key)) return WordnetNounIndexNameInstanceUSNE.get(TERM);
	if ("usps".equals(key)) return WordnetNounIndexNameInstanceUSPS.get(TERM);
	if ("ussh".equals(key)) return WordnetNounIndexNameInstanceUSSH.get(TERM);
	if ("ussr".equals(key)) return WordnetNounIndexNameInstanceUSSR.get(TERM);
	if ("usss".equals(key)) return WordnetNounIndexNameInstanceUSSS.get(TERM);
	if ("usti".equals(key)) return WordnetNounIndexNameInstanceUSTI.get(TERM);
	if ("usua".equals(key)) return WordnetNounIndexNameInstanceUSUA.get(TERM);
	if ("usuf".equals(key)) return WordnetNounIndexNameInstanceUSUF.get(TERM);
	if ("usul".equals(key)) return WordnetNounIndexNameInstanceUSUL.get(TERM);
	if ("usum".equals(key)) return WordnetNounIndexNameInstanceUSUM.get(TERM);
	if ("usur".equals(key)) return WordnetNounIndexNameInstanceUSUR.get(TERM);
  		throw new BusinessException("TERM not found (id = %s)", TERM); 	} 	 	public static Collection<String> terms() throws BusinessException { 		Set<String> set = new TreeSet<String>();  			set.addAll(WordnetNounIndexNameInstanceUSAB.terms());
	set.addAll(WordnetNounIndexNameInstanceUSAC.terms());
	set.addAll(WordnetNounIndexNameInstanceUSAF.terms());
	set.addAll(WordnetNounIndexNameInstanceUSAG.terms());
	set.addAll(WordnetNounIndexNameInstanceUSAN.terms());
	set.addAll(WordnetNounIndexNameInstanceUSBE.terms());
	set.addAll(WordnetNounIndexNameInstanceUSCB.terms());
	set.addAll(WordnetNounIndexNameInstanceUSDA.terms());
	set.addAll(WordnetNounIndexNameInstanceUSEA.terms());
	set.addAll(WordnetNounIndexNameInstanceUSEF.terms());
	set.addAll(WordnetNounIndexNameInstanceUSEL.terms());
	set.addAll(WordnetNounIndexNameInstanceUSER.terms());
	set.addAll(WordnetNounIndexNameInstanceUSHA.terms());
	set.addAll(WordnetNounIndexNameInstanceUSHE.terms());
	set.addAll(WordnetNounIndexNameInstanceUSIN.terms());
	set.addAll(WordnetNounIndexNameInstanceUSKU.terms());
	set.addAll(WordnetNounIndexNameInstanceUSMC.terms());
	set.addAll(WordnetNounIndexNameInstanceUSNE.terms());
	set.addAll(WordnetNounIndexNameInstanceUSPS.terms());
	set.addAll(WordnetNounIndexNameInstanceUSSH.terms());
	set.addAll(WordnetNounIndexNameInstanceUSSR.terms());
	set.addAll(WordnetNounIndexNameInstanceUSSS.terms());
	set.addAll(WordnetNounIndexNameInstanceUSTI.terms());
	set.addAll(WordnetNounIndexNameInstanceUSUA.terms());
	set.addAll(WordnetNounIndexNameInstanceUSUF.terms());
	set.addAll(WordnetNounIndexNameInstanceUSUL.terms());
	set.addAll(WordnetNounIndexNameInstanceUSUM.terms());
	set.addAll(WordnetNounIndexNameInstanceUSUR.terms());
  		return set; 	} }