package org.swtk.commons.dict.wordnet.index.instance.p0.p1;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexInstance0124 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("01240437", "{\"term\":\"centralisation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01017117\", \"01240437\"]}");
	add("01240437", "{\"term\":\"centralization\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01017117\", \"01240437\"]}");
	add("01240623", "{\"term\":\"decentralisation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01240623\"]}");
	add("01240623", "{\"term\":\"decentralization\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01240623\", \"13478354\"]}");
	add("01240832", "{\"term\":\"incorporation\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00374086\", \"05761951\", \"01240832\"]}");
	add("01240989", "{\"term\":\"amalgamation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01240989\"]}");
	add("01240989", "{\"term\":\"merger\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07388202\", \"01240989\"]}");
	add("01240989", "{\"term\":\"uniting\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00382488\", \"01240989\"]}");
	add("01241172", "{\"term\":\"vertical combination\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01241172\"]}");
	add("01241172", "{\"term\":\"vertical integration\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01241172\"]}");
	add("01241412", "{\"term\":\"horizontal combination\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01241412\"]}");
	add("01241412", "{\"term\":\"horizontal integration\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01241412\"]}");
	add("01241629", "{\"term\":\"engagement\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"01241629\", \"07352714\", \"00271763\", \"01220349\", \"07242871\", \"08401740\", \"00955670\"]}");
	add("01241629", "{\"term\":\"involution\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00407186\", \"00874089\", \"01241629\", \"04774107\", \"06326748\", \"13523600\"]}");
	add("01241629", "{\"term\":\"involvement\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"13947692\", \"13954922\", \"05690773\", \"13815716\", \"01241629\"]}");
	add("01241629", "{\"term\":\"participation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13947692\", \"01241629\"]}");
	add("01242052", "{\"term\":\"non-engagement\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01242052\"]}");
	add("01242052", "{\"term\":\"non-involvement\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01242052\"]}");
	add("01242052", "{\"term\":\"nonparticipation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01242052\"]}");
	add("01242282", "{\"term\":\"isolation\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"01242282\", \"13524876\", \"01204519\", \"07517815\", \"14438119\"]}");
	add("01242433", "{\"term\":\"commitment\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"01168182\", \"06697128\", \"01242433\", \"01208643\", \"04654347\"]}");
	add("01242629", "{\"term\":\"incurrence\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01242629\"]}");
	add("01242775", "{\"term\":\"intercession\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01242775\", \"07204848\"]}");
	add("01242775", "{\"term\":\"intervention\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00659325\", \"01025184\", \"01054139\", \"06674307\", \"01242775\"]}");
	add("01242997", "{\"term\":\"intermediation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01242997\"]}");
	add("01242997", "{\"term\":\"mediation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01242997\", \"07165352\"]}");
	add("01243193", "{\"term\":\"matchmaking\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01243193\"]}");
	add("01243310", "{\"term\":\"group participation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01243310\"]}");
	add("01243415", "{\"term\":\"neutrality\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"05046973\", \"06214753\", \"01243415\"]}");
	add("01243544", "{\"term\":\"annulment\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00232754\", \"01243544\", \"14587637\"]}");
	add("01243544", "{\"term\":\"invalidation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01243544\"]}");
	add("01243781", "{\"term\":\"dissolution of marriage\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01243781\"]}");
	add("01243896", "{\"term\":\"exoneration\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01243896\", \"14598944\"]}");
	add("01243896", "{\"term\":\"vindication\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06753339\", \"01243896\"]}");
	add("01244159", "{\"term\":\"whitewash\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01244159\", \"04588388\", \"07492092\"]}");
	add("01244332", "{\"term\":\"justification\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01244332\", \"06752932\", \"05831414\"]}");
	add("01244544", "{\"term\":\"rehabilitation\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00701513\", \"01244544\", \"00269862\", \"00401453\"]}");
	add("01244711", "{\"term\":\"job action\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01244711\"]}");
	add("01244901", "{\"term\":\"go-slow\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01244901\"]}");
	add("01245086", "{\"term\":\"work to rule\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01245086\"]}");
	add("01245263", "{\"term\":\"nonviolence\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01245263\"]}");
	add("01245263", "{\"term\":\"nonviolent resistance\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01245263\"]}");
	add("01245263", "{\"term\":\"passive resistance\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01245263\"]}");
	add("01245509", "{\"term\":\"hunger strike\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01245509\"]}");
	add("01245636", "{\"term\":\"ramadan\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01245636\", \"15243068\"]}");
	add("01245809", "{\"term\":\"satyagraha\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01245809\"]}");
	add("01246000", "{\"term\":\"recusancy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01246000\"]}");
	add("01246221", "{\"term\":\"strike\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00065324\", \"00110234\", \"00188559\", \"07424621\", \"00979387\", \"01246221\"]}");
	add("01246221", "{\"term\":\"work stoppage\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01246221\"]}");
	add("01246516", "{\"term\":\"sit-down\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01246516\"]}");
	add("01246516", "{\"term\":\"sit-down strike\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01246516\"]}");
	add("01246674", "{\"term\":\"sympathetic strike\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01246674\"]}");
	add("01246674", "{\"term\":\"sympathy strike\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01246674\"]}");
	add("01246888", "{\"term\":\"walkout\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01180685\", \"01246888\"]}");
	add("01246998", "{\"term\":\"wildcat strike\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01246998\"]}");
	add("01247140", "{\"term\":\"disentanglement\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01247140\"]}");
	add("01247140", "{\"term\":\"extrication\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01247140\"]}");
	add("01247140", "{\"term\":\"unsnarling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01247140\"]}");
	add("01247140", "{\"term\":\"untangling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01247140\"]}");
	add("01247442", "{\"term\":\"sabotage\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01247442\"]}");
	add("01247608", "{\"term\":\"extermination\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01247608\", \"07347291\"]}");
	add("01247608", "{\"term\":\"liquidation\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00224587\", \"01247608\", \"00229402\"]}");
	add("01247706", "{\"term\":\"genocide\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01247706\"]}");
	add("01247706", "{\"term\":\"race murder\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01247706\"]}");
	add("01247706", "{\"term\":\"racial extermination\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01247706\"]}");
	add("01247865", "{\"term\":\"holocaust\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01248018\", \"01247865\"]}");
	add("01248018", "{\"term\":\"final solution\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01248018\"]}");
	add("01248018", "{\"term\":\"holocaust\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01248018\", \"01247865\"]}");
	add("01248165", "{\"term\":\"throw\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"01248165\", \"04437105\", \"07365795\", \"14509574\", \"00105359\"]}");
	add("01248360", "{\"term\":\"cast\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00106299\", \"00455648\", \"01248360\", \"02983121\", \"02983295\", \"04684871\", \"13936581\", \"03784903\", \"08254784\"]}");
	add("01248360", "{\"term\":\"roll\", \"synsetCount\":15, \"upperType\":\"NOUN\", \"ids\":[\"00105229\", \"00171161\", \"00290503\", \"01248360\", \"04108326\", \"06419376\", \"07403416\", \"07403930\", \"07696677\", \"13377742\", \"13898609\", \"04108469\", \"07364132\", \"06506991\", \"07456219\"]}");
	add("01248497", "{\"term\":\"natural\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01248497\", \"06880268\", \"10366123\"]}");
	add("01248633", "{\"term\":\"flip\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00106640\", \"00444788\", \"01248633\", \"01248753\", \"07931127\", \"00440424\"]}");
	add("01248633", "{\"term\":\"toss\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00346643\", \"00106640\", \"01248633\"]}");
	add("01248753", "{\"term\":\"flip\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00106640\", \"00444788\", \"01248633\", \"01248753\", \"07931127\", \"00440424\"]}");
	add("01248881", "{\"term\":\"strafe\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01248881\"]}");
	add("01249088", "{\"term\":\"coup de main\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01249088\"]}");
	add("01249088", "{\"term\":\"surprise attack\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01249088\"]}");
	add("01249244", "{\"term\":\"terrorist attack\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01249244\"]}");
	add("01249473", "{\"term\":\"ambuscade\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01249473\"]}");
	add("01249473", "{\"term\":\"ambush\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01249473\"]}");
	add("01249473", "{\"term\":\"lying in wait\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01249473\"]}");
	add("01249473", "{\"term\":\"trap\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"02923753\", \"04482078\", \"05309806\", \"01249473\", \"04482157\", \"05845694\", \"04482267\", \"04481701\"]}");
	add("01249703", "{\"term\":\"pre-emptive strike\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01249703\"]}");
	add("01249853", "{\"term\":\"dry-gulching\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01249853\"]}");
	add("01249960", "{\"term\":\"emancipation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01249960\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String ID) { 		return map.get(ID); 	}  	public boolean has(final String ID) { 		return map.containsKey(ID); 	} }