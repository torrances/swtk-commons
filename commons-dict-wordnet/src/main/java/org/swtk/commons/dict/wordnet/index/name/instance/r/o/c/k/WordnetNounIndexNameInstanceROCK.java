package org.swtk.commons.dict.wordnet.index.name.instance.r.o.c.k;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceROCK {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"rock\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00348834\", \"07078755\", \"07624692\", \"10554923\", \"11286910\", \"14720954\", \"09438954\"]}");
	add("{\"term\":\"rockabilly\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07078577\"]}");
	add("{\"term\":\"rockchuck\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02364502\"]}");
	add("{\"term\":\"rockcress\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11892615\", \"11894550\"]}");
	add("{\"term\":\"rockefeller\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11287103\"]}");
	add("{\"term\":\"rocker\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"04105607\", \"04105804\", \"04105889\", \"04107063\", \"10555263\", \"10555438\", \"10555578\"]}");
	add("{\"term\":\"rockers\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08387805\"]}");
	add("{\"term\":\"rockery\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04106948\"]}");
	add("{\"term\":\"rocket\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"04240011\", \"07277721\", \"11907006\", \"04106269\", \"04106523\"]}");
	add("{\"term\":\"rocketry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06145110\"]}");
	add("{\"term\":\"rockfish\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02570718\", \"02646743\", \"07808195\"]}");
	add("{\"term\":\"rockfoil\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12813775\"]}");
	add("{\"term\":\"rockford\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09106734\"]}");
	add("{\"term\":\"rockies\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09439448\"]}");
	add("{\"term\":\"rockiness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04779430\"]}");
	add("{\"term\":\"rockingham\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11287333\"]}");
	add("{\"term\":\"rockrose\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"12394935\", \"12396590\"]}");
	add("{\"term\":\"rockslide\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07420417\"]}");
	add("{\"term\":\"rockweed\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01407269\"]}");
	add("{\"term\":\"rockwell\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11287558\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }