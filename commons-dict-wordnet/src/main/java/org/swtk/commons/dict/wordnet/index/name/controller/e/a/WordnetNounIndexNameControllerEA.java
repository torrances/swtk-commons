package org.swtk.commons.dict.wordnet.index.name.controller.e.a;  import java.util.Collection; import java.util.Set; import java.util.TreeSet;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  	import org.swtk.commons.dict.wordnet.index.name.instance.e.a.c.l.WordnetNounIndexNameInstanceEACL;
	import org.swtk.commons.dict.wordnet.index.name.instance.e.a.d.w.WordnetNounIndexNameInstanceEADW;
	import org.swtk.commons.dict.wordnet.index.name.instance.e.a.g.e.WordnetNounIndexNameInstanceEAGE;
	import org.swtk.commons.dict.wordnet.index.name.instance.e.a.g.l.WordnetNounIndexNameInstanceEAGL;
	import org.swtk.commons.dict.wordnet.index.name.instance.e.a.g.r.WordnetNounIndexNameInstanceEAGR;
	import org.swtk.commons.dict.wordnet.index.name.instance.e.a.m.e.WordnetNounIndexNameInstanceEAME;
	import org.swtk.commons.dict.wordnet.index.name.instance.e.a.r.a.WordnetNounIndexNameInstanceEARA;
	import org.swtk.commons.dict.wordnet.index.name.instance.e.a.r.d.WordnetNounIndexNameInstanceEARD;
	import org.swtk.commons.dict.wordnet.index.name.instance.e.a.r.f.WordnetNounIndexNameInstanceEARF;
	import org.swtk.commons.dict.wordnet.index.name.instance.e.a.r.h.WordnetNounIndexNameInstanceEARH;
	import org.swtk.commons.dict.wordnet.index.name.instance.e.a.r.l.WordnetNounIndexNameInstanceEARL;
	import org.swtk.commons.dict.wordnet.index.name.instance.e.a.r.m.WordnetNounIndexNameInstanceEARM;
	import org.swtk.commons.dict.wordnet.index.name.instance.e.a.r.n.WordnetNounIndexNameInstanceEARN;
	import org.swtk.commons.dict.wordnet.index.name.instance.e.a.r.p.WordnetNounIndexNameInstanceEARP;
	import org.swtk.commons.dict.wordnet.index.name.instance.e.a.r.r.WordnetNounIndexNameInstanceEARR;
	import org.swtk.commons.dict.wordnet.index.name.instance.e.a.r.s.WordnetNounIndexNameInstanceEARS;
	import org.swtk.commons.dict.wordnet.index.name.instance.e.a.r.t.WordnetNounIndexNameInstanceEART;
	import org.swtk.commons.dict.wordnet.index.name.instance.e.a.r.w.WordnetNounIndexNameInstanceEARW;
	import org.swtk.commons.dict.wordnet.index.name.instance.e.a.s.e.WordnetNounIndexNameInstanceEASE;
	import org.swtk.commons.dict.wordnet.index.name.instance.e.a.s.i.WordnetNounIndexNameInstanceEASI;
	import org.swtk.commons.dict.wordnet.index.name.instance.e.a.s.t.WordnetNounIndexNameInstanceEAST;
	import org.swtk.commons.dict.wordnet.index.name.instance.e.a.s.y.WordnetNounIndexNameInstanceEASY;
	import org.swtk.commons.dict.wordnet.index.name.instance.e.a.t.a.WordnetNounIndexNameInstanceEATA;
	import org.swtk.commons.dict.wordnet.index.name.instance.e.a.t.e.WordnetNounIndexNameInstanceEATE;
	import org.swtk.commons.dict.wordnet.index.name.instance.e.a.t.i.WordnetNounIndexNameInstanceEATI;
	import org.swtk.commons.dict.wordnet.index.name.instance.e.a.t.s.WordnetNounIndexNameInstanceEATS;
	import org.swtk.commons.dict.wordnet.index.name.instance.e.a.v.e.WordnetNounIndexNameInstanceEAVE;
  import com.trimc.blogger.commons.exception.BusinessException;  public final class WordnetNounIndexNameControllerEA {  	public static Collection<IndexNoun> get(final String TERM) throws BusinessException {  		String key = TERM.substring(0, 4).toLowerCase(); 			if ("eacl".equals(key)) return WordnetNounIndexNameInstanceEACL.get(TERM);
	if ("eadw".equals(key)) return WordnetNounIndexNameInstanceEADW.get(TERM);
	if ("eage".equals(key)) return WordnetNounIndexNameInstanceEAGE.get(TERM);
	if ("eagl".equals(key)) return WordnetNounIndexNameInstanceEAGL.get(TERM);
	if ("eagr".equals(key)) return WordnetNounIndexNameInstanceEAGR.get(TERM);
	if ("eame".equals(key)) return WordnetNounIndexNameInstanceEAME.get(TERM);
	if ("eara".equals(key)) return WordnetNounIndexNameInstanceEARA.get(TERM);
	if ("eard".equals(key)) return WordnetNounIndexNameInstanceEARD.get(TERM);
	if ("earf".equals(key)) return WordnetNounIndexNameInstanceEARF.get(TERM);
	if ("earh".equals(key)) return WordnetNounIndexNameInstanceEARH.get(TERM);
	if ("earl".equals(key)) return WordnetNounIndexNameInstanceEARL.get(TERM);
	if ("earm".equals(key)) return WordnetNounIndexNameInstanceEARM.get(TERM);
	if ("earn".equals(key)) return WordnetNounIndexNameInstanceEARN.get(TERM);
	if ("earp".equals(key)) return WordnetNounIndexNameInstanceEARP.get(TERM);
	if ("earr".equals(key)) return WordnetNounIndexNameInstanceEARR.get(TERM);
	if ("ears".equals(key)) return WordnetNounIndexNameInstanceEARS.get(TERM);
	if ("eart".equals(key)) return WordnetNounIndexNameInstanceEART.get(TERM);
	if ("earw".equals(key)) return WordnetNounIndexNameInstanceEARW.get(TERM);
	if ("ease".equals(key)) return WordnetNounIndexNameInstanceEASE.get(TERM);
	if ("easi".equals(key)) return WordnetNounIndexNameInstanceEASI.get(TERM);
	if ("east".equals(key)) return WordnetNounIndexNameInstanceEAST.get(TERM);
	if ("easy".equals(key)) return WordnetNounIndexNameInstanceEASY.get(TERM);
	if ("eata".equals(key)) return WordnetNounIndexNameInstanceEATA.get(TERM);
	if ("eate".equals(key)) return WordnetNounIndexNameInstanceEATE.get(TERM);
	if ("eati".equals(key)) return WordnetNounIndexNameInstanceEATI.get(TERM);
	if ("eats".equals(key)) return WordnetNounIndexNameInstanceEATS.get(TERM);
	if ("eave".equals(key)) return WordnetNounIndexNameInstanceEAVE.get(TERM);
  		throw new BusinessException("TERM not found (id = %s)", TERM); 	} 	 	public static Collection<String> terms() throws BusinessException { 		Set<String> set = new TreeSet<String>();  			set.addAll(WordnetNounIndexNameInstanceEACL.terms());
	set.addAll(WordnetNounIndexNameInstanceEADW.terms());
	set.addAll(WordnetNounIndexNameInstanceEAGE.terms());
	set.addAll(WordnetNounIndexNameInstanceEAGL.terms());
	set.addAll(WordnetNounIndexNameInstanceEAGR.terms());
	set.addAll(WordnetNounIndexNameInstanceEAME.terms());
	set.addAll(WordnetNounIndexNameInstanceEARA.terms());
	set.addAll(WordnetNounIndexNameInstanceEARD.terms());
	set.addAll(WordnetNounIndexNameInstanceEARF.terms());
	set.addAll(WordnetNounIndexNameInstanceEARH.terms());
	set.addAll(WordnetNounIndexNameInstanceEARL.terms());
	set.addAll(WordnetNounIndexNameInstanceEARM.terms());
	set.addAll(WordnetNounIndexNameInstanceEARN.terms());
	set.addAll(WordnetNounIndexNameInstanceEARP.terms());
	set.addAll(WordnetNounIndexNameInstanceEARR.terms());
	set.addAll(WordnetNounIndexNameInstanceEARS.terms());
	set.addAll(WordnetNounIndexNameInstanceEART.terms());
	set.addAll(WordnetNounIndexNameInstanceEARW.terms());
	set.addAll(WordnetNounIndexNameInstanceEASE.terms());
	set.addAll(WordnetNounIndexNameInstanceEASI.terms());
	set.addAll(WordnetNounIndexNameInstanceEAST.terms());
	set.addAll(WordnetNounIndexNameInstanceEASY.terms());
	set.addAll(WordnetNounIndexNameInstanceEATA.terms());
	set.addAll(WordnetNounIndexNameInstanceEATE.terms());
	set.addAll(WordnetNounIndexNameInstanceEATI.terms());
	set.addAll(WordnetNounIndexNameInstanceEATS.terms());
	set.addAll(WordnetNounIndexNameInstanceEAVE.terms());
  		return set; 	} }