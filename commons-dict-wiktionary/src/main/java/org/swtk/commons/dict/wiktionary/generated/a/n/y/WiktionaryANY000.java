package org.swtk.commons.dict.wiktionary.generated.a.n.y;  import java.util.Collection; import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryANY000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("anycast", "{\"term\":\"anycast\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"\u0027\u0027 + \u0027\u0027 compare \u0027\u0027 \u0027\u0027\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A network addressing and routing scheme whereby data is routed to the nearest or best destination as viewed by the routing topology\", \"priority\":1}]}, \"synonyms\":{}}");

	add("anythingarian", "{\"term\":\"anythingarian\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{suffix|anything|arian|lang\u003den}}, by analogy with \u0027unitarian\u0027 \u0027trinitarian\u0027 \u0027etc.\u0027\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A who does not any particular ; an\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"ante\u0027 1704\u0027\u0027, \u0027The Works of w:Tom Brown Tom Brown\u0027, volume 3, page 9\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"Such bifarious \u0027\u0027anythingarians\u0027\u0027, that always make their interest the standard of their religion\", \"priority\":3},{\"upperType\":\"NOUN\", \"text\":\"1738\u0027\u0027, w:Jonathan Jonathan Swift, \u0027Polite Conversation\u0027, \u0026lt;span class\u003d\u0026quot;plainlinks\u0026quot;\u0026gt;[http://books.google.co.uk/books?id\u003dlAoUAAAAQAAJ\u0026amp;pg\u003dPA182\u0026amp;dq\u003d%22Why,+he+is+an+Anythingarian%22\u0026amp;hl\u003den\u0026amp;ei\u003dAmEWTdLXLcGChQfBx5G3Dg\u0026amp;sa\u003dX\u0026amp;oi\u003dbook_result\u0026amp;ct\u003dresult\u0026amp;resnum\u003d2\u0026amp;ved\u003d0CCoQ6AEwA\", \"priority\":4},{\"upperType\":\"NOUN\", \"text\":\"v\u003donepage\u0026amp;q\u003d%22Why%2C%20he%20is%20an%20Anythingarian%22\u0026amp;f\u003dfalse dialogue 1]\u0026lt;/span\u0026gt\", \"priority\":5},{\"upperType\":\"NOUN\", \"text\":\"Lady Smart.\u0027 What Religion is he of?\u0026lt;br/\u0026gt;\u0027Ld. Sparkiſh.\u0027 Why he is an \u0027\u0027\u0027Anythingarian\u0027\u0027\u0027.\u0026lt;br/\u0026gt;\u0027Lady Anſw.\u0027 I believe, he has his Religion to chuſe, my Lord\", \"priority\":6},{\"upperType\":\"NOUN\", \"text\":\"1850\u0027\u0027, w:Charles Charles Kingsley, \u0027w:Alton Alton Locke, Tailor and Poet\u0027, chapter 2\", \"priority\":7},{\"upperType\":\"NOUN\", \"text\":\"They made puir Robbie Burns an \u0027\u0027anythingarian\u0027\u0027 with their blethers\", \"priority\":8}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	}  	public static boolean has(String term) { 		return null != get(term); 	}  	public static Collection<String> terms() { 		return map.keySet(); 	} }