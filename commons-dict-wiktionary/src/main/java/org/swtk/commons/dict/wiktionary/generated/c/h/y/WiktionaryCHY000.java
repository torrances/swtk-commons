package org.swtk.commons.dict.wiktionary.generated.c.h.y;  import java.util.Collection; import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryCHY000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("chyle", "{\"term\":\"chyle\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"French\", \"ancient greek (to 1453)\", \"Latin\"], \"text\":\"From French from Latin \u0027chylus\u0027 from Ancient greek (to 1453) \u0027χυλός\u0027 (animal or plant juice)\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A digestive fluid containing fatty droplets, found in the small intestine\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"1922\u0027\u0027, And we stuffing food in one hole and out behind: food, \u0027\u0027chyle\u0027\u0027, blood, dung, earth, food: have to feed it like stoking an engine. — James Joyce, \u0027Ulysses\", \"priority\":2}]}, \"synonyms\":{}}");

	add("chyme", "{\"term\":\"chyme\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"ancient greek (to 1453)\"], \"text\":\"From \u0027\u0027 from Ancient greek (to 1453) \u0027χυμός\u0027 (juice)\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The thick semifluid mass of partly digested food that is passed from the stomach to the duodenum\", \"priority\":1}]}, \"synonyms\":{}}");

	add("chytrid", "{\"term\":\"chytrid\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"ancient greek (to 1453)\"], \"text\":\"From Ancient greek (to 1453) \u0027χυτρίδιον\u0027 (little pot)\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"Any fungus of the division Chytridiomycota\", \"priority\":1}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	}  	public static boolean has(String term) { 		return null != get(term); 	}  	public static Collection<String> terms() { 		return map.keySet(); 	} }