package org.swtk.commons.dict.wiktionary.generated.h.y.e;  import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryHYE000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("hyem", "{\"term\":\"hyem\", \"etymology\":{\"influencers\":[], \"languages\":[\"old english (ca. 450-1100)\", \"English\", \"old norse\"], \"text\":\"From Old english (ca. 450-1100) \u0027ham\u0027 from Proto-germanic {{m|gem-pro|*haimaz}}. Cognate with German \u0027heim\u0027 Swedish \u0027hem\u0027 Dutch \u0027heem\u0027 and \u0027heim-\u0027 Note that this pronunciation is \u0027not\u0027 derived from Old norse as is sometimes assumed on the basis of Danish and Norwegian \u0027hjem\u0027 - the pronunciation in Geordie is directly derivable from the Old English form by regular rules. Compare traditional [stjɛn] \u0027stone\u0027 from \u0027stan\u0027\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"19th c.] 1993,\u0027\u0027 Ned Corvan, “Yer Gannin to be a Keelman,” in \u0027Visions of the People,\u0027 Patrick Joyce [http://books.google.com/books?ie\u003dUTF-8\u0026amp;hl\u003den\u0026amp;id\u003dz_nMtyp7XCEC\u0026amp;pg\u003dPA270\u0026amp;lpg\u003dPA270\u0026amp;sig\u003dSHwbkD-bXZaWxJharfiXxajyEGU\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"Ye’ll be comin’ \u0027\u0027hyem\u0027\u0027 at neets, with yor fyece all ower black\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"And ye’ll lie an snore aside the fire, and never gis yor crack\", \"priority\":3},{\"upperType\":\"NOUN\", \"text\":\"1848\u0027\u0027, \u0027Sinks of London Laid Open\u0027 [http://books.google.com/books?ie\u003dUTF-8\u0026amp;hl\u003den\u0026amp;id\u003dlPxnKPkEiIUC\u0026amp;pg\u003dPA51\u0026amp;lpg\u003dPA51\u0026amp;sig\u003dx_Oewc6FofCOUc2zaUQQIdcfZsw\", \"priority\":4},{\"upperType\":\"NOUN\", \"text\":\"“He had just come in,” he said, “to see if his mate was come \u0027\u0027hyem\u0027\u0027 yet; but as he had not, he thought he could guess right weel where he wad be, and wad just step o’er to Brown’s (the gin-shop) and see\", \"priority\":5},{\"upperType\":\"NOUN\", \"text\":\"1985,\u0027\u0027 David Wright \u0026lt;span title\u003d\u0026quot;translator\u0026quot;\u0026gt;tr.\u0026lt;/span\u0026gt; Geoffrey Chaucer\u0027s \u0027The Canterbury Tales\u0027 [http://books.google.com/books?ie\u003dUTF-8\u0026amp;hl\u003den\u0026amp;id\u003dhXCi_DViuqwC\u0026amp;pg\u003dPA102\u0026amp;lpg\u003dPA102\u0026amp;sig\u003d3KRd23dvj1DbGak23VXz2q-VDDc\", \"priority\":6},{\"upperType\":\"NOUN\", \"text\":\"And so Aah’s cum, and also brought Alan\", \"priority\":7},{\"upperType\":\"NOUN\", \"text\":\"To grind wor corn, and bring it \u0027\u0027hyem\u0027\u0027 again\", \"priority\":8},{\"upperType\":\"NOUN\", \"text\":\"Aah begs ye de the job fast as ye can\", \"priority\":9}]}, \"synonyms\":{}}");

	add("hyenanchin", "{\"term\":\"hyenanchin\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A toxic organic compound related to tutin\", \"priority\":1}]}, \"synonyms\":{}}");

	add("hyetograph", "{\"term\":\"hyetograph\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{etystub|en}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A graphical representation of rainfall over time\", \"priority\":1}]}, \"synonyms\":{}}");

	add("hyetography", "{\"term\":\"hyetography\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"ancient greek (to 1453)\"], \"text\":\"Ancient greek (to 1453)\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The science that deals with the geographical distribution of rain\", \"priority\":1}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	} 	 	public static boolean has(String term) { 		return null != get(term); 	} }