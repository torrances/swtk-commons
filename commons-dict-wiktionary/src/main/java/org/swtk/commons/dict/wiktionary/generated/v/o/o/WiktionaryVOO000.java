package org.swtk.commons.dict.wiktionary.generated.v.o.o;  import java.util.Collection; import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryVOO000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("voodoo", "{\"term\":\"voodoo\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"fon\", \"Haitian Creole\", \"louisiana creole french\"], \"text\":\"From Louisiana creole french \u0027voudou\u0027 from Haitian creole \u0027vodou\u0027 from West African, such as Ewe (Dahomey and Togo) \u0027vódũ\u0027 ‘deity, idol’, Fon \u0027vodū\u0027 ‘fetish’, \u0027vodun\u0027 Kwa \u0027vodũ\u0027.\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A religion of the Ewe/Fon of West Africa, practiced chiefly in Benin\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"Any of a group of related religious practices found chiefly in and around the Caribbean, particularly in Haiti and Louisiana\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"Any sort of magical or irrational approach to a problem\", \"priority\":3},{\"upperType\":\"NOUN\", \"text\":\"I want a real explanation, not this statistical \u0027\u0027voodoo\", \"priority\":4},{\"upperType\":\"NOUN\", \"text\":\"One who practices voodoo; a native sorcerer\", \"priority\":5},{\"upperType\":\"NOUN\", \"text\":\"1889\u0027\u0027, \u0027Longman\u0027s Magazine\u0027 (volume 14, page 557\", \"priority\":6},{\"upperType\":\"NOUN\", \"text\":\"So a reporter of the Boston Herald (U.S.) has \u0027interviewed\u0027 a few local \u0027\u0027Voodoos\u0027\u0027. He has seen a dance round a boiling pot, seen some tomfoolery with spiders, and heard a lot of superstitious nonsense\", \"priority\":7}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	}  	public static boolean has(String term) { 		return null != get(term); 	}  	public static Collection<String> terms() { 		return map.keySet(); 	} }