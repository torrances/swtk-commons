package org.swtk.commons.dict.wiktionary.generated.g.a.f;  import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryGAF000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("gaffe", "{\"term\":\"gaffe\", \"etymology\":{\"influencers\":[{}], \"languages\":[\"English\", \"French\"], \"text\":\"From French \u0027gaffe\u0027 (blunder)\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A foolish and embarrassing error, especially one made in public\", \"priority\":1}]}, \"synonyms\":{}}");

	add("gafia", "{\"term\":\"gafia\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{acronym of|getting|Getting away|Away from|From it|It all|All|lang\u003den}} Used in early science fiction fandom.\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The state of becoming involved in science fiction and fandom activity, leaving the mundane world\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"The state of exiting or becoming inactive in fandom\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"Sorry, your demonstration does not in fact demonstrate \u0027\u0027gafia\u0027\u0027, only sanity. You\u0027ll have to do something else to demonstrate \u0027\u0027gafia\u0027\u0027. (Tip: When trying to prove \u0027\u0027gafia\u0027\u0027, don\u0027t do it in a post to rec.arts.sf.fandom\", \"priority\":3}]}, \"synonyms\":{}}");

	add("gafiation", "{\"term\":\"gafiation\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{suffix|GAFIA|tion|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The act of gafiating; a beginning or end of involvement in fandom\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"The state or result of having gafiated; having entered or exited fandom\", \"priority\":2}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	} 	 	public static boolean has(String term) { 		return null != get(term); 	} }