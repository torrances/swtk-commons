package org.swtk.commons.dict.wiktionary.generated.f.i.x;  import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryFIX000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("fixation", "{\"term\":\"fixation\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"old french (842-ca. 1400)\"], \"text\":\"From Old french (842-ca. 1400) \u0027fixation\u0027\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The act of fixing\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"The state of being fixed or fixated\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"The act of uniting chemically with a solid substance or in a solid form; reduction to a non-volatile condition; -- said of volatile elements\", \"priority\":3},{\"upperType\":\"NOUN\", \"text\":\"The act or process of ceasing to be fluid and becoming firm\", \"priority\":4},{\"upperType\":\"NOUN\", \"text\":\"In metals, a state of resistance to evaporation or volatilization by heat\", \"priority\":5},{\"upperType\":\"NOUN\", \"text\":\"A state of mind involving obsession with a particular person, idea or thing\", \"priority\":6},{\"upperType\":\"NOUN\", \"text\":\"Recording a creative work in a medium of expression for more than a transitory duration, thereby satisfying the \u0026quot;fixation\u0026quot; requirement for the purposes of copyright law\", \"priority\":7},{\"upperType\":\"NOUN\", \"text\":\"In order to obtain copyright on a recording in the United States, the recording must have been reduced to \u0027\u0027fixation\u0027\u0027 on or after February 15, 1972\", \"priority\":8}]}, \"synonyms\":{}}");

	add("fixedness", "{\"term\":\"fixedness\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{suffix|fixed|ness|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The state or condition of being fixed\", \"priority\":1}]}, \"synonyms\":{}}");

	add("fixie", "{\"term\":\"fixie\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{suffix|fixed|ie|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A fixed-gear bicycle\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"2013\u0027\u0027, Gordon Young, \u0027Teardown: Memoir of a Vanishing City\u0027 (page 107\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"Coming from San Francisco, where gentrification swept through neighborhoods faster than hipster trends like \u0027\u0027fixies\u0027\u0027, tattoos, and retro eighties wardrobes, I didn\u0027t think Erin had anything to worry about\", \"priority\":3},{\"upperType\":\"NOUN\", \"text\":\"date\u003d12 April passage\u003d[F]ixed-gear bikes, or \u0026quot;\u0027\u0027fixies\u0027\u0027,\u0026quot; cycles that have one speed and are built without the free-wheel equipment that keeps a regular bicycle\u0027s pedals stationary while the tires are in motion\", \"priority\":4}]}, \"synonyms\":{}}");

	add("fixidity", "{\"term\":\"fixidity\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The quality of being fixed\", \"priority\":1}]}, \"synonyms\":{}}");

	add("fixing", "{\"term\":\"fixing\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The act of subverting a vote\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"Something to aid attachment during construction\", \"priority\":2}]}, \"synonyms\":{}}");

	add("fixings", "{\"term\":\"fixings\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"All the components and accessories that normally accompany a project or event, particularly a social event\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"Julia\u0027s got all the \u0027\u0027fixings\u0027\u0027 for a great party\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"Side dishes\", \"priority\":3},{\"upperType\":\"NOUN\", \"text\":\"I\u0027ll have all of the \u0027\u0027fixings\u0027\u0027 on Thanksgiving\", \"priority\":4}]}, \"synonyms\":{}}");

	add("fixism", "{\"term\":\"fixism\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The non-religious theory that the species alive today were identical to those of the past and that evolution does not happen\", \"priority\":1}]}, \"synonyms\":{}}");

	add("fixity", "{\"term\":\"fixity\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{suffix|fix|ity|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The state or condition of being fixed\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"Something fixed\", \"priority\":2}]}, \"synonyms\":{}}");

	add("fixture", "{\"term\":\"fixture\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"Alteration of older \u0027\u0027 on the model of \u0027\u0027\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"Something that is fixed in place, especially a permanent appliance or other item of personal property that is considered part of a house and is sold with it\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"A regular patron of a place or institution\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"A lighting unit; a luminaire\", \"priority\":3},{\"upperType\":\"NOUN\", \"text\":\"A scheduled match\", \"priority\":4},{\"upperType\":\"NOUN\", \"text\":\"A state that can be recreated, used as a baseline for running software tests\", \"priority\":5},{\"upperType\":\"NOUN\", \"text\":\"A work-holding or support device used in the manufacturing industry\", \"priority\":6}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	} 	 	public static boolean has(String term) { 		return null != get(term); 	} }