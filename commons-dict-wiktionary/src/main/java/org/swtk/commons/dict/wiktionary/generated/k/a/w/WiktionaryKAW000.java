package org.swtk.commons.dict.wiktionary.generated.k.a.w;  import java.util.Collection; import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryKAW000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("kawaiiness", "{\"term\":\"kawaiiness\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The quality of being kawaii; cuteness\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"2006\u0027\u0027, Shenja Van Der Graaf, Yuichi Washida, \u0027Information communication technologies and emerging business strategies\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"In the interviews it became apparent that the girls choose their products on \u0027\u0027kawaiiness\u0027\u0027. A mobile phone is kawaii for communication and e-mail\", \"priority\":3}]}, \"synonyms\":{}}");

	add("kawarimi", "{\"term\":\"kawarimi\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"An ancient ninja art revolving around misdirection and the split-second timing of a switch between a \u0027body\u0027 and a location, or between two or more bodies. A technique utilized by ninja in ancient Japan, involving the ninja and anything that can be mistaken for them, (such as a dummy or a mannequin\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"2000\u0027\u0027, Static, \u0026quot;They\u0027re Playing My Song\u0026quot;, \u0027Static Shock\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"Kawarimi; ancient Ninja art of misdirection. All you need is something some idiot can mistake you for... and some idiot\", \"priority\":3}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	}  	public static boolean has(String term) { 		return null != get(term); 	}  	public static Collection<String> terms() { 		return map.keySet(); 	} }