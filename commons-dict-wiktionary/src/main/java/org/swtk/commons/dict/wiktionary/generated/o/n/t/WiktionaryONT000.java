package org.swtk.commons.dict.wiktionary.generated.o.n.t;  import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryONT000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("ontario", "{\"term\":\"ontario\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"wyandot\"], \"text\":\"Probably from Wyandot \u0027\u0027 (ontari:io)\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A lake between Ontario province and New York State\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"A province in eastern Canada that has Toronto as its capital\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"A village in Belize\", \"priority\":3},{\"upperType\":\"NOUN\", \"text\":\"A city in California\", \"priority\":4},{\"upperType\":\"NOUN\", \"text\":\"A town and a county in New York\", \"priority\":5},{\"upperType\":\"NOUN\", \"text\":\"A city in Ohio\", \"priority\":6},{\"upperType\":\"NOUN\", \"text\":\"A city in Oregon\", \"priority\":7},{\"upperType\":\"NOUN\", \"text\":\"A village in Wisconsin\", \"priority\":8}]}, \"synonyms\":{}}");

	add("ontogenesis", "{\"term\":\"ontogenesis\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{confix|onto|genesis|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"the arising or development of an individual organism\", \"priority\":1}]}, \"synonyms\":{}}");

	add("ontogeny", "{\"term\":\"ontogeny\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"From {{confix|onto|geny|lang\u003den}}, after German \u0027ontogenie\u0027\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The development of an individual organism\", \"priority\":1}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	} 	 	public static boolean has(String term) { 		return null != get(term); 	} }