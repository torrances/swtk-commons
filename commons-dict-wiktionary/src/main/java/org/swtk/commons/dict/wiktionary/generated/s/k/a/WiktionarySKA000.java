package org.swtk.commons.dict.wiktionary.generated.s.k.a;  import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionarySKA000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("skankiness", "{\"term\":\"skankiness\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{suffix|skanky|ness|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The state or condition of being skanky\", \"priority\":1}]}, \"synonyms\":{}}");

	add("skateboarder", "{\"term\":\"skateboarder\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{suffix|skateboard|er|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A person who rides a skateboard\", \"priority\":1}]}, \"synonyms\":{}}");

	add("skatepunk", "{\"term\":\"skatepunk\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{compound|skate|punk|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A fast, intense, melodic form of punk rock music, associated with skateboarding culture\", \"priority\":1}]}, \"synonyms\":{}}");

	add("skater", "{\"term\":\"skater\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{suffix|skate|er|lang\u003den}}.\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A person who skates\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"A member of skateboarding subculture, characterized by dingy and baggy clothes, and often wallet chains\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"A player who is not a goaltender\", \"priority\":3},{\"upperType\":\"NOUN\", \"text\":\"Any of numerous hemipterous insects in the family Gerridae, which run rapidly over the surface of the water, as if skating\", \"priority\":4}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	} 	 	public static boolean has(String term) { 		return null != get(term); 	} }