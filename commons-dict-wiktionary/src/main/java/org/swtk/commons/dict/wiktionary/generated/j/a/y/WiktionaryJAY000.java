package org.swtk.commons.dict.wiktionary.generated.j.a.y;  import java.util.Collection; import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryJAY000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("jaybird", "{\"term\":\"jaybird\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{compound|jay|bird|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A jay or blue jay\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"1894:\u0027\u0027 Mark Twain, \u0027[http://etext.virginia.edu/etcbin/ot2www-pubeng?specfile\u003d/texts/english/modeng/publicsearch/modengpub.o2w\u0026amp;act\u003dtext\u0026amp;offset\u003d638515933\u0026amp;textreg\u003d1\u0026amp;query\u003djaybird\u0026amp;id\u003dTwaAbro Tom Sawyer Abroad\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"quot;When I say birds of a feather flocks together, it\u0027s a metaphorical way of saying -- \u0026quot\", \"priority\":3},{\"upperType\":\"NOUN\", \"text\":\"quot;But dey don\u0027t, Mars Tom. No, sir, \u0027deed dey don\u0027t. Dey ain\u0027t no feathers dat\u0027s more alike den a bluebird en a \u0027\u0027jaybird\u0027\u0027, but ef you waits till you catches dem birds together, you\u0027ll -- \u0026quot\", \"priority\":4},{\"upperType\":\"NOUN\", \"text\":\"quot;Oh, give us a rest! You can\u0027t get the simplest little thing through your thick skull. Now don\u0027t bother me any more.\u0026quot\", \"priority\":5},{\"upperType\":\"NOUN\", \"text\":\"One who talks incessantly\", \"priority\":6},{\"upperType\":\"NOUN\", \"text\":\"Belinda was a \u0027\u0027jaybird\u0027\u0027 and could prattle on for hours about the latest gossip\", \"priority\":7}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	}  	public static boolean has(String term) { 		return null != get(term); 	}  	public static Collection<String> terms() { 		return map.keySet(); 	} }