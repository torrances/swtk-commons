package org.swtk.commons.dict.wiktionary.generated.s.a.s;  import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionarySAS000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("sass", "{\"term\":\"sass\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"Variant of \u0027sauce\u0027\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"sarcasm, backtalk, cheek\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"“Say — if you give me much more of your \u0027\u0027sass\u0027\u0027 I’ll take and bounce a rock off’n your head\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"“Looky here — mind how you talk to me; I’m a-standing about all I can stand now — so don’t gimme no \u0027\u0027sass\u0027\u0027.”\", \"priority\":3}]}, \"synonyms\":{}}");

	add("sashay", "{\"term\":\"sashay\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"French\", \"Latin\"], \"text\":\"From French {{m|fr|chasser||chase}}, from Latin {{m|la|captō}}, frequentative of {{m|la|capiō||I take}}.\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A chassé\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"A sequence of sideways steps in a circle in square dancing\", \"priority\":2}]}, \"synonyms\":{}}");

	add("saskatoon", "{\"term\":\"saskatoon\", \"etymology\":{\"influencers\":[], \"languages\":[\"Cree\", \"English\"], \"text\":\"From Cree \u0027ᒥᓵᐢᑲᐧᑑᒥᐣ\u0027 (saskatoon berry) from \u0027ᒥᓵᐢᑲᐧᐟ\u0027 (saskatoon) + \u0027\u0027 (-min)\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A shrub inhabiting western North America\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"The edible berry of this shrub\", \"priority\":2}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	} 	 	public static boolean has(String term) { 		return null != get(term); 	} }