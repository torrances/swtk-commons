package org.swtk.commons.dict.wiktionary.generated.s.c.y;  import java.util.Collection; import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionarySCY000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("scylla", "{\"term\":\"scylla\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"ancient greek (to 1453)\"], \"text\":\"From Ancient greek (to 1453) \u0027σκύλλα\u0027\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A dangerous rock on the Italian coast opposite the whirlpool Charybdis on the coast of Sicily. The passage between \u0027Scylla\u0027 and \u0027Charybdis\u0027 was formerly considered perilous; hence, the saying \u0027between Scylla and Charybdis\u0027 signifies a great peril on either hand\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"A personification of the above rock as a ravenous monster\", \"priority\":2}]}, \"synonyms\":{}}");

	add("scylloinositol", "{\"term\":\"scylloinositol\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"One of the stereoisomers of inositol. It is a plant sugar alcohol found most abundantly in the coconut palm\", \"priority\":1}]}, \"synonyms\":{}}");

	add("scytalone", "{\"term\":\"scytalone\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{suffix|scytal|one|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A tetralone derivative involved in certain redox reactions\", \"priority\":1}]}, \"synonyms\":{}}");

	add("scythe", "{\"term\":\"scythe\", \"etymology\":{\"influencers\":[], \"languages\":[\"old english (ca. 450-1100)\", \"English\", \"middle english (1100-1500)\"], \"text\":\"From Middle english (1100-1500) \u0027sythe\u0027 or \u0027sithe\u0027 from Old english (ca. 450-1100) \u0027sīðe\u0027 (sickle) The silent \u0027c\u0027 appeared in the early 15th century because it was wrongly thought that the word was linked to Latin \u0027scissor\u0027 (\u0026quot;carver, cutter\u0026quot;) and \u0027scindere\u0027 (\u0026quot;to cut\u0026quot;).\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"An instrument for mowing grass, grain, or the like, by hand, composed of a long, curving blade, with the concave edge sharped, made fast to a long handle, called a snath, which is bent into a form convenient for use\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"A scythe-shaped blade attached to ancient war chariots\", \"priority\":2}]}, \"synonyms\":{}}");

	add("scythia", "{\"term\":\"scythia\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"ancient greek (to 1453)\", \"Latin\"], \"text\":\"From Latin \u0027scythia\u0027 from Ancient greek (to 1453) \u0027σκυθία\u0027\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"a region of Central Eurasia in the classical era, encompassing parts of Pontic steppe, Central Asia, Eastern Europe, inhabited by nomadic Scythians from at least the 11th century BCE to the 2nd century CE\", \"priority\":1}]}, \"synonyms\":{}}");

	add("scythian", "{\"term\":\"scythian\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"From {{suffix|Scyth|ian|lang\u003den}}.\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"An inhabitant of Scythia, an ill-defined region centered in southern Russia\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"Book I\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"How far he surpassed them all may be felt if we remember that no \u0027\u0027Scythian\u0027\u0027, although the \u0027\u0027Scythians\u0027\u0027 are reckoned by their myriads, has ever succeeded in dominating a foreign nation\", \"priority\":3}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	}  	public static boolean has(String term) { 		return null != get(term); 	}  	public static Collection<String> terms() { 		return map.keySet(); 	} }