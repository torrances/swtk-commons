package org.swtk.commons.dict.wiktionary.generated.p.i.q;  import java.util.Collection; import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryPIQ000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("piquancy", "{\"term\":\"piquancy\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{rfe|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The degree to which something is piquant, stimulating or exciting\", \"priority\":1}]}, \"synonyms\":{}}");

	add("piquet", "{\"term\":\"piquet\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"French\"], \"text\":\"From French \u0027piquet\u0027\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A game at cards played between two persons, with thirty-two cards, all the deuces, threes, fours, fives, and sixes, being set aside\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"1957\u0027\u0027, Lawrence Durrell, \u0027Justine\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"They would kick off their shoes and play \u0027\u0027piquet\u0027\u0027 by candle-light\", \"priority\":3},{\"upperType\":\"NOUN\", \"text\":\"2007\u0027\u0027, Helen Constantine, trans. Choderlos de Laclos, \u0027Dangerous Liaisons\u0027, Penguin 2007, p. 35\", \"priority\":4},{\"upperType\":\"NOUN\", \"text\":\"We shall together challenge the Chevalier de Belleroche to \u0027\u0027piquet\u0027\u0027; and, while we are winning money from him, we shall have the even greater pleasure of hearing you sing with your charming teacher, to whom I shall propose it\", \"priority\":5}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	}  	public static boolean has(String term) { 		return null != get(term); 	}  	public static Collection<String> terms() { 		return map.keySet(); 	} }