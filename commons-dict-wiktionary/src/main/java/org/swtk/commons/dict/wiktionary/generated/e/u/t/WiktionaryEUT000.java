package org.swtk.commons.dict.wiktionary.generated.e.u.t;  import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryEUT000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("euthanasia", "{\"term\":\"euthanasia\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"ancient greek (to 1453)\"], \"text\":\"First attested in w:1606|1606, from Ancient greek (to 1453) \u0027εὐθανασία\u0027 () from \u0027εὐ-\u0027 (lang\u003dgrc) + \u0027θάνατος\u0027 (lang\u003dgrc)\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The practice of intentionally and painlessly killing a human being or animal for humane reasons, especially in order to end great suffering or poor quality of life\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"Euthanasia\u0027\u0027 is the most difficult part of a veterinarian\u0027s job\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"An easy death, or the means to bring about such a death\", \"priority\":3},{\"upperType\":\"NOUN\", \"text\":\"1819\u0027\u0027 October 31, w:Thomas Thomas Jefferson, \u0027s:Letter To William Short, Monticello, October 31, Letter To William Short, Monticello\", \"priority\":4},{\"upperType\":\"NOUN\", \"text\":\"It would in time, it is to be hoped, effect a quiet \u0027\u0027euthanasia\u0027\u0027 of the heresies of bigotry and fanaticism which have so long triumphed over human reason, and so generally and deeply afflicted mankind; but this work is to be begun by winnowing the grain from the chaff of the historians of his life\", \"priority\":5},{\"upperType\":\"NOUN\", \"text\":\"1876\u0027\u0027, \u0027s:Popular Science Monthly/Volume 8/March 1876/Natural Natural Euthanasia\u0027, \u0027w:Popular Science Popular Science Monthly\u0027, Volume 8\", \"priority\":6},{\"upperType\":\"NOUN\", \"text\":\"This purely painless process, this descent by oblivious trance into oblivion, this natural physical death, is the true \u0027\u0027euthanasia\u0027\u0027; and it is the duty of those we call physicians to secure for man such good health as shall bear him in activity and happiness onward in his course to this goal. For \u0027\u0027euthanasia\u0027\u0027, though it be open to every one born of every race, is not to be had by any save through obedience to those laws which it is the mission of the physician to learn, to teach, and to enforce. \u0027\u0027Euthanasia\u0027\u0027 is the sequel of health, the happy death engrafted on the perfect life\", \"priority\":7},{\"upperType\":\"NOUN\", \"text\":\"1897\u0027\u0027, Bram Stoker, \u0027Dracula\u0027, Folio Society 2008, p. 273\", \"priority\":8},{\"upperType\":\"NOUN\", \"text\":\"For myself I could hold it in my account with God to find such an \u0027\u0027euthanasia\u0027\u0027 for you, even at this moment if it were best\", \"priority\":9}]}, \"synonyms\":{}}");

	add("euthanasist", "{\"term\":\"euthanasist\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{suffix|euthanasia|ist|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"Someone who performs euthanasia\", \"priority\":1}]}, \"synonyms\":{}}");

	add("euthanization", "{\"term\":\"euthanization\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{suffix|euthanize|ation|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The act or process of euthanizin\", \"priority\":1}]}, \"synonyms\":{}}");

	add("eutrophy", "{\"term\":\"eutrophy\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{confix|eu|trophy|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"healthy nutritio\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"the quality of being rich in minerals and nutrients\", \"priority\":2}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	} 	 	public static boolean has(String term) { 		return null != get(term); 	} }