package org.swtk.commons.dict.wiktionary.generated.e.s.o;  import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryESO000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("esophagogastroduodenoscopy", "{\"term\":\"esophagogastroduodenoscopy\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"abbreviated as \u0027EGD\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"upper gastrointestinal endoscopy\", \"priority\":2}]}, \"synonyms\":{}}");

	add("esoterica", "{\"term\":\"esoterica\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"Things that are esoteric; things that are impractical or specialised\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"2002\u0027\u0027, \u0026quot;[http://www.time.com/time/magazine/article/0,9171,1002447,00.html Luke Helder\u0027s Bad Trip],\u0026quot; \u0027Time\u0027, 20 May\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"Helder was also a visionary given to muddled, passionate harangues on immortality, astral projection and other \u0027\u0027esoterica\", \"priority\":3}]}, \"synonyms\":{}}");

	add("esotropia", "{\"term\":\"esotropia\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"ancient greek (to 1453)\"], \"text\":\"From \u0027ἔσω\u0027 (within) + -tropy|-tropia, from Ancient greek (to 1453) {{m|grc|-τροπία}}, from {{m|grc|τρόπος||a turn}}.\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A form of strabismus in which one or both eyes turns inward\", \"priority\":1}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	} 	 	public static boolean has(String term) { 		return null != get(term); 	} }