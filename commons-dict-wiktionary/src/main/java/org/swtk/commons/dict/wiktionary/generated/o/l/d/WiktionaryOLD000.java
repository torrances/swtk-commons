package org.swtk.commons.dict.wiktionary.generated.o.l.d;  import java.util.Collection; import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryOLD000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("oldbie", "{\"term\":\"oldbie\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{suffix|old|bie|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"An old-timer, a person with experience\", \"priority\":1}]}, \"synonyms\":{}}");

	add("oldfag", "{\"term\":\"oldfag\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{suffix|old|fag|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"An oldbie; a veteran member of the 4chan community (or any other online community\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"2011\u0027\u0027, Cole Stryker, \u0027Epic Win for Anonymous: How 4chan\u0027s Army Conquered the Web\u0027, The Overlook Press (2011), ISBN 9781590207383, [http://books.google.com/books?id\u003dcbWNirl8gsMC\u0026amp;pg\u003dPT132\u0026amp;lpg\u003dPT132 unnumbered page\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"Oldfags\u0027\u0027 will post the symbol along with \u0026quot;Newfags can\u0027t triforce.\u0026quot\", \"priority\":3},{\"upperType\":\"NOUN\", \"text\":\"2012\u0027\u0027, Parmy Olson, \u0027We Are Anonymous: Inside the Hacker World of LulzSec, Anonymous, and the Global Cyber Insurgency\u0027, Little, Brown and Company (2012), ISBN 9780316213530, [http://books.google.com/books?id\u003dncGVPtoZPHcC\u0026amp;pg\u003dPT300 unnumbered page\", \"priority\":4},{\"upperType\":\"NOUN\", \"text\":\"There were many like himâ€”\u0027\u0027oldfags\u0027\u0027 who believed they were the true Anons\", \"priority\":5}]}, \"synonyms\":{}}");

	add("oldie", "{\"term\":\"oldie\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"something or someone ol\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"a song or record from a previous er\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"plural\u0027) the genre of music that plays these song\", \"priority\":3},{\"upperType\":\"NOUN\", \"text\":\"an \u0027\u0027oldies\u0027\u0027 radio station\", \"priority\":4}]}, \"synonyms\":{}}");

	add("oldness", "{\"term\":\"oldness\", \"etymology\":{\"influencers\":[], \"languages\":[\"old english (ca. 450-1100)\", \"English\"], \"text\":\"Old english (ca. 450-1100) \u0027ealdnes\u0027 corresponding to {{suffix|old|ness|lang\u003den}}.\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The state of being old; age\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"So that I may reste bitwene thyn armes / for thow arte a clene vyrgyn aboue all knyghtes as the floure of the lyly / in whome vyrgynyte is sygnefyed /and thou arte the rose the whiche is the floure of al good vertu / \u0026amp; in coloure of fyre / For the fyre of the holy ghoost is take so in the / that my flesshe which was al dede of \u0027\u0027oldenes\u0027\u0027 / is become yonge ageyne\u0026lt;!--Prior quote\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"the fyre of the Holy Goste ys takyn so in the that my fleyssh, whych was all dede of \u0027\u0027oldenes\u0027\u0027, ys becom agayne yonge.}}--\u0026gt\", \"priority\":3}]}, \"synonyms\":{}}");

	add("oldsquaw", "{\"term\":\"oldsquaw\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{compound|old|squaw|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"Clangula hyemalis\u0027, the long-tailed duck, a medium-sized seaduck\", \"priority\":1}]}, \"synonyms\":{}}");

	add("oldtown", "{\"term\":\"oldtown\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{blend|old|town|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"the historic district of a city or town\", \"priority\":1}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	}  	public static boolean has(String term) { 		return null != get(term); 	}  	public static Collection<String> terms() { 		return map.keySet(); 	} }