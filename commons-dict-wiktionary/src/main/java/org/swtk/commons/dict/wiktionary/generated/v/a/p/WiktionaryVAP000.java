package org.swtk.commons.dict.wiktionary.generated.v.a.p;  import java.util.Collection; import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryVAP000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("vapidity", "{\"term\":\"vapidity\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{suffix|vapid|ity|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The state or quality of being vapid; vapidness\", \"priority\":1}]}, \"synonyms\":{}}");

	add("vapidness", "{\"term\":\"vapidness\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{suffix|vapid|ness|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The state or quality of being vapid; vapidity\", \"priority\":1}]}, \"synonyms\":{}}");

	add("vapor", "{\"term\":\"vapor\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"old french (842-ca. 1400)\", \"Latin\"], \"text\":\"From Old french (842-ca. 1400) from Latin \u0027vapor\u0027 (steam, heat)\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"Cloudy diffused matter such as mist, steam or fumes suspended in the air\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"The gaseous state of a substance that is normally a solid or liquid\", \"priority\":2}]}, \"synonyms\":{}}");

	add("vaporization", "{\"term\":\"vaporization\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{suffix|vapor|ization|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A conversion of a solid or a liquid into a gas\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"A destruction of something by turning it into vapor\", \"priority\":2}]}, \"synonyms\":{}}");

	add("vaporware", "{\"term\":\"vaporware\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"An advertised product, often computer software, whose launch has not happened yet and might not ever happen\", \"priority\":1}]}, \"synonyms\":{}}");

	add("vapour", "{\"term\":\"vapour\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"old french (842-ca. 1400)\", \"Latin\"], \"text\":\"From Old french (842-ca. 1400) from Latin \u0027vapor\u0027 (lang\u003dla)\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"Cloudy diffused matter such as mist, steam or fumes suspended in the air\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"title\u003d[http://openlibrary.org/works/OL10504990W The Lonely passage\u003dThe desert storm was riding in its strength; the travellers lay beneath the mastery of the fell simoom.Drifts of yellow \u0027\u0027vapour\u0027\u0027, fiery, parching, stinging, filled the air\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"The gaseous state of a substance that is normally a solid or liquid\", \"priority\":3},{\"upperType\":\"NOUN\", \"text\":\"Wind; flatulence\", \"priority\":4},{\"upperType\":\"NOUN\", \"text\":\"Something unsubstantial, fleeting, or transitory; unreal fancy; vain imagination; idle talk; boasting\", \"priority\":5},{\"upperType\":\"NOUN\", \"text\":\"Bible, iv. 1\", \"priority\":6},{\"upperType\":\"NOUN\", \"text\":\"For what is your life? It is even a \u0027\u0027vapour\u0027\u0027, that appeareth for a little time, and then vanisheth away\", \"priority\":7},{\"upperType\":\"NOUN\", \"text\":\"Hypochondria; melancholy; the blues; hysteria, or other nervous disorder\", \"priority\":8},{\"upperType\":\"NOUN\", \"text\":\"1688-1744\", \"priority\":9},{\"upperType\":\"NOUN\", \"text\":\"a fit of \u0027\u0027vapours\", \"priority\":10},{\"upperType\":\"NOUN\", \"text\":\"Any medicinal agent designed for administration in the form of inhaled vapour\", \"priority\":11}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	}  	public static boolean has(String term) { 		return null != get(term); 	}  	public static Collection<String> terms() { 		return map.keySet(); 	} }