package org.swtk.commons.dict.wiktionary.generated.k.a.b;  import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryKAB000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("kabardian", "{\"term\":\"kabardian\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A North Caucasian language spoken in Kabardino-Balkaria and Karachay-Cherkessia, Russia, also known as East Circassian\", \"priority\":1}]}, \"synonyms\":{}}");

	add("kablooie", "{\"term\":\"kablooie\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"ka-, an intensifier used with onomatopoeia, plus (probably) an imaginative rendition of an explosion or splash.\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A failure, meltdown; or explosion; a splat or splash\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"The bottle of ketchup hit the floor and went \u0027\u0027kablooie\u0027\u0027 all over everything\", \"priority\":2}]}, \"synonyms\":{}}");

	add("kabocha", "{\"term\":\"kabocha\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"Japanese\"], \"text\":\"From Japanese {{m|ja|南瓜|tr\u003dkabocha||pumpkin, squash}}.\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A variety of Japanese winter squash, from species \u0027Cucurbita maxima\", \"priority\":1}]}, \"synonyms\":{}}");

	add("kaboom", "{\"term\":\"kaboom\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"From {{prefix|ka|boom|lang\u003den}}. Compare \u0027kerboom\u0027\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The sound of an explosion, typically seen in comic strips or heard in a light hearted conversation\", \"priority\":1}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	} 	 	public static boolean has(String term) { 		return null != get(term); 	} }