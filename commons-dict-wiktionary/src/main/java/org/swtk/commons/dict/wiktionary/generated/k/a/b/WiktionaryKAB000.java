package org.swtk.commons.dict.wiktionary.generated.k.a.b;  import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryKAB000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("kabardian", "{\"term\":\"kabardian\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A North Caucasian language spoken in Kabardino-Balkaria and Karachay-Cherkessia, Russia, also known as East Circassian\", \"priority\":1}]}, \"synonyms\":{}}");

	add("kablooie", "{\"term\":\"kablooie\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"ka-, an intensifier used with onomatopoeia, plus (probably) an imaginative rendition of an explosion or splash.\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A failure, meltdown; or explosion; a splat or splash\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"The bottle of ketchup hit the floor and went \u0027\u0027kablooie\u0027\u0027 all over everything\", \"priority\":2}]}, \"synonyms\":{}}");

	add("kabloona", "{\"term\":\"kabloona\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"Inuktitut\", \"Greenlandic\"], \"text\":\"From Eastern Canadian Inuktitut \u0027\u0027 (qallunaaq) or Greenlandic \u0027\u0027 (kablunâk) (now spelled \u0027kallunaaq\u0027 , or a combination of the two.\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A non-Inuit person in Canada or Greenland, especially a European or someone of European descent\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"2007\u0027\u0027, Dan Simmons, \u0027The Terror: A Novel\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"After food and pleasantries had been exchanged, the old man asked what they were doing so far from the God-Walking People\u0027s northern lands, and when one of the hunters explained that they were looking for living or dead \u0027\u0027kabloona\", \"priority\":3}]}, \"synonyms\":{}}");

	add("kabocha", "{\"term\":\"kabocha\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"Japanese\"], \"text\":\"From Japanese {{m|ja|南瓜|tr\u003dkabocha||pumpkin, squash}}.\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A variety of Japanese winter squash, from species \u0027Cucurbita maxima\", \"priority\":1}]}, \"synonyms\":{}}");

	add("kaboom", "{\"term\":\"kaboom\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"From {{prefix|ka|boom|lang\u003den}}. Compare \u0027kerboom\u0027\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The sound of an explosion, typically seen in comic strips or heard in a light hearted conversation\", \"priority\":1}]}, \"synonyms\":{}}");

	add("kabul", "{\"term\":\"kabul\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"Sanskrit\"], \"text\":\"Possibly from \u0027kambuja\u0027 an tribe of India; alternatively, from Sanskrit \u0027कम्बुज\u0027\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The capital of Afghanistan\", \"priority\":1}]}, \"synonyms\":{}}");

	add("kabuki", "{\"term\":\"kabuki\", \"etymology\":{\"influencers\":[], \"languages\":[\"mandarin chinese\", \"English\", \"Japanese\", \"late middle chinese\"], \"text\":\"From Japanese \u0027歌舞伎\u0027 from Late middle chinese 歌舞 (\u0027ka-mjú\u0027 \u0026quot;song and dance\u0026quot;) (compare Mandarin chinese 歌舞|\u0027gēwǔ\u0027 歌舞) + 伎 (\u0027gjé\u0027 \u0026quot;performer\u0026quot;).\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A form of Japanese theatre in which elaborately costumed male performers use stylized movements, dances, and songs in order to enact tragedies and comedies\", \"priority\":1}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	} 	 	public static boolean has(String term) { 		return null != get(term); 	} }