package org.swtk.commons.dict.wiktionary.generated.k.a.t;  import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryKAT000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("katabasis", "{\"term\":\"katabasis\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"ancient greek (to 1453)\"], \"text\":\"From Ancient greek (to 1453) \u0027κατάβασις\u0027 from verb \u0027καταβαίνω\u0027 from \u0027κατά\u0027 (downwards) + \u0027βαίνω\u0027 (go)\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A journey downwards: a journey downhill, a decrease of winds, a military retreat, a trip to the underworld; a trip from the interior of a country to the coast\", \"priority\":1}]}, \"synonyms\":{}}");

	add("katharometer", "{\"term\":\"katharometer\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"ancient greek (to 1453)\"], \"text\":\"Ancient greek (to 1453) \u0027καθαρός\u0027 (pure) + \u0027\u0027\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A device used for analyzing gas mixtures by measuring their thermal conductivity\", \"priority\":1}]}, \"synonyms\":{}}");

	add("katrillionaire", "{\"term\":\"katrillionaire\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{suffix|katrillion|aire|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"An extremely wealthy person\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"2006\u0027\u0027, Eliza Minot, \u0027The Brambles\u0027, Knopf (2006), ISBN 1400042690, [http://books.google.com/books?id\u003dSbjtnRmodjsC\u0026amp;pg\u003dPA58\u0026amp;dq\u003d%22katrillionaire%2\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"v\u003donepage\u0026amp;q\u003d%22katrillionaire%22\u0026amp;f\u003dfalse page 58\", \"priority\":3},{\"upperType\":\"NOUN\", \"text\":\"a sort of modern-day \u0027Sabrina\u0027-esque story where a young woman, Abby (played by the lovely Chloe Eliot), the daughter of a deeply indebted, widowed summer cook in the Hamptons, ends up living happily ever after with a self-made \u0027\u0027katrillionaire\u0027\u0027 Bill Gates type (but he\u0027s handsome, young, and hip) whose life isn\u0027t as easy as it sounds\", \"priority\":4},{\"upperType\":\"NOUN\", \"text\":\"2008\u0027\u0027, David Segal, \u0026quot;[http://articles.washingtonpost.com/2008-10-28/business/36920255_1_financial-aid-money-woes-towns/2 Lost Souls]\u0026quot;, \u0027The Washington Post\u0027, 28 October 2008\", \"priority\":5},{\"upperType\":\"NOUN\", \"text\":\"But nowhere else has the cachet-turned-baggage of Greenwich, long a home to blue-blood families (this is where the Bush family dwelled for years) and more recently a haven for Wall Street\u0027s new money, such as hedge-fund \u0027\u0027katrillionaire\u0027\u0027 Steve Cohen\", \"priority\":6},{\"upperType\":\"NOUN\", \"text\":\"2010\u0027\u0027, Jacquinita A. Rose, \u0027Shhh, Grown Folks Is Talking: The Stuff I Learned from the Kitchen Door\u0027, Grown Folks\u0027 Publishing (2010), ISBN 9780985419912, [http://books.google.com/books?id\u003dMQM4Qq1DYZAC\u0026amp;pg\u003dPA102\u0026amp;dq\u003d%22katrillionaire%2\", \"priority\":7},{\"upperType\":\"NOUN\", \"text\":\"v\u003donepage\u0026amp;q\u003d%22katrillionaire%22\u0026amp;f\u003dfalse page 102\", \"priority\":8},{\"upperType\":\"NOUN\", \"text\":\"When I am reading I hold the world right here in the palm of my hand. The stars are my fingertips. I am Queen and ruler of all nations. I am the healer of the poor. I am a \u0027\u0027katrillionaire\", \"priority\":9}]}, \"synonyms\":{}}");

	add("katydid", "{\"term\":\"katydid\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A type of grasshopper, in the family Tettigoniidae\", \"priority\":1}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	} 	 	public static boolean has(String term) { 		return null != get(term); 	} }