package org.swtk.commons.dict.wiktionary.generated.x.t.i;  import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryXTI000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("xtianity", "{\"term\":\"xtianity\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"ancient greek (to 1453)\"], \"text\":\"1634,\u0026lt;ref\u0026gt;{{R:OED}}\u0026lt;/ref\u0026gt; from \u0027christianity\u0027 replacing \u0027christ\u0027 with the abbreviation \u0027xt\u0027 (from Ancient greek (to 1453) \u0027χ\u0027 (pos\u003dthe letter chi) the first letter of \u0027χριστός\u0027 (christ) + \u0027t\u0027 the last letter of \u0026quot;Christ\u0026quot;). Compare the more common \u0027xmas\u0027\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"lang\u003den\", \"priority\":1}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	} 	 	public static boolean has(String term) { 		return null != get(term); 	} }