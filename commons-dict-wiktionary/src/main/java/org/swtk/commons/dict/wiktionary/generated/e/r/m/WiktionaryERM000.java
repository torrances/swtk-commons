package org.swtk.commons.dict.wiktionary.generated.e.r.m;  import java.util.Collection; import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryERM000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("ermine", "{\"term\":\"ermine\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"middle english (1100-1500)\", \"old french (842-ca. 1400)\", \"old dutch\"], \"text\":\"From Middle english (1100-1500) \u0027ermine\u0027 \u0027ermin\u0027 \u0027ermyn\u0027 from Old french (842-ca. 1400) \u0027ermin\u0027 \u0027ermine\u0027 \u0027hermine\u0027 from Old dutch {{m|odt|*harmino}} ‘stoat skin’, from {{m|odt|*harmo}} ‘stoat, weasel’ (compare Dutch dialectal \u0027herm\u0027 , from Proto-germanic {{m|gem-pro|*harmô}} (compare Old English \u0027hearma\u0027 Old High German \u0027harmo\u0027 (adj. \u0027harmin\u0027 obsolete German \u0027harm\u0027 , from Proto-indo-european {{m|ine-pro|*ḱormō}} (compare Romansch \u0027carmun\u0027 obsolete Lithuanian {{m|lt|šarmuõ}}).Note: The supposed derivation from {{m|la|mūs}} \u0027armenius|lang\u003dla\u0027 () is without any foundation. \u0026lt;ref\u0026gt;{{R:Century 1911}}\u0026lt;/ref\u0026gt;\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A weasel, \u0027Mustela erminea\u0027, found in northern latitudes; its dark brown fur turns white in winter (apart from the black tip of the tail\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"The white fur of this anima\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"A symbol of purit\", \"priority\":3},{\"upperType\":\"NOUN\", \"text\":\"The office of a judg\", \"priority\":4},{\"upperType\":\"NOUN\", \"text\":\"A white field with black spots\", \"priority\":5}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	}  	public static boolean has(String term) { 		return null != get(term); 	}  	public static Collection<String> terms() { 		return map.keySet(); 	} }