package org.swtk.commons.dict.wiktionary.generated.c.i.a;  import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryCIA000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("ciabatta", "{\"term\":\"ciabatta\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{borrowing|it|ciabatta||slipper, bread|lang\u003den}}.\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A broad, flat, white Italian bread\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"2011\u0027\u0027, Caroline Bretherton, \u0027Illustrated Step-by-Step Baking\u0027, page 42\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"Don\u0027t waste day-old \u0027\u0027ciabatta\u0027\u0027; slice it and bake the slices to make crostini, which will keep for days and can be used for snacks, canap√©s, or croutons\", \"priority\":3}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	} 	 	public static boolean has(String term) { 		return null != get(term); 	} }