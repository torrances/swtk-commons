package org.swtk.commons.dict.wiktionary.generated.c.z.a;  import java.util.Collection; import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryCZA000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("czar", "{\"term\":\"czar\", \"etymology\":{\"influencers\":[], \"languages\":[\"Old Church Slavonic\", \"English\", \"gothic\", \"Latin\", \"Russian\"], \"text\":\"From Russian \u0027царь\u0027 via Old church slavonic \u0027тсесари\u0027 from Gothic \u0027𐌺𐌰𐌹𐍃𐌰𐍂\u0027 from \u0027καῖσαρ\u0027 ultimately from Latin \u0027caesar\u0027 lt;ref\u0026gt;Funk, W. J., \u0027Word origins and their romantic stories\u0027, New York, Wilfred Funk, Inc.\u0026lt;/ref\u0026gt;.\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A person assigned to a task-related government oversight office, e.g. \u0026quot;drug czar\u0026quot\", \"priority\":1}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	}  	public static boolean has(String term) { 		return null != get(term); 	}  	public static Collection<String> terms() { 		return map.keySet(); 	} }