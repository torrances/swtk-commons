package org.swtk.commons.dict.wiktionary.generated.d.a.z;  import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryDAZ000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("daze", "{\"term\":\"daze\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The state of being dazed\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"He was in a daze\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"A glittering stone\", \"priority\":3}]}, \"synonyms\":{}}");

	add("dazzler", "{\"term\":\"dazzler\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{suffix|dazzle|er|lang\u003den}}. * \u0027\u00272009\u0027\u0027, Ric Merrifield, \u0027Rethink\u0027 (page 62). *: When he announced that he was going to try his hand at professional baseball, few skeptics were bold enough to suggest that this career turn would be\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"One who or that which dazzles; something spectacular\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"2009\u0027\u0027, Ric Merrifield, \u0027Rethink\u0027 (page 62\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"When he announced that he was going to try his hand at professional baseball, few skeptics were bold enough to suggest that this career turn would be anything but another Jordanesque \u0027\u0027dazzler\", \"priority\":3}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	} 	 	public static boolean has(String term) { 		return null != get(term); 	} }