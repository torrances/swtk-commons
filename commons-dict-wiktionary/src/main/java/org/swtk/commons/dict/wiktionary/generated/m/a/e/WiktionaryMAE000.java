package org.swtk.commons.dict.wiktionary.generated.m.a.e;  import java.util.Collection; import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryMAE000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("maelstrom", "{\"term\":\"maelstrom\", \"etymology\":{\"influencers\":[{}], \"languages\":[\"Danish\", \"English\", \"Dutch\"], \"text\":\"From obsolete Dutch \u0027maelstrom\u0027 (modern Dutch \u0027maalstroom\u0027 ,\u0026lt;ref\u0026gt;[http://books.google.com/books?id\u003dIrcZEZ1bOJsC\u0026amp;pg\u003dPA300\u0026amp;dq\u003dmaalstroom+maelstrom\u0026amp;lr\u003d\u0026amp;num\u003d20\u0026amp;as_brr\u003d0\u0026amp;ei\u003d3ishS7iCB6KGkASk-fClCQ\u0026amp;cd\u003d. v\u003donepage\u0026amp;q\u003dmaalstroom%20maelstrom\u0026amp;f\u003dfalse Maelstrom] in the Merriam-Webster book of word histories\u0026lt;/ref\u0026gt; from \u0027malen\u0027 (to whirl, grind) (from Proto-germanic {{m|gem-pro|*malaną}}) and \u0027stroom\u0027 (stream) \u0026lt;ref\u0026gt;{{R:Online Etymology Dictionary|Maelstrom}}\u0026lt;/ref\u0026gt; Compare German \u0027mahlstrom\u0027 Danish \u0027malstrøm\u0027\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A large and violent whirlpool\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"2001\u0027\u0027 — w:Eoin Eoin Colfer, \u0027Artemis Fowl\u0027, p 21\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"A hulking shape burst through the doorway and hurtled down the corridor, leaving a \u0027\u0027maelstrom\u0027\u0027 of air currents in his wake\", \"priority\":3},{\"upperType\":\"NOUN\", \"text\":\"Any violent or turbulent situation\", \"priority\":4}]}, \"synonyms\":{}}");

	add("maenad", "{\"term\":\"maenad\", \"etymology\":{\"influencers\":[{}], \"languages\":[\"English\", \"ancient greek (to 1453)\", \"Latin\"], \"text\":\"From Latin \u0027maenas\u0027 (bacchant) from Ancient greek (to 1453) \u0027μαινάς\u0027 (raving, frantic) from Ancient greek (to 1453) \u0027μαίνεσθαι\u0027 (be furious)\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"File:Mainade Staatliche Antikensammlungen thumb|Furious maena\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"A female follower of Dionysus, associated with intense reveling\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"1919\u0027\u0027, w:William Somerset W. Somerset Maugham, \u0027w:The Moon and The Moon and Sixpence\u0027, s:The Moon and Sixpence/Chapter chapter 3\", \"priority\":3},{\"upperType\":\"NOUN\", \"text\":\"Blanche Stroeve was in the cruel grip of appetite. Perhaps she hated Strickland still, but she hungered for him, and everything that had made up her life till then became of no account. She ceased to be a woman, complex, kind and petulant, considerate and thoughtless; she was a \u0027\u0027Maenad\u0027\u0027. She was desire\", \"priority\":4},{\"upperType\":\"NOUN\", \"text\":\"An excessively wild or emotional woman\", \"priority\":5}]}, \"synonyms\":{}}");

	add("maerl", "{\"term\":\"maerl\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{rfe|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"usually as a collective noun\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"Two or three species of calcareous algae in the Corallinaceae family, that grow on the seabed\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"A fertilizer derived from this algae\", \"priority\":3}]}, \"synonyms\":{}}");

	add("maestro", "{\"term\":\"maestro\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"Italian\", \"Latin\"], \"text\":\"From Italian {{m|it|maestro}}, from Latin \u0027magister\u0027 \u0027magistr-\u0027, master.\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A master in some art, especially a composer or conductor\", \"priority\":1}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	}  	public static boolean has(String term) { 		return null != get(term); 	}  	public static Collection<String> terms() { 		return map.keySet(); 	} }