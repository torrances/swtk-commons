package org.swtk.commons.dict.wiktionary.generated.u.m.e;  import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryUME000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("umeboshi", "{\"term\":\"umeboshi\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"Japanese\"], \"text\":\"From Japanese \u0027lang\u003dja|梅干|tr\u003dumeboshi\u0027 ()\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"Pickled ume fruits\", \"priority\":1}]}, \"synonyms\":{}}");

	add("umeshu", "{\"term\":\"umeshu\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"Japanese\"], \"text\":\"Japanese \u0027梅酒\u0027\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A Japanese liqueur made by steeping unripe ume fruits in alcohol (or saké) and sugar\", \"priority\":1}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	} 	 	public static boolean has(String term) { 		return null != get(term); 	} }