package org.swtk.commons.dict.wiktionary.generated.s.i.x;  import java.util.Collection; import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionarySIX000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("sixes", "{\"term\":\"sixes\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A pair of si\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"sixes\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"shortened form of six of one, half a dozen of the other\", \"priority\":3}]}, \"synonyms\":{}}");

	add("sixpence", "{\"term\":\"sixpence\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{compound|six|pence|lang\u003den}} (\u0027American English|US\u0027, \u0026quot;pennies\u0026quot;)\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The value of six old pence; half of a shilling; or one-fortieth of a pound sterling\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"A former British coin worth sixpenc\", \"priority\":2}]}, \"synonyms\":{}}");

	add("sixsome", "{\"term\":\"sixsome\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{suffix|six|some|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A group of six persons or things\", \"priority\":1}]}, \"synonyms\":{}}");

	add("sixte", "{\"term\":\"sixte\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The sixth defensive position, with the sword hand held at chest height, and the tip of the sword at eye level\", \"priority\":1}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	}  	public static boolean has(String term) { 		return null != get(term); 	}  	public static Collection<String> terms() { 		return map.keySet(); 	} }