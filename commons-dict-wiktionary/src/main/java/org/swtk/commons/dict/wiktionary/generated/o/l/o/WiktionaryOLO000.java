package org.swtk.commons.dict.wiktionary.generated.o.l.o;  import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryOLO000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("ology", "{\"term\":\"ology\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"From the suffix \u0027-ology\u0027 in the names of many sciences\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"Any branch of learning, especially one ending in “-logy”\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"1854:\u0027\u0027 Charles Dickens, \u0027Hard Times\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"You learnt a great deal, Louisa, and so did your brother. \u0027\u0027Ologies\u0027\u0027 of all kinds, from morning to night. If there is an Ology left, of any description, that has not been worn to rags\", \"priority\":3},{\"upperType\":\"NOUN\", \"text\":\"1902:\u0027\u0027 William James, \u0027The Varieties of Religious Experience\", \"priority\":4},{\"upperType\":\"NOUN\", \"text\":\"The ideal world, for them, is not a world of facts, but only of the meaning of facts; it is a point of view for judging facts. It appertains to a different \u0026quot;\u0027\u0027-ology\u0027\u0027,\u0026quot\", \"priority\":5},{\"upperType\":\"NOUN\", \"text\":\"1987\u0027\u0027, British Telecom, \u0026quot;[https://www.youtube.com/watch?v\u003dvEfKEzX9QLE Beatrice Bellman advertisement]\u0026quot\", \"priority\":6},{\"upperType\":\"NOUN\", \"text\":\"An \u0027\u0027ology\u0027\u0027! He gets an \u0027\u0027ology\u0027\u0027 and he says he\u0027s failed. You get an \u0027\u0027ology\u0027\u0027, you\u0027re a scientist\", \"priority\":7}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	} 	 	public static boolean has(String term) { 		return null != get(term); 	} }