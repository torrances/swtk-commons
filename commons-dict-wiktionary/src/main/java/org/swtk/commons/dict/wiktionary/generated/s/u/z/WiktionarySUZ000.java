package org.swtk.commons.dict.wiktionary.generated.s.u.z;  import java.util.Collection; import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionarySUZ000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("suzanne", "{\"term\":\"suzanne\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"French\"], \"text\":\"From French \u0027suzanne\u0027\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"1987\u0027\u0027 w:Alexander Walker Alexander Walker, \u0027The Life of Vivien Leigh\u0027, Grove Press (1994), ISBN 0802132596, page 43\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"Suzanne\u0027\u0027 was the name given to the baby. It was Vivian\u0027s choice, but she had doubts about it later. Wasn\u0027t it a shade on the exotic side? Perhaps \u0027Susan\u0027 was preferable\", \"priority\":2}]}, \"synonyms\":{}}");

	add("suzerain", "{\"term\":\"suzerain\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"French\", \"Latin\"], \"text\":\"From French \u0027suzerain\u0027 based on \u0027sus\u0027 (up, above) (from Latin \u0027sursum\u0027 with the ending of \u0027souverain\u0027 (whence also English \u0027sovereign\u0027 .\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A dominant nation or state which has control over the international affairs of a subservient state which has domestic autonomy\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"A feudal landowner to whom vassals were forced to pledge allegiance\", \"priority\":2}]}, \"synonyms\":{}}");

	add("suzukiite", "{\"term\":\"suzukiite\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{suffix|Suzuki|ite|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"An orthorhombic-pyramidal light green mineral containing barium, oxygen, silicon, and vanadium\", \"priority\":1}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	}  	public static boolean has(String term) { 		return null != get(term); 	}  	public static Collection<String> terms() { 		return map.keySet(); 	} }