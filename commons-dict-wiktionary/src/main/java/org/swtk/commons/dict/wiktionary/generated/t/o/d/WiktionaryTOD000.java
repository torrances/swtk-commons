package org.swtk.commons.dict.wiktionary.generated.t.o.d;  import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryTOD000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("toddler", "{\"term\":\"toddler\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{suffix|toddle|t1\u003dwalk unsteadily|er|t2\u003d(agent)|lang\u003den}} – literally “one who walks unsteadily”, hence a young child (not yet able to walk steadily).\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A young human being who has started walking but not fully mastered it, typically between ages one to three years old\", \"priority\":1}]}, \"synonyms\":{}}");

	add("toddlerhood", "{\"term\":\"toddlerhood\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{suffix|toddler|hood|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The period of one\u0027s life in which one is a toddle\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"We\u0027ve been friends ever since \u0027\u0027toddlerhood\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"2014\u0027\u0027, Rebecca Ley, \u0026quot;[http://www.theguardian.com/lifeandstyle/2014/dec/20/city-versus-country-childhoods City versus country childhoods]\u0026quot;, \u0027The Guardian\u0027, +201 December 2014\", \"priority\":3},{\"upperType\":\"NOUN\", \"text\":\"And, like most boring mothers, I fret about schools. Where I grew up, everyone went to the nearest village primary school and the local comprehensive. But here, since the earliest days of Isobel’s \u0027\u0027toddlerhood\u0027\u0027, my friends and acquaintances have been engaged in an arms race\", \"priority\":4}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	} 	 	public static boolean has(String term) { 		return null != get(term); 	} }