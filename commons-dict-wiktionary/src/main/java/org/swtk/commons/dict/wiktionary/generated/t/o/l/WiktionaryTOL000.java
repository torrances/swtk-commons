package org.swtk.commons.dict.wiktionary.generated.t.o.l;  import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryTOL000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("tolerability", "{\"term\":\"tolerability\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{suffix|tolerate|ability|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The quality or state of being tolerable\", \"priority\":1}]}, \"synonyms\":{}}");

	add("tolerableness", "{\"term\":\"tolerableness\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{suffix|tolerable|ness|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The state of being tolerable\", \"priority\":1}]}, \"synonyms\":{}}");

	add("toleration", "{\"term\":\"toleration\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"middle french (ca. 1400-1600)\", \"Latin\"], \"text\":\"From Middle french (ca. 1400-1600) \u0027toleration\u0027 from Latin \u0027tolerātiōnem\u0027 accusative singular of \u0027tolerātiō\u0027 from the verb \u0027tolerō\u0027 (i tolerate) Compare \u0027tolerance\u0027\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"Endurance of evil, suffering etc\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"The allowance of something not explicitly approved; tolerance, forbearance\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"Specifically, the allowance by a government (or other ruling power) of the exercise of religion beyond the state established faith\", \"priority\":3},{\"upperType\":\"NOUN\", \"text\":\"2012\u0027\u0027, Faramerz Dabhoiwala, \u0027The Origins of Sex\u0027, Penguin 2013, p. 86\", \"priority\":4},{\"upperType\":\"NOUN\", \"text\":\"Above all, the establishment of \u0027\u0027toleration\u0027\u0027 helped to weaken the presumption that plurality in matters of faith inevitably caused social disorder\", \"priority\":5}]}, \"synonyms\":{}}");

	add("tolerator", "{\"term\":\"tolerator\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{rfe|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"One who tolerates\", \"priority\":1}]}, \"synonyms\":{}}");

	add("tolkienite", "{\"term\":\"tolkienite\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{suffix|Tolkien|ite|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A fan of the works and fantasy world of W:J. R. R. J. R. R. Tolkien, especially \u0027The Hobbit\u0027 and \u0027The Lord of the Rings\", \"priority\":1}]}, \"synonyms\":{}}");

	add("tolkienologist", "{\"term\":\"tolkienologist\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{suffix|Tolkien|ologist|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"One who studies Tolkien and his creations\", \"priority\":1}]}, \"synonyms\":{}}");

	add("tollhouse", "{\"term\":\"tollhouse\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{compound|toll|house|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A building where a toll is collected on a toll road\", \"priority\":1}]}, \"synonyms\":{}}");

	add("toloache", "{\"term\":\"toloache\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"From Mexican Spanish. Spanish|toloache\u0027, from Nahuatl \u0027toloatzin\u0027, from \u0027toloa\u0027 ‘bow the head’ + \u0027tzin\u0027 ‘reverential’.\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The annual plant \u0027Datura inoxia\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"A psychoactive, hallucinogenic preparation made from the plant.Category:en:Nightshades\", \"priority\":2}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	} 	 	public static boolean has(String term) { 		return null != get(term); 	} }