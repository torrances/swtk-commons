package org.swtk.commons.dict.wiktionary.generated.n.u.g;  import java.util.Collection; import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryNUG000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("nugget", "{\"term\":\"nugget\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"Probably a diminutive of dialectal {{affix|en|nug|gloss1\u003dlump, block|-et}}.\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A small, compact chunk or clump\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"a gold \u0027\u0027nugget\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"A tidbit of something valuable\", \"priority\":3},{\"upperType\":\"NOUN\", \"text\":\"a \u0027\u0027nugget\u0027\u0027 of wisdom\", \"priority\":4},{\"upperType\":\"NOUN\", \"text\":\"A type of boot polish\", \"priority\":5},{\"upperType\":\"NOUN\", \"text\":\"A bud from the Cannabis sativa plant\", \"priority\":6},{\"upperType\":\"NOUN\", \"text\":\"An inexperienced, newly trained fighter pilot\", \"priority\":7},{\"upperType\":\"NOUN\", \"text\":\"2009\u0027\u0027, Nick Scipio, \u0027[http://www.nickscipio.com/summercamp/nereids/chapter01.html Nereids\", \"priority\":8},{\"upperType\":\"NOUN\", \"text\":\"Jack stifled a smirk at the ensign\u0027s expressionless non-reaction. He\u0027d been a \u0027\u0027nugget\u0027\u0027 himself once, the new guy fresh from training\", \"priority\":9},{\"upperType\":\"NOUN\", \"text\":\"A partial description gleaned from data mining\", \"priority\":10},{\"upperType\":\"NOUN\", \"text\":\"2002\u0027\u0027, \u0027Data Mining: A Heuristic Approach\u0027 (page 93\", \"priority\":11},{\"upperType\":\"NOUN\", \"text\":\"We have previously said that the heuristic algorithms produce good \u0027\u0027nuggets\u0027\u0027 for most classes and most Î» values\", \"priority\":12}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	}  	public static boolean has(String term) { 		return null != get(term); 	}  	public static Collection<String> terms() { 		return map.keySet(); 	} }