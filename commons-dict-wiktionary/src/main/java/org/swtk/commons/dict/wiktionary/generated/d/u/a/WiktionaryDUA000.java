package org.swtk.commons.dict.wiktionary.generated.d.u.a;  import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryDUA000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("duar", "{\"term\":\"duar\", \"etymology\":{\"influencers\":[], \"languages\":[\"Arabic\", \"English\"], \"text\":\"Representing a colloquial pronunciation of Arabic \u0027lang\u003dar\u0027\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A camp or village of tents in an Arabic country\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"1882\u0027\u0027: The \u0027\u0027\u0027duar\u0027\u0027\u0027 is in general made up of ten, fifteen, or twenty families, who are related to each other, and each family has a tent. — Edmondo de Amicis, \u0027Morocco: Its People \u0026amp; Places\u0027, tr. C. Rollin-Tilton\", \"priority\":2}]}, \"synonyms\":{}}");

	add("dualin", "{\"term\":\"dualin\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"An explosive substance consisting essentially of sawdust or wood pulp saturated with nitroglycerin and similar compounds\", \"priority\":1}]}, \"synonyms\":{}}");

	add("duality", "{\"term\":\"duality\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"Latin\"], \"text\":\"From Latin {{m|la|duālitās}}.{{suffix|dual|ity|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A classification into two subclasses or opposed parts\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"The interchangeability of points and planes\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"The mathematical equivalence of two seemingly different theoretical descriptions of a physical system\", \"priority\":3}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	} 	 	public static boolean has(String term) { 		return null != get(term); 	} }