package org.swtk.commons.dict.wiktionary.generated.g.i.m;  import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryGIM000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("gimp", "{\"term\":\"gimp\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The GNU Image Manipulation Program, a computer program capable of manipulating digital images\", \"priority\":1}]}, \"synonyms\":{}}");

	add("gimbal", "{\"term\":\"gimbal\", \"etymology\":{\"influencers\":[{}], \"languages\":[\"English\", \"old french (842-ca. 1400)\", \"Latin\"], \"text\":\"Alteration of \u0027gemel\u0027, from Old french (842-ca. 1400) \u0027jumel\u0027 (twin) (French \u0027jumeau\u0027 , from Latin \u0027gemellus\u0027\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A device for suspending something, such as a ship\u0027s compass, so that it will remain level when its support is tipped\", \"priority\":1}]}, \"synonyms\":{}}");

	add("gimlet", "{\"term\":\"gimlet\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"old french (842-ca. 1400)\", \"middle low german\"], \"text\":\"The name \u0026quot;gimlet\u0026quot; comes from the Old french (842-ca. 1400) \u0027guinbelet\u0027, \u0027guimbelet\u0027, later \u0027guibelet\u0027, probably a diminutive of the Anglo-French \u0026quot;wimble\u0026quot;, a variation of \u0026quot;guimble\u0026quot;, from the Middle low german \u0027wiemel\u0027, compare the Scandinavian \u0027wammie\u0027, to bore or twist; the modern French is \u0027gibelet\u0027 \u0026lt;ref\u0026gt;\u0027OED|Oxford English Dictionary\u0027, 2nd. Edition, (1989)\u0026lt;/ref\u0026gt;Image:Gimlet - tool.jpg|thumb|a gimlet (tool)\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A small screw-tipped tool for boring holes\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"The box was close on every side, with a little door for me to go in and out, and a few \u0027\u0027gimlet\u0027\u0027 holes to let in air\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"A cocktail, usually made with gin and lime juice\", \"priority\":3},{\"upperType\":\"NOUN\", \"text\":\"2001\u0027\u0027, \u0027General Hospital\u0027 (TV soap opera, August 28\", \"priority\":4},{\"upperType\":\"NOUN\", \"text\":\"Yeah, a piece of advice — once you’re back in circulation, don’t keep topping off a lady’s vodka \u0027\u0027gimlet\u0027\u0027 when she’s not looking\", \"priority\":5}]}, \"synonyms\":{}}");

	add("gimmick", "{\"term\":\"gimmick\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{unk.|en}}.\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A trick or device used to attain some end\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"The box had a \u0027\u0027gimmick\u0027\u0027 to make the coin appear to vanish\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"April 19 2002\u0027\u0027, Scott Tobias, AV Club \u0027Fightville\u0027[http://www.avclub.com/articles/fightville,72589\", \"priority\":3},{\"upperType\":\"NOUN\", \"text\":\"Epperlein and Tucker focus on two featherweight hopefuls: Dustin Poirier, a formidable contender who’s looking to parlay a history of schoolyard violence and street-fighting into a potential career, and Albert Stainback, a more thoughtful yet more erratic and undisciplined fighter whose chief \u0027\u0027gimmick\u0027\u0027 is entering the ring wearing a hat like the one Malcolm McDowell wore in \u0027A Clockwork Orange\", \"priority\":4},{\"upperType\":\"NOUN\", \"text\":\"A clever ploy or strategy\", \"priority\":5},{\"upperType\":\"NOUN\", \"text\":\"The contest was a \u0027\u0027gimmick\u0027\u0027 to get people to sign up for their mailing list\", \"priority\":6}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	} 	 	public static boolean has(String term) { 		return null != get(term); 	} }