package org.swtk.commons.dict.wiktionary.generated.o.k.a;  import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryOKA000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("okay", "{\"term\":\"okay\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"A respelling of \u0027\u0027OK\u0027\u0027.\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"See\u0027 \u0027\u0027O\", \"priority\":1}]}, \"synonyms\":{}}");

	add("okapi", "{\"term\":\"okapi\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"mvuba\"], \"text\":\"Image:Okapi2.jpg|thumb|okapiFrom Mvuba \u0027okapi\u0027\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A large ruminant mammal, \u0027Okapia johnstoni\u0027, found in the rainforests of the Congo, related to the giraffe, but with a much shorter neck, a reddish brown coat and zebra-like stripes on its hindquarters\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"1904\u0027\u0027, \u0026quot;Reginald\u0027s Christmas Revel\u0026quot;, \u0027Reginald\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"I used to listen to him with a rapt attention that I thought rather suited me, and then one day I quite modestly gave the dimensions of an \u0027\u0027okapi\u0027\u0027 I had shot in the Lincolnshire fens\", \"priority\":3}]}, \"synonyms\":{}}");

	add("okara", "{\"term\":\"okara\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"Japanese\"], \"text\":\"From Japanese \u0027おから\u0027\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"a food made from soybean pulp; a by-product of soy milk production\", \"priority\":1}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	} 	 	public static boolean has(String term) { 		return null != get(term); 	} }