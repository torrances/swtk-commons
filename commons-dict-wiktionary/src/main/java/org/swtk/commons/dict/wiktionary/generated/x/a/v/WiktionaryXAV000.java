package org.swtk.commons.dict.wiktionary.generated.x.a.v;  import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryXAV000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("xavier", "{\"term\":\"xavier\", \"etymology\":{\"influencers\":[{}], \"languages\":[\"English\", \"Basque\"], \"text\":\"Toponymic surname of a sixteenth century saint born in the Kingdom of Navarre (now partially placed in Spain), Francis de Xavier, from a place name in the Kingdom of Navarre, originally from Basque \u0027etxeberria\u0027 (the new house)\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"1976\u0027\u0027 w:Don Don DeLillo, \u0027Ratner\u0027s Star\u0027, Knopf, ISBN 0394400836, page 337\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"quot;Full name please.\u0026quot; \u0026quot;Maurice \u0027\u0027Xavier\u0027\u0027 Wu.\u0026quot; \u0026quot;Where did you get the \u0027\u0027Xavier\u0027\u0027?\u0026quot; \u0026quot;My father was a missionary,\u0026quot; he said\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"2007\u0027\u0027 w:Sharon Sharon Kendrick, \u0027The Sheikh\u0027s English Bride\u0027, Harlequin, ISBN 0373126123, page 60\", \"priority\":3},{\"upperType\":\"NOUN\", \"text\":\"I keep telling you to call me \u0027\u0027Xavier\u0027\u0027,\u0027 he interjected silkily, aware that her reluctance to do so intrigued him. \u0027\u0027Xavier\u0027\u0027,\u0027 Laura agreed, and then hesitated. How could his name be so...so...\u0027enticing\u0027? Because it was foreign to her lipsâ€•lingering there like the juice of a fruit she had never tasted before? Or because it was impossible to say without first softening your voice\", \"priority\":4},{\"upperType\":\"NOUN\", \"text\":\"found chiefly among people of Spanish and Portuguese descent\", \"priority\":5}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	} 	 	public static boolean has(String term) { 		return null != get(term); 	} }