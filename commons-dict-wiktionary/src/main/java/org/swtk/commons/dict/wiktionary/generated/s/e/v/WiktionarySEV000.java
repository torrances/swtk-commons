package org.swtk.commons.dict.wiktionary.generated.s.e.v;  import java.util.Collection; import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionarySEV000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("sevan", "{\"term\":\"sevan\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"Armenian\"], \"text\":\"From Armenian \u0027սեւան\u0027\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"large freshwater mountain lake in Armeni\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"formerly an island in the northwestern part of Lake Sevan in Armenia, which was transformed into a peninsula after the artificial draining during the Soviet era\", \"priority\":2}]}, \"synonyms\":{}}");

	add("sevastopol", "{\"term\":\"sevastopol\", \"etymology\":{\"influencers\":[], \"languages\":[\"Greek\", \"English\", \"Russian\", \"Ukrainian\"], \"text\":\"Late 18th century. From Ukrainian and Russian \u0027севасто́поль\u0027 () from Greek \u0027σεβαστόπολις\u0027 from \u0027σεβαστός\u0027 (august) + \u0027πόλις\u0027 (city) probably after Empress (\u003d\u0027augusta\u0027 Catherine II of Russia.\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A port city in the Crimean peninsula, base of the Black Sea Fleet\", \"priority\":1}]}, \"synonyms\":{}}");

	add("sevens", "{\"term\":\"sevens\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"rugby Rugby sevens\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"A pair of seve\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"sevens\", \"priority\":3}]}, \"synonyms\":{}}");

	add("sevensome", "{\"term\":\"sevensome\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{suffix|seven|some|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A group of seven persons or things\", \"priority\":1}]}, \"synonyms\":{}}");

	add("severality", "{\"term\":\"severality\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{suffix|several|ity|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The state or property of being several\", \"priority\":1}]}, \"synonyms\":{}}");

	add("severance", "{\"term\":\"severance\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"old french (842-ca. 1400)\", \"anglo-norman\"], \"text\":\"From Anglo-norman Old french (842-ca. 1400) \u0027sevrance\u0027 from \u0027sevrer\u0027\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The act of severing or the state of being severed\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"A separation\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"A severance payment\", \"priority\":3}]}, \"synonyms\":{}}");

	add("severity", "{\"term\":\"severity\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"middle french (ca. 1400-1600)\", \"Latin\"], \"text\":\"From Middle french (ca. 1400-1600) \u0027severite\u0027 from Latin \u0027severitas\u0027\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The state of being severe\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"The degree of something undesirable; badness or seriousness\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"The \u0027\u0027severity\u0027\u0027 of the offence merits a long prison sentence\", \"priority\":3}]}, \"synonyms\":{}}");

	add("seville", "{\"term\":\"seville\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"From the Spanish \u0027Sevilla\u0027.\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A city in Andalusia, Spain\", \"priority\":1}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	}  	public static boolean has(String term) { 		return null != get(term); 	}  	public static Collection<String> terms() { 		return map.keySet(); 	} }