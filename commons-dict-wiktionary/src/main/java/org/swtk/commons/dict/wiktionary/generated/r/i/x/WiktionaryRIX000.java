package org.swtk.commons.dict.wiktionary.generated.r.i.x;  import java.util.Collection; import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryRIX000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("rixation", "{\"term\":\"rixation\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"Latin\"], \"text\":\"From Latin \u0027rixar. Latin|rīxārī\u0027, “to quarrel”.\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"Scolding; brawling.\u0026lt;ref name\u003d\u0026quot;HCdict\u0026quot;\u0026gt;\u0027Henry Cockeram’s\u0027 \u0027\u0027The English dictionarie, or an interpreter of hard English words\u0027\u0027 (1623)\u0026lt;/ref\u0026gt;\u0026lt;ref name\u003d\u0026quot;OED-ref\u0026quot;\u0026gt;The \u0027\u0027Oxford English Dictionary\u0027\u0027 (2007)\u0026lt;/ref\u0026gt\", \"priority\":1}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	}  	public static boolean has(String term) { 		return null != get(term); 	}  	public static Collection<String> terms() { 		return map.keySet(); 	} }