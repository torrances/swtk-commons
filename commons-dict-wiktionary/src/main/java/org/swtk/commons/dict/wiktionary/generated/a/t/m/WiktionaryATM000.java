package org.swtk.commons.dict.wiktionary.generated.a.t.m;  import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryATM000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("atmolysis", "{\"term\":\"atmolysis\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"ancient greek (to 1453)\"], \"text\":\"Ancient greek (to 1453)\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The separation of mingled gases of unequal diffusibility by transmission through porous substances\", \"priority\":1}]}, \"synonyms\":{}}");

	add("atmosphere", "{\"term\":\"atmosphere\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"ancient greek (to 1453)\"], \"text\":\"From \u0027atmosphaera\u0027 from Ancient greek (to 1453) \u0027ἀτμός|sc\u003dpolytonic\u0027 (steam) + Ancient greek (to 1453) \u0027σφαῖρα|sc\u003dpolytonic\u0027 (sphere) corresponding to {{confix|atmo|sphere|lang\u003den}} (?).\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The gases surrounding the Earth or any astronomical body\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"The air in a particular place\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"Thus the red damask curtains which now shut out the fog-laden, drizzling \u0027\u0027atmosphere\u0027\u0027 of the Marylebone Road, had cost a mere song, and yet they might have been warranted to last another thirty years. A great bargain also had been the excellent Axminster carpet which covered the floor\", \"priority\":3},{\"upperType\":\"NOUN\", \"text\":\"The mood or feeling in a situation\", \"priority\":4},{\"upperType\":\"NOUN\", \"text\":\"A unit of measurement for pressure (symbol: atm\", \"priority\":5}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	} 	 	public static boolean has(String term) { 		return null != get(term); 	} }