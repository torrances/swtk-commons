package org.swtk.commons.dict.wiktionary.generated.s.v.e;  import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionarySVE000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("svengali", "{\"term\":\"svengali\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"Named from a character in w:George du Maurier|George du Maurier\u0027s novel \u0027w:Trilby (novel)|Trilby\u0027.\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"One who manipulates or controls another as by some mesmeric or sinister influence; especially a coach, mentor or industry mogul\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"2005\u0027\u0027 October 15, in the \u0027Hamilton Spectator\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"She also offers a fascinating glimpse into a more innocent age before \u0027\u0027svengalis\u0027\u0027 began colluding with marketing men and TV execs to promote talentless wannabes to overnight success\", \"priority\":3}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	} 	 	public static boolean has(String term) { 		return null != get(term); 	} }