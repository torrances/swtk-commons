package org.swtk.commons.dict.wiktionary.generated.f.o.c;  import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryFOC000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("focaccia", "{\"term\":\"focaccia\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"Italian\", \"Latin\", \"Serbo-Croatian\"], \"text\":\"Diminutive form of Italian \u0027fuoco|lang\u003dit\u0027 () from Latin \u0027focus|lang\u003dla\u0027 () or through a {{m|la|focacia}}. Cognate with Serbo-croatian \u0027pogaƒça|lang\u003dsh\u0027 ()\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A flat bread similar in style, composition, and texture to modern pizza doughs and topped with herbs, cheese and other products. Focaccia typically consists of high-gluten flour, oil, water, sugar, salt and yeast\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"2001\u0027\u0027, Eve Zibart, \u0027The Ethnic Food Lover\u0027s Companion\u0027, page 4\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"The same dough can be used for bread, rolls, breadsticks, bruschetta, \u0027\u0027focaccia\u0027\u0027, calzone, or pizza. The only practical difference between pizza and \u0027\u0027focaccia\u0027\u0027 is the thickness of the crust: Traditional pizza crust is thin, and something an inch or two thick is more like \u0027\u0027focaccia\", \"priority\":3},{\"upperType\":\"NOUN\", \"text\":\"A sandwich made with this type of bread\", \"priority\":4}]}, \"synonyms\":{}}");

	add("focus", "{\"term\":\"focus\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"Latin\"], \"text\":\"Latin \u0027focus\u0027 (hearth, fireplace) see there for more.\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A point at which reflected or refracted rays of light converge\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"A point of a conic at which rays reflected from a curve or surface converge\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"The fact of the convergence of light on the photographic medium\", \"priority\":3},{\"upperType\":\"NOUN\", \"text\":\"title\u003d[http://www.americanscientist.org/issues/pub/2013/4/focus-on-everything Focus on passage\u003dNot long ago, it was difficult to produce photographs of tiny creatures with every part in \u0027\u0027focus\u0027\u0027.A photo processing technique called \u0027\u0027focus\u0027\u0027 stacking has changed that. Developed as a tool to electronically combine the sharpest bits of multiple digital images, \u0027\u0027focus\u0027\u0027 stacking is a boon to biologists seeking full \u0027\u0027focus\u0027\u0027 on a micron scale\", \"priority\":4},{\"upperType\":\"NOUN\", \"text\":\"The quality of the convergence of light on the photographic medium\", \"priority\":5},{\"upperType\":\"NOUN\", \"text\":\"Concentration of attention\", \"priority\":6},{\"upperType\":\"NOUN\", \"text\":\"The exact point of where an earthquake occurs, in three dimensions\", \"priority\":7},{\"upperType\":\"NOUN\", \"text\":\"The indicator of the currently active element in a user interface\", \"priority\":8},{\"upperType\":\"NOUN\", \"text\":\"The most important word or phrase in a sentence or passage, or the one that imparts information\", \"priority\":9}]}, \"synonyms\":{}}");

	add("focuses", "{\"term\":\"focuses\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"Category:English plurals ending in \u0026quot;-es\u0026quot\", \"priority\":1}]}, \"synonyms\":{}}");

	add("focussing", "{\"term\":\"focussing\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The action of the verb \u0027\u0027to focus\", \"priority\":1}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	} 	 	public static boolean has(String term) { 		return null != get(term); 	} }