package org.swtk.commons.dict.wiktionary.generated.f.e.c;  import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryFEC000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("feces", "{\"term\":\"feces\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"Latin\"], \"text\":\"From Latin {{m|la|faecēs}}, nominative plural of \u0027faex\u0027 (residue, dregs)\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"Digested waste material (typically solid or semi-solid) discharged from the bowels; excrement\", \"priority\":1}]}, \"synonyms\":{\"list\":[{\"text\":\"log\", \"synonymQualifier\":\"VULGAR\"}]}}");

	add("fecundity", "{\"term\":\"fecundity\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"Latin\"], \"text\":\"From Latin {{m|la|fēcunditās||fruitfulness, fertility}}, from {{m|la|fēcundus}}.\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"Ability to produce offspring\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"2006\u0027\u0027, w:Neil Neil Gaiman, “Neil Gaiman on Terry Pratchett” in: \u0027Good Omens\u0027, Corgi, p. 41\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"In the early days the reviewers compared him to the late Douglas Adams, but then Terry went on to write books as enthusiastically as Douglas avoided writing them, and now, if there is any comparison to be made of anything from the formal rules of a Pratchett novel to the sheer prolific \u0027\u0027fecundity\u0027\u0027 of the man, it might be to P. G. Wodehouse\", \"priority\":3},{\"upperType\":\"NOUN\", \"text\":\"Ability to cause growth\", \"priority\":4},{\"upperType\":\"NOUN\", \"text\":\"Number, rate, or capacity of offspring production\", \"priority\":5},{\"upperType\":\"NOUN\", \"text\":\"Rate of production of young by a female\", \"priority\":6}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	} 	 	public static boolean has(String term) { 		return null != get(term); 	} }