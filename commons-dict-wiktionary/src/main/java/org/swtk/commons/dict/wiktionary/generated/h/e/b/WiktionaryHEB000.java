package org.swtk.commons.dict.wiktionary.generated.h.e.b;  import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryHEB000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("hebdomad", "{\"term\":\"hebdomad\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"ancient greek (to 1453)\"], \"text\":\"From \u0027hebdomas\u0027 () from Ancient greek (to 1453) \u0027ἑβδομάς\u0027 (lang\u003dgrc) from \u0027ἑπτά\u0027 (lang\u003dgrc)\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A group of seven\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"A period of seven days, a week\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"A group of seven superhuman beings\", \"priority\":3}]}, \"synonyms\":{}}");

	add("hebdomadiversary", "{\"term\":\"hebdomadiversary\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"Latin\"], \"text\":\"\u0027\u0027 (hebdomad-) (stem of Latin \u0027hebdomas\u0027 “week”) + English \u0027\u0027 (-versary) (second element of \u0027anniversary\u0027\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A day marking exactly one week since a significant event; a one-week “anniversary”\", \"priority\":1}]}, \"synonyms\":{}}");

	add("hebephrenia", "{\"term\":\"hebephrenia\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"ancient greek (to 1453)\"], \"text\":\"From Ancient greek (to 1453) \u0027ἥβη\u0027 (youthful beauty) (also \u0027ἥβη\u0027 (the goddess w:hebe (mythology)) + \u0027φρήν\u0027 (mind)\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A type of mental disorder occurring during puberty\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"A form of schizophrenia characterised by inappropriate behaviour and emotional responses\", \"priority\":2}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	} 	 	public static boolean has(String term) { 		return null != get(term); 	} }