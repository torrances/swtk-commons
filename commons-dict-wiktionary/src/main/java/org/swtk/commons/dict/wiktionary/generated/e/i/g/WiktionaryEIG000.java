package org.swtk.commons.dict.wiktionary.generated.e.i.g;  import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryEIG000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("eigendirection", "{\"term\":\"eigendirection\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{prefix|eigen|direction|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The space of scalar multiples of an eigenvector\", \"priority\":1}]}, \"synonyms\":{}}");

	add("eigenface", "{\"term\":\"eigenface\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{prefix|eigen|face|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"One of a set of eigenvectors used in face-recognition systems\", \"priority\":1}]}, \"synonyms\":{}}");

	add("eigenfunction", "{\"term\":\"eigenfunction\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{prefix|eigen|function|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A function \u0026lt;math\u0026gt; phi\u0026lt;/math\u0026gt; such that, for a given linear operator \u0026lt;math\u0026gt;D\u0026lt;/math\u0026gt;, \u0026lt;math\u0026gt;D phi\u003d lambda phi\u0026lt;/math\u0026gt; for some scalar \u0026lt;math\u0026gt; lambda\u0026lt;/math\u0026gt; (called an eigenvalue\", \"priority\":1}]}, \"synonyms\":{}}");

	add("eigengrau", "{\"term\":\"eigengrau\", \"etymology\":{\"influencers\":[], \"languages\":[\"German\"], \"text\":\"From German {{m|de|Eigengrau||intrinsic grey}}.\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The dark grey colour seen by the eyes in perfect darkness as a result of signals from the optic nerves\", \"priority\":1}]}, \"synonyms\":{}}");

	add("eigenhead", "{\"term\":\"eigenhead\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{prefix|eigen|head|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"One of a set of eigenvectors used in visual recognition systems to represent a person\u0027s head\", \"priority\":1}]}, \"synonyms\":{}}");

	add("eigenimage", "{\"term\":\"eigenimage\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{prefix|eigen|image|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The set of eigenvectors used by a computer system in the recognition of an image (especially of a face\", \"priority\":1}]}, \"synonyms\":{}}");

	add("eigenmode", "{\"term\":\"eigenmode\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{prefix|eigen|mode|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"One of the normal vibrational modes of an oscillating system\", \"priority\":1}]}, \"synonyms\":{}}");

	add("eigensheaf", "{\"term\":\"eigensheaf\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{prefix|eigen|sheaf|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"Any sheaf whose value is based on an eigenfunction\", \"priority\":1}]}, \"synonyms\":{}}");

	add("eigenspace", "{\"term\":\"eigenspace\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{prefix|eigen|space|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A set of the eigenvectors associated with a particular eigenvalue, together with the zero vector\", \"priority\":1}]}, \"synonyms\":{}}");

	add("eigenstate", "{\"term\":\"eigenstate\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{prefix|eigen|state|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A dynamic quantum mechanical state whose wave function is an eigenvector that corresponds to a physical quantity\", \"priority\":1}]}, \"synonyms\":{}}");

	add("eigenvalue", "{\"term\":\"eigenvalue\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{prefix|eigen|value|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A scalar, \u0026lt;math\u0026gt; lambda !\u0026lt;/math\u0026gt;, such that there exists a vector \u0026lt;math\u0026gt;x\u0026lt;/math\u0026gt; (the corresponding eigenvector) for which the image of \u0026lt;math\u0026gt;x\u0026lt;/math\u0026gt; under a given linear operator \u0026lt;math\u0026gt; rm A !\u0026lt;/math\u0026gt; is equal to the image of \u0026lt;math\u0026gt;x\u0026lt;/math\u0026gt; under multiplication by \u0026lt;math\u0026gt; lambda\u0026lt;/math\u0026gt;; i.e. \u0026lt;math\u0026gt;{ rm A} x \u003d lambda x !\u0026lt;/math\u0026gt\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"The \u0027\u0027eigenvalues\u0027\u0027 \u0026lt;math\u0026gt; lambda !\u0026lt;/math\u0026gt; of a square transformation matrix \u0026lt;math\u0026gt; rm M !\u0026lt;/math\u0026gt; may be found by solving \u0026lt;math\u0026gt; det({ rm M} - lambda { rm I}) \u003d 0 !\u0026lt;/math\u0026gt\", \"priority\":2}]}, \"synonyms\":{}}");

	add("eigenvector", "{\"term\":\"eigenvector\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{prefix|eigen|vector|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A vector that is not rotated under a given linear transformation; a left left or right eigenvector depending on context\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"A right eigenvector; a nonzero vector \u0026lt;math\u0026gt;x\u0026lt;/math\u0026gt; such that, for a particular matrix \u0026lt;math\u0026gt;A\u0026lt;/math\u0026gt;, \u0026lt;math\u0026gt;A x \u003d lambda x\u0026lt;/math\u0026gt; for some scalar \u0026lt;math\u0026gt; lambda\u0026lt;/math\u0026gt; which is its eigenvalue and an eigenvalue of the matrix\", \"priority\":2}]}, \"synonyms\":{}}");

	add("eighties", "{\"term\":\"eighties\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The decade of the 1880s, 1980s, etc\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"1919,\u0027\u0027 Harry Hamilton Johnston, \u0027The Gay-Dombeys: A Novel\u0027, Macmillan, page 172\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"He and his clever staff of minor blackguards exploited to the full every weakness and caries in the London Society of the \u0027\u0027eighties\u0027\u0027, \u0027nineties, and \u0027oughts\", \"priority\":3},{\"upperType\":\"NOUN\", \"text\":\"The decade of one\u0027s life from age 80 through age 89\", \"priority\":4}]}, \"synonyms\":{}}");

	add("eightness", "{\"term\":\"eightness\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{suffix|eight|ness|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The property of being eight in number\", \"priority\":1}]}, \"synonyms\":{}}");

	add("eightpence", "{\"term\":\"eightpence\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{compound|eight|pence|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A former coin worth eight pence\", \"priority\":1}]}, \"synonyms\":{}}");

	add("eightplex", "{\"term\":\"eightplex\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{suffix|eight|plex|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A building divided into eight separate residences or commercial premises\", \"priority\":1}]}, \"synonyms\":{}}");

	add("eights", "{\"term\":\"eights\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A pair of eigh\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"eights\", \"priority\":2}]}, \"synonyms\":{}}");

	add("eightsome", "{\"term\":\"eightsome\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{suffix|eight|some|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A group of eight persons or things\", \"priority\":1}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	} 	 	public static boolean has(String term) { 		return null != get(term); 	} }