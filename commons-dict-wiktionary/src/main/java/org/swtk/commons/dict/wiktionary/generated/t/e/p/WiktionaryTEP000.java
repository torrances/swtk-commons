package org.swtk.commons.dict.wiktionary.generated.t.e.p;  import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryTEP000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("tepal", "{\"term\":\"tepal\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"French\"], \"text\":\"From French \u0027tépale\u0027 from \u0027pétale\u0027 (lang\u003dfr) by transposition.\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"One of the component parts of the perianth, the outermost whorls of flower parts, especially when the perianth is not divided into two whorls of unequal appearance\", \"priority\":1}]}, \"synonyms\":{}}");

	add("tephra", "{\"term\":\"tephra\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"ancient greek (to 1453)\"], \"text\":\"From the Ancient greek (to 1453) \u0027τέφρα\u0027 (ash)\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The solid material thrown into the air by a volcanic eruption that settles on the surrounding areas\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"2004\u0027\u0027, \u0027The Earth\u0027, Folio Society 2011, p. 126\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"The sky would have darkened with sheer volume of ash, the grapes would have withered upon the vine; misfortune would have fallen with the inexorability of volcanic \u0027\u0027tephra\u0027\u0027 upon rich and poor alike\", \"priority\":3},{\"upperType\":\"NOUN\", \"text\":\"2011\u0027\u0027, \u0027The Origin of Our Species\u0027, Penguin 2012, p. 46\", \"priority\":4},{\"upperType\":\"NOUN\", \"text\":\"Over a five-year research period, RESET is correlating \u0027\u0027tephras\u0027\u0027 from their volcanic sources to where they fell in deep ocean and lake sediments, and even further into important archaeological sites in Europe, western Asia and North Africa\", \"priority\":5}]}, \"synonyms\":{}}");

	add("tephroite", "{\"term\":\"tephroite\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"ancient greek (to 1453)\"], \"text\":\"From Ancient greek (to 1453) {{m|grc|τεφρός||ash-coloured}} {{suffix||-ite|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"An orthorhombic-dipyramidal mineral containing manganese, oxygen, and silicon\", \"priority\":1}]}, \"synonyms\":{}}");

	add("tephrosin", "{\"term\":\"tephrosin\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{suffix|Tephrosia|in|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A natural piscicide found in the the leaves and seeds of \u0027Tephrosia purpurea\", \"priority\":1}]}, \"synonyms\":{}}");

	add("tepidity", "{\"term\":\"tepidity\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The property of being tepid\", \"priority\":1}]}, \"synonyms\":{}}");

	add("tepidness", "{\"term\":\"tepidness\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{suffix|tepid|ness|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The property of being tepid\", \"priority\":1}]}, \"synonyms\":{}}");

	add("tepor", "{\"term\":\"tepor\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"lukewarmness, tepidness, moderate warmth\", \"priority\":1}]}, \"synonyms\":{}}");

	add("teprenone", "{\"term\":\"teprenone\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A drug used for the treatment of gastric ulcers\", \"priority\":1}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	} 	 	public static boolean has(String term) { 		return null != get(term); 	} }