package org.swtk.commons.dict.wiktionary.generated.u.n.u;  import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryUNU000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("ununderstanding", "{\"term\":\"ununderstanding\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{prefix|un|understanding|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"Failure to understand; incomprehension\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"1972\u0027\u0027, Paul Ziff, \u0027Understanding understanding\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"But how and why are hard to say or even see. There are cases of \u0027\u0027ununderstanding\u0027\u0027 mediated by the use of special words but this is not apt to be one of them\", \"priority\":3},{\"upperType\":\"NOUN\", \"text\":\"1973\u0027\u0027, Glenn Pearce, Patrick Maynard, \u0027Conceptual change\", \"priority\":4},{\"upperType\":\"NOUN\", \"text\":\"Despite tiresome explications \u0027\u0027ununderstanding\u0027\u0027 may be rife and rampant\", \"priority\":5},{\"upperType\":\"NOUN\", \"text\":\"1975\u0027\u0027, Kenneth Mark Colby, \u0027Artificial paranoia; a computer simulation of paranoid processes\", \"priority\":6},{\"upperType\":\"NOUN\", \"text\":\"Since the main problem in the default condition of \u0027\u0027ununderstanding\u0027\u0027 is how to continue, PARRY employs heuristics such as changing the level of the dialogue and asking about the interviewer\u0027s intention\", \"priority\":7}]}, \"synonyms\":{}}");

	add("unununium", "{\"term\":\"unununium\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"Latin\"], \"text\":\"Systematic name, literally \u0026quot;element 111\u0026quot; from \u0027un-\u0027 from Latin \u0027Å«nus\u0027 (lang\u003dla) + \u0027\u0027 () + \u0027\u0027 () + \u0027-ium\u0027\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"Roentgenium\", \"priority\":1}]}, \"synonyms\":{}}");

	add("unusualness", "{\"term\":\"unusualness\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{suffix|unusual|ness|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The state or condition of being unusual\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"Herman Melville, \u0027Pierre: or, The Ambiguities\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"The pale, inscrutable determinateness, and flinchless intrepidity of Pierre, now began to domineer upon them; for any social \u0027\u0027unusualness\u0027\u0027 or greatness is sometimes most impressive in the retrospect\", \"priority\":3},{\"upperType\":\"NOUN\", \"text\":\"Something unusual; an aberration\", \"priority\":4}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	} 	 	public static boolean has(String term) { 		return null != get(term); 	} }