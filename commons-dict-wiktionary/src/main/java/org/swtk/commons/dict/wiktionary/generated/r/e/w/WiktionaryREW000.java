package org.swtk.commons.dict.wiktionary.generated.r.e.w;  import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryREW000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("rework", "{\"term\":\"rework\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{prefix|re|work|lang\u003den}}.\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The act of redoing, correcting, or rebuilding\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"They sent the assembly back to the shop for \u0027\u0027rework\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"Taking unsaleable food and using it in the manufacture of other food\", \"priority\":3},{\"upperType\":\"NOUN\", \"text\":\"Something redone, corrected or rebuilt\", \"priority\":4},{\"upperType\":\"NOUN\", \"text\":\"They received the \u0027\u0027rework\u0027\u0027 back from the shop\", \"priority\":5},{\"upperType\":\"NOUN\", \"text\":\"Work done to correct defects associated with a deliverable product, plus any root cause analysis effort to identify the task(s) to be re-performed\", \"priority\":6},{\"upperType\":\"NOUN\", \"text\":\"The schedule has been pushed back because of the \u0027\u0027rework\", \"priority\":7},{\"upperType\":\"NOUN\", \"text\":\"An instance of reworking\", \"priority\":8}]}, \"synonyms\":{}}");

	add("rewrite", "{\"term\":\"rewrite\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{prefix|re|write|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The act of writing again or anew\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"Something that has been written again\", \"priority\":2}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	} 	 	public static boolean has(String term) { 		return null != get(term); 	} }