package org.swtk.commons.dict.wiktionary.generated.j.i.f;  import java.util.Collection; import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryJIF000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("jiff", "{\"term\":\"jiff\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"\u0027\u0027\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A jiffy; a moment; a short time\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"2009\u0027\u0027, David Jerome, \u0027Roastbeef\u0027s Promise\u0027 (page 42\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"A lady\u0027s voice answered, “Be out in a \u0027\u0027jiff\u0027\u0027.”\", \"priority\":3}]}, \"synonyms\":{}}");

	add("jiffy", "{\"term\":\"jiffy\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A very short, unspecified length of time\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"title\u003d[http://openlibrary.org/works/OL5535161W Mr. Pratt\u0027s passage\u003dOld Applegate, in the stern, just set and looked at me, and Lord James, amidship, waved both arms and kept hollering for help. I took a couple of everlasting big strokes and managed to grab hold of the skiff\u0027s rail, close to the stern. Then, for a \u0027\u0027jiffy\u0027\u0027, I hung on and fought for breath\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"A unit of time defined by the frequency of its basic timer; historically, and by convention, 0.01 seconds, but some operating systems use other values\", \"priority\":3},{\"upperType\":\"NOUN\", \"text\":\"The length of an alternating current power cycle (1/60 or 1/50 of a second\", \"priority\":4},{\"upperType\":\"NOUN\", \"text\":\"The time taken for light to travel one centimetre in a vacuum (sometimes one foot, or sometimes the width of a nucleon\", \"priority\":5}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	}  	public static boolean has(String term) { 		return null != get(term); 	}  	public static Collection<String> terms() { 		return map.keySet(); 	} }