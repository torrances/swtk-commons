package org.swtk.commons.dict.wiktionary.generated.o.m.e;  import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryOME000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("omen", "{\"term\":\"omen\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"Latin\"], \"text\":\"From Latin \u0027omen|lang\u003dla\u0027 () \u0026lt;!-- Century 1911: futher from Latin \u0027os\u0027 () + \u0027\u0027 Merrian and Webster online and Online Etymology Dictionary disagree. --\u0026gt;\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"Something which portends or is perceived to portend a good or evil event or circumstance in the future; an augury or foreboding\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"the ghost\u0027s appearance was an ill \u0027\u0027omen\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"a rise in imports might be an \u0027\u0027omen\u0027\u0027 of recovery\", \"priority\":3},{\"upperType\":\"NOUN\", \"text\":\"the egg has, during the span of history, represented mystery, magic, medicine, food and \u0027\u0027omen\", \"priority\":4},{\"upperType\":\"NOUN\", \"text\":\"1856\u0027\u0027, , Part III Chapter X, translated by Eleanor Marx-Avelin\", \"priority\":5},{\"upperType\":\"NOUN\", \"text\":\"Day broke. He saw three black hens asleep in a tree. He shuddered, horrified at this \u0027\u0027omen\u0027\u0027. Then he promised the Holy Virgin three chasubles for the church, and that he would go barefooted from the cemetery at Bertaux to the chapel of Vassonville\", \"priority\":6},{\"upperType\":\"NOUN\", \"text\":\"prophetic significanc\", \"priority\":7},{\"upperType\":\"NOUN\", \"text\":\"a sign of ill \u0027\u0027omen\", \"priority\":8}]}, \"synonyms\":{}}");

	add("omer", "{\"term\":\"omer\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"Hebrew\"], \"text\":\"From Hebrew \u0027עמר\u0027 (sheaf)\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A dry measure of ancient Israel, one tenth of an ephah\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"1611\u0027\u0027, \u0027Bible\u0027, Authorized (King James) Version, Exodus XVI\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"And it came to pass, that on the sixth day they gathered twice as much bread, two \u0027\u0027omers\u0027\u0027 for one man: and all the rulers of the congregation came and told Moses\", \"priority\":3},{\"upperType\":\"NOUN\", \"text\":\"1644\u0027\u0027, \u0027Aeropagitica\", \"priority\":4},{\"upperType\":\"NOUN\", \"text\":\"that \u0027\u0027Omer\u0027\u0027 which was every mans daily portion of Manna, is computed to have bin more then might have well suffic\u0027d the heartiest feeder thrice as many meals\", \"priority\":5}]}, \"synonyms\":{}}");

	add("omeprazole", "{\"term\":\"omeprazole\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"Origin uncertain; the OED suggests \u0027oxy-\u0027 + \u0027methyl-\u0027 + \u0027pyridine\u0027 + \u0027imidazole\u0027 + \u0027indole\u0027\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A benzimidazole, C\u0026lt;sub\u0026gt;17\u0026lt;/sub\u0026gt;H\u0026lt;sub\u0026gt;19\u0026lt;/sub\u0026gt;N\u0026lt;sub\u0026gt;3\u0026lt;/sub\u0026gt;O\u0026lt;sub\u0026gt;3\u0026lt;/sub\u0026gt;S, which is a proton pump inhibitor, taken to prevent the secretion of gastric acid\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"2001\u0027\u0027: The first successful drug of this class was \u0027\u0027omeprazole\u0027\u0027 (sold under the trade name Losec®), and it helped to change the medium-sized Swedish pharmaceutical company Astra, which discovered it, into a major player in the pharmaceutical industry. — Leslie Iversen, \u0027Drugs: A Very Short Introduction\u0027 (Oxford 2001, p. 46\", \"priority\":2}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	} 	 	public static boolean has(String term) { 		return null != get(term); 	} }