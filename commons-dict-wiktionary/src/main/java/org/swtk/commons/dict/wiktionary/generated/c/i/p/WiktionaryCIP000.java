package org.swtk.commons.dict.wiktionary.generated.c.i.p;  import java.util.Collection; import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryCIP000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("cipher", "{\"term\":\"cipher\", \"etymology\":{\"influencers\":[], \"languages\":[\"Arabic\", \"English\", \"old french (842-ca. 1400)\"], \"text\":\"14th century. From Old french (842-ca. 1400) \u0027cyfre, cyffre\u0027 (French \u0027chiffre\u0027), ultimately from Arabic \u0027صِفْر\u0027 (zero, empty) from \u0027صَفَرَ\u0027 (to be empty) Compare \u0027zero\u0027. Sense 9 may be a different word.\u0026lt;ref\u0026gt;Cipher. (n.d.). In the \u0027New Oxford American Dictionary\u0027.\u0026lt;/ref\u0026gt;\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A numeric character\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"Any text character\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"Sir Walter Raleig\", \"priority\":3},{\"upperType\":\"NOUN\", \"text\":\"This wisdom began to be written in \u0027\u0027ciphers\u0027\u0027 and characters and letters bearing the forms of creatures\", \"priority\":4},{\"upperType\":\"NOUN\", \"text\":\"A combination or interweaving of letters, as the initials of a name; a device; a monogram\", \"priority\":5},{\"upperType\":\"NOUN\", \"text\":\"a painter\u0027s \u0027\u0027cipher\u0027\u0027, an engraver\u0027s \u0027\u0027cipher\u0027\u0027, etc\", \"priority\":6},{\"upperType\":\"NOUN\", \"text\":\"A method of transforming a text in order to conceal its meaning\", \"priority\":7},{\"upperType\":\"NOUN\", \"text\":\"The message was written in a simple \u0027\u0027cipher\u0027\u0027. Anyone could figure it out\", \"priority\":8},{\"upperType\":\"NOUN\", \"text\":\"Bishop Burne\", \"priority\":9},{\"upperType\":\"NOUN\", \"text\":\"His father engaged him when he was very young to write all his letters to England in \u0027\u0027cipher\", \"priority\":10},{\"upperType\":\"NOUN\", \"text\":\"A cryptographic system using an algorithm that converts letters or sequences of bits into ciphertext\", \"priority\":11},{\"upperType\":\"NOUN\", \"text\":\"Ciphertext; a message concealed via a \u0027\u0027cipher\", \"priority\":12},{\"upperType\":\"NOUN\", \"text\":\"The message is clearly a \u0027\u0027cipher\u0027\u0027, but I can\u0027t figure it out\", \"priority\":13},{\"upperType\":\"NOUN\", \"text\":\"A grouping of three digits in a number, especially when delimited by commas or periods\", \"priority\":14},{\"upperType\":\"NOUN\", \"text\":\"The probability is 1 in 1,000,000,000,000,000 \u0026amp;mdash; a number having five \u0027\u0027ciphers\u0027\u0027 of zeros\", \"priority\":15},{\"upperType\":\"NOUN\", \"text\":\"A design of interlacing initials: a decorative design consisting of a set of interlaced initials. \u0026lt;!-- Taken from http://www.archivists.org/glossary/term_details.asp?DefinitionKey\u003d181 Do we have permission? --\u0026gt\", \"priority\":16},{\"upperType\":\"NOUN\", \"text\":\"A fault in an organ valve which causes a pipe to sound continuously without the key having been pressed\", \"priority\":17},{\"upperType\":\"NOUN\", \"text\":\"A hip-hop jam session [http://www.rapdict.org/Cipher\", \"priority\":18},{\"upperType\":\"NOUN\", \"text\":\"The path (usually circular) shared cannabis takes through a group, an occasion of cannabis smoking\", \"priority\":19},{\"upperType\":\"NOUN\", \"text\":\"Someone or something of no importance\", \"priority\":20},{\"upperType\":\"NOUN\", \"text\":\"Washington Irvin\", \"priority\":21},{\"upperType\":\"NOUN\", \"text\":\"Here he was a mere \u0027\u0027cipher\", \"priority\":22}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	}  	public static boolean has(String term) { 		return null != get(term); 	}  	public static Collection<String> terms() { 		return map.keySet(); 	} }