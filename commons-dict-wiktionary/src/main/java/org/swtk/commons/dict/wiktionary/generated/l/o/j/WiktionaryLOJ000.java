package org.swtk.commons.dict.wiktionary.generated.l.o.j;  import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryLOJ000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("lojban", "{\"term\":\"lojban\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"lojban\"], \"text\":\"From Lojban \u0027lang\u003djbo\u0027 from rafsi \u0027loj\u0027 (\u0027lang\u003djbo|logji\u0027 () + \u0027ban\u0027 (\u0027lang\u003djbo|bangu\u0027 ()\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"An artificial language designed to be logical, based on the earlier Loglan\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"It might make more aesthetic sense to display and read Lojban text in monospaced fonts, since, for example, the length of gismu is always five letters, and the length of non-trivial rafsi is always three letters. Then the monospaced letters may be reminiscent of the tesserae which compose an abstract mosaic\", \"priority\":2}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	} 	 	public static boolean has(String term) { 		return null != get(term); 	} }