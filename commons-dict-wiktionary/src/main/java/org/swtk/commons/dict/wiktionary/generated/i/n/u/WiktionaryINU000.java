package org.swtk.commons.dict.wiktionary.generated.i.n.u;  import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryINU000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("inulin", "{\"term\":\"inulin\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{suffix|inula|in|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"a polysaccharide found in the roots and tubers of certain plants, especially the Compositae; it is mostly a polymer of fructose\", \"priority\":1}]}, \"synonyms\":{}}");

	add("inulinase", "{\"term\":\"inulinase\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{suffix|inulin|ase|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"An enzyme, 1-beta-D-fructan fructanohydrolase, that catalyses the endohydrolysis of (2-\u0026gt;1)-beta-D-fructosidic linkages in inulin\", \"priority\":1}]}, \"synonyms\":{}}");

	add("inunction", "{\"term\":\"inunction\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"Latin\"], \"text\":\"From Latin \u0027inunctio\u0027 () from \u0027inunctus\u0027 () past participle of \u0027inungo\u0027 (lang\u003dla) from \u0027in-\u0027 () + \u0027ungo\u0027 (lang\u003dla) from Proto-indo-european {{m|ine-pro|*h₃engʷ-||anoint}}.\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The anointing or rubbing in of oil or balm\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"II.5.3.i\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"Besides these fomentations, irrigations, \u0027\u0027inunctions\u0027\u0027, odoraments, prescribed for the head, there must be the like used for the liver, spleen, stomach, hyperchondries, etc\", \"priority\":3}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	} 	 	public static boolean has(String term) { 		return null != get(term); 	} }