package org.swtk.commons.dict.wiktionary.generated.b.i.f;  import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryBIF000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("biff", "{\"term\":\"biff\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A sudden, sharp blow or punch\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"A wipeout\", \"priority\":2}]}, \"synonyms\":{}}");

	add("bifurcation", "{\"term\":\"bifurcation\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"From {{suffix|bifurcate|ion|lang\u003den}}.\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A division into two branches\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"Any place where one thing divides into two\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"The act of bifurcating; branching or dividing in two\", \"priority\":3},{\"upperType\":\"NOUN\", \"text\":\"Either of the forks or other branches resultant from such a division\", \"priority\":4},{\"upperType\":\"NOUN\", \"text\":\"A place where two roads, tributaries etc. part or meet\", \"priority\":5},{\"upperType\":\"NOUN\", \"text\":\"The point where a channel divides when proceeding from seaward\", \"priority\":6},{\"upperType\":\"NOUN\", \"text\":\"The change in the qualitative or topological structure of a given family as decribed by bifurcation theory\", \"priority\":7},{\"upperType\":\"NOUN\", \"text\":\"A command that executes one block or other of commands depending on the result of a condition\", \"priority\":8}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	} 	 	public static boolean has(String term) { 		return null != get(term); 	} }