package org.swtk.commons.dict.wiktionary.generated.e.v.a;  import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryEVA000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("evadee", "{\"term\":\"evadee\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{suffix|evade|ee|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"Someone who evades\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"Someone who evades capture, particularly military personnel in enemy or neutral territory\", \"priority\":2}]}, \"synonyms\":{}}");

	add("evaluatee", "{\"term\":\"evaluatee\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{suffix|evaluate|ee|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"One who is evaluate\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"Evaluatees\u0027\u0027 are judged based on the assigned criteria\", \"priority\":2}]}, \"synonyms\":{}}");

	add("evaluativist", "{\"term\":\"evaluativist\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"From {{suffix|evaluative|ist|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A person who believes in or advocates evaluativism\", \"priority\":1}]}, \"synonyms\":{}}");

	add("evaluator", "{\"term\":\"evaluator\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{suffix|evaluate|or|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"agent Agent noun of evaluate; one who evaluates\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"They were asked to program an expression \u0027\u0027evaluator\u0027\u0027 that could determine the value of a numeric expression\", \"priority\":2}]}, \"synonyms\":{}}");

	add("evansite", "{\"term\":\"evansite\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{suffix|Evans|ite|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"An amorphous mineral containing aluminum, hydrogen, oxygen, and phosphorus\", \"priority\":1}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	} 	 	public static boolean has(String term) { 		return null != get(term); 	} }