package org.swtk.commons.dict.wiktionary.generated.n.o.b;  import java.util.Collection; import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryNOB000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("nobelium", "{\"term\":\"nobelium\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"Named for w:Alfred Nobel|Alfred Nobel.\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"a transuranic chemical element (\u0027symbol\u0027 No) with an atomic number of 102\", \"priority\":1}]}, \"synonyms\":{}}");

	add("nobilin", "{\"term\":\"nobilin\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A sesquiterpene lactone found in \u0027Dendrobium nobile\", \"priority\":1}]}, \"synonyms\":{}}");

	add("nobility", "{\"term\":\"nobility\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"old french (842-ca. 1400)\", \"Latin\"], \"text\":\"From Old french (842-ca. 1400) \u0027nobilite\u0027 from Latin \u0027nobilitas\u0027\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A noble or privileged social class, historically accompanied by a hereditary title; aristocracy\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"The quality of being noble\", \"priority\":2}]}, \"synonyms\":{}}");

	add("nobleman", "{\"term\":\"nobleman\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A peer; an aristocrat; ranks range from baron to king to emperor\", \"priority\":1}]}, \"synonyms\":{}}");

	add("nobleness", "{\"term\":\"nobleness\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{suffix|noble|ness|lang\u003den}} plural\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The quality or state of being noble; nobility or grandeur\", \"priority\":1}]}, \"synonyms\":{}}");

	add("noblesse", "{\"term\":\"noblesse\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"old french (842-ca. 1400)\", \"anglo-norman\"], \"text\":\"From Anglo-norman \u0027noblesse\u0027 \u0027\u0027 et al., Old french (842-ca. 1400) \u0027noblace\u0027 \u0027\u0027 et al., from \u0027noble\u0027 ()\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"The quality of being noble; nobleness\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"c. 1395\u0027\u0027, ‘The Clerk\u0027s Tale’, \u0027\u0027, Ellesmere ms\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"I yow took/ out of youre pouere array / And putte yow / in estaat of heigh \u0027\u0027noblesse\", \"priority\":3},{\"upperType\":\"NOUN\", \"text\":\"his moder had discouerd in her pryde / how she had wroughte that by enchauntement / soo that he shold neuer be hole vntyl the best knyghte of the world had serched his woundes // And yf I fayle to hele hym here in this land I wylle neuer take more payne vpon me / and that is pyte for he was a good knyghte and of grete \u0027\u0027noblenes\u0027\u0027\u0026lt;!--Prior quote:‘I woll never take more payne uppon me – and that ys grete pite, for he was a good knyght and of grete \u0027\u0027nobeles\u0027\u0027.’--\u0026gt\", \"priority\":4},{\"upperType\":\"NOUN\", \"text\":\"The nobility; peerage\", \"priority\":5},{\"upperType\":\"NOUN\", \"text\":\"1590\u0027\u0027, \u0027\u0027, I.8\", \"priority\":6},{\"upperType\":\"NOUN\", \"text\":\"Faire braunch of \u0027\u0027noblesse\u0027\u0027, flowre of cheualrie, / That with your worth the world amazed make, / How shall I quite the paines, ye suffer for my sake\", \"priority\":7}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	}  	public static boolean has(String term) { 		return null != get(term); 	}  	public static Collection<String> terms() { 		return map.keySet(); 	} }