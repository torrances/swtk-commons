package org.swtk.commons.dict.wiktionary.generated.a.p.l;  import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryAPL000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("apler", "{\"term\":\"apler\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{suffix|APL|er|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A programmer who uses APL\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"1984\u0027\u0027, \u0027Byte\u0027 magazin\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"his disappointment that APL was not chosen over BASIC as IBM\u0027s premier language for the PC. Having established his credentials as an \u0027\u0027APLer\u0027\u0027, though\", \"priority\":3},{\"upperType\":\"NOUN\", \"text\":\"1985\u0027\u0027, Lib Gibson, Joshua S Levine, Robert C Metzger, \u0027Application systems in APL: how to build them right‎\", \"priority\":4},{\"upperType\":\"NOUN\", \"text\":\"This leaves two situations not covered \u0026amp;mdash; the repetitive task being done by an \u0027\u0027APLer\u0027\u0027, and the highly unstructured task\", \"priority\":5},{\"upperType\":\"NOUN\", \"text\":\"1986\u0027\u0027, SHARE, \u0027Proceedings: SEAS Spring Meeting 1986\", \"priority\":6},{\"upperType\":\"NOUN\", \"text\":\"This means that \u0027\u0027APLers\u0027\u0027 can take great strides in moving APL applications towards the machine efficiencies\", \"priority\":7},{\"upperType\":\"NOUN\", \"text\":\"1995\u0027\u0027, IEEE, \u0027Computer and Control Abstracts‎\", \"priority\":8},{\"upperType\":\"NOUN\", \"text\":\"It is hoped that these transliteration programs have paved the way for communication among \u0027\u0027APLers\u0027\u0027 to roll forward on the information superhighway\", \"priority\":9}]}, \"synonyms\":{}}");

	add("aplysia", "{\"term\":\"aplysia\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{rfe|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"Any sea slug of the genus\", \"priority\":1}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	} 	 	public static boolean has(String term) { 		return null != get(term); 	} }