package org.swtk.commons.dict.wiktionary.generated.s.a.y;  import java.util.Collection; import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionarySAY000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("sayable", "{\"term\":\"sayable\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"From {{suffix|say|able|lang\u003den}}.\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"That which can be said\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"2015\u0027\u0027, ‘Diary’, \u0027London Review of Books\u0027, vol. 38, no. 12\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"Rimbaud is the enfant terrible who burns through the \u0027\u0027sayable\u0027\u0027; Oppen is the poet of the left whose quiet is a sign of commitment\", \"priority\":3}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	}  	public static boolean has(String term) { 		return null != get(term); 	}  	public static Collection<String> terms() { 		return map.keySet(); 	} }