package org.swtk.commons.dict.wiktionary.generated.a.i.b;  import java.util.Collection; import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryAIB000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("aibohphobia", "{\"term\":\"aibohphobia\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"Deliberately constructed to be a palindrome, combining the suffix \u0027-phobia\u0027 with its reversed spelling.\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"An irrational fear of palindromes\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"1983\u0027\u0027. Author unknown. \u0027Science Digest\u0027, page 10\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"The article was a disservice to those of us who are unfortunate enough to be afflicted with \u0027\u0027aibohphobia\", \"priority\":3},{\"upperType\":\"NOUN\", \"text\":\"1997\u0027\u0027. Richard Lederer. \u0027The Word Circus: A Letter-perfect Book\u0027, page 6\", \"priority\":4},{\"upperType\":\"NOUN\", \"text\":\"We trust that we\u0027ve relieved any \u0027\u0027Aibohphobia\u0027\u0027, any fear of palindromes that you might have harbored\", \"priority\":5},{\"upperType\":\"NOUN\", \"text\":\"2004\u0027\u0027. Peter Seddon. \u0027Football Talk: The Language and Folklore of the World\u0027s Greatest Game\u0027, page 26\", \"priority\":6},{\"upperType\":\"NOUN\", \"text\":\"If you suffer from \u0027\u0027aibohphobia\u0027\u0027 (fear of palindromes) you should skip a few pages while the rest of us go in search ofCategory:English palindromes\", \"priority\":7}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	}  	public static boolean has(String term) { 		return null != get(term); 	}  	public static Collection<String> terms() { 		return map.keySet(); 	} }