package org.swtk.commons.dict.wiktionary.generated.n.a.u;  import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryNAU000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("naujakasite", "{\"term\":\"naujakasite\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{suffix|Naujakasik|ite|lang\u003den}}{{rfp|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A mineral comprising mostly oxygen, silicon, aluminium, and sodium\", \"priority\":1}]}, \"synonyms\":{}}");

	add("nautch", "{\"term\":\"nautch\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"From Hindustani \u0027नाच\u0027 / \u0027ناچ\u0027\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A dance in South Asia, performed by professional dancing girls\", \"priority\":1}]}, \"synonyms\":{}}");

	add("nautilus", "{\"term\":\"nautilus\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"ancient greek (to 1453)\", \"Latin\"], \"text\":\"From Latin \u0027nautilus\u0027 from Ancient greek (to 1453) \u0027ναυτίλος\u0027 (paper nautilus, sailor)\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A marine mollusc, of the family \u0027\u0027 native to the Pacific Ocean and Indian Ocean, which has tentacles and a spiral shell with a series of air-filled chambers, of which is the type genus\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"1956\u0027\u0027 — , \u0027The City and the Stars\u0027, p 4\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"He was still prepared to go on collecting all that life could offer, like a chambered \u0027\u0027nautilus\u0027\u0027 patiently adding new cells to its slowly expanding spiral\", \"priority\":3}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	} 	 	public static boolean has(String term) { 		return null != get(term); 	} }