package org.swtk.commons.dict.wiktionary.generated.n.a.u;  import java.util.Collection; import java.util.HashMap; import java.util.Map;  import org.swtk.common.dict.dto.wiktionary.Entry;  import com.trimc.blogger.commons.utils.GsonUtils;  public class WiktionaryNAU000 {  	private static Map<String, Entry> map = new HashMap<String, Entry>();  	static { 			add("naujakasite", "{\"term\":\"naujakasite\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{suffix|Naujakasik|ite|lang\u003den}}{{rfp|lang\u003den}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A mineral comprising mostly oxygen, silicon, aluminium, and sodium\", \"priority\":1}]}, \"synonyms\":{}}");

	add("naupactus", "{\"term\":\"naupactus\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A town in Greece located in the southeastern part of the Aitolia-Akarnania prefecture\", \"priority\":1}]}, \"synonyms\":{}}");

	add("naupathia", "{\"term\":\"naupathia\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"From Greek ναυς (\u0027naus\u0027) ‘ship’ and πάθος (\u0027pathos\u0027) ‘suffering’.\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"pl2\u003dnaupathiae}}--\u0026gt\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"seasickness\", \"priority\":2}]}, \"synonyms\":{}}");

	add("nauplius", "{\"term\":\"nauplius\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"{{rfe|lang\u003dmul}}\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A son of the god Poseidon by Amymone, daughter of Danaus, and founder of the city of Nauplia\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"A descendant of the founder of Nauplia who ruled the city (alternatively, Euboea), was one of the Argonauts, and was father to Palamedes, who fought in the Trojan War\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"2003\u0027\u0027, Giovanni Boccaccio, Virginia Brown (translator), \u0027Famous Women\u0027, [http://books.google.com.au/books?id\u003d3Nj04ULC0s8C\u0026amp;pg\u003dPA81\u0026amp;dq\u003d%22nauplius%22\u0026amp;hl\u003den\u0026amp;sa\u003dX\u0026amp;ei\u003dXkTMUZyIHOPdigfN9ICgDA\u0026amp;redir_esc\", \"priority\":3},{\"upperType\":\"NOUN\", \"text\":\"v\u003donepage\u0026amp;q\u003d%22nauplius%22\u0026amp;f\u003dfalse page 81\", \"priority\":4},{\"upperType\":\"NOUN\", \"text\":\"But according to Lycophron, the last of the Greek poets, Penelope committed adultery with one of the suitors at the persuasion of the aged \u0027\u0027Nauplius\u0027\u0027, who avenged the death of his son Palamedes by enticing almost all the wives of the Greeks into prostitution\", \"priority\":5},{\"upperType\":\"NOUN\", \"text\":\"2013\u0027\u0027, Isabelle Torrance, \u0027Metapoetry in Euripides\u0027, [http://books.google.com.au/books?id\u003d1x3HlgTPlrkC\u0026amp;pg\u003dPA145\u0026amp;dq\u003d%22nauplius%22\u0026amp;hl\u003den\u0026amp;sa\u003dX\u0026amp;ei\u003dQjfMUeavCeTUigeruoGQBA\u0026amp;redir_esc\", \"priority\":6},{\"upperType\":\"NOUN\", \"text\":\"v\u003donepage\u0026amp;q\u003d%22nauplius%22\u0026amp;f\u003dfalse page 145\", \"priority\":7},{\"upperType\":\"NOUN\", \"text\":\"A scene from Aristophanes\u0027 \u0027Women at the Thesmophoria\u0027 (765-84) preserves a parody of the event which featured Palamedes\u0027 brother Oeax writing a message on oars in the hope that one will reach his father \u0027\u0027Nauplius\u0027\u0027 with news of the betrayal and murder\", \"priority\":8}]}, \"synonyms\":{}}");

	add("nauru", "{\"term\":\"nauru\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"Nauruan\"], \"text\":\"Possibly from Nauruan \u0027anáoero\u0027 (i go to the beach)\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A country in Oceania. Official name: Republic of Nauru\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"The island on which the country is located\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"Nauruan, the language of Nauru\", \"priority\":3}]}, \"synonyms\":{}}");

	add("nauruan", "{\"term\":\"nauruan\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A person from Nauru or of Nauruan descent\", \"priority\":1}]}, \"synonyms\":{}}");

	add("nausicaa", "{\"term\":\"nausicaa\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"ancient greek (to 1453)\"], \"text\":\"From Ancient greek (to 1453) {{m|grc|Ναυσικάα}}.\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A princess who aids Odysseus\", \"priority\":1}]}, \"synonyms\":{}}");

	add("nautch", "{\"term\":\"nautch\", \"etymology\":{\"influencers\":[], \"languages\":[], \"text\":\"From Hindustani \u0027नाच\u0027 / \u0027ناچ\u0027\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A dance in South Asia, performed by professional dancing girls\", \"priority\":1}]}, \"synonyms\":{}}");

	add("nautilus", "{\"term\":\"nautilus\", \"etymology\":{\"influencers\":[], \"languages\":[\"English\", \"ancient greek (to 1453)\", \"Latin\"], \"text\":\"From Latin \u0027nautilus\u0027 from Ancient greek (to 1453) \u0027ναυτίλος\u0027 (paper nautilus, sailor)\"}, \"definitions\":{\"list\":[{\"upperType\":\"NOUN\", \"text\":\"A marine mollusc, of the family \u0027\u0027 native to the Pacific Ocean and Indian Ocean, which has tentacles and a spiral shell with a series of air-filled chambers, of which is the type genus\", \"priority\":1},{\"upperType\":\"NOUN\", \"text\":\"1956\u0027\u0027 — , \u0027The City and the Stars\u0027, p 4\", \"priority\":2},{\"upperType\":\"NOUN\", \"text\":\"He was still prepared to go on collecting all that life could offer, like a chambered \u0027\u0027nautilus\u0027\u0027 patiently adding new cells to its slowly expanding spiral\", \"priority\":3}]}, \"synonyms\":{}}");

 	}  	private static void add(String term, String json) { 		map.put(term, GsonUtils.toObject(json, Entry.class)); 	}  	public static Entry get(String term) { 		return map.get(term); 	}  	public static boolean has(String term) { 		return null != get(term); 	}  	public static Collection<String> terms() { 		return map.keySet(); 	} }