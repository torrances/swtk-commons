package org.swtk.commons.dict.wordnet.indexbyid.instance.p1.p0;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance1051 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("10510006", "{\"term\":\"publican\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10510006\"]}");
	add("10510006", "{\"term\":\"tavern keeper\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10510006\"]}");
	add("10510142", "{\"term\":\"public defender\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10510142\"]}");
	add("10510284", "{\"term\":\"publiciser\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10510284\"]}");
	add("10510284", "{\"term\":\"publicist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10510284\"]}");
	add("10510284", "{\"term\":\"publicizer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10510284\"]}");
	add("10510550", "{\"term\":\"public relations person\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10510550\"]}");
	add("10510721", "{\"term\":\"public servant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10510721\"]}");
	add("10510894", "{\"term\":\"publisher\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10511160\", \"10510894\", \"08079459\"]}");
	add("10511160", "{\"term\":\"newspaper publisher\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08079806\", \"10511160\"]}");
	add("10511160", "{\"term\":\"publisher\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10511160\", \"10510894\", \"08079459\"]}");
	add("10511454", "{\"term\":\"puddler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10511454\"]}");
	add("10511583", "{\"term\":\"pudge\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10511583\"]}");
	add("10511671", "{\"term\":\"puerpera\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10511671\"]}");
	add("10511787", "{\"term\":\"dragger\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04483351\", \"10511787\"]}");
	add("10511787", "{\"term\":\"puller\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10511787\", \"10512032\"]}");
	add("10511787", "{\"term\":\"tugger\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10511787\"]}");
	add("10512032", "{\"term\":\"puller\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10511787\", \"10512032\"]}");
	add("10512212", "{\"term\":\"puncher\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04029643\", \"10512212\", \"09992191\"]}");
	add("10512312", "{\"term\":\"punching bag\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04030356\", \"10512312\"]}");
	add("10512479", "{\"term\":\"punk\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"07079780\", \"10512479\", \"15126153\", \"15126290\", \"10203700\"]}");
	add("10512479", "{\"term\":\"punk rocker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10512479\"]}");
	add("10512678", "{\"term\":\"punster\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10512678\"]}");
	add("10512784", "{\"term\":\"punter\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"09871284\", \"10512784\", \"10513004\"]}");
	add("10513004", "{\"term\":\"punter\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"09871284\", \"10512784\", \"10513004\"]}");
	add("10513113", "{\"term\":\"puppet leader\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10513113\"]}");
	add("10513113", "{\"term\":\"puppet ruler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10513113\"]}");
	add("10513270", "{\"term\":\"puppeteer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10513270\"]}");
	add("10513420", "{\"term\":\"pup\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10513420\", \"01324834\"]}");
	add("10513420", "{\"term\":\"puppy\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10513420\", \"01325095\"]}");
	add("10513507", "{\"term\":\"purchasing agent\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10513507\"]}");
	add("10513622", "{\"term\":\"purist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10513622\"]}");
	add("10513780", "{\"term\":\"puritan\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10506611\", \"10513780\", \"10513958\"]}");
	add("10513958", "{\"term\":\"puritan\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10506611\", \"10513780\", \"10513958\"]}");
	add("10514228", "{\"term\":\"purser\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10514228\"]}");
	add("10514363", "{\"term\":\"chased\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10514363\"]}");
	add("10514363", "{\"term\":\"pursued\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10514363\"]}");
	add("10514520", "{\"term\":\"chaser\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07899835\", \"10514520\"]}");
	add("10514520", "{\"term\":\"pursuer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10514752\", \"10514520\"]}");
	add("10514752", "{\"term\":\"pursuer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10514752\", \"10514520\"]}");
	add("10514884", "{\"term\":\"purveyor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10514884\"]}");
	add("10515006", "{\"term\":\"pusher\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"02769539\", \"04034182\", \"10515006\", \"10515140\", \"10515341\"]}");
	add("10515006", "{\"term\":\"shover\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10515006\"]}");
	add("10515140", "{\"term\":\"drug dealer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10515140\"]}");
	add("10515140", "{\"term\":\"drug peddler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10515140\"]}");
	add("10515140", "{\"term\":\"drug trafficker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10515140\"]}");
	add("10515140", "{\"term\":\"peddler\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10515140\", \"10431296\"]}");
	add("10515140", "{\"term\":\"pusher\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"02769539\", \"04034182\", \"10515006\", \"10515140\", \"10515341\"]}");
	add("10515341", "{\"term\":\"pusher\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"02769539\", \"04034182\", \"10515006\", \"10515140\", \"10515341\"]}");
	add("10515341", "{\"term\":\"thruster\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04437739\", \"10515341\"]}");
	add("10515465", "{\"term\":\"pushover\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00576402\", \"10515465\"]}");
	add("10515560", "{\"term\":\"pussycat\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02124950\", \"10515560\"]}");
	add("10515666", "{\"term\":\"putter\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04034550\", \"10515666\"]}");
	add("10515778", "{\"term\":\"potterer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10515778\"]}");
	add("10515778", "{\"term\":\"putterer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10515778\"]}");
	add("10515978", "{\"term\":\"putz\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05534354\", \"10515978\"]}");
	add("10516074", "{\"term\":\"pigmy\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10516074\", \"10516211\"]}");
	add("10516074", "{\"term\":\"pygmy\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10516074\", \"10516211\"]}");
	add("10516211", "{\"term\":\"pigmy\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10516074\", \"10516211\"]}");
	add("10516211", "{\"term\":\"pygmy\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10516074\", \"10516211\"]}");
	add("10516300", "{\"term\":\"pyrographer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10516300\"]}");
	add("10516410", "{\"term\":\"pyromancer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10516410\"]}");
	add("10516512", "{\"term\":\"python\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"09524330\", \"10516512\", \"01746246\"]}");
	add("10516631", "{\"term\":\"pythoness\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09593808\", \"10516631\"]}");
	add("10516720", "{\"term\":\"qadi\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10516720\"]}");
	add("10516787", "{\"term\":\"quack\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07405362\", \"10516787\"]}");
	add("10516958", "{\"term\":\"quadripara\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10516958\"]}");
	add("10517119", "{\"term\":\"quadriplegic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10517119\"]}");
	add("10517230", "{\"term\":\"quad\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04036994\", \"04037131\", \"05302318\", \"10517230\"]}");
	add("10517230", "{\"term\":\"quadruplet\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08004531\", \"10517230\", \"13766444\"]}");
	add("10517360", "{\"term\":\"quaestor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10517360\"]}");
	add("10517531", "{\"term\":\"quaffer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10517531\"]}");
	add("10517631", "{\"term\":\"quaker\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10517631\", \"09699104\"]}");
	add("10517631", "{\"term\":\"trembler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10517631\"]}");
	add("10517781", "{\"term\":\"qualifier\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06331794\", \"10517781\"]}");
	add("10518007", "{\"term\":\"quarreler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10518007\"]}");
	add("10518007", "{\"term\":\"quarreller\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10518007\"]}");
	add("10518136", "{\"term\":\"quarrier\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10518136\"]}");
	add("10518136", "{\"term\":\"quarryman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10518136\"]}");
	add("10518284", "{\"term\":\"quarter\", \"synsetCount\":14, \"upperType\":\"NOUN\", \"ids\":[\"01261259\", \"04038076\", \"04323784\", \"10518284\", \"13411417\", \"13644335\", \"13742957\", \"13852365\", \"15231386\", \"15250842\", \"15259739\", \"15283261\", \"08645494\", \"13759620\"]}");
	add("10518401", "{\"term\":\"field general\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00727818\", \"10518401\"]}");
	add("10518401", "{\"term\":\"quarterback\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00727818\", \"10518401\"]}");
	add("10518401", "{\"term\":\"signal caller\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00727818\", \"10518401\"]}");
	add("10518571", "{\"term\":\"quartermaster\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10518571\"]}");
	add("10518695", "{\"term\":\"quartermaster general\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10518695\"]}");
	add("10518817", "{\"term\":\"quebecois\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10518817\"]}");
	add("10518940", "{\"term\":\"female monarch\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10518940\"]}");
	add("10518940", "{\"term\":\"queen\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"02125530\", \"02372587\", \"04039763\", \"04039901\", \"10095821\", \"10254721\", \"10519802\", \"10519442\", \"10518940\", \"02315660\"]}");
	add("10518940", "{\"term\":\"queen regnant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10518940\"]}");
	add("10519216", "{\"term\":\"queen of england\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10519216\"]}");
	add("10519442", "{\"term\":\"queen\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"02125530\", \"02372587\", \"04039763\", \"04039901\", \"10095821\", \"10254721\", \"10519802\", \"10519442\", \"10518940\", \"02315660\"]}");
	add("10519802", "{\"term\":\"queen\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"02125530\", \"02372587\", \"04039763\", \"04039901\", \"10095821\", \"10254721\", \"10519802\", \"10519442\", \"10518940\", \"02315660\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }