package org.swtk.commons.dict.wordnet.indexbyid.instance.p1.p3;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance1374 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("13740019", "{\"term\":\"crith\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13740019\"]}");
	add("13740151", "{\"term\":\"frail\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03395519\", \"13740151\"]}");
	add("13740283", "{\"term\":\"last\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"03649846\", \"07306517\", \"13639461\", \"13740283\", \"15168236\", \"01267160\", \"13872345\", \"15292365\"]}");
	add("13740372", "{\"term\":\"maund\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13740372\"]}");
	add("13740556", "{\"term\":\"obolus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13740556\"]}");
	add("13740679", "{\"term\":\"oka\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"12724801\", \"13639699\", \"13740679\"]}");
	add("13740780", "{\"term\":\"picul\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13740780\"]}");
	add("13740943", "{\"term\":\"pood\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13740943\"]}");
	add("13741051", "{\"term\":\"rotl\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13741051\"]}");
	add("13741207", "{\"term\":\"slug\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"00135600\", \"01948326\", \"04512230\", \"07938847\", \"10632447\", \"13411961\", \"13741207\", \"02919696\"]}");
	add("13741396", "{\"term\":\"tael\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13741396\"]}");
	add("13741515", "{\"term\":\"tod\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13741515\"]}");
	add("13741634", "{\"term\":\"welterweight\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"10793569\", \"10793686\", \"10793781\", \"13741634\"]}");
	add("13741788", "{\"term\":\"grain\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"04941397\", \"04957890\", \"05114622\", \"12161902\", \"12177336\", \"13741788\", \"13743998\", \"13745414\", \"14784518\", \"07818393\", \"09313683\"]}");
	add("13741913", "{\"term\":\"dram\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13721547\", \"13741913\", \"13744445\"]}");
	add("13742027", "{\"term\":\"ounce\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02131409\", \"13742027\", \"13744627\"]}");
	add("13742027", "{\"term\":\"oz.\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13742027\"]}");
	add("13742201", "{\"term\":\"lb\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13742201\"]}");
	add("13742201", "{\"term\":\"pound\", \"synsetCount\":14, \"upperType\":\"NOUN\", \"ids\":[\"01177806\", \"04000061\", \"06822614\", \"11264540\", \"13669802\", \"13715746\", \"13716122\", \"13716762\", \"13717041\", \"13717525\", \"13717779\", \"13742407\", \"13708765\", \"13742201\"]}");
	add("13742407", "{\"term\":\"pound\", \"synsetCount\":14, \"upperType\":\"NOUN\", \"ids\":[\"01177806\", \"04000061\", \"06822614\", \"11264540\", \"13669802\", \"13715746\", \"13716122\", \"13716762\", \"13717041\", \"13717525\", \"13717779\", \"13742407\", \"13708765\", \"13742201\"]}");
	add("13742510", "{\"term\":\"half pound\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13742510\"]}");
	add("13742606", "{\"term\":\"quarter pound\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13742606\"]}");
	add("13742705", "{\"term\":\"stone\", \"synsetCount\":13, \"upperType\":\"NOUN\", \"ids\":[\"04637315\", \"11339129\", \"11339239\", \"11339408\", \"11339565\", \"11339699\", \"11339805\", \"11705208\", \"13742705\", \"14723913\", \"14720954\", \"04333222\", \"09438954\"]}");
	add("13742957", "{\"term\":\"quarter\", \"synsetCount\":14, \"upperType\":\"NOUN\", \"ids\":[\"01261259\", \"04038076\", \"04323784\", \"10518284\", \"13411417\", \"13644335\", \"13742957\", \"13852365\", \"15231386\", \"15250842\", \"15259739\", \"15283261\", \"08645494\", \"13759620\"]}");
	add("13743108", "{\"term\":\"cwt\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13743108\", \"13743282\"]}");
	add("13743108", "{\"term\":\"hundredweight\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13743108\", \"13743282\", \"13747381\"]}");
	add("13743108", "{\"term\":\"long hundredweight\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13743108\"]}");
	add("13743282", "{\"term\":\"cental\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13743282\"]}");
	add("13743282", "{\"term\":\"centner\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13743282\", \"13747218\", \"13747381\"]}");
	add("13743282", "{\"term\":\"cwt\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13743108\", \"13743282\"]}");
	add("13743282", "{\"term\":\"hundredweight\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13743108\", \"13743282\", \"13747381\"]}");
	add("13743282", "{\"term\":\"quintal\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13743282\", \"13747567\"]}");
	add("13743282", "{\"term\":\"short hundredweight\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13743282\"]}");
	add("13743492", "{\"term\":\"gross ton\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13743492\"]}");
	add("13743492", "{\"term\":\"long ton\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13743492\"]}");
	add("13743492", "{\"term\":\"ton\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13743492\", \"13743634\"]}");
	add("13743634", "{\"term\":\"net ton\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13743634\"]}");
	add("13743634", "{\"term\":\"short ton\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13743634\"]}");
	add("13743634", "{\"term\":\"ton\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13743492\", \"13743634\"]}");
	add("13743800", "{\"term\":\"kiloton\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13668833\", \"13743800\"]}");
	add("13743909", "{\"term\":\"megaton\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13743909\", \"13668971\"]}");
	add("13743998", "{\"term\":\"grain\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"04941397\", \"04957890\", \"05114622\", \"12161902\", \"12177336\", \"13741788\", \"13743998\", \"13745414\", \"14784518\", \"07818393\", \"09313683\"]}");
	add("13744165", "{\"term\":\"scruple\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"05966604\", \"07540794\", \"13744165\"]}");
	add("13744303", "{\"term\":\"pennyweight\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13744303\"]}");
	add("13744445", "{\"term\":\"drachm\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13639910\", \"13642471\", \"13744445\"]}");
	add("13744445", "{\"term\":\"drachma\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13697323\", \"13744445\"]}");
	add("13744445", "{\"term\":\"dram\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13721547\", \"13741913\", \"13744445\"]}");
	add("13744627", "{\"term\":\"apothecaries\u0027 ounce\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13744627\"]}");
	add("13744627", "{\"term\":\"ounce\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02131409\", \"13742027\", \"13744627\"]}");
	add("13744627", "{\"term\":\"troy ounce\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13744627\"]}");
	add("13744867", "{\"term\":\"apothecaries\u0027 pound\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13744867\"]}");
	add("13744867", "{\"term\":\"troy pound\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13744867\"]}");
	add("13745039", "{\"term\":\"mcg\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13745039\"]}");
	add("13745039", "{\"term\":\"microgram\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13745039\"]}");
	add("13745171", "{\"term\":\"mg\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"14668427\", \"13745171\"]}");
	add("13745171", "{\"term\":\"milligram\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13745171\"]}");
	add("13745299", "{\"term\":\"nanogram\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13745299\"]}");
	add("13745299", "{\"term\":\"ng\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13745299\"]}");
	add("13745414", "{\"term\":\"grain\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"04941397\", \"04957890\", \"05114622\", \"12161902\", \"12177336\", \"13741788\", \"13743998\", \"13745414\", \"14784518\", \"07818393\", \"09313683\"]}");
	add("13745414", "{\"term\":\"metric grain\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13745414\"]}");
	add("13745580", "{\"term\":\"decigram\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13745580\"]}");
	add("13745580", "{\"term\":\"dg\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13745580\"]}");
	add("13745687", "{\"term\":\"carat\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13606330\", \"13745687\"]}");
	add("13745822", "{\"term\":\"g\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"06844869\", \"13611530\", \"13650222\", \"13650416\", \"13670214\", \"13772984\", \"14854134\", \"14916289\", \"13745822\"]}");
	add("13745822", "{\"term\":\"gm\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13745822\"]}");
	add("13745822", "{\"term\":\"gram\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11030932\", \"13745822\"]}");
	add("13745822", "{\"term\":\"gramme\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13745822\"]}");
	add("13746009", "{\"term\":\"gram-atomic weight\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13746009\"]}");
	add("13746009", "{\"term\":\"gram atom\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13746009\"]}");
	add("13746191", "{\"term\":\"gram molecule\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13746191\"]}");
	add("13746191", "{\"term\":\"mol\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13746191\"]}");
	add("13746191", "{\"term\":\"mole\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"01892161\", \"02897867\", \"04701152\", \"07854527\", \"09989722\", \"13746191\"]}");
	add("13746460", "{\"term\":\"dag\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03597088\", \"13746460\"]}");
	add("13746460", "{\"term\":\"decagram\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13746460\"]}");
	add("13746460", "{\"term\":\"dekagram\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13746460\"]}");
	add("13746460", "{\"term\":\"dkg\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13746460\"]}");
	add("13746584", "{\"term\":\"hectogram\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13746584\"]}");
	add("13746584", "{\"term\":\"hg\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13746584\", \"14669524\"]}");
	add("13746692", "{\"term\":\"kg\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13746692\"]}");
	add("13746692", "{\"term\":\"kilo\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13746692\"]}");
	add("13746692", "{\"term\":\"kilogram\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13746692\"]}");
	add("13746948", "{\"term\":\"key\", \"synsetCount\":15, \"upperType\":\"NOUN\", \"ids\":[\"03618801\", \"03620342\", \"04593867\", \"06436512\", \"06504179\", \"06504429\", \"08608465\", \"09348301\", \"11123094\", \"12056695\", \"13746948\", \"06876801\", \"04993396\", \"05802065\", \"03618503\"]}");
	add("13747087", "{\"term\":\"myg\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13747087\"]}");
	add("13747087", "{\"term\":\"myriagram\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13747087\"]}");
	add("13747218", "{\"term\":\"centner\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13743282\", \"13747218\", \"13747381\"]}");
	add("13747381", "{\"term\":\"centner\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13743282\", \"13747218\", \"13747381\"]}");
	add("13747381", "{\"term\":\"doppelzentner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13747381\"]}");
	add("13747381", "{\"term\":\"hundredweight\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13743108\", \"13743282\", \"13747381\"]}");
	add("13747381", "{\"term\":\"metric hundredweight\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13747381\"]}");
	add("13747567", "{\"term\":\"quintal\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13743282\", \"13747567\"]}");
	add("13747698", "{\"term\":\"metric ton\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13747698\"]}");
	add("13747698", "{\"term\":\"mt\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"06142954\", \"09130786\", \"13747698\", \"14669141\"]}");
	add("13747698", "{\"term\":\"t\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"05420990\", \"05421216\", \"06846270\", \"13747698\", \"14854334\", \"15097424\"]}");
	add("13747698", "{\"term\":\"tonne\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13747698\"]}");
	add("13747836", "{\"term\":\"erg\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13747836\"]}");
	add("13748012", "{\"term\":\"electron volt\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13748012\"]}");
	add("13748012", "{\"term\":\"ev\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13748012\"]}");
	add("13748184", "{\"term\":\"j\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06845190\", \"13748184\"]}");
	add("13748184", "{\"term\":\"joule\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11112730\", \"13748184\"]}");
	add("13748184", "{\"term\":\"watt second\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13748184\"]}");
	add("13748406", "{\"term\":\"calorie\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13748406\", \"13748672\"]}");
	add("13748406", "{\"term\":\"gram calorie\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13748406\"]}");
	add("13748406", "{\"term\":\"small calorie\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13748406\"]}");
	add("13748672", "{\"term\":\"calorie\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13748406\", \"13748672\"]}");
	add("13748672", "{\"term\":\"kilocalorie\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13748672\"]}");
	add("13748672", "{\"term\":\"kilogram calorie\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13748672\"]}");
	add("13748672", "{\"term\":\"large calorie\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13748672\"]}");
	add("13748672", "{\"term\":\"nutritionist\u0027s calorie\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13748672\"]}");
	add("13749057", "{\"term\":\"b.th.u.\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13749057\"]}");
	add("13749057", "{\"term\":\"british thermal unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13749057\"]}");
	add("13749057", "{\"term\":\"btu\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13749057\"]}");
	add("13749319", "{\"term\":\"therm\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13749319\"]}");
	add("13749443", "{\"term\":\"watt-hour\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13749443\"]}");
	add("13749588", "{\"term\":\"b.t.u.\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13749588\"]}");
	add("13749588", "{\"term\":\"board of trade unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13749588\"]}");
	add("13749588", "{\"term\":\"kilowatt hour\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13749588\"]}");
	add("13749588", "{\"term\":\"kw-hr\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13749588\"]}");
	add("13749793", "{\"term\":\"foot-pound\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13749793\"]}");
	add("13749951", "{\"term\":\"foot-ton\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13749951\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }