package org.swtk.commons.dict.wordnet.indexbyid.instance.p1.p0;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance1037 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("10370215", "{\"term\":\"nazi\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10370215\", \"10369951\"]}");
	add("10370397", "{\"term\":\"neapolitan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10370397\"]}");
	add("10370505", "{\"term\":\"nebbech\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10370505\"]}");
	add("10370505", "{\"term\":\"nebbish\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10370505\"]}");
	add("10370627", "{\"term\":\"necessitarian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10370627\"]}");
	add("10370795", "{\"term\":\"necker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10370795\"]}");
	add("10370883", "{\"term\":\"necromancer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10370883\", \"10645222\"]}");
	add("10371012", "{\"term\":\"needleworker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10371012\"]}");
	add("10371222", "{\"term\":\"negativist\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10019315\", \"10371222\"]}");
	add("10371356", "{\"term\":\"neglecter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10371356\"]}");
	add("10371605", "{\"term\":\"negotiant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10371605\"]}");
	add("10371605", "{\"term\":\"negotiator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10371605\"]}");
	add("10371605", "{\"term\":\"treater\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10371605\"]}");
	add("10371939", "{\"term\":\"negotiatress\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10371939\"]}");
	add("10371939", "{\"term\":\"negotiatrix\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10371939\"]}");
	add("10372030", "{\"term\":\"neighbor\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09391121\", \"10372030\"]}");
	add("10372030", "{\"term\":\"neighbour\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09391121\", \"10372030\"]}");
	add("10372288", "{\"term\":\"neoclassicist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10372288\"]}");
	add("10372394", "{\"term\":\"neocon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10372394\"]}");
	add("10372394", "{\"term\":\"neoconservative\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10372394\"]}");
	add("10372513", "{\"term\":\"neoliberal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10372513\"]}");
	add("10372629", "{\"term\":\"neologist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10372629\"]}");
	add("10372747", "{\"term\":\"neonate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10372747\"]}");
	add("10372747", "{\"term\":\"newborn\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10372747\"]}");
	add("10372968", "{\"term\":\"neoplatonist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10372968\"]}");
	add("10373054", "{\"term\":\"nephew\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10373054\"]}");
	add("10373174", "{\"term\":\"nepotist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10373174\"]}");
	add("10373297", "{\"term\":\"nerd\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10373297\", \"10704113\"]}");
	add("10373433", "{\"term\":\"nestorian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10373433\"]}");
	add("10373512", "{\"term\":\"neurasthenic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10373512\"]}");
	add("10373627", "{\"term\":\"neurobiologist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10373627\"]}");
	add("10373752", "{\"term\":\"neurolinguist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10373752\"]}");
	add("10373964", "{\"term\":\"brain doctor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10373964\"]}");
	add("10373964", "{\"term\":\"neurologist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10373964\"]}");
	add("10374279", "{\"term\":\"neuroscientist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10374279\"]}");
	add("10374453", "{\"term\":\"brain surgeon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10374453\"]}");
	add("10374453", "{\"term\":\"neurosurgeon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10374453\"]}");
	add("10374597", "{\"term\":\"mental case\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10374597\"]}");
	add("10374597", "{\"term\":\"neurotic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10374597\"]}");
	add("10374597", "{\"term\":\"psychoneurotic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10374597\"]}");
	add("10374841", "{\"term\":\"neutral\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10374841\"]}");
	add("10375005", "{\"term\":\"neutralist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10375005\"]}");
	add("10375148", "{\"term\":\"entrant\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"10079883\", \"10079983\", \"10375148\", \"03296154\"]}");
	add("10375148", "{\"term\":\"fledgeling\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01506820\", \"10375148\"]}");
	add("10375148", "{\"term\":\"fledgling\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01506820\", \"10375148\"]}");
	add("10375148", "{\"term\":\"freshman\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10375148\", \"10131457\"]}");
	add("10375148", "{\"term\":\"neophyte\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"09920955\", \"10375148\", \"11574085\"]}");
	add("10375148", "{\"term\":\"newbie\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10375148\"]}");
	add("10375148", "{\"term\":\"newcomer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10375387\", \"10375148\"]}");
	add("10375148", "{\"term\":\"starter\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00922541\", \"03131675\", \"07596911\", \"10375148\", \"10668747\", \"10668877\", \"04311513\"]}");
	add("10375387", "{\"term\":\"newcomer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10375387\", \"10375148\"]}");
	add("10375505", "{\"term\":\"new dealer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10375505\"]}");
	add("10375641", "{\"term\":\"new englander\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10375641\"]}");
	add("10375641", "{\"term\":\"yankee\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"09766150\", \"10375641\", \"10821887\"]}");
	add("10375765", "{\"term\":\"honeymooner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10375765\"]}");
	add("10375765", "{\"term\":\"newlywed\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10375765\"]}");
	add("10375912", "{\"term\":\"newsagent\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10375912\"]}");
	add("10375912", "{\"term\":\"newsdealer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10375912\"]}");
	add("10375912", "{\"term\":\"newsstand operator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10375912\"]}");
	add("10375912", "{\"term\":\"newsvendor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10375912\"]}");
	add("10376043", "{\"term\":\"newscaster\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10376043\"]}");
	add("10376149", "{\"term\":\"newspaper editor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10376149\"]}");
	add("10376291", "{\"term\":\"newspaper columnist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10376291\"]}");
	add("10376448", "{\"term\":\"newspaper critic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10376448\"]}");
	add("10376576", "{\"term\":\"news reader\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10376576\"]}");
	add("10376576", "{\"term\":\"newsreader\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10376576\"]}");
	add("10376711", "{\"term\":\"newtonian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10376711\"]}");
	add("10376811", "{\"term\":\"new waver\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10376811\"]}");
	add("10376906", "{\"term\":\"next friend\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10376906\"]}");
	add("10377048", "{\"term\":\"next of kin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10377048\"]}");
	add("10377183", "{\"term\":\"nibbler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10377183\"]}");
	add("10377312", "{\"term\":\"niece\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10377312\"]}");
	add("10377436", "{\"term\":\"churl\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10167825\", \"10377436\", \"10430560\"]}");
	add("10377436", "{\"term\":\"niggard\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10377436\"]}");
	add("10377436", "{\"term\":\"scrooge\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10377436\"]}");
	add("10377436", "{\"term\":\"skinflint\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10377436\"]}");
	add("10377606", "{\"term\":\"night owl\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10377606\"]}");
	add("10377606", "{\"term\":\"nightbird\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10377606\"]}");
	add("10377606", "{\"term\":\"nighthawk\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01839025\", \"10377606\"]}");
	add("10377731", "{\"term\":\"night porter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10377731\"]}");
	add("10377823", "{\"term\":\"night rider\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10377823\"]}");
	add("10377823", "{\"term\":\"nightrider\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10377823\"]}");
	add("10378021", "{\"term\":\"night watchman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10378021\"]}");
	add("10378119", "{\"term\":\"nihilist\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09811257\", \"10378119\"]}");
	add("10378274", "{\"term\":\"nimby\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10378274\"]}");
	add("10378493", "{\"term\":\"nincompoop\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10378493\"]}");
	add("10378493", "{\"term\":\"ninny\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10378493\"]}");
	add("10378493", "{\"term\":\"poop\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04323784\", \"06648638\", \"10378493\", \"14878732\"]}");
	add("10378588", "{\"term\":\"ninja\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08405825\", \"10378588\"]}");
	add("10378816", "{\"term\":\"niqaabi\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10378816\"]}");
	add("10378999", "{\"term\":\"nisei\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10378999\"]}");
	add("10379121", "{\"term\":\"nitpicker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10379121\"]}");
	add("10379245", "{\"term\":\"nobel laureate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10379245\"]}");
	add("10379245", "{\"term\":\"nobelist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10379245\"]}");
	add("10379358", "{\"term\":\"noc\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10379358\"]}");
	add("10379458", "{\"term\":\"nomad\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10379458\"]}");
	add("10379687", "{\"term\":\"nominalist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10379687\"]}");
	add("10379800", "{\"term\":\"nominator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10379800\"]}");
	add("10379952", "{\"term\":\"nonagenarian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10379952\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }