package org.swtk.commons.dict.wordnet.indexbyid.instance.p1.p0;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance1058 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("10580065", "{\"term\":\"scientist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10580065\"]}");
	add("10580650", "{\"term\":\"scion\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10580650\"]}");
	add("10580748", "{\"term\":\"flouter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10580748\"]}");
	add("10580748", "{\"term\":\"jeerer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10580748\"]}");
	add("10580748", "{\"term\":\"mocker\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01589582\", \"10580748\"]}");
	add("10580748", "{\"term\":\"scoffer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10580748\", \"10581041\"]}");
	add("10581041", "{\"term\":\"gorger\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10581041\"]}");
	add("10581041", "{\"term\":\"scoffer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10580748\", \"10581041\"]}");
	add("10581164", "{\"term\":\"scofflaw\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10581164\"]}");
	add("10581289", "{\"term\":\"common scold\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10581289\"]}");
	add("10581289", "{\"term\":\"nag\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02384856\", \"10581289\"]}");
	add("10581289", "{\"term\":\"nagger\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10581289\"]}");
	add("10581289", "{\"term\":\"scold\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10581289\"]}");
	add("10581289", "{\"term\":\"scolder\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10581289\"]}");
	add("10581563", "{\"term\":\"scorekeeper\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10581563\"]}");
	add("10581563", "{\"term\":\"scorer\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10581563\", \"10581711\", \"10581819\"]}");
	add("10581711", "{\"term\":\"scorer\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10581563\", \"10581711\", \"10581819\"]}");
	add("10581819", "{\"term\":\"scorer\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10581563\", \"10581711\", \"10581819\"]}");
	add("10581937", "{\"term\":\"scourer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10581937\", \"10582073\"]}");
	add("10582073", "{\"term\":\"scourer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10581937\", \"10582073\"]}");
	add("10582177", "{\"term\":\"guide\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"03470959\", \"10582177\", \"05947694\", \"06434383\", \"10171090\", \"10761478\"]}");
	add("10582177", "{\"term\":\"pathfinder\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10582177\"]}");
	add("10582177", "{\"term\":\"scout\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"10582177\", \"10582396\", \"10582611\", \"10290913\"]}");
	add("10582396", "{\"term\":\"scout\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"10582177\", \"10582396\", \"10582611\", \"10290913\"]}");
	add("10582396", "{\"term\":\"talent scout\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10582396\"]}");
	add("10582611", "{\"term\":\"scout\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"10582177\", \"10582396\", \"10582611\", \"10290913\"]}");
	add("10582742", "{\"term\":\"scoutmaster\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10582742\"]}");
	add("10582831", "{\"term\":\"scrambler\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04157539\", \"04474106\", \"10582831\"]}");
	add("10583038", "{\"term\":\"scratch\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"04701248\", \"05170928\", \"06415790\", \"07407582\", \"07821365\", \"08671448\", \"10583038\", \"13406389\", \"13927849\", \"14310051\"]}");
	add("10583139", "{\"term\":\"scratcher\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04158173\", \"10583139\", \"10583254\"]}");
	add("10583254", "{\"term\":\"scratcher\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04158173\", \"10583139\", \"10583254\"]}");
	add("10583368", "{\"term\":\"scrawler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10583368\"]}");
	add("10583368", "{\"term\":\"scribbler\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10583368\", \"10584088\"]}");
	add("10583526", "{\"term\":\"movie actor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10583526\"]}");
	add("10583526", "{\"term\":\"screen actor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10583526\"]}");
	add("10583652", "{\"term\":\"screener\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10583652\"]}");
	add("10583828", "{\"term\":\"film writer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10583828\"]}");
	add("10583828", "{\"term\":\"screenwriter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10583828\"]}");
	add("10583969", "{\"term\":\"screwballer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10583969\"]}");
	add("10584088", "{\"term\":\"penman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10584088\"]}");
	add("10584088", "{\"term\":\"scribbler\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10583368\", \"10584088\"]}");
	add("10584088", "{\"term\":\"scribe\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04162518\", \"09984335\", \"10584088\", \"11309989\"]}");
	add("10584228", "{\"term\":\"scrimshanker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10584228\"]}");
	add("10584333", "{\"term\":\"scriptwriter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10584333\"]}");
	add("10584476", "{\"term\":\"scrubber\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04163101\", \"04163201\", \"10584476\"]}");
	add("10584625", "{\"term\":\"scrub nurse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10584625\"]}");
	add("10584730", "{\"term\":\"scrutiniser\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10584730\"]}");
	add("10584730", "{\"term\":\"scrutinizer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10584730\"]}");
	add("10584930", "{\"term\":\"canvasser\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"09911518\", \"10471164\", \"10584930\", \"10642716\"]}");
	add("10584930", "{\"term\":\"scrutineer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10584930\"]}");
	add("10585095", "{\"term\":\"scuba diver\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10585095\"]}");
	add("10585192", "{\"term\":\"sculler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10585192\"]}");
	add("10585379", "{\"term\":\"scullion\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10585379\"]}");
	add("10585500", "{\"term\":\"carver\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"10005000\", \"10585500\", \"10809603\", \"10905355\"]}");
	add("10585500", "{\"term\":\"sculptor\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09449372\", \"10585500\"]}");
	add("10585500", "{\"term\":\"sculpturer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10585500\"]}");
	add("10585500", "{\"term\":\"statue maker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10585500\"]}");
	add("10586321", "{\"term\":\"sculptress\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10586321\"]}");
	add("10586394", "{\"term\":\"scythian\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06988129\", \"10586394\"]}");
	add("10586524", "{\"term\":\"sea king\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10586524\"]}");
	add("10586600", "{\"term\":\"sea lawyer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10586600\"]}");
	add("10586696", "{\"term\":\"sealer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10586696\", \"14729879\"]}");
	add("10586829", "{\"term\":\"searcher\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02170596\", \"10586829\", \"10595231\"]}");
	add("10587041", "{\"term\":\"sea scout\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10587041\"]}");
	add("10587150", "{\"term\":\"seasonal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10587150\"]}");
	add("10587150", "{\"term\":\"seasonal worker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10587150\"]}");
	add("10587276", "{\"term\":\"seasoner\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07825344\", \"10587276\"]}");
	add("10587407", "{\"term\":\"secessionist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10587407\"]}");
	add("10587511", "{\"term\":\"second\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"03592219\", \"04171590\", \"07195032\", \"10587511\", \"13632638\", \"13868743\", \"15269461\", \"00725034\", \"15271664\", \"15259923\"]}");
	add("10587628", "{\"term\":\"second baseman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10587628\"]}");
	add("10587628", "{\"term\":\"second sacker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10587628\"]}");
	add("10587786", "{\"term\":\"second cousin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10587786\"]}");
	add("10587887", "{\"term\":\"seconder\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10587887\"]}");
	add("10588052", "{\"term\":\"second banana\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10588052\", \"10680322\"]}");
	add("10588052", "{\"term\":\"second fiddle\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00723180\", \"10588052\"]}");
	add("10588198", "{\"term\":\"second hand\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04171818\", \"10588198\"]}");
	add("10588359", "{\"term\":\"second-in-command\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10588359\"]}");
	add("10588455", "{\"term\":\"2nd lieutenant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10588455\"]}");
	add("10588455", "{\"term\":\"second lieutenant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10588455\"]}");
	add("10588623", "{\"term\":\"mediocrity\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10588623\", \"04802310\"]}");
	add("10588623", "{\"term\":\"second-rater\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10588623\"]}");
	add("10588855", "{\"term\":\"intelligence agent\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10588855\"]}");
	add("10588855", "{\"term\":\"intelligence officer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10588855\"]}");
	add("10588855", "{\"term\":\"operative\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10496256\", \"10588855\"]}");
	add("10588855", "{\"term\":\"secret agent\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10588855\"]}");
	add("10589188", "{\"term\":\"secretarial assistant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10589188\"]}");
	add("10589188", "{\"term\":\"secretary\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04171929\", \"10541521\", \"10589188\", \"10589463\"]}");
	add("10589463", "{\"term\":\"secretary\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04171929\", \"10541521\", \"10589188\", \"10589463\"]}");
	add("10589873", "{\"term\":\"attorney general\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00601032\", \"10589873\", \"09842232\"]}");
	add("10589873", "{\"term\":\"united states attorney general\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10589873\"]}");
	add("10589873", "{\"term\":\"us attorney general\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10589873\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }