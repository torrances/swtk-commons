package org.swtk.commons.dict.wordnet.indexbyid.instance.p0.p9;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0933 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("09330046", "{\"term\":\"humber\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09330046\"]}");
	add("09330206", "{\"term\":\"hunk\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09330206\", \"10212458\"]}");
	add("09330206", "{\"term\":\"lump\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"09330206\", \"10294336\", \"14338619\", \"07977630\"]}");
	add("09330458", "{\"term\":\"hydra\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"01914793\", \"05695974\", \"09330458\", \"09519392\"]}");
	add("09330458", "{\"term\":\"snake\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"03975218\", \"04255138\", \"09330458\", \"09461458\", \"10635218\", \"01729333\"]}");
	add("09330625", "{\"term\":\"hydrogen ion\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09330625\"]}");
	add("09330808", "{\"term\":\"hydrosphere\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09330808\"]}");
	add("09331022", "{\"term\":\"hydrus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09331022\"]}");
	add("09331148", "{\"term\":\"hyperon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09331148\"]}");
	add("09331304", "{\"term\":\"ice\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"03563356\", \"03585151\", \"03759824\", \"07629807\", \"07636431\", \"13393296\", \"09331304\", \"14939335\"]}");
	add("09331478", "{\"term\":\"berg\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10865685\", \"09331478\"]}");
	add("09331478", "{\"term\":\"iceberg\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07740014\", \"09331478\"]}");
	add("09331649", "{\"term\":\"ice cap\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09331649\"]}");
	add("09331649", "{\"term\":\"icecap\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09331649\"]}");
	add("09331824", "{\"term\":\"icefall\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09331824\"]}");
	add("09331952", "{\"term\":\"ice field\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09331952\"]}");
	add("09332074", "{\"term\":\"floe\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09332074\"]}");
	add("09332074", "{\"term\":\"ice floe\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09332074\"]}");
	add("09332198", "{\"term\":\"ice mass\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09332198\"]}");
	add("09332362", "{\"term\":\"iguassu\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09332362\"]}");
	add("09332362", "{\"term\":\"iguassu falls\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09332362\"]}");
	add("09332362", "{\"term\":\"iguazu\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09332362\"]}");
	add("09332362", "{\"term\":\"iguazu falls\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09332362\"]}");
	add("09332362", "{\"term\":\"victoria falls\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09332362\", \"09494768\"]}");
	add("09332572", "{\"term\":\"ijssel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09332572\"]}");
	add("09332572", "{\"term\":\"ijssel river\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09332572\"]}");
	add("09332726", "{\"term\":\"ijsselmeer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09332726\"]}");
	add("09332917", "{\"term\":\"illampu\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09332917\"]}");
	add("09333068", "{\"term\":\"illimani\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09333068\"]}");
	add("09333220", "{\"term\":\"illinois river\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09333220\"]}");
	add("09333366", "{\"term\":\"impairer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09333366\"]}");
	add("09333522", "{\"term\":\"inclined fault\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09333522\"]}");
	add("09333712", "{\"term\":\"cellular inclusion\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09333712\"]}");
	add("09333712", "{\"term\":\"inclusion\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00373938\", \"09333712\", \"13816246\", \"13959337\"]}");
	add("09333712", "{\"term\":\"inclusion body\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09333712\"]}");
	add("09333973", "{\"term\":\"guide fossil\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09333973\"]}");
	add("09333973", "{\"term\":\"index fossil\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09333973\"]}");
	add("09334165", "{\"term\":\"indian ocean\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09334165\"]}");
	add("09334616", "{\"term\":\"indigirka\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09334616\"]}");
	add("09334616", "{\"term\":\"indigirka river\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09334616\"]}");
	add("09334791", "{\"term\":\"indirect transmission\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09334791\"]}");
	add("09335000", "{\"term\":\"indument\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09335000\"]}");
	add("09335000", "{\"term\":\"indumentum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09335000\"]}");
	add("09335137", "{\"term\":\"indus\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09335137\", \"09335422\"]}");
	add("09335137", "{\"term\":\"indus river\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09335137\"]}");
	add("09335422", "{\"term\":\"indus\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09335137\", \"09335422\"]}");
	add("09335551", "{\"term\":\"inessential\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09335551\"]}");
	add("09335551", "{\"term\":\"nonessential\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09335551\"]}");
	add("09335749", "{\"term\":\"infectious agent\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09335749\"]}");
	add("09335749", "{\"term\":\"infective agent\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09335749\"]}");
	add("09335905", "{\"term\":\"inferior planet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09335905\"]}");
	add("09336065", "{\"term\":\"ingrowth\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09336065\"]}");
	add("09336147", "{\"term\":\"inland passage\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09336147\"]}");
	add("09336147", "{\"term\":\"inside passage\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09336147\"]}");
	add("09336360", "{\"term\":\"inland sea\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09336360\"]}");
	add("09336622", "{\"term\":\"inlet\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03581786\", \"09336622\"]}");
	add("09336622", "{\"term\":\"recess\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"01064921\", \"04069081\", \"09336622\", \"13895060\", \"14037117\"]}");
	add("09336919", "{\"term\":\"inside track\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09336919\", \"05166358\"]}");
	add("09337034", "{\"term\":\"intermediate vector boson\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09337034\"]}");
	add("09337169", "{\"term\":\"interplanetary dust\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09337169\"]}");
	add("09337304", "{\"term\":\"interplanetary gas\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09337304\"]}");
	add("09337509", "{\"term\":\"interplanetary medium\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09337509\"]}");
	add("09337735", "{\"term\":\"interstellar medium\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09337735\"]}");
	add("09337870", "{\"term\":\"intrusion\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00734781\", \"09337870\", \"13522608\", \"00050289\", \"07444576\"]}");
	add("09337963", "{\"term\":\"io\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09337963\", \"09586554\"]}");
	add("09338065", "{\"term\":\"ion\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09338065\"]}");
	add("09338361", "{\"term\":\"ionian sea\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09338361\"]}");
	add("09338530", "{\"term\":\"irish sea\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09338530\"]}");
	add("09338668", "{\"term\":\"iron filing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09338668\"]}");
	add("09338776", "{\"term\":\"irrawaddy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09338776\"]}");
	add("09338776", "{\"term\":\"irrawaddy river\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09338776\"]}");
	add("09338972", "{\"term\":\"irtish\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09338972\"]}");
	add("09338972", "{\"term\":\"irtish river\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09338972\"]}");
	add("09338972", "{\"term\":\"irtysh\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09338972\"]}");
	add("09338972", "{\"term\":\"irtysh river\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09338972\"]}");
	add("09339218", "{\"term\":\"isere\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09339218\"]}");
	add("09339218", "{\"term\":\"isere river\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09339218\"]}");
	add("09339360", "{\"term\":\"island\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03592487\", \"09339360\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }