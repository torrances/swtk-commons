package org.swtk.commons.dict.wordnet.indexbyid.instance.p0.p7;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0787 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("07870042", "{\"term\":\"limburger\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07870042\"]}");
	add("07870160", "{\"term\":\"mozzarella\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07870160\"]}");
	add("07870242", "{\"term\":\"muenster\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07870242\"]}");
	add("07870324", "{\"term\":\"parmesan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07870324\"]}");
	add("07870431", "{\"term\":\"quark\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07870431\", \"09424709\"]}");
	add("07870431", "{\"term\":\"quark cheese\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07870431\"]}");
	add("07870590", "{\"term\":\"ricotta\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07870590\"]}");
	add("07870683", "{\"term\":\"string cheese\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07870683\"]}");
	add("07870789", "{\"term\":\"swiss cheese\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07870789\"]}");
	add("07870958", "{\"term\":\"emmental\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07870958\"]}");
	add("07870958", "{\"term\":\"emmentaler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07870958\"]}");
	add("07870958", "{\"term\":\"emmenthal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07870958\"]}");
	add("07870958", "{\"term\":\"emmenthaler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07870958\"]}");
	add("07871081", "{\"term\":\"gruyere\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07871081\"]}");
	add("07871164", "{\"term\":\"sapsago\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07871164\"]}");
	add("07871293", "{\"term\":\"velveeta\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07871293\"]}");
	add("07871389", "{\"term\":\"nut butter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07871389\"]}");
	add("07871486", "{\"term\":\"peanut butter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07871486\"]}");
	add("07871579", "{\"term\":\"marshmallow fluff\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07871579\"]}");
	add("07871697", "{\"term\":\"onion butter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07871697\"]}");
	add("07871788", "{\"term\":\"pimento butter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07871788\"]}");
	add("07871883", "{\"term\":\"shrimp butter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07871883\"]}");
	add("07872021", "{\"term\":\"lobster butter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07872021\"]}");
	add("07872162", "{\"term\":\"yak butter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07872162\"]}");
	add("07872246", "{\"term\":\"paste\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"07872246\", \"14729127\", \"14906399\", \"14729448\"]}");
	add("07872246", "{\"term\":\"spread\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"00368802\", \"02825355\", \"05108774\", \"06268608\", \"07593658\", \"07872246\", \"05095531\", \"04059554\", \"04760114\", \"07460496\"]}");
	add("07872732", "{\"term\":\"cheese spread\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07872732\"]}");
	add("07872871", "{\"term\":\"anchovy butter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07872871\"]}");
	add("07872968", "{\"term\":\"fishpaste\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07872968\"]}");
	add("07873052", "{\"term\":\"garlic butter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07873052\"]}");
	add("07873146", "{\"term\":\"miso\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07873146\"]}");
	add("07873332", "{\"term\":\"wasabi\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07873332\", \"11920390\"]}");
	add("07873574", "{\"term\":\"snail butter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07873574\"]}");
	add("07873707", "{\"term\":\"hommos\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07873707\"]}");
	add("07873707", "{\"term\":\"hoummos\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07873707\"]}");
	add("07873707", "{\"term\":\"hummus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07873707\"]}");
	add("07873707", "{\"term\":\"humous\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07873707\"]}");
	add("07873707", "{\"term\":\"humus\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07873707\", \"14932973\"]}");
	add("07873935", "{\"term\":\"pate\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05547228\", \"07873935\"]}");
	add("07874090", "{\"term\":\"duck pate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07874090\"]}");
	add("07874173", "{\"term\":\"foie gras\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07874173\"]}");
	add("07874173", "{\"term\":\"pate de foie gras\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07874173\"]}");
	add("07874312", "{\"term\":\"tapenade\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07874312\"]}");
	add("07874460", "{\"term\":\"tahini\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07874460\"]}");
	add("07874571", "{\"term\":\"sweetener\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05703197\", \"07874571\"]}");
	add("07874571", "{\"term\":\"sweetening\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00249503\", \"00266836\", \"07874571\"]}");
	add("07874817", "{\"term\":\"aspartame\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07874817\"]}");
	add("07874954", "{\"term\":\"honey\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09869006\", \"07874954\"]}");
	add("07875118", "{\"term\":\"saccharin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07875118\"]}");
	add("07875260", "{\"term\":\"refined sugar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07875260\"]}");
	add("07875260", "{\"term\":\"sugar\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13406389\", \"14816873\", \"07875260\"]}");
	add("07875559", "{\"term\":\"sirup\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07875559\"]}");
	add("07875559", "{\"term\":\"syrup\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07875559\"]}");
	add("07875772", "{\"term\":\"sugar syrup\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07875772\"]}");
	add("07875927", "{\"term\":\"molasses\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07875927\"]}");
	add("07876079", "{\"term\":\"sorghum\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07876079\", \"12157461\", \"12157637\"]}");
	add("07876079", "{\"term\":\"sorghum molasses\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07876079\"]}");
	add("07876184", "{\"term\":\"golden syrup\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07876184\"]}");
	add("07876184", "{\"term\":\"treacle\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06788770\", \"07876184\"]}");
	add("07876307", "{\"term\":\"grenadine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07876307\"]}");
	add("07876423", "{\"term\":\"maple syrup\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07876423\"]}");
	add("07876524", "{\"term\":\"corn syrup\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07876524\"]}");
	add("07876605", "{\"term\":\"manna\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07876605\", \"12332317\"]}");
	add("07876605", "{\"term\":\"manna from heaven\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07492727\", \"07876605\"]}");
	add("07876605", "{\"term\":\"miraculous food\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07876605\"]}");
	add("07876781", "{\"term\":\"batter\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07876781\", \"09863364\"]}");
	add("07876964", "{\"term\":\"dough\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13406389\", \"07876964\"]}");
	add("07877134", "{\"term\":\"bread dough\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07877134\"]}");
	add("07877223", "{\"term\":\"pancake batter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07877223\"]}");
	add("07877310", "{\"term\":\"fritter batter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07877310\"]}");
	add("07877397", "{\"term\":\"sop\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01026910\", \"07231275\", \"07877397\"]}");
	add("07877397", "{\"term\":\"sops\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07877397\"]}");
	add("07877533", "{\"term\":\"coq au vin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07877533\"]}");
	add("07877657", "{\"term\":\"chicken provencale\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07877657\"]}");
	add("07877789", "{\"term\":\"chicken and rice\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07877789\"]}");
	add("07877959", "{\"term\":\"moo goo gai pan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07877959\"]}");
	add("07878071", "{\"term\":\"arroz con pollo\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07878071\"]}");
	add("07878220", "{\"term\":\"bacon and eggs\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07878220\", \"12566140\"]}");
	add("07878324", "{\"term\":\"barbecued spareribs\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07878324\"]}");
	add("07878324", "{\"term\":\"spareribs\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07687204\", \"07878324\"]}");
	add("07878437", "{\"term\":\"beef bourguignonne\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07878437\"]}");
	add("07878437", "{\"term\":\"boeuf bourguignonne\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07878437\"]}");
	add("07878587", "{\"term\":\"beef wellington\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07878587\"]}");
	add("07878587", "{\"term\":\"filet de boeuf en croute\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07878587\"]}");
	add("07878746", "{\"term\":\"bitok\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07878746\"]}");
	add("07878922", "{\"term\":\"boiled dinner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07878922\"]}");
	add("07878922", "{\"term\":\"new england boiled dinner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07878922\"]}");
	add("07879083", "{\"term\":\"boston baked beans\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07879083\"]}");
	add("07879205", "{\"term\":\"bubble and squeak\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07879205\"]}");
	add("07879350", "{\"term\":\"pasta\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07714660\", \"07879350\"]}");
	add("07879523", "{\"term\":\"cannelloni\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07879523\"]}");
	add("07879620", "{\"term\":\"belgian beef stew\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07879620\"]}");
	add("07879620", "{\"term\":\"carbonnade flamande\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07879620\"]}");
	add("07879778", "{\"term\":\"cheese souffle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07879778\"]}");
	add("07879911", "{\"term\":\"chicken marengo\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07879911\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }