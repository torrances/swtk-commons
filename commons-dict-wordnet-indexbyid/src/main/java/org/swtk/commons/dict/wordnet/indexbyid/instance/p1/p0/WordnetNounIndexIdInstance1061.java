package org.swtk.commons.dict.wordnet.indexbyid.instance.p1.p0;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance1061 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("10610046", "{\"term\":\"ship\u0027s chandler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10610046\"]}");
	add("10610172", "{\"term\":\"ship builder\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10609338\", \"10610172\"]}");
	add("10610172", "{\"term\":\"shipbuilder\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08090828\", \"10609338\", \"10610172\"]}");
	add("10610172", "{\"term\":\"shipwright\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10610172\"]}");
	add("10610311", "{\"term\":\"shirtmaker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10610311\"]}");
	add("10610385", "{\"term\":\"shocker\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07262471\", \"10610385\"]}");
	add("10610480", "{\"term\":\"shogun\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10610480\"]}");
	add("10610647", "{\"term\":\"shona\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07007795\", \"10610647\"]}");
	add("10610755", "{\"term\":\"shoofly\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04208478\", \"10610755\"]}");
	add("10610889", "{\"term\":\"shooter\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"10171603\", \"10610889\", \"10611086\", \"10612523\", \"04403228\"]}");
	add("10611086", "{\"term\":\"crap-shooter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10611086\"]}");
	add("10611086", "{\"term\":\"shooter\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"10171603\", \"10610889\", \"10611086\", \"10612523\", \"04403228\"]}");
	add("10611219", "{\"term\":\"shopaholic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10611219\"]}");
	add("10611357", "{\"term\":\"shop boy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10611357\"]}");
	add("10611457", "{\"term\":\"shop girl\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10611457\"]}");
	add("10611560", "{\"term\":\"market keeper\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10611560\"]}");
	add("10611560", "{\"term\":\"shopkeeper\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10611560\"]}");
	add("10611560", "{\"term\":\"storekeeper\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10611560\"]}");
	add("10611560", "{\"term\":\"tradesman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10611560\"]}");
	add("10611805", "{\"term\":\"shopper\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10612003\", \"10611805\"]}");
	add("10612003", "{\"term\":\"shopper\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10612003\", \"10611805\"]}");
	add("10612219", "{\"term\":\"shop steward\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10612219\"]}");
	add("10612219", "{\"term\":\"steward\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"10003828\", \"10612219\", \"10675033\", \"10675169\", \"10674881\"]}");
	add("10612394", "{\"term\":\"shortstop\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00725235\", \"10612394\"]}");
	add("10612523", "{\"term\":\"shooter\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"10171603\", \"10610889\", \"10611086\", \"10612523\", \"04403228\"]}");
	add("10612523", "{\"term\":\"shot\", \"synsetCount\":17, \"upperType\":\"NOUN\", \"ids\":[\"00104410\", \"00790134\", \"00790293\", \"01178123\", \"04213050\", \"04213137\", \"04255717\", \"05811946\", \"06780713\", \"13795390\", \"00698618\", \"06627082\", \"10612523\", \"14509257\", \"00566339\", \"04212826\", \"00123481\"]}");
	add("10612800", "{\"term\":\"gun\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00124250\", \"02673313\", \"03461243\", \"10171603\", \"10612800\", \"02749370\", \"03472916\"]}");
	add("10612800", "{\"term\":\"gunman\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10612800\", \"10171603\"]}");
	add("10612929", "{\"term\":\"shot putter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10612929\"]}");
	add("10613026", "{\"term\":\"shoveler\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01851617\", \"10613026\"]}");
	add("10613026", "{\"term\":\"shoveller\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01851617\", \"10613026\"]}");
	add("10613153", "{\"term\":\"impresario\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10613153\"]}");
	add("10613153", "{\"term\":\"promoter\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10613153\", \"10501805\"]}");
	add("10613153", "{\"term\":\"showman\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10613153\", \"10613451\"]}");
	add("10613451", "{\"term\":\"showman\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10613153\", \"10613451\"]}");
	add("10613555", "{\"term\":\"shrew\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01894274\", \"10613555\"]}");
	add("10613555", "{\"term\":\"termagant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10613555\"]}");
	add("10613692", "{\"term\":\"shudra\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08324370\", \"10613692\"]}");
	add("10613692", "{\"term\":\"sudra\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08324370\", \"10613692\"]}");
	add("10613816", "{\"term\":\"shuffler\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10613816\", \"10613931\"]}");
	add("10613931", "{\"term\":\"shuffler\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10613816\", \"10613931\"]}");
	add("10614042", "{\"term\":\"shutterbug\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10614042\"]}");
	add("10614123", "{\"term\":\"shrinking violet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10614123\"]}");
	add("10614123", "{\"term\":\"shy person\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10614123\"]}");
	add("10614265", "{\"term\":\"pettifogger\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10520788\", \"10614265\"]}");
	add("10614265", "{\"term\":\"shyster\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10614265\"]}");
	add("10614420", "{\"term\":\"conjoined twin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10614420\"]}");
	add("10614420", "{\"term\":\"siamese twin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10614420\"]}");
	add("10614572", "{\"term\":\"sib\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10255811\", \"10614572\"]}");
	add("10614572", "{\"term\":\"sibling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10614572\"]}");
	add("10614769", "{\"term\":\"sibyl\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10614769\", \"10614959\"]}");
	add("10614959", "{\"term\":\"sibyl\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10614769\", \"10614959\"]}");
	add("10615055", "{\"term\":\"diseased person\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10615055\"]}");
	add("10615055", "{\"term\":\"sick person\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10615055\"]}");
	add("10615055", "{\"term\":\"sufferer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10316279\", \"10615055\"]}");
	add("10615680", "{\"term\":\"side judge\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10615680\"]}");
	add("10615756", "{\"term\":\"sidesman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10615756\"]}");
	add("10615925", "{\"term\":\"sightreader\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10615925\"]}");
	add("10616097", "{\"term\":\"excursionist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10616097\"]}");
	add("10616097", "{\"term\":\"rubberneck\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10560663\", \"10616097\"]}");
	add("10616097", "{\"term\":\"sightseer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10616097\"]}");
	add("10616097", "{\"term\":\"tripper\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04492482\", \"10616097\", \"10686480\", \"10749575\"]}");
	add("10616307", "{\"term\":\"signaler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10616307\"]}");
	add("10616307", "{\"term\":\"signaller\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10616307\"]}");
	add("10616499", "{\"term\":\"signalman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10616499\"]}");
	add("10616642", "{\"term\":\"signatory\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10616642\"]}");
	add("10616642", "{\"term\":\"signer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10616642\", \"10616913\"]}");
	add("10616913", "{\"term\":\"signer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10616642\", \"10616913\"]}");
	add("10617050", "{\"term\":\"sign painter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10617050\"]}");
	add("10617153", "{\"term\":\"signior\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10617153\"]}");
	add("10617153", "{\"term\":\"signor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10617153\"]}");
	add("10617297", "{\"term\":\"signora\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06353732\", \"10617297\"]}");
	add("10617421", "{\"term\":\"signore\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10617421\"]}");
	add("10617589", "{\"term\":\"signorina\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06353860\", \"10617589\"]}");
	add("10617757", "{\"term\":\"sikh\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10617757\"]}");
	add("10617867", "{\"term\":\"silent partner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10617867\"]}");
	add("10617867", "{\"term\":\"sleeping partner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10617867\"]}");
	add("10618049", "{\"term\":\"silly\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10618049\"]}");
	add("10618157", "{\"term\":\"silver-worker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10618157\"]}");
	add("10618157", "{\"term\":\"silversmith\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10618157\"]}");
	add("10618157", "{\"term\":\"silverworker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10618157\"]}");
	add("10618312", "{\"term\":\"addle-head\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10618312\"]}");
	add("10618312", "{\"term\":\"addlehead\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10618312\"]}");
	add("10618312", "{\"term\":\"birdbrain\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10618312\"]}");
	add("10618312", "{\"term\":\"loon\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10618312\", \"02051742\", \"10291148\"]}");
	add("10618476", "{\"term\":\"simeon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10618476\"]}");
	add("10618623", "{\"term\":\"simperer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10618623\"]}");
	add("10618762", "{\"term\":\"simple\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10618762\", \"12233207\"]}");
	add("10618762", "{\"term\":\"simpleton\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10618762\"]}");
	add("10619214", "{\"term\":\"singer\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"11322610\", \"11322767\", \"10619214\"]}");
	add("10619214", "{\"term\":\"vocaliser\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10619214\", \"10763332\"]}");
	add("10619214", "{\"term\":\"vocalist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10619214\"]}");
	add("10619214", "{\"term\":\"vocalizer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10619214\", \"10763332\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }