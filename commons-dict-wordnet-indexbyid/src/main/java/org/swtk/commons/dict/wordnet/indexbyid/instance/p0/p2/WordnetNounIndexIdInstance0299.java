package org.swtk.commons.dict.wordnet.indexbyid.instance.p0.p2;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0299 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("02990060", "{\"term\":\"catwalk\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02990060\", \"02990212\"]}");
	add("02990212", "{\"term\":\"catwalk\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02990060\", \"02990212\"]}");
	add("02990375", "{\"term\":\"causeway\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02990375\"]}");
	add("02990502", "{\"term\":\"cauterant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02990502\"]}");
	add("02990502", "{\"term\":\"cautery\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00669355\", \"02990502\"]}");
	add("02990834", "{\"term\":\"cavalier hat\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02990834\"]}");
	add("02990834", "{\"term\":\"slouch hat\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02990834\"]}");
	add("02990947", "{\"term\":\"cavalry sword\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02990947\"]}");
	add("02990947", "{\"term\":\"saber\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02990947\", \"04128605\"]}");
	add("02990947", "{\"term\":\"sabre\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02990947\", \"04128605\"]}");
	add("02991161", "{\"term\":\"cavetto\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02991161\"]}");
	add("02991278", "{\"term\":\"cavity wall\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02991278\"]}");
	add("02991405", "{\"term\":\"c battery\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02991405\"]}");
	add("02991521", "{\"term\":\"c-clamp\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02991521\"]}");
	add("02991611", "{\"term\":\"cd drive\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02991611\"]}");
	add("02991759", "{\"term\":\"cd player\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02991759\"]}");
	add("02991941", "{\"term\":\"cd-r\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02991941\"]}");
	add("02991941", "{\"term\":\"cd-wo\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02991941\"]}");
	add("02991941", "{\"term\":\"compact disc recordable\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02991941\"]}");
	add("02991941", "{\"term\":\"compact disc write-once\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02991941\"]}");
	add("02992134", "{\"term\":\"cd-rom\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02992134\"]}");
	add("02992134", "{\"term\":\"compact disc read-only memory\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02992134\"]}");
	add("02992418", "{\"term\":\"cd-rom drive\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02992418\"]}");
	add("02992554", "{\"term\":\"cedar chest\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02992554\"]}");
	add("02992633", "{\"term\":\"cefadroxil\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02992633\"]}");
	add("02992633", "{\"term\":\"ultracef\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02992633\"]}");
	add("02992768", "{\"term\":\"cefobid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02992768\"]}");
	add("02992768", "{\"term\":\"cefoperazone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02992768\"]}");
	add("02992930", "{\"term\":\"cefotaxime\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02992930\"]}");
	add("02992930", "{\"term\":\"claforan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02992930\"]}");
	add("02993140", "{\"term\":\"ceftazidime\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02993140\"]}");
	add("02993140", "{\"term\":\"fortaz\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02993140\"]}");
	add("02993140", "{\"term\":\"tazicef\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02993140\"]}");
	add("02993348", "{\"term\":\"ceftriaxone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02993348\"]}");
	add("02993348", "{\"term\":\"rocephin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02993348\"]}");
	add("02993558", "{\"term\":\"ceftin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02993558\"]}");
	add("02993558", "{\"term\":\"cefuroxime\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02993558\"]}");
	add("02993558", "{\"term\":\"zinacef\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02993558\"]}");
	add("02993828", "{\"term\":\"ceiling\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"05139932\", \"06670391\", \"05139807\", \"02993828\"]}");
	add("02994016", "{\"term\":\"celebrex\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02994016\"]}");
	add("02994016", "{\"term\":\"celecoxib\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02994016\"]}");
	add("02994213", "{\"term\":\"celesta\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02994213\"]}");
	add("02994375", "{\"term\":\"celestial globe\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02994375\"]}");
	add("02994503", "{\"term\":\"cell\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"02994757\", \"02995010\", \"02995984\", \"08375521\", \"02994503\", \"00006484\", \"02995166\"]}");
	add("02994503", "{\"term\":\"electric cell\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02994503\"]}");
	add("02994757", "{\"term\":\"cell\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"02994757\", \"02995010\", \"02995984\", \"08375521\", \"02994503\", \"00006484\", \"02995166\"]}");
	add("02994757", "{\"term\":\"jail cell\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02994757\"]}");
	add("02994757", "{\"term\":\"prison cell\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02994757\"]}");
	add("02995010", "{\"term\":\"cell\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"02994757\", \"02995010\", \"02995984\", \"08375521\", \"02994503\", \"00006484\", \"02995166\"]}");
	add("02995010", "{\"term\":\"cubicle\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02877081\", \"02971792\", \"02995010\"]}");
	add("02995166", "{\"term\":\"cell\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"02994757\", \"02995010\", \"02995984\", \"08375521\", \"02994503\", \"00006484\", \"02995166\"]}");
	add("02995302", "{\"term\":\"cellar\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02995302\", \"04115231\", \"02803656\"]}");
	add("02995302", "{\"term\":\"wine cellar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02995302\"]}");
	add("02995405", "{\"term\":\"cellarage\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02995405\", \"13341788\"]}");
	add("02995487", "{\"term\":\"cellblock\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02995487\"]}");
	add("02995487", "{\"term\":\"ward\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"02995487\", \"11393892\", \"11394080\", \"11394276\", \"04557205\", \"08690135\", \"10786688\"]}");
	add("02995666", "{\"term\":\"cello\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02995666\"]}");
	add("02995666", "{\"term\":\"violoncello\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02995666\"]}");
	add("02995823", "{\"term\":\"cellophane\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02995823\"]}");
	add("02995984", "{\"term\":\"cell\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"02994757\", \"02995010\", \"02995984\", \"08375521\", \"02994503\", \"00006484\", \"02995166\"]}");
	add("02995984", "{\"term\":\"cellphone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02995984\"]}");
	add("02995984", "{\"term\":\"cellular phone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02995984\"]}");
	add("02995984", "{\"term\":\"cellular telephone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02995984\"]}");
	add("02995984", "{\"term\":\"mobile phone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02995984\"]}");
	add("02996250", "{\"term\":\"cellulose tape\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02996250\"]}");
	add("02996250", "{\"term\":\"scotch tape\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02996250\"]}");
	add("02996250", "{\"term\":\"sellotape\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02996250\"]}");
	add("02996536", "{\"term\":\"celtic cross\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02996536\"]}");
	add("02996649", "{\"term\":\"cenotaph\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02996649\"]}");
	add("02996649", "{\"term\":\"empty tomb\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02996649\"]}");
	add("02996823", "{\"term\":\"censer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02996823\"]}");
	add("02996823", "{\"term\":\"thurible\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02996823\"]}");
	add("02997001", "{\"term\":\"center\", \"synsetCount\":18, \"upperType\":\"NOUN\", \"ids\":[\"00726757\", \"00728798\", \"00729762\", \"03971750\", \"07618221\", \"09924161\", \"08433480\", \"08531106\", \"09923774\", \"09924009\", \"08498843\", \"05471109\", \"05820064\", \"05929717\", \"08538999\", \"02997001\", \"02997788\", \"08540894\"]}");
	add("02997001", "{\"term\":\"centre\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"02997001\", \"05471109\", \"05820064\", \"05929717\", \"07618221\", \"08531106\", \"08538999\", \"08540894\", \"08961199\"]}");
	add("02997370", "{\"term\":\"center bit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02997370\"]}");
	add("02997370", "{\"term\":\"centre bit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02997370\"]}");
	add("02997543", "{\"term\":\"centerboard\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02997543\"]}");
	add("02997543", "{\"term\":\"centreboard\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02997543\"]}");
	add("02997543", "{\"term\":\"drop keel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02997543\"]}");
	add("02997543", "{\"term\":\"sliding keel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02997543\"]}");
	add("02997788", "{\"term\":\"center\", \"synsetCount\":18, \"upperType\":\"NOUN\", \"ids\":[\"00726757\", \"00728798\", \"00729762\", \"03971750\", \"07618221\", \"09924161\", \"08433480\", \"08531106\", \"09923774\", \"09924009\", \"08498843\", \"05471109\", \"05820064\", \"05929717\", \"08538999\", \"02997001\", \"02997788\", \"08540894\"]}");
	add("02997788", "{\"term\":\"center field\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00725935\", \"02997788\"]}");
	add("02997788", "{\"term\":\"centerfield\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00725935\", \"02997788\"]}");
	add("02997988", "{\"term\":\"centerpiece\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02997988\", \"05859857\"]}");
	add("02997988", "{\"term\":\"centrepiece\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02997988\", \"05859857\"]}");
	add("02998180", "{\"term\":\"center punch\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02998180\"]}");
	add("02998350", "{\"term\":\"centigrade thermometer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02998350\"]}");
	add("02998465", "{\"term\":\"central\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02998465\"]}");
	add("02998465", "{\"term\":\"exchange\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"00167884\", \"00168099\", \"00197334\", \"01095009\", \"01169007\", \"03307432\", \"02998465\", \"01111372\", \"01168748\", \"07149414\", \"11429652\"]}");
	add("02998465", "{\"term\":\"telephone exchange\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02998465\"]}");
	add("02998758", "{\"term\":\"central heating\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02998758\"]}");
	add("02998952", "{\"term\":\"c.p.u.\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02998952\"]}");
	add("02998952", "{\"term\":\"central processing unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02998952\"]}");
	add("02998952", "{\"term\":\"central processor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02998952\"]}");
	add("02998952", "{\"term\":\"cpu\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02998952\"]}");
	add("02998952", "{\"term\":\"mainframe\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02998952\", \"03717250\"]}");
	add("02998952", "{\"term\":\"processor\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02998952\", \"10497540\", \"08082773\"]}");
	add("02999377", "{\"term\":\"centrex\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02999377\"]}");
	add("02999478", "{\"term\":\"centrifugal pump\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02999478\"]}");
	add("02999605", "{\"term\":\"centrifuge\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02999605\"]}");
	add("02999605", "{\"term\":\"extractor\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02976173\", \"02999605\", \"03313097\"]}");
	add("02999605", "{\"term\":\"separator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02999605\"]}");
	add("02999856", "{\"term\":\"cephalexin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02999856\"]}");
	add("02999856", "{\"term\":\"keflex\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02999856\"]}");
	add("02999856", "{\"term\":\"keflin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02999856\"]}");
	add("02999856", "{\"term\":\"keftab\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02999856\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }