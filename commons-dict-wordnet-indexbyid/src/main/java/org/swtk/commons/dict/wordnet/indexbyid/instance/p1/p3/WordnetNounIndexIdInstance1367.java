package org.swtk.commons.dict.wordnet.indexbyid.instance.p1.p3;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance1367 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("13670214", "{\"term\":\"g\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"06844869\", \"13611530\", \"13650222\", \"13650416\", \"13670214\", \"13772984\", \"14854134\", \"14916289\", \"13745822\"]}");
	add("13670214", "{\"term\":\"g-force\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13670214\"]}");
	add("13670214", "{\"term\":\"gee\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13670214\"]}");
	add("13670411", "{\"term\":\"gal\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10137508\", \"13670411\", \"13641045\"]}");
	add("13670565", "{\"term\":\"beaufort scale\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13670565\", \"13872871\"]}");
	add("13670672", "{\"term\":\"astronomy unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13670672\"]}");
	add("13670886", "{\"term\":\"metric linear unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13670886\"]}");
	add("13671244", "{\"term\":\"nautical linear unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13671244\"]}");
	add("13671409", "{\"term\":\"in\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"09107288\", \"14665401\", \"13671409\"]}");
	add("13671409", "{\"term\":\"inch\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13735405\", \"13671409\"]}");
	add("13671663", "{\"term\":\"foot\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"03383288\", \"07109509\", \"08407114\", \"10120847\", \"00285509\", \"02324865\", \"03391862\", \"02156097\", \"08528642\", \"13671663\", \"05570899\"]}");
	add("13671663", "{\"term\":\"ft\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13671663\"]}");
	add("13671843", "{\"term\":\"footer\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06776955\", \"10431800\", \"13671843\"]}");
	add("13672065", "{\"term\":\"pace\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"13672065\", \"15308315\", \"00286733\", \"05065731\", \"13779389\", \"15305715\"]}");
	add("13672065", "{\"term\":\"yard\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"04617860\", \"04618033\", \"04618511\", \"08702414\", \"13639357\", \"13772984\", \"08702032\", \"04618236\", \"13672065\"]}");
	add("13672353", "{\"term\":\"yarder\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04618827\", \"13672353\"]}");
	add("13672539", "{\"term\":\"perch\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"02558494\", \"02559477\", \"07796149\", \"08644333\", \"13635960\", \"13672539\", \"03921038\"]}");
	add("13672539", "{\"term\":\"pole\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"03983318\", \"03983516\", \"04420286\", \"08638456\", \"08638674\", \"13635960\", \"13672539\", \"05959426\", \"09746969\", \"03983015\"]}");
	add("13672539", "{\"term\":\"rod\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"03432112\", \"05464032\", \"13635960\", \"13672539\", \"01380243\", \"04107268\"]}");
	add("13672690", "{\"term\":\"furlong\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13672690\"]}");
	add("13672836", "{\"term\":\"international mile\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13672836\"]}");
	add("13672836", "{\"term\":\"land mile\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13672836\"]}");
	add("13672836", "{\"term\":\"mi\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"06881632\", \"08363582\", \"08364133\", \"09122118\", \"13672836\", \"13682449\", \"13682724\", \"14136503\"]}");
	add("13672836", "{\"term\":\"mile\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"07484465\", \"13676880\", \"13677032\", \"13682724\", \"13682973\", \"13798542\", \"13682449\", \"13672836\"]}");
	add("13672836", "{\"term\":\"stat mi\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13672836\"]}");
	add("13672836", "{\"term\":\"statute mile\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13672836\"]}");
	add("13673138", "{\"term\":\"miler\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10335219\", \"13673138\"]}");
	add("13673422", "{\"term\":\"880 yards\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13673422\"]}");
	add("13673422", "{\"term\":\"half mile\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13673422\"]}");
	add("13673549", "{\"term\":\"440 yards\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13673549\"]}");
	add("13673549", "{\"term\":\"quarter mile\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13673549\"]}");
	add("13673684", "{\"term\":\"league\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13673684\", \"08322044\", \"08248105\"]}");
	add("13673821", "{\"term\":\"ligne\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13673821\"]}");
	add("13673953", "{\"term\":\"nail\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13673953\", \"03810284\", \"05589324\"]}");
	add("13674061", "{\"term\":\"archine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13674061\"]}");
	add("13674147", "{\"term\":\"coss\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13674147\"]}");
	add("13674147", "{\"term\":\"kos\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13674147\"]}");
	add("13674279", "{\"term\":\"vara\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13674279\"]}");
	add("13674417", "{\"term\":\"verst\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13674417\"]}");
	add("13674504", "{\"term\":\"cable\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"02937374\", \"06288991\", \"13674504\", \"02937226\", \"02937552\", \"06285748\"]}");
	add("13674504", "{\"term\":\"cable\u0027s length\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13674504\"]}");
	add("13674504", "{\"term\":\"cable length\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13674504\"]}");
	add("13674612", "{\"term\":\"chain\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"03003364\", \"03003625\", \"09426609\", \"10910781\", \"13674612\", \"03003540\", \"08074652\", \"03003017\", \"09263527\", \"08392981\"]}");
	add("13674772", "{\"term\":\"gunter\u0027s chain\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13674772\"]}");
	add("13674879", "{\"term\":\"engineer\u0027s chain\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13674879\"]}");
	add("13674967", "{\"term\":\"cubit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13674967\"]}");
	add("13675079", "{\"term\":\"digit\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"05573730\", \"13675079\", \"13763162\"]}");
	add("13675079", "{\"term\":\"finger\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03346098\", \"13675079\", \"05574137\"]}");
	add("13675079", "{\"term\":\"finger\u0027s breadth\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13675079\"]}");
	add("13675079", "{\"term\":\"fingerbreadth\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13675079\"]}");
	add("13675233", "{\"term\":\"fistmele\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13675233\"]}");
	add("13675439", "{\"term\":\"body length\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13675439\"]}");
	add("13675520", "{\"term\":\"extremum\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13675520\", \"08586694\"]}");
	add("13675520", "{\"term\":\"peak\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"02841963\", \"08695539\", \"13925175\", \"08635538\", \"13963489\", \"15320288\", \"13675520\"]}");
	add("13675711", "{\"term\":\"hand\", \"synsetCount\":14, \"upperType\":\"NOUN\", \"ids\":[\"01210950\", \"02442881\", \"06704983\", \"09894819\", \"10178099\", \"13675711\", \"03487606\", \"05861538\", \"07973501\", \"08667732\", \"05645810\", \"06415036\", \"10196310\", \"05572223\"]}");
	add("13675850", "{\"term\":\"handbreadth\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13675850\"]}");
	add("13675850", "{\"term\":\"handsbreadth\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13675850\"]}");
	add("13675998", "{\"term\":\"head\", \"synsetCount\":33, \"upperType\":\"NOUN\", \"ids\":[\"00856505\", \"03254982\", \"03506432\", \"03506664\", \"03506758\", \"03506955\", \"04065833\", \"05298255\", \"05603592\", \"06355341\", \"06796625\", \"06834918\", \"07387379\", \"07433422\", \"08590014\", \"09324750\", \"09324937\", \"09422467\", \"10182373\", \"10182947\", \"10494230\", \"13154545\", \"13675998\", \"14335908\", \"06302589\", \"08525470\", \"08681922\", \"11516007\", \"08499282\", \"10182584\", \"05619057\", \"01320872\", \"05546258\"]}");
	add("13676189", "{\"term\":\"lea\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08633625\", \"13676189\"]}");
	add("13676292", "{\"term\":\"li\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13676292\", \"14667971\"]}");
	add("13676395", "{\"term\":\"link\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"03679596\", \"04049875\", \"06271913\", \"06598647\", \"13676395\", \"13893444\", \"14442568\", \"03679297\", \"13814904\"]}");
	add("13676507", "{\"term\":\"mesh\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00141213\", \"03825135\", \"05739007\", \"07352714\", \"13676507\"]}");
	add("13676707", "{\"term\":\"mil\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"13632325\", \"13644955\", \"13676707\", \"13676880\", \"13715886\"]}");
	add("13676880", "{\"term\":\"mil\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"13632325\", \"13644955\", \"13676707\", \"13676880\", \"13715886\"]}");
	add("13676880", "{\"term\":\"mile\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"07484465\", \"13676880\", \"13677032\", \"13682724\", \"13682973\", \"13798542\", \"13682449\", \"13672836\"]}");
	add("13676880", "{\"term\":\"swedish mile\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13676880\"]}");
	add("13677032", "{\"term\":\"mile\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"07484465\", \"13676880\", \"13677032\", \"13682724\", \"13682973\", \"13798542\", \"13682449\", \"13672836\"]}");
	add("13677032", "{\"term\":\"roman mile\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13677032\"]}");
	add("13677188", "{\"term\":\"roman pace\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13677188\"]}");
	add("13677408", "{\"term\":\"geometric pace\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13677408\"]}");
	add("13677526", "{\"term\":\"military pace\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13677526\"]}");
	add("13677693", "{\"term\":\"palm\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"06719615\", \"12602979\", \"13677693\", \"05573329\"]}");
	add("13677822", "{\"term\":\"span\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00350039\", \"02901994\", \"13677822\", \"13765745\", \"05094268\", \"15159292\"]}");
	add("13677963", "{\"term\":\"survey mile\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13677963\"]}");
	add("13678138", "{\"term\":\"light-year\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13678138\"]}");
	add("13678138", "{\"term\":\"light year\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13678138\"]}");
	add("13678367", "{\"term\":\"light hour\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13678367\"]}");
	add("13678531", "{\"term\":\"light minute\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13678531\"]}");
	add("13678698", "{\"term\":\"light second\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13678698\"]}");
	add("13678862", "{\"term\":\"astronomical unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13678862\"]}");
	add("13678862", "{\"term\":\"au\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13678862\", \"14662977\"]}");
	add("13679107", "{\"term\":\"parsec\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13679107\"]}");
	add("13679107", "{\"term\":\"secpar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13679107\"]}");
	add("13679309", "{\"term\":\"femtometer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13679309\"]}");
	add("13679309", "{\"term\":\"femtometre\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13679309\"]}");
	add("13679309", "{\"term\":\"fermi\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10989978\", \"13679309\"]}");
	add("13679505", "{\"term\":\"micromicron\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13679505\"]}");
	add("13679505", "{\"term\":\"picometer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13679505\"]}");
	add("13679505", "{\"term\":\"picometre\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13679505\"]}");
	add("13679721", "{\"term\":\"a\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"05408203\", \"06844227\", \"13658855\", \"14731050\", \"14853735\", \"15114370\", \"13679721\"]}");
	add("13679721", "{\"term\":\"angstrom\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13679721\"]}");
	add("13679721", "{\"term\":\"angstrom unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13679721\"]}");
	add("13679972", "{\"term\":\"micromillimeter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13679972\"]}");
	add("13679972", "{\"term\":\"micromillimetre\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13679972\"]}");
	add("13679972", "{\"term\":\"millimicron\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13679972\"]}");
	add("13679972", "{\"term\":\"nanometer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13679972\"]}");
	add("13679972", "{\"term\":\"nanometre\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13679972\"]}");
	add("13679972", "{\"term\":\"nm\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09137349\", \"13679972\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }