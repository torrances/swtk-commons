package org.swtk.commons.dict.wordnet.indexbyid.instance.p1.p3;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance1331 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("13310043", "{\"term\":\"profit sharing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13310043\"]}");
	add("13310182", "{\"term\":\"cut\", \"synsetCount\":20, \"upperType\":\"NOUN\", \"ids\":[\"00068074\", \"00353157\", \"00360064\", \"00387723\", \"00388465\", \"00490486\", \"00566846\", \"00572481\", \"01228486\", \"03157409\", \"05758945\", \"06439886\", \"06625218\", \"06734210\", \"07669003\", \"14310615\", \"14453311\", \"03157285\", \"06630741\", \"13310182\"]}");
	add("13310329", "{\"term\":\"rake-off\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13310329\"]}");
	add("13310329", "{\"term\":\"vigorish\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13310329\", \"13341067\"]}");
	add("13310490", "{\"term\":\"allocation\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00165400\", \"01085569\", \"13310490\"]}");
	add("13310490", "{\"term\":\"allotment\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01085569\", \"13310490\"]}");
	add("13310653", "{\"term\":\"reallocation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01086104\", \"13310653\"]}");
	add("13310767", "{\"term\":\"quota\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06673141\", \"13310767\", \"13620591\"]}");
	add("13310868", "{\"term\":\"appropriation\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00084795\", \"00374226\", \"13310868\"]}");
	add("13311025", "{\"term\":\"reimbursement\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13311025\"]}");
	add("13311308", "{\"term\":\"emolument\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13311308\"]}");
	add("13311589", "{\"term\":\"blood money\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13302948\", \"13305207\", \"13311589\"]}");
	add("13311699", "{\"term\":\"amends\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00096149\", \"13311699\"]}");
	add("13311699", "{\"term\":\"damages\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13311699\"]}");
	add("13311699", "{\"term\":\"indemnification\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00260737\", \"13311699\"]}");
	add("13311699", "{\"term\":\"indemnity\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13311699\", \"14553010\", \"14563428\"]}");
	add("13311699", "{\"term\":\"redress\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00260020\", \"13311699\"]}");
	add("13311699", "{\"term\":\"restitution\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00090171\", \"00271119\", \"13311699\"]}");
	add("13312014", "{\"term\":\"relief\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"01077491\", \"04080781\", \"00355710\", \"01090092\", \"07371701\", \"15299060\", \"01211710\", \"10667676\", \"13312014\", \"14469215\", \"07508420\"]}");
	add("13312212", "{\"term\":\"counterbalance\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13312212\", \"13920689\", \"03123190\"]}");
	add("13312212", "{\"term\":\"offset\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"04183808\", \"06693315\", \"11435835\", \"13148602\", \"13312212\", \"15290329\"]}");
	add("13312379", "{\"term\":\"actual damages\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13312379\"]}");
	add("13312379", "{\"term\":\"compensatory damages\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13312379\"]}");
	add("13312379", "{\"term\":\"general damages\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13312379\"]}");
	add("13312637", "{\"term\":\"nominal damages\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13312637\"]}");
	add("13312854", "{\"term\":\"exemplary damages\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13312854\"]}");
	add("13312854", "{\"term\":\"punitive damages\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13312854\"]}");
	add("13312854", "{\"term\":\"smart money\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08418927\", \"13312854\", \"13364138\"]}");
	add("13313127", "{\"term\":\"double damages\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13313127\"]}");
	add("13313267", "{\"term\":\"treble damages\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13313267\"]}");
	add("13313413", "{\"term\":\"reparation\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00096149\", \"00267650\", \"13313413\", \"13313636\"]}");
	add("13313636", "{\"term\":\"reparation\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00096149\", \"00267650\", \"13313413\", \"13313636\"]}");
	add("13313810", "{\"term\":\"atonement\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00095941\", \"13313810\"]}");
	add("13313810", "{\"term\":\"expiation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00095941\", \"13313810\"]}");
	add("13313810", "{\"term\":\"satisfaction\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"01074489\", \"13371012\", \"13313810\", \"14010164\", \"07546643\"]}");
	add("13314012", "{\"term\":\"residual\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13314012\", \"13833030\"]}");
	add("13314269", "{\"term\":\"poverty level\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13314269\"]}");
	add("13314269", "{\"term\":\"poverty line\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13314269\"]}");
	add("13314400", "{\"term\":\"allowance\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"01144162\", \"13391388\", \"04757264\", \"13295115\", \"13314400\", \"13307277\"]}");
	add("13314535", "{\"term\":\"breakage\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00377208\", \"13314535\", \"13777088\"]}");
	add("13314648", "{\"term\":\"costs\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13314648\"]}");
	add("13314775", "{\"term\":\"per diem\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13314775\"]}");
	add("13314924", "{\"term\":\"travel allowance\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13314924\"]}");
	add("13314924", "{\"term\":\"travel reimbursement\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13314924\"]}");
	add("13315052", "{\"term\":\"mileage\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13315052\", \"13845499\", \"05138459\"]}");
	add("13315158", "{\"term\":\"stipend\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13315158\"]}");
	add("13315325", "{\"term\":\"privy purse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13315325\"]}");
	add("13315426", "{\"term\":\"prebend\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13315426\"]}");
	add("13315526", "{\"term\":\"annuity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13315526\"]}");
	add("13315526", "{\"term\":\"rente\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13315526\"]}");
	add("13315786", "{\"term\":\"annuity in advance\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13315786\"]}");
	add("13316048", "{\"term\":\"ordinary annuity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13316048\"]}");
	add("13316206", "{\"term\":\"reversionary annuity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13316206\"]}");
	add("13316206", "{\"term\":\"survivorship annuity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13316206\"]}");
	add("13316383", "{\"term\":\"tontine\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13316383\", \"13368765\"]}");
	add("13316680", "{\"term\":\"rent\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00392215\", \"13317293\", \"09433806\", \"13316680\"]}");
	add("13316995", "{\"term\":\"ground rent\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13316995\"]}");
	add("13317112", "{\"term\":\"peppercorn rent\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13317112\"]}");
	add("13317217", "{\"term\":\"rack rent\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13317217\"]}");
	add("13317293", "{\"term\":\"economic rent\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13317293\"]}");
	add("13317293", "{\"term\":\"rent\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00392215\", \"13317293\", \"09433806\", \"13316680\"]}");
	add("13317483", "{\"term\":\"payback\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01238028\", \"13317483\"]}");
	add("13317616", "{\"term\":\"installment buying\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13317616\"]}");
	add("13317616", "{\"term\":\"installment plan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13317616\"]}");
	add("13317616", "{\"term\":\"time plan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13317616\"]}");
	add("13317775", "{\"term\":\"hire-purchase\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13317775\"]}");
	add("13317775", "{\"term\":\"never-never\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08522286\", \"13317775\"]}");
	add("13317922", "{\"term\":\"benefit\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06905573\", \"05149888\", \"13317922\"]}");
	add("13318120", "{\"term\":\"cost-of-living benefit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13318120\"]}");
	add("13318277", "{\"term\":\"death benefit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13318277\"]}");
	add("13318420", "{\"term\":\"advance death benefit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13318420\"]}");
	add("13318618", "{\"term\":\"viatical settlement\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00229629\", \"13318618\"]}");
	add("13318763", "{\"term\":\"disability benefit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13318763\"]}");
	add("13318873", "{\"term\":\"sick benefit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13318873\"]}");
	add("13318873", "{\"term\":\"sickness benefit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13318873\"]}");
	add("13319034", "{\"term\":\"fringe benefit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13319034\"]}");
	add("13319034", "{\"term\":\"perk\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13319034\"]}");
	add("13319034", "{\"term\":\"perquisite\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05186242\", \"13319034\"]}");
	add("13319310", "{\"term\":\"apanage\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13275342\", \"13319310\"]}");
	add("13319310", "{\"term\":\"appanage\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13275342\", \"13319310\"]}");
	add("13319560", "{\"term\":\"tax benefit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13319560\"]}");
	add("13319560", "{\"term\":\"tax break\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13319560\"]}");
	add("13319724", "{\"term\":\"backsheesh\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13319724\"]}");
	add("13319724", "{\"term\":\"baksheesh\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13319724\"]}");
	add("13319724", "{\"term\":\"bakshis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13319724\"]}");
	add("13319724", "{\"term\":\"bakshish\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13319724\"]}");
	add("13319724", "{\"term\":\"gratuity\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13289043\", \"13319724\"]}");
	add("13319724", "{\"term\":\"pourboire\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13319724\"]}");
	add("13319724", "{\"term\":\"tip\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"08635538\", \"13925175\", \"06664322\", \"13319724\", \"08680894\"]}");
	add("13319958", "{\"term\":\"christmas box\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13319958\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }