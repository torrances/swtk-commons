package org.swtk.commons.dict.wordnet.indexbyid.instance.p0.p8;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0864 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("08640161", "{\"term\":\"military position\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08640161\"]}");
	add("08640161", "{\"term\":\"position\", \"synsetCount\":16, \"upperType\":\"NOUN\", \"ids\":[\"00084268\", \"00722683\", \"06495143\", \"06796122\", \"06206019\", \"13948785\", \"01053255\", \"00723730\", \"08639776\", \"05081943\", \"00587299\", \"13968971\", \"05087073\", \"06218486\", \"08640161\", \"08639173\"]}");
	add("08640338", "{\"term\":\"anomaly\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08640338\", \"09629719\", \"14529423\"]}");
	add("08640525", "{\"term\":\"site\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06370600\", \"08640525\", \"08668822\"]}");
	add("08640525", "{\"term\":\"situation\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00587299\", \"08640525\", \"14434647\", \"13948785\", \"13950416\"]}");
	add("08640835", "{\"term\":\"active site\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08640835\"]}");
	add("08640999", "{\"term\":\"close quarters\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08640999\"]}");
	add("08641143", "{\"term\":\"locus\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08017323\", \"08641143\", \"08695366\"]}");
	add("08641251", "{\"term\":\"locus of infection\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08641251\"]}");
	add("08641375", "{\"term\":\"restriction site\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08641375\"]}");
	add("08641502", "{\"term\":\"setting\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"03798059\", \"03960019\", \"08641502\", \"14536419\", \"03778801\", \"14536861\", \"08585785\"]}");
	add("08641670", "{\"term\":\"juxtaposition\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08641670\", \"01053725\"]}");
	add("08641771", "{\"term\":\"lie\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08641771\", \"11151798\", \"06769542\"]}");
	add("08641960", "{\"term\":\"post\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"00319012\", \"06275051\", \"07272483\", \"08480074\", \"11263552\", \"11263710\", \"11263897\", \"03994528\", \"00587299\", \"03768938\", \"08641960\"]}");
	add("08641960", "{\"term\":\"station\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"05064212\", \"08641960\", \"08674221\", \"13970825\", \"04313218\"]}");
	add("08642231", "{\"term\":\"pitch\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"00106924\", \"00338036\", \"00499569\", \"00574701\", \"08533915\", \"14935855\", \"05076368\", \"07263321\", \"08642231\", \"00107092\", \"04992447\"]}");
	add("08642466", "{\"term\":\"landmark\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"05237687\", \"07273987\", \"07432451\", \"08642466\"]}");
	add("08642648", "{\"term\":\"right\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"13362771\", \"04857572\", \"00351826\", \"05572970\", \"08433609\", \"04098951\", \"08642648\", \"05182180\"]}");
	add("08642872", "{\"term\":\"right stage\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08642872\"]}");
	add("08642872", "{\"term\":\"stage right\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08642872\"]}");
	add("08643037", "{\"term\":\"left\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00351994\", \"03659700\", \"05573181\", \"08433285\", \"08643037\"]}");
	add("08643259", "{\"term\":\"left stage\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08643259\"]}");
	add("08643259", "{\"term\":\"stage left\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08643259\"]}");
	add("08643421", "{\"term\":\"back\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00727026\", \"02770438\", \"02770670\", \"02843848\", \"05595824\", \"09849440\", \"08643421\", \"04066813\", \"05566350\"]}");
	add("08643421", "{\"term\":\"rear\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"04066813\", \"05566889\", \"08643421\", \"08647083\", \"08499711\"]}");
	add("08643655", "{\"term\":\"front\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"08481612\", \"08643655\", \"08660207\", \"11480887\", \"14538093\", \"10133352\", \"03403382\", \"05949020\", \"08591221\", \"08591019\"]}");
	add("08643858", "{\"term\":\"municipality\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08242502\", \"08643858\"]}");
	add("08644097", "{\"term\":\"new town\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08644097\"]}");
	add("08644333", "{\"term\":\"perch\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"02558494\", \"02559477\", \"07796149\", \"08644333\", \"13635960\", \"13672539\", \"03921038\"]}");
	add("08644420", "{\"term\":\"potter\u0027s field\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08644420\"]}");
	add("08644522", "{\"term\":\"prefecture\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00597611\", \"08644522\"]}");
	add("08644736", "{\"term\":\"premises\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08644736\"]}");
	add("08644891", "{\"term\":\"associated state\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08644891\"]}");
	add("08644891", "{\"term\":\"protectorate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08644891\"]}");
	add("08645129", "{\"term\":\"quadrant\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04037322\", \"08645129\", \"08645240\", \"08645380\"]}");
	add("08645240", "{\"term\":\"quadrant\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04037322\", \"08645129\", \"08645240\", \"08645380\"]}");
	add("08645380", "{\"term\":\"quadrant\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04037322\", \"08645129\", \"08645240\", \"08645380\"]}");
	add("08645380", "{\"term\":\"quarter-circle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08645380\"]}");
	add("08645494", "{\"term\":\"quarter\", \"synsetCount\":14, \"upperType\":\"NOUN\", \"ids\":[\"01261259\", \"04038076\", \"04323784\", \"10518284\", \"13411417\", \"13644335\", \"13742957\", \"13852365\", \"15231386\", \"15250842\", \"15259739\", \"15283261\", \"08645494\", \"13759620\"]}");
	add("08645716", "{\"term\":\"casbah\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08645716\"]}");
	add("08645716", "{\"term\":\"kasbah\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08645716\"]}");
	add("08645883", "{\"term\":\"medina\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08645883\", \"09016709\"]}");
	add("08645989", "{\"term\":\"queen maud land\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08645989\"]}");
	add("08646153", "{\"term\":\"radius\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"04290516\", \"05601073\", \"08646153\", \"13894177\", \"05109363\"]}");
	add("08646321", "{\"term\":\"rain shadow\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08646321\"]}");
	add("08646496", "{\"term\":\"range\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"04337478\", \"05631411\", \"08016746\", \"08416543\", \"04060330\", \"09426609\", \"08646774\", \"08646496\", \"05132642\"]}");
	add("08646496", "{\"term\":\"reach\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"05631411\", \"00342069\", \"05132642\", \"08646496\"]}");
	add("08646774", "{\"term\":\"range\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"04337478\", \"05631411\", \"08016746\", \"08416543\", \"04060330\", \"09426609\", \"08646774\", \"08646496\", \"05132642\"]}");
	add("08647083", "{\"term\":\"back end\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08647083\"]}");
	add("08647083", "{\"term\":\"backside\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05566889\", \"08647083\"]}");
	add("08647083", "{\"term\":\"rear\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"04066813\", \"05566889\", \"08643421\", \"08647083\", \"08499711\"]}");
	add("08647321", "{\"term\":\"rearward\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08647321\"]}");
	add("08647497", "{\"term\":\"red line\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08647497\"]}");
	add("08647614", "{\"term\":\"part\", \"synsetCount\":13, \"upperType\":\"NOUN\", \"ids\":[\"03938737\", \"00789119\", \"07044205\", \"05263841\", \"05876035\", \"13306199\", \"05937794\", \"00721817\", \"08647614\", \"05679818\", \"09408804\", \"03898588\", \"13831419\"]}");
	add("08647614", "{\"term\":\"region\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"06006992\", \"13781286\", \"08648560\", \"05229188\", \"08647614\"]}");
	add("08648560", "{\"term\":\"region\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"06006992\", \"13781286\", \"08648560\", \"05229188\", \"08647614\"]}");
	add("08649106", "{\"term\":\"possession\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00811363\", \"04869236\", \"08649106\", \"09205421\", \"14431199\", \"00032912\", \"00811126\"]}");
	add("08649325", "{\"term\":\"antipodes\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08649325\"]}");
	add("08649520", "{\"term\":\"rifle range\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04098035\", \"08649520\"]}");
	add("08649520", "{\"term\":\"rifle shot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08649520\"]}");
	add("08649671", "{\"term\":\"terra incognita\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08649671\"]}");
	add("08649671", "{\"term\":\"unknown\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07286353\", \"10680441\", \"08649671\"]}");
	add("08649671", "{\"term\":\"unknown region\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08649671\"]}");
	add("08649833", "{\"term\":\"staging area\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08649833\"]}");
	add("08649998", "{\"term\":\"clear\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08649998\", \"14013987\"]}");
	add("08649998", "{\"term\":\"open\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"05620592\", \"07480116\", \"08631308\", \"08649998\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }