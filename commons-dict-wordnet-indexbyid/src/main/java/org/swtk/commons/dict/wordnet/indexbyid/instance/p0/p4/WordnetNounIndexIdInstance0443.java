package org.swtk.commons.dict.wordnet.indexbyid.instance.p0.p4;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0443 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("04430010", "{\"term\":\"thermoregulator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04430010\"]}");
	add("04430010", "{\"term\":\"thermostat\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04430010\"]}");
	add("04430309", "{\"term\":\"thiabendazole\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04430309\"]}");
	add("04430423", "{\"term\":\"thiazide\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04430423\"]}");
	add("04430687", "{\"term\":\"thigh pad\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04430687\"]}");
	add("04430822", "{\"term\":\"thill\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04430822\"]}");
	add("04430980", "{\"term\":\"thimble\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04430980\", \"13792969\"]}");
	add("04431138", "{\"term\":\"merthiolate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04431138\"]}");
	add("04431138", "{\"term\":\"sodium ethylmercurithiosalicylate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04431138\"]}");
	add("04431138", "{\"term\":\"thimerosal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04431138\"]}");
	add("04431353", "{\"term\":\"thing\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"00002452\", \"07495496\", \"05993067\", \"04624646\", \"04431553\", \"06736657\", \"05679169\", \"07304554\", \"04431353\", \"05863569\", \"00034778\", \"13967020\"]}");
	add("04431553", "{\"term\":\"thing\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"00002452\", \"07495496\", \"05993067\", \"04624646\", \"04431553\", \"06736657\", \"05679169\", \"07304554\", \"04431353\", \"05863569\", \"00034778\", \"13967020\"]}");
	add("04431827", "{\"term\":\"thinning shears\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04431827\"]}");
	add("04431961", "{\"term\":\"thioguanine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04431961\"]}");
	add("04432071", "{\"term\":\"pentothal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04432071\"]}");
	add("04432071", "{\"term\":\"thiopental\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04432071\"]}");
	add("04432071", "{\"term\":\"thiopental sodium\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04432071\"]}");
	add("04432071", "{\"term\":\"thiopentobarbital sodium\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04432071\"]}");
	add("04432397", "{\"term\":\"mellaril\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04432397\"]}");
	add("04432397", "{\"term\":\"thioridazine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04432397\"]}");
	add("04432580", "{\"term\":\"thiosulfil\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04432580\"]}");
	add("04432679", "{\"term\":\"thiotepa\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04432679\"]}");
	add("04432791", "{\"term\":\"navane\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04432791\"]}");
	add("04432791", "{\"term\":\"thiothixene\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04432791\"]}");
	add("04432939", "{\"term\":\"third\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"04432939\", \"04433112\", \"06872554\", \"13869097\", \"00725419\", \"13759330\"]}");
	add("04432939", "{\"term\":\"third base\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00725419\", \"04432939\"]}");
	add("04433112", "{\"term\":\"third\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"04432939\", \"04433112\", \"06872554\", \"13869097\", \"00725419\", \"13759330\"]}");
	add("04433112", "{\"term\":\"third gear\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04433112\"]}");
	add("04433319", "{\"term\":\"third rail\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04433319\"]}");
	add("04433451", "{\"term\":\"thong\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"03368854\", \"03468985\", \"04433451\", \"04433562\", \"03649221\"]}");
	add("04433562", "{\"term\":\"thong\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"03368854\", \"03468985\", \"04433451\", \"04433562\", \"03649221\"]}");
	add("04433753", "{\"term\":\"thoroughfare\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04433753\"]}");
	add("04433923", "{\"term\":\"thread\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04161999\", \"05781545\", \"09432081\", \"04433923\"]}");
	add("04433923", "{\"term\":\"yarn\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04433923\", \"07235433\"]}");
	add("04434351", "{\"term\":\"basket-handle arch\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04434351\"]}");
	add("04434351", "{\"term\":\"three-centered arch\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04434351\"]}");
	add("04434511", "{\"term\":\"three-decker\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04434511\", \"04434608\", \"07712584\"]}");
	add("04434608", "{\"term\":\"three-decker\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04434511\", \"04434608\", \"07712584\"]}");
	add("04434694", "{\"term\":\"3d radar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04434694\"]}");
	add("04434694", "{\"term\":\"three-dimensional radar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04434694\"]}");
	add("04434850", "{\"term\":\"three-piece suit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04434850\"]}");
	add("04434992", "{\"term\":\"three-quarter binding\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04434992\"]}");
	add("04435143", "{\"term\":\"three-point switch\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04435143\"]}");
	add("04435143", "{\"term\":\"three-way switch\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04435143\"]}");
	add("04435326", "{\"term\":\"thrasher\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01488651\", \"01590475\", \"04435326\"]}");
	add("04435326", "{\"term\":\"thresher\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01488651\", \"04435326\"]}");
	add("04435326", "{\"term\":\"threshing machine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04435326\"]}");
	add("04435517", "{\"term\":\"threshing floor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04435517\"]}");
	add("04435637", "{\"term\":\"threshold element\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04435637\"]}");
	add("04435637", "{\"term\":\"threshold gate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04435637\"]}");
	add("04435769", "{\"term\":\"second-hand store\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04435769\"]}");
	add("04435769", "{\"term\":\"thriftshop\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04435769\"]}");
	add("04435898", "{\"term\":\"throat\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"01517190\", \"04435898\", \"04436054\", \"05555141\"]}");
	add("04436054", "{\"term\":\"throat\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"01517190\", \"04435898\", \"04436054\", \"05555141\"]}");
	add("04436172", "{\"term\":\"throat protector\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04436172\"]}");
	add("04436303", "{\"term\":\"clot buster\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04436303\"]}");
	add("04436303", "{\"term\":\"thrombolytic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04436303\"]}");
	add("04436303", "{\"term\":\"thrombolytic agent\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04436303\"]}");
	add("04436510", "{\"term\":\"throne\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00606138\", \"04453655\", \"04436510\"]}");
	add("04436747", "{\"term\":\"throstle\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01560790\", \"04436747\"]}");
	add("04436890", "{\"term\":\"throughput\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04436890\"]}");
	add("04437105", "{\"term\":\"throw\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"01248165\", \"04437105\", \"07365795\", \"14509574\", \"00105359\"]}");
	add("04437292", "{\"term\":\"dart thrower\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04437292\"]}");
	add("04437292", "{\"term\":\"spear thrower\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04437292\"]}");
	add("04437292", "{\"term\":\"throwing board\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04437292\"]}");
	add("04437292", "{\"term\":\"throwing stick\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02875324\", \"04437292\"]}");
	add("04437498", "{\"term\":\"throw pillow\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04437498\"]}");
	add("04437609", "{\"term\":\"thrust bearing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04437609\"]}");
	add("04437739", "{\"term\":\"thruster\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04437739\", \"10515341\"]}");
	add("04437872", "{\"term\":\"thrust stage\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04437872\"]}");
	add("04438030", "{\"term\":\"thumb\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03872399\", \"04438030\", \"05574850\"]}");
	add("04438159", "{\"term\":\"thumbhole\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04438159\", \"04438292\"]}");
	add("04438292", "{\"term\":\"thumbhole\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04438159\", \"04438292\"]}");
	add("04438430", "{\"term\":\"thumb index\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04438430\"]}");
	add("04438570", "{\"term\":\"thumbscrew\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04438570\", \"04438681\"]}");
	add("04438681", "{\"term\":\"thumbscrew\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04438570\", \"04438681\"]}");
	add("04438782", "{\"term\":\"thumbstall\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04438782\"]}");
	add("04438879", "{\"term\":\"drawing pin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04438879\"]}");
	add("04438879", "{\"term\":\"pushpin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04438879\"]}");
	add("04438879", "{\"term\":\"thumbtack\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04438879\"]}");
	add("04439059", "{\"term\":\"thunderer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04439059\", \"09597528\"]}");
	add("04439177", "{\"term\":\"cross thwart\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04439177\"]}");
	add("04439177", "{\"term\":\"thwart\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04439177\"]}");
	add("04439337", "{\"term\":\"tiara\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04439337\"]}");
	add("04439442", "{\"term\":\"tick\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04439442\", \"06831605\", \"01778954\", \"07412361\"]}");
	add("04439527", "{\"term\":\"stock ticker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04439527\"]}");
	add("04439527", "{\"term\":\"ticker\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04439527\", \"04563183\", \"05396148\"]}");
	add("04439672", "{\"term\":\"ticket window\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04439672\"]}");
	add("04439796", "{\"term\":\"ticking\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04439796\", \"07412361\"]}");
	add("04439919", "{\"term\":\"tickler coil\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04439919\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }