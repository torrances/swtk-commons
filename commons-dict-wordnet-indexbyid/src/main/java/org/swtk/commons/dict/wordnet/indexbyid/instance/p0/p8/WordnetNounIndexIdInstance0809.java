package org.swtk.commons.dict.wordnet.indexbyid.instance.p0.p8;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0809 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("08090079", "{\"term\":\"bull market\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08090079\"]}");
	add("08090191", "{\"term\":\"the city\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08090191\", \"08894500\"]}");
	add("08090304", "{\"term\":\"the street\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08090304\"]}");
	add("08090304", "{\"term\":\"wall street\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08090304\", \"09145446\"]}");
	add("08090437", "{\"term\":\"money market\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08090437\"]}");
	add("08090536", "{\"term\":\"service industry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08090536\"]}");
	add("08090680", "{\"term\":\"management consulting\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08090680\"]}");
	add("08090828", "{\"term\":\"shipbuilder\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08090828\", \"10609338\", \"10610172\"]}");
	add("08090945", "{\"term\":\"shipbuilding industry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08090945\"]}");
	add("08091061", "{\"term\":\"shoe industry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08091061\"]}");
	add("08091166", "{\"term\":\"sign industry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08091166\"]}");
	add("08091257", "{\"term\":\"signage\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08091257\"]}");
	add("08091418", "{\"term\":\"steel industry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08091418\"]}");
	add("08091527", "{\"term\":\"sunrise industry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08091527\"]}");
	add("08091715", "{\"term\":\"tobacco industry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08091715\"]}");
	add("08091845", "{\"term\":\"toy business\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08091845\"]}");
	add("08091845", "{\"term\":\"toy industry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08091845\"]}");
	add("08091976", "{\"term\":\"trucking industry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08091976\"]}");
	add("08092123", "{\"term\":\"agriculture\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"08092123\", \"08145946\", \"00918295\", \"01106311\"]}");
	add("08092224", "{\"term\":\"brotherhood\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"08249977\", \"07515281\", \"08092224\", \"13836548\"]}");
	add("08092224", "{\"term\":\"fraternity\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08092224\", \"08246388\"]}");
	add("08092224", "{\"term\":\"sodality\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08092224\"]}");
	add("08092483", "{\"term\":\"sisterhood\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08092483\", \"08424406\", \"13836396\"]}");
	add("08092683", "{\"term\":\"establishment\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"05834615\", \"13497470\", \"08092683\", \"03302664\", \"08181484\", \"08070328\", \"00237945\"]}");
	add("08092765", "{\"term\":\"corporate investor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08092765\"]}");
	add("08092911", "{\"term\":\"takeover target\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08092911\"]}");
	add("08092911", "{\"term\":\"target company\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08092911\"]}");
	add("08093089", "{\"term\":\"raider\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08093089\", \"10462744\"]}");
	add("08093291", "{\"term\":\"sleeping beauty\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08093291\", \"10630783\", \"10630633\"]}");
	add("08093414", "{\"term\":\"underperformer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08093414\", \"10756051\"]}");
	add("08093541", "{\"term\":\"white knight\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08093541\"]}");
	add("08093669", "{\"term\":\"white squire\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08093669\"]}");
	add("08093782", "{\"term\":\"auction house\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08093782\"]}");
	add("08093871", "{\"term\":\"a-team\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08093871\"]}");
	add("08094013", "{\"term\":\"battery\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00769692\", \"00989949\", \"02813917\", \"08094013\", \"07970413\", \"02813606\", \"08406303\"]}");
	add("08094128", "{\"term\":\"administrative body\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08094128\"]}");
	add("08094128", "{\"term\":\"administrative unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08094128\"]}");
	add("08094547", "{\"term\":\"company\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"08094547\", \"08235980\", \"08281818\", \"08201779\", \"09907302\", \"08203951\", \"13952621\", \"08231193\", \"08074934\"]}");
	add("08094678", "{\"term\":\"coronary care unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08094678\"]}");
	add("08094856", "{\"term\":\"family\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"08244837\", \"08263223\", \"08124465\", \"10256001\", \"07987168\", \"08014145\", \"07986853\", \"08094856\"]}");
	add("08094856", "{\"term\":\"home\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"03533280\", \"08094856\", \"14537296\", \"08602685\", \"08507412\", \"03534081\", \"08507209\", \"03264208\", \"08577045\"]}");
	add("08094856", "{\"term\":\"house\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"03550330\", \"04424944\", \"08094856\", \"08398027\", \"08703415\", \"00433104\", \"07987896\", \"08179924\", \"08239887\", \"08241501\", \"08076706\", \"03549540\"]}");
	add("08094856", "{\"term\":\"household\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08094856\"]}");
	add("08094856", "{\"term\":\"menage\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08094856\"]}");
	add("08095330", "{\"term\":\"menage a trois\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08095330\"]}");
	add("08095521", "{\"term\":\"flying squad\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08095521\"]}");
	add("08095696", "{\"term\":\"major-league club\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08095696\"]}");
	add("08095696", "{\"term\":\"major-league team\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08095696\"]}");
	add("08095853", "{\"term\":\"minor-league club\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08095853\"]}");
	add("08095853", "{\"term\":\"minor-league team\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08095853\"]}");
	add("08096028", "{\"term\":\"farm club\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08096028\"]}");
	add("08096028", "{\"term\":\"farm team\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08096028\"]}");
	add("08096196", "{\"term\":\"baseball team\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08096196\"]}");
	add("08096490", "{\"term\":\"ball club\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08096490\"]}");
	add("08096490", "{\"term\":\"baseball club\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08096490\"]}");
	add("08096490", "{\"term\":\"club\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"02934801\", \"03057773\", \"03451003\", \"03058296\", \"03057459\", \"08244135\", \"08096490\"]}");
	add("08096490", "{\"term\":\"nine\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03831088\", \"08096490\", \"13767410\"]}");
	add("08096729", "{\"term\":\"basketball team\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08096729\"]}");
	add("08096729", "{\"term\":\"five\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03358629\", \"08096729\", \"13766661\"]}");
	add("08096902", "{\"term\":\"eleven\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08096902\", \"13768812\"]}");
	add("08096902", "{\"term\":\"football team\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08096902\"]}");
	add("08097263", "{\"term\":\"hockey team\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08097263\"]}");
	add("08097387", "{\"term\":\"junior varsity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08097387\"]}");
	add("08097387", "{\"term\":\"jv\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08097387\"]}");
	add("08097529", "{\"term\":\"first team\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08097529\"]}");
	add("08097529", "{\"term\":\"varsity\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08097529\", \"08304103\"]}");
	add("08097639", "{\"term\":\"second string\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08097639\"]}");
	add("08097824", "{\"term\":\"police squad\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08097824\"]}");
	add("08097824", "{\"term\":\"squad\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08097824\", \"08225481\", \"08235043\"]}");
	add("08098019", "{\"term\":\"powerhouse\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04003013\", \"08098019\", \"10481995\"]}");
	add("08098121", "{\"term\":\"offence\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00767587\", \"01226520\", \"07532789\", \"08098121\", \"00982124\"]}");
	add("08098121", "{\"term\":\"offense\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00982124\", \"08098121\", \"00767587\", \"07532789\", \"01226520\"]}");
	add("08098280", "{\"term\":\"defence\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"00825193\", \"00825411\", \"00956422\", \"01201240\", \"03176022\", \"06753339\", \"07215473\", \"08080966\", \"08081359\", \"08098280\", \"13480525\"]}");
	add("08098280", "{\"term\":\"defending team\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08098280\"]}");
	add("08098280", "{\"term\":\"defense\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"00825193\", \"01201240\", \"03176022\", \"08080966\", \"07215473\", \"08081359\", \"08148512\", \"13480525\", \"06753339\", \"08098280\", \"00825411\", \"00956422\"]}");
	add("08098545", "{\"term\":\"faith\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"01209677\", \"08098545\", \"05951915\", \"05955536\"]}");
	add("08098545", "{\"term\":\"organized religion\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08098545\"]}");
	add("08098545", "{\"term\":\"religion\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08098545\", \"05955536\"]}");
	add("08099113", "{\"term\":\"christendom\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08099113\"]}");
	add("08099113", "{\"term\":\"christianity\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08099113\", \"06236188\"]}");
	add("08099479", "{\"term\":\"christian church\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08104742\", \"08099479\"]}");
	add("08099479", "{\"term\":\"church\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"08099776\", \"01034400\", \"03031762\", \"08099479\"]}");
	add("08099776", "{\"term\":\"church\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"08099776\", \"01034400\", \"03031762\", \"08099479\"]}");
	add("08099960", "{\"term\":\"armenian apostolic orthodox church\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08099960\"]}");
	add("08099960", "{\"term\":\"armenian church\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08099960\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }