package org.swtk.commons.dict.wordnet.indexbyid.instance.p1.p1;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance1133 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("11330076", "{\"term\":\"john hanning speke\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11330076\"]}");
	add("11330076", "{\"term\":\"john speke\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11330076\"]}");
	add("11330076", "{\"term\":\"speke\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11330076\"]}");
	add("11330316", "{\"term\":\"herbert spencer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11330316\"]}");
	add("11330316", "{\"term\":\"spencer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11330316\"]}");
	add("11330518", "{\"term\":\"sir stephen harold spender\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11330518\"]}");
	add("11330518", "{\"term\":\"spender\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10654673\", \"10654858\", \"11330518\"]}");
	add("11330518", "{\"term\":\"stephen spender\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11330518\"]}");
	add("11330674", "{\"term\":\"oswald spengler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11330674\"]}");
	add("11330674", "{\"term\":\"spengler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11330674\"]}");
	add("11330828", "{\"term\":\"edmund spenser\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11330828\"]}");
	add("11330828", "{\"term\":\"spenser\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11330828\"]}");
	add("11331006", "{\"term\":\"elmer ambrose sperry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11331006\"]}");
	add("11331006", "{\"term\":\"sperry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11331006\"]}");
	add("11331168", "{\"term\":\"spielberg\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11331168\"]}");
	add("11331168", "{\"term\":\"steven spielberg\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11331168\"]}");
	add("11331282", "{\"term\":\"frank morrison spillane\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11331282\"]}");
	add("11331282", "{\"term\":\"mickey spillane\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11331282\"]}");
	add("11331282", "{\"term\":\"spillane\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11331282\"]}");
	add("11331445", "{\"term\":\"baruch de spinoza\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11331445\"]}");
	add("11331445", "{\"term\":\"benedict de spinoza\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11331445\"]}");
	add("11331445", "{\"term\":\"de spinoza\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11331445\"]}");
	add("11331445", "{\"term\":\"spinoza\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11331445\"]}");
	add("11331618", "{\"term\":\"benjamin spock\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11331618\"]}");
	add("11331618", "{\"term\":\"spock\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11331618\"]}");
	add("11331812", "{\"term\":\"josiah spode\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11331812\"]}");
	add("11331812", "{\"term\":\"spode\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04290130\", \"11331812\"]}");
	add("11331954", "{\"term\":\"baronne anne louise germaine necker de steal-holstein\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11331954\"]}");
	add("11331954", "{\"term\":\"madame de stael\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11331954\"]}");
	add("11331954", "{\"term\":\"stael\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11331954\"]}");
	add("11332115", "{\"term\":\"iosif vissarionovich dzhugashvili\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11332115\"]}");
	add("11332115", "{\"term\":\"joseph stalin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11332115\"]}");
	add("11332115", "{\"term\":\"stalin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11332115\"]}");
	add("11332357", "{\"term\":\"miles standish\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11332357\"]}");
	add("11332357", "{\"term\":\"myles standish\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11332357\"]}");
	add("11332357", "{\"term\":\"standish\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11332357\"]}");
	add("11332551", "{\"term\":\"leland stanford\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11332551\"]}");
	add("11332551", "{\"term\":\"stanford\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04309878\", \"11332551\"]}");
	add("11332704", "{\"term\":\"konstantin sergeevich alekseev\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11332704\"]}");
	add("11332704", "{\"term\":\"konstantin sergeyevich stanislavsky\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11332704\"]}");
	add("11332704", "{\"term\":\"konstantin stanislavsky\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11332704\"]}");
	add("11332704", "{\"term\":\"stanislavsky\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11332704\"]}");
	add("11333006", "{\"term\":\"henry m. stanley\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11333006\"]}");
	add("11333006", "{\"term\":\"john rowlands\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11333006\"]}");
	add("11333006", "{\"term\":\"sir henry morton stanley\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11333006\"]}");
	add("11333006", "{\"term\":\"stanley\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11333006\", \"11333352\"]}");
	add("11333352", "{\"term\":\"francis edgar stanley\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11333352\"]}");
	add("11333352", "{\"term\":\"stanley\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11333006\", \"11333352\"]}");
	add("11333502", "{\"term\":\"elizabeth cady stanton\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11333502\"]}");
	add("11333502", "{\"term\":\"stanton\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11333502\"]}");
	add("11333721", "{\"term\":\"richard starkey\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11333721\"]}");
	add("11333721", "{\"term\":\"ringo starr\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11333721\"]}");
	add("11333721", "{\"term\":\"starkey\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11333721\"]}");
	add("11333721", "{\"term\":\"starr\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11333721\"]}");
	add("11333906", "{\"term\":\"ruth saint denis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11333906\"]}");
	add("11333906", "{\"term\":\"ruth st. denis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11333906\"]}");
	add("11333906", "{\"term\":\"saint denis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11333906\"]}");
	add("11333906", "{\"term\":\"st. denis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11333906\"]}");
	add("11334114", "{\"term\":\"sir richrd steele\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11334114\"]}");
	add("11334114", "{\"term\":\"steele\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11334114\"]}");
	add("11334214", "{\"term\":\"jan steen\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11334214\"]}");
	add("11334214", "{\"term\":\"steen\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11334214\"]}");
	add("11334310", "{\"term\":\"joseph lincoln steffens\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11334310\"]}");
	add("11334310", "{\"term\":\"lincoln steffens\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11334310\"]}");
	add("11334310", "{\"term\":\"steffens\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11334310\"]}");
	add("11334509", "{\"term\":\"edward jean steichen\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11334509\"]}");
	add("11334509", "{\"term\":\"steichen\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11334509\"]}");
	add("11334661", "{\"term\":\"gertrude stein\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11334661\"]}");
	add("11334661", "{\"term\":\"stein\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11334661\", \"02827200\"]}");
	add("11334787", "{\"term\":\"john ernst steinbeck\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11334787\"]}");
	add("11334787", "{\"term\":\"john steinbeck\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11334787\"]}");
	add("11334787", "{\"term\":\"steinbeck\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11334787\"]}");
	add("11334964", "{\"term\":\"saul steinberg\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11334964\"]}");
	add("11334964", "{\"term\":\"steinberg\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11334964\"]}");
	add("11335135", "{\"term\":\"gloria steinem\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11335135\"]}");
	add("11335135", "{\"term\":\"steinem\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11335135\"]}");
	add("11335244", "{\"term\":\"rudolf steiner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11335244\"]}");
	add("11335244", "{\"term\":\"steiner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11335244\"]}");
	add("11335374", "{\"term\":\"david barnard steinman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11335374\"]}");
	add("11335374", "{\"term\":\"steinman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11335374\"]}");
	add("11335575", "{\"term\":\"charles proteus steinmetz\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11335575\"]}");
	add("11335575", "{\"term\":\"steinmetz\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11335575\"]}");
	add("11335755", "{\"term\":\"heinrich engelhard steinway\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11335755\"]}");
	add("11335755", "{\"term\":\"henry engelhard steinway\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11335755\"]}");
	add("11335755", "{\"term\":\"henry steinway\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11335755\"]}");
	add("11335755", "{\"term\":\"steinway\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11335755\"]}");
	add("11335998", "{\"term\":\"frank philip stella\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11335998\"]}");
	add("11335998", "{\"term\":\"frank stella\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11335998\"]}");
	add("11335998", "{\"term\":\"stella\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11335998\"]}");
	add("11336136", "{\"term\":\"georg wilhelm steller\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11336136\"]}");
	add("11336136", "{\"term\":\"steller\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11336136\"]}");
	add("11336244", "{\"term\":\"marie henri beyle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11336244\"]}");
	add("11336244", "{\"term\":\"stendhal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11336244\"]}");
	add("11336424", "{\"term\":\"casey stengel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11336424\"]}");
	add("11336424", "{\"term\":\"charles dillon stengel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11336424\"]}");
	add("11336424", "{\"term\":\"stengel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11336424\"]}");
	add("11336562", "{\"term\":\"sir leslie stephen\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11336562\"]}");
	add("11336562", "{\"term\":\"stephen\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11336562\"]}");
	add("11336664", "{\"term\":\"george stephenson\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11336664\"]}");
	add("11336664", "{\"term\":\"stephenson\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11336664\"]}");
	add("11336823", "{\"term\":\"isaac stern\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11336823\"]}");
	add("11336823", "{\"term\":\"stern\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"05566889\", \"11336823\", \"04323784\"]}");
	add("11336965", "{\"term\":\"laurence sterne\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11336965\"]}");
	add("11336965", "{\"term\":\"sterne\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11336965\"]}");
	add("11337081", "{\"term\":\"baron friedrich wilhelm ludolf gerhard augustin von steuben\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11337081\"]}");
	add("11337081", "{\"term\":\"steuben\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11337081\"]}");
	add("11337304", "{\"term\":\"george stevens\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11337304\"]}");
	add("11337304", "{\"term\":\"stevens\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"11337304\", \"11337411\", \"11337514\"]}");
	add("11337411", "{\"term\":\"stevens\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"11337304\", \"11337411\", \"11337514\"]}");
	add("11337411", "{\"term\":\"wallace stevens\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11337411\"]}");
	add("11337514", "{\"term\":\"s. smith stevens\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11337514\"]}");
	add("11337514", "{\"term\":\"smitty stevens\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11337514\"]}");
	add("11337514", "{\"term\":\"stanley smith stevens\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11337514\"]}");
	add("11337514", "{\"term\":\"stevens\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"11337304\", \"11337411\", \"11337514\"]}");
	add("11337744", "{\"term\":\"adlai ewing stevenson\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11337744\"]}");
	add("11337744", "{\"term\":\"adlai stevenson\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11337744\"]}");
	add("11337744", "{\"term\":\"stevenson\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11337744\", \"11337892\"]}");
	add("11337892", "{\"term\":\"robert louis balfour stevenson\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11337892\"]}");
	add("11337892", "{\"term\":\"robert louis stevenson\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11337892\"]}");
	add("11337892", "{\"term\":\"stevenson\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11337744\", \"11337892\"]}");
	add("11338034", "{\"term\":\"dugald stewart\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11338034\"]}");
	add("11338034", "{\"term\":\"stewart\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11338034\", \"11338166\"]}");
	add("11338166", "{\"term\":\"james maitland stewart\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11338166\"]}");
	add("11338166", "{\"term\":\"jimmy stewart\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11338166\"]}");
	add("11338166", "{\"term\":\"stewart\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11338034\", \"11338166\"]}");
	add("11338343", "{\"term\":\"alfred stieglitz\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11338343\"]}");
	add("11338343", "{\"term\":\"stieglitz\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11338343\"]}");
	add("11338457", "{\"term\":\"joseph warren stilwell\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11338457\"]}");
	add("11338457", "{\"term\":\"stilwell\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11338457\"]}");
	add("11338457", "{\"term\":\"uncle joe\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11338457\"]}");
	add("11338457", "{\"term\":\"vinegar joe stilwell\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11338457\"]}");
	add("11338687", "{\"term\":\"francis richard stockton\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11338687\"]}");
	add("11338687", "{\"term\":\"frank stockton\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11338687\"]}");
	add("11338687", "{\"term\":\"stockton\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11338687\"]}");
	add("11338819", "{\"term\":\"abraham stoker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11338819\"]}");
	add("11338819", "{\"term\":\"bram stoker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11338819\"]}");
	add("11338819", "{\"term\":\"stoker\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04332730\", \"10678481\", \"11338819\"]}");
	add("11338962", "{\"term\":\"leopold antoni stanislaw stokowski\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11338962\"]}");
	add("11338962", "{\"term\":\"leopold stokowski\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11338962\"]}");
	add("11338962", "{\"term\":\"stokowski\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11338962\"]}");
	add("11339129", "{\"term\":\"edward durell stone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11339129\"]}");
	add("11339129", "{\"term\":\"stone\", \"synsetCount\":13, \"upperType\":\"NOUN\", \"ids\":[\"04637315\", \"11339129\", \"11339239\", \"11339408\", \"11339565\", \"11339699\", \"11339805\", \"11705208\", \"13742705\", \"14723913\", \"14720954\", \"04333222\", \"09438954\"]}");
	add("11339239", "{\"term\":\"harlan fiske stone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11339239\"]}");
	add("11339239", "{\"term\":\"stone\", \"synsetCount\":13, \"upperType\":\"NOUN\", \"ids\":[\"04637315\", \"11339129\", \"11339239\", \"11339408\", \"11339565\", \"11339699\", \"11339805\", \"11705208\", \"13742705\", \"14723913\", \"14720954\", \"04333222\", \"09438954\"]}");
	add("11339408", "{\"term\":\"i. f. stone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11339408\"]}");
	add("11339408", "{\"term\":\"isidor feinstein stone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11339408\"]}");
	add("11339408", "{\"term\":\"stone\", \"synsetCount\":13, \"upperType\":\"NOUN\", \"ids\":[\"04637315\", \"11339129\", \"11339239\", \"11339408\", \"11339565\", \"11339699\", \"11339805\", \"11705208\", \"13742705\", \"14723913\", \"14720954\", \"04333222\", \"09438954\"]}");
	add("11339565", "{\"term\":\"lucy stone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11339565\"]}");
	add("11339565", "{\"term\":\"stone\", \"synsetCount\":13, \"upperType\":\"NOUN\", \"ids\":[\"04637315\", \"11339129\", \"11339239\", \"11339408\", \"11339565\", \"11339699\", \"11339805\", \"11705208\", \"13742705\", \"14723913\", \"14720954\", \"04333222\", \"09438954\"]}");
	add("11339699", "{\"term\":\"oliver stone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11339699\"]}");
	add("11339699", "{\"term\":\"stone\", \"synsetCount\":13, \"upperType\":\"NOUN\", \"ids\":[\"04637315\", \"11339129\", \"11339239\", \"11339408\", \"11339565\", \"11339699\", \"11339805\", \"11705208\", \"13742705\", \"14723913\", \"14720954\", \"04333222\", \"09438954\"]}");
	add("11339805", "{\"term\":\"harlan f. stone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11339805\"]}");
	add("11339805", "{\"term\":\"harlan fisk stone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11339805\"]}");
	add("11339805", "{\"term\":\"harlan stone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11339805\"]}");
	add("11339805", "{\"term\":\"stone\", \"synsetCount\":13, \"upperType\":\"NOUN\", \"ids\":[\"04637315\", \"11339129\", \"11339239\", \"11339408\", \"11339565\", \"11339699\", \"11339805\", \"11705208\", \"13742705\", \"14723913\", \"14720954\", \"04333222\", \"09438954\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }