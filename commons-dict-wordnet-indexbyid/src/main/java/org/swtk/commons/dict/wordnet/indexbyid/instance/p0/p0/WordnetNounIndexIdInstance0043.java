package org.swtk.commons.dict.wordnet.indexbyid.instance.p0.p0;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0043 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("00430033", "{\"term\":\"amusement\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00430033\", \"07506616\"]}");
	add("00430033", "{\"term\":\"entertainment\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00430033\"]}");
	add("00430307", "{\"term\":\"escapade\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00430307\", \"00797976\"]}");
	add("00430307", "{\"term\":\"lark\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00430307\", \"01530258\", \"01531295\", \"01575715\"]}");
	add("00430425", "{\"term\":\"escape\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"04134734\", \"07451261\", \"11573870\", \"00174132\", \"00205048\", \"00742010\", \"00430425\", \"00059563\"]}");
	add("00430425", "{\"term\":\"escapism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00430425\"]}");
	add("00430698", "{\"term\":\"eurhythmics\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00430698\"]}");
	add("00430698", "{\"term\":\"eurhythmy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00430698\"]}");
	add("00430698", "{\"term\":\"eurythmics\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00430698\"]}");
	add("00430698", "{\"term\":\"eurythmy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00430698\"]}");
	add("00430934", "{\"term\":\"fun\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04656618\", \"01263236\", \"06793739\", \"00430934\"]}");
	add("00430934", "{\"term\":\"merriment\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00430934\", \"07544633\"]}");
	add("00430934", "{\"term\":\"playfulness\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00430934\", \"04656618\", \"07527278\"]}");
	add("00431125", "{\"term\":\"gambling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00431125\"]}");
	add("00431125", "{\"term\":\"gaming\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00431125\"]}");
	add("00431125", "{\"term\":\"play\", \"synsetCount\":17, \"upperType\":\"NOUN\", \"ids\":[\"00042206\", \"00431125\", \"00458406\", \"00512828\", \"04781750\", \"06793739\", \"07426451\", \"14017327\", \"15281726\", \"00432833\", \"00788541\", \"00949412\", \"14033234\", \"00557350\", \"00558625\", \"07032045\", \"07021061\"]}");
	add("00431591", "{\"term\":\"game\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"00514100\", \"00584126\", \"03418738\", \"05916276\", \"07666058\", \"13617478\", \"15281378\", \"02155643\", \"00431591\", \"00457223\", \"00456623\"]}");
	add("00431990", "{\"term\":\"jest\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00431990\", \"06790941\"]}");
	add("00431990", "{\"term\":\"jocularity\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00431990\", \"06794008\", \"07545071\"]}");
	add("00431990", "{\"term\":\"joke\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"05180970\", \"00428583\", \"00431990\", \"06790941\"]}");
	add("00432277", "{\"term\":\"night life\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00432277\", \"00516963\"]}");
	add("00432277", "{\"term\":\"nightlife\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00432277\", \"00516963\"]}");
	add("00432492", "{\"term\":\"interest\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00432492\", \"07984994\", \"13307824\", \"13339606\", \"05199719\", \"05150324\", \"05690773\"]}");
	add("00432492", "{\"term\":\"pastime\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00432492\"]}");
	add("00432492", "{\"term\":\"pursuit\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00432492\", \"00433629\", \"05778388\", \"00320765\"]}");
	add("00432833", "{\"term\":\"child\u0027s play\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00432833\", \"00576402\"]}");
	add("00432833", "{\"term\":\"play\", \"synsetCount\":17, \"upperType\":\"NOUN\", \"ids\":[\"00042206\", \"00431125\", \"00458406\", \"00512828\", \"04781750\", \"06793739\", \"07426451\", \"14017327\", \"15281726\", \"00432833\", \"00788541\", \"00949412\", \"14033234\", \"00557350\", \"00558625\", \"07032045\", \"07021061\"]}");
	add("00433104", "{\"term\":\"house\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"03550330\", \"04424944\", \"08094856\", \"08398027\", \"08703415\", \"00433104\", \"07987896\", \"08179924\", \"08239887\", \"08241501\", \"08076706\", \"03549540\"]}");
	add("00433296", "{\"term\":\"doctor\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"10041617\", \"00433296\", \"10041836\", \"10040615\"]}");
	add("00433527", "{\"term\":\"fireman\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"10111420\", \"10537787\", \"10678481\", \"00433527\"]}");
	add("00433629", "{\"term\":\"avocation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00433629\"]}");
	add("00433629", "{\"term\":\"by-line\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00433629\", \"06360255\"]}");
	add("00433629", "{\"term\":\"hobby\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01615117\", \"03528796\", \"00433629\"]}");
	add("00433629", "{\"term\":\"pursuit\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00432492\", \"00433629\", \"05778388\", \"00320765\"]}");
	add("00433629", "{\"term\":\"sideline\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00433629\", \"04221938\", \"08668679\"]}");
	add("00433629", "{\"term\":\"spare-time activity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00433629\"]}");
	add("00433821", "{\"term\":\"bag\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00433821\", \"02373012\", \"09851681\", \"02776843\", \"13786779\", \"02777157\", \"02801040\", \"13776918\", \"02776042\"]}");
	add("00433821", "{\"term\":\"cup of tea\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00433821\"]}");
	add("00433821", "{\"term\":\"dish\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00433821\", \"03212026\", \"10633512\", \"13789036\", \"07572999\", \"03211629\"]}");
	add("00434053", "{\"term\":\"confectionery\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00434053\", \"03094080\", \"07612538\"]}");
	add("00434156", "{\"term\":\"sport\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"06793739\", \"10361391\", \"10658320\", \"10658445\", \"10658636\", \"00434156\", \"00524569\"]}");
	add("00434398", "{\"term\":\"contact sport\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00434398\"]}");
	add("00434601", "{\"term\":\"field sport\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00434601\"]}");
	add("00434601", "{\"term\":\"outdoor sport\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00434601\"]}");
	add("00434742", "{\"term\":\"gymnastic exercise\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00434742\", \"00436718\"]}");
	add("00434742", "{\"term\":\"gymnastics\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00434742\"]}");
	add("00435015", "{\"term\":\"acrobatics\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00303687\", \"00435015\"]}");
	add("00435015", "{\"term\":\"tumbling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00435015\"]}");
	add("00435171", "{\"term\":\"backbend\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00435171\"]}");
	add("00435336", "{\"term\":\"back circle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00435336\"]}");
	add("00435508", "{\"term\":\"walkover\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00576402\", \"00435508\"]}");
	add("00435597", "{\"term\":\"cartwheel\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13413435\", \"00435597\", \"02976695\"]}");
	add("00435784", "{\"term\":\"crucifix\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00435784\", \"03144943\"]}");
	add("00435953", "{\"term\":\"dip\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00435953\", \"00443832\", \"03207773\", \"05119135\", \"07379034\", \"07598174\", \"10451671\", \"13915590\", \"13927512\"]}");
	add("00436122", "{\"term\":\"double leg circle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00436122\"]}");
	add("00436341", "{\"term\":\"grand circle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00436341\"]}");
	add("00436503", "{\"term\":\"cardiopulmonary exercise\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00436503\"]}");
	add("00436718", "{\"term\":\"gymnastic exercise\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00434742\", \"00436718\"]}");
	add("00437127", "{\"term\":\"handstand\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00437127\"]}");
	add("00437279", "{\"term\":\"hang\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00437279\", \"04939014\", \"05632037\"]}");
	add("00437549", "{\"term\":\"bent hang\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00437549\"]}");
	add("00437642", "{\"term\":\"inverted hang\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00437642\"]}");
	add("00437757", "{\"term\":\"lever hang\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00437757\"]}");
	add("00437893", "{\"term\":\"reverse hang\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00437893\"]}");
	add("00438007", "{\"term\":\"straight hang\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00438007\"]}");
	add("00438159", "{\"term\":\"piked reverse hang\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00438159\"]}");
	add("00438261", "{\"term\":\"kick up\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00438261\"]}");
	add("00438427", "{\"term\":\"handspring\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00438427\"]}");
	add("00438579", "{\"term\":\"headstand\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00438579\"]}");
	add("00438728", "{\"term\":\"tumble\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00077704\", \"00438728\"]}");
	add("00438869", "{\"term\":\"split\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"00387484\", \"00392215\", \"00439983\", \"04289802\", \"07632199\", \"08836868\", \"09433806\", \"09466040\", \"13307663\", \"13792216\", \"00438869\"]}");
	add("00439005", "{\"term\":\"acrobatic feat\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00439005\"]}");
	add("00439005", "{\"term\":\"acrobatic stunt\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00439005\"]}");
	add("00439278", "{\"term\":\"kip\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00439278\", \"13703053\", \"15298941\"]}");
	add("00439278", "{\"term\":\"upstart\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00439278\", \"10760525\", \"10760809\"]}");
	add("00439546", "{\"term\":\"long fly\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00439546\"]}");
	add("00439665", "{\"term\":\"scissors\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00439665\", \"00816326\", \"04155119\"]}");
	add("00439833", "{\"term\":\"straddle\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00081994\", \"00350039\", \"00439833\", \"06221437\"]}");
	add("00439983", "{\"term\":\"split\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"00387484\", \"00392215\", \"00439983\", \"04289802\", \"07632199\", \"08836868\", \"09433806\", \"09466040\", \"13307663\", \"13792216\", \"00438869\"]}");
	add("00439983", "{\"term\":\"split up\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00439983\"]}");
	add("00439983", "{\"term\":\"stock split\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00439983\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }