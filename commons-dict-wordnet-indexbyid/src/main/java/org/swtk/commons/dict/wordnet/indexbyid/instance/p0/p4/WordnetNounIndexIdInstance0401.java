package org.swtk.commons.dict.wordnet.indexbyid.instance.p0.p4;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0401 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("04010232", "{\"term\":\"print\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"03932813\", \"04010232\", \"04010358\", \"06690891\", \"06811608\", \"04009955\", \"06691047\"]}");
	add("04010358", "{\"term\":\"print\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"03932813\", \"04010232\", \"04010358\", \"06690891\", \"06811608\", \"04009955\", \"06691047\"]}");
	add("04010475", "{\"term\":\"print buffer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04010475\"]}");
	add("04010586", "{\"term\":\"printed circuit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04010586\"]}");
	add("04010851", "{\"term\":\"printer\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04010851\", \"04011143\", \"10494882\"]}");
	add("04010851", "{\"term\":\"printing machine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04010851\"]}");
	add("04011143", "{\"term\":\"printer\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04010851\", \"04011143\", \"10494882\"]}");
	add("04011366", "{\"term\":\"printer cable\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04011366\"]}");
	add("04011466", "{\"term\":\"print shop\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04011466\"]}");
	add("04011466", "{\"term\":\"printing shop\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04011466\"]}");
	add("04011573", "{\"term\":\"priory\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04011573\"]}");
	add("04011716", "{\"term\":\"optical prism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04011716\"]}");
	add("04011716", "{\"term\":\"prism\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04011716\", \"13907168\"]}");
	add("04012006", "{\"term\":\"prison\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13960317\", \"04012006\"]}");
	add("04012006", "{\"term\":\"prison house\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04012006\", \"13960317\"]}");
	add("04012288", "{\"term\":\"internment camp\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04012288\"]}");
	add("04012288", "{\"term\":\"pow camp\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04012288\"]}");
	add("04012288", "{\"term\":\"prison camp\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04608091\", \"04012288\"]}");
	add("04012288", "{\"term\":\"prisoner of war camp\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04012288\"]}");
	add("04012443", "{\"term\":\"privateer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04012443\", \"10496513\"]}");
	add("04012603", "{\"term\":\"private line\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04012603\"]}");
	add("04012706", "{\"term\":\"privet hedge\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04012706\"]}");
	add("04012787", "{\"term\":\"probe\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00642765\", \"00948857\", \"04012787\", \"05808619\"]}");
	add("04012960", "{\"term\":\"probenecid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04012960\"]}");
	add("04013103", "{\"term\":\"ethocaine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04013103\"]}");
	add("04013103", "{\"term\":\"procaine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04013103\"]}");
	add("04013329", "{\"term\":\"novocain\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04013329\"]}");
	add("04013329", "{\"term\":\"novocaine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04013329\"]}");
	add("04013329", "{\"term\":\"procaine hydrochloride\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04013329\"]}");
	add("04013502", "{\"term\":\"procarbazine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04013502\"]}");
	add("04013615", "{\"term\":\"prochlorperazine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04013615\"]}");
	add("04013791", "{\"term\":\"proctoscope\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04013791\"]}");
	add("04013886", "{\"term\":\"kemadrin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04013886\"]}");
	add("04013886", "{\"term\":\"procyclidine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04013886\"]}");
	add("04014040", "{\"term\":\"goad\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07267046\", \"04014040\"]}");
	add("04014040", "{\"term\":\"prod\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04014040\", \"07267046\"]}");
	add("04014270", "{\"term\":\"product\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"08015510\", \"11435956\", \"15022266\", \"05868214\", \"04014270\", \"03754377\"]}");
	add("04014270", "{\"term\":\"production\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"00915416\", \"00915536\", \"07228649\", \"13780885\", \"00523792\", \"04014270\", \"07020067\", \"00914791\"]}");
	add("04014761", "{\"term\":\"assembly line\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04014761\"]}");
	add("04014761", "{\"term\":\"line\", \"synsetCount\":30, \"upperType\":\"NOUN\", \"ids\":[\"04014761\", \"05756783\", \"06638793\", \"07026095\", \"07041860\", \"13400586\", \"13735108\", \"03676799\", \"03676994\", \"06270774\", \"08611480\", \"00583425\", \"03676175\", \"08118903\", \"01206784\", \"04409192\", \"03676598\", \"03952601\", \"13928798\", \"08610818\", \"08393816\", \"02937552\", \"05781046\", \"08611842\", \"11495037\", \"07025650\", \"13886392\", \"08447160\", \"06812755\", \"08447525\"]}");
	add("04014761", "{\"term\":\"production line\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04014761\"]}");
	add("04015010", "{\"term\":\"missile\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04015010\", \"03779037\"]}");
	add("04015010", "{\"term\":\"projectile\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04106523\", \"04015010\"]}");
	add("04015323", "{\"term\":\"projection\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"00117507\", \"00407911\", \"04015758\", \"11532764\", \"13563001\", \"13942718\", \"04015323\", \"05919047\", \"06900649\", \"05783290\"]}");
	add("04015758", "{\"term\":\"projection\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"00117507\", \"00407911\", \"04015758\", \"11532764\", \"13563001\", \"13942718\", \"04015323\", \"05919047\", \"06900649\", \"05783290\"]}");
	add("04015928", "{\"term\":\"projector\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04015928\", \"04016177\"]}");
	add("04016177", "{\"term\":\"projector\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04015928\", \"04016177\"]}");
	add("04016299", "{\"term\":\"prolonge\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04016299\"]}");
	add("04016433", "{\"term\":\"prolonge knot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04016433\"]}");
	add("04016433", "{\"term\":\"sailor\u0027s breastplate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04016433\"]}");
	add("04016581", "{\"term\":\"mall\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03971750\", \"04016581\"]}");
	add("04016581", "{\"term\":\"promenade\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00284945\", \"00292507\", \"00541932\", \"04016581\", \"07463916\"]}");
	add("04016724", "{\"term\":\"phenergan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04016724\"]}");
	add("04016724", "{\"term\":\"promethazine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04016724\"]}");
	add("04016942", "{\"term\":\"prompt box\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04016942\"]}");
	add("04016942", "{\"term\":\"prompter\u0027s box\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04016942\"]}");
	add("04017155", "{\"term\":\"autocue\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04017155\"]}");
	add("04017155", "{\"term\":\"prompter\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04017155\", \"10501999\"]}");
	add("04017303", "{\"term\":\"prong\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04017303\"]}");
	add("04017506", "{\"term\":\"proof\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00154781\", \"04017506\", \"06603166\", \"13802392\", \"06660359\", \"05833063\"]}");
	add("04017618", "{\"term\":\"prop\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02694945\", \"04018636\", \"04017618\"]}");
	add("04017785", "{\"term\":\"inderal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04017785\"]}");
	add("04017785", "{\"term\":\"propanolol\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04017785\"]}");
	add("04017985", "{\"term\":\"impulse explosive\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04017985\"]}");
	add("04017985", "{\"term\":\"propellant explosive\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04017985\"]}");
	add("04018203", "{\"term\":\"propeller\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04018203\"]}");
	add("04018203", "{\"term\":\"propellor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04018203\"]}");
	add("04018460", "{\"term\":\"propeller plane\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04018460\"]}");
	add("04018636", "{\"term\":\"prop\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02694945\", \"04018636\", \"04017618\"]}");
	add("04018636", "{\"term\":\"property\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"04018636\", \"05857567\", \"08530790\", \"04923519\", \"13265007\"]}");
	add("04018858", "{\"term\":\"propjet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04018858\"]}");
	add("04018858", "{\"term\":\"turbo-propeller plane\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04018858\"]}");
	add("04018858", "{\"term\":\"turboprop\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04018858\"]}");
	add("04019041", "{\"term\":\"proportional counter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04019041\"]}");
	add("04019041", "{\"term\":\"proportional counter tube\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04019041\"]}");
	add("04019228", "{\"term\":\"darvon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04019228\"]}");
	add("04019228", "{\"term\":\"propoxyphene\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04019228\"]}");
	add("04019228", "{\"term\":\"propoxyphene hydrochloride\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04019228\"]}");
	add("04019436", "{\"term\":\"propulsion system\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04019436\"]}");
	add("04019552", "{\"term\":\"proscenium\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04019552\", \"04019738\"]}");
	add("04019552", "{\"term\":\"proscenium wall\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04019552\"]}");
	add("04019738", "{\"term\":\"apron\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"02734128\", \"04019738\", \"08513344\", \"02733935\"]}");
	add("04019738", "{\"term\":\"forestage\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04019738\"]}");
	add("04019738", "{\"term\":\"proscenium\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04019552\", \"04019738\"]}");
	add("04019976", "{\"term\":\"proscenium arch\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04019976\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }