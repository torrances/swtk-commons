package org.swtk.commons.dict.wordnet.indexbyid.instance.p0.p9;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0907 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("09070583", "{\"term\":\"east coast\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09070583\"]}");
	add("09070759", "{\"term\":\"west coast\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09070759\"]}");
	add("09070916", "{\"term\":\"colony\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"08012452\", \"08516868\", \"08531343\", \"09070916\", \"08012298\", \"08390976\"]}");
	add("09071336", "{\"term\":\"new england\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09071336\"]}");
	add("09071759", "{\"term\":\"mid-atlantic states\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09071759\"]}");
	add("09072055", "{\"term\":\"gulf states\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08930167\", \"09072055\"]}");
	add("09072365", "{\"term\":\"slave state\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09072365\"]}");
	add("09072545", "{\"term\":\"free state\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"09023554\", \"09072545\", \"09116186\"]}");
	add("09072700", "{\"term\":\"confederacy\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"06536926\", \"08268224\", \"08320205\", \"09072700\"]}");
	add("09072700", "{\"term\":\"confederate states\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09072700\"]}");
	add("09072700", "{\"term\":\"confederate states of america\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09072700\"]}");
	add("09072700", "{\"term\":\"dixie\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03221265\", \"09072700\"]}");
	add("09072700", "{\"term\":\"dixieland\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09072700\"]}");
	add("09072700", "{\"term\":\"south\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"13858098\", \"08579120\", \"13855574\", \"09072700\", \"09073186\"]}");
	add("09073186", "{\"term\":\"south\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"13858098\", \"08579120\", \"13855574\", \"09072700\", \"09073186\"]}");
	add("09073691", "{\"term\":\"deep south\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09073691\"]}");
	add("09074065", "{\"term\":\"old south\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09074065\"]}");
	add("09074182", "{\"term\":\"sunbelt\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09074182\"]}");
	add("09074354", "{\"term\":\"tidewater\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09074354\", \"09481502\"]}");
	add("09074354", "{\"term\":\"tidewater region\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09074354\"]}");
	add("09074556", "{\"term\":\"piedmont\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08827601\", \"09414537\", \"09074556\"]}");
	add("09074770", "{\"term\":\"north\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"11229780\", \"13853640\", \"13857626\", \"08578618\", \"13853375\", \"09074770\", \"09075108\"]}");
	add("09074770", "{\"term\":\"union\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"00382488\", \"04517110\", \"07387877\", \"08015154\", \"08321825\", \"13592568\", \"13987306\", \"14441799\", \"00848970\", \"09074770\", \"08249977\"]}");
	add("09075108", "{\"term\":\"north\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"11229780\", \"13853640\", \"13857626\", \"08578618\", \"13853375\", \"09074770\", \"09075108\"]}");
	add("09075291", "{\"term\":\"carolina\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09075291\"]}");
	add("09075291", "{\"term\":\"carolinas\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09075291\"]}");
	add("09075475", "{\"term\":\"dakota\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06922254\", \"09075475\", \"09674079\"]}");
	add("09075641", "{\"term\":\"al\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09075641\", \"14651998\"]}");
	add("09075641", "{\"term\":\"ala.\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09075641\"]}");
	add("09075641", "{\"term\":\"alabama\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"06925024\", \"09214753\", \"09666058\", \"09075641\"]}");
	add("09075641", "{\"term\":\"camellia state\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09075641\"]}");
	add("09075641", "{\"term\":\"heart of dixie\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09075641\"]}");
	add("09076264", "{\"term\":\"capital of alabama\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09076264\"]}");
	add("09076264", "{\"term\":\"montgomery\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"09076264\", \"11208306\", \"11208603\"]}");
	add("09076410", "{\"term\":\"birmingham\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08897840\", \"09076410\"]}");
	add("09076410", "{\"term\":\"pittsburgh of the south\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09076410\"]}");
	add("09076573", "{\"term\":\"decatur\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"09076573\", \"09106197\", \"10946524\"]}");
	add("09076696", "{\"term\":\"gadsden\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09076696\"]}");
	add("09076813", "{\"term\":\"huntsville\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09076813\"]}");
	add("09076943", "{\"term\":\"mobile\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03781824\", \"09076943\", \"09379536\"]}");
	add("09077079", "{\"term\":\"selma\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09077079\"]}");
	add("09077260", "{\"term\":\"tuscaloosa\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09077260\"]}");
	add("09077378", "{\"term\":\"tuskegee\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09077378\"]}");
	add("09077478", "{\"term\":\"ak\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09077478\"]}");
	add("09077478", "{\"term\":\"alaska\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09077478\"]}");
	add("09077478", "{\"term\":\"last frontier\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09077478\"]}");
	add("09078249", "{\"term\":\"capital of alaska\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09078249\"]}");
	add("09078249", "{\"term\":\"juneau\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09078249\"]}");
	add("09078369", "{\"term\":\"anchorage\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00052872\", \"08657351\", \"09078369\", \"13341713\", \"13946615\"]}");
	add("09078518", "{\"term\":\"nome\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09078518\"]}");
	add("09078741", "{\"term\":\"sitka\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09078741\"]}");
	add("09078939", "{\"term\":\"skagway\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09078939\"]}");
	add("09079140", "{\"term\":\"valdez\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09079140\"]}");
	add("09079300", "{\"term\":\"seward peninsula\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09079300\"]}");
	add("09079484", "{\"term\":\"alexander archipelago\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09079484\"]}");
	add("09079633", "{\"term\":\"admiralty island\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09079633\"]}");
	add("09079774", "{\"term\":\"arizona\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01735987\", \"09079774\"]}");
	add("09079774", "{\"term\":\"az\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09079774\", \"13916195\"]}");
	add("09079774", "{\"term\":\"grand canyon state\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09079774\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }