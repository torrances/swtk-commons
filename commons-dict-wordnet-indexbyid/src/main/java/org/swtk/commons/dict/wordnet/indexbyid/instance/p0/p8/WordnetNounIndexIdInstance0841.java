package org.swtk.commons.dict.wordnet.indexbyid.instance.p0.p8;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0841 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("08411380", "{\"term\":\"standing army\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08411380\"]}");
	add("08411492", "{\"term\":\"union army\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08411492\"]}");
	add("08411614", "{\"term\":\"army of the confederacy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08411614\"]}");
	add("08411614", "{\"term\":\"confederate army\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08411614\"]}");
	add("08411768", "{\"term\":\"continental army\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08411768\"]}");
	add("08411879", "{\"term\":\"army\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08411879\", \"08200208\", \"08208160\"]}");
	add("08411879", "{\"term\":\"u. s. army\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08411879\"]}");
	add("08411879", "{\"term\":\"united states army\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08411879\"]}");
	add("08411879", "{\"term\":\"us army\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08411879\"]}");
	add("08411879", "{\"term\":\"usa\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08411879\", \"09067337\"]}");
	add("08412255", "{\"term\":\"united states army rangers\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08412255\"]}");
	add("08412422", "{\"term\":\"united states military academy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08412422\"]}");
	add("08412422", "{\"term\":\"us military academy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08412422\"]}");
	add("08412639", "{\"term\":\"ai\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00847013\", \"02460039\", \"06142654\", \"08412639\"]}");
	add("08412639", "{\"term\":\"army intelligence\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08412639\"]}");
	add("08412948", "{\"term\":\"ballistic missile defense organization\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08412948\"]}");
	add("08412948", "{\"term\":\"bmdo\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08412948\"]}");
	add("08413164", "{\"term\":\"defense information systems agency\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08413164\"]}");
	add("08413164", "{\"term\":\"disa\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08413164\", \"12080126\"]}");
	add("08413494", "{\"term\":\"national geospatial-intelligence agency\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08413494\"]}");
	add("08413494", "{\"term\":\"nga\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08413494\"]}");
	add("08413717", "{\"term\":\"casualty care research center\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08413717\"]}");
	add("08413717", "{\"term\":\"ccrc\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08413717\"]}");
	add("08413947", "{\"term\":\"army national guard\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08413947\"]}");
	add("08413947", "{\"term\":\"arng\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08413947\"]}");
	add("08414212", "{\"term\":\"military personnel\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10602198\", \"08414212\"]}");
	add("08414212", "{\"term\":\"soldiery\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08414212\"]}");
	add("08414212", "{\"term\":\"troops\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08414212\"]}");
	add("08414446", "{\"term\":\"friendly\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08414446\"]}");
	add("08414632", "{\"term\":\"hostile\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08414632\"]}");
	add("08414813", "{\"term\":\"cavalry\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08406441\", \"08414813\"]}");
	add("08414813", "{\"term\":\"horse\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"03629976\", \"04147696\", \"08414813\", \"03543217\", \"02377103\"]}");
	add("08414813", "{\"term\":\"horse cavalry\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08406857\", \"08414813\"]}");
	add("08414993", "{\"term\":\"garrison\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08414993\", \"11011579\", \"03425469\"]}");
	add("08415136", "{\"term\":\"rank\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"08417922\", \"13970595\", \"08415136\", \"14453411\", \"08448952\"]}");
	add("08415136", "{\"term\":\"rank and file\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08418668\", \"08415136\"]}");
	add("08415424", "{\"term\":\"coven\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08415424\"]}");
	add("08415537", "{\"term\":\"sabbat\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08415537\"]}");
	add("08415537", "{\"term\":\"witches\u0027 sabbath\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08415537\"]}");
	add("08415730", "{\"term\":\"assortment\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01014654\", \"08415730\"]}");
	add("08415730", "{\"term\":\"miscellanea\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08415730\"]}");
	add("08415730", "{\"term\":\"miscellany\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06604903\", \"08415730\"]}");
	add("08415730", "{\"term\":\"mixed bag\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08415730\"]}");
	add("08415730", "{\"term\":\"mixture\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00380891\", \"07389356\", \"08415730\", \"07898472\", \"14610438\"]}");
	add("08415730", "{\"term\":\"motley\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03795136\", \"03795327\", \"08415730\"]}");
	add("08415730", "{\"term\":\"potpourri\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03998683\", \"07061563\", \"08415730\"]}");
	add("08415730", "{\"term\":\"salmagundi\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07822978\", \"08415730\"]}");
	add("08415730", "{\"term\":\"smorgasbord\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07608770\", \"08415730\"]}");
	add("08415730", "{\"term\":\"variety\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"04759289\", \"05847533\", \"07033353\", \"08118051\", \"04758560\", \"08415730\"]}");
	add("08416244", "{\"term\":\"grab bag\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03455918\", \"08416244\"]}");
	add("08416335", "{\"term\":\"witch\u0027s brew\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08416335\"]}");
	add("08416335", "{\"term\":\"witches\u0027 brew\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08416335\"]}");
	add("08416335", "{\"term\":\"witches\u0027 broth\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08416335\"]}");
	add("08416543", "{\"term\":\"range\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"04337478\", \"05631411\", \"08016746\", \"08416543\", \"04060330\", \"09426609\", \"08646774\", \"08646496\", \"05132642\"]}");
	add("08416775", "{\"term\":\"selection\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"06412153\", \"13584949\", \"05798247\", \"08416775\", \"00162063\"]}");
	add("08416934", "{\"term\":\"farrago\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08416934\"]}");
	add("08416934", "{\"term\":\"gallimaufry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08416934\"]}");
	add("08416934", "{\"term\":\"hodgepodge\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05962283\", \"08416934\"]}");
	add("08416934", "{\"term\":\"hotchpotch\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07606073\", \"08416934\"]}");
	add("08416934", "{\"term\":\"melange\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08416934\"]}");
	add("08416934", "{\"term\":\"mingle-mangle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08416934\"]}");
	add("08416934", "{\"term\":\"mishmash\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08416934\"]}");
	add("08416934", "{\"term\":\"oddments\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08416934\"]}");
	add("08416934", "{\"term\":\"odds and ends\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08416934\"]}");
	add("08416934", "{\"term\":\"omnium-gatherum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08416934\"]}");
	add("08416934", "{\"term\":\"ragbag\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04053184\", \"08416934\"]}");
	add("08417148", "{\"term\":\"alphabet soup\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07599543\", \"08417148\"]}");
	add("08417288", "{\"term\":\"litter\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"02823567\", \"03683688\", \"14882443\", \"08417288\"]}");
	add("08417409", "{\"term\":\"batch\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08417409\", \"13796604\", \"08417729\"]}");
	add("08417409", "{\"term\":\"clutch\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"03058886\", \"03059144\", \"03059403\", \"08417409\", \"08417827\", \"14056219\", \"00814187\"]}");
	add("08417562", "{\"term\":\"schmear\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08417562\"]}");
	add("08417562", "{\"term\":\"schmeer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08417562\"]}");
	add("08417562", "{\"term\":\"shmear\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08417562\"]}");
	add("08417729", "{\"term\":\"batch\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08417409\", \"13796604\", \"08417729\"]}");
	add("08417827", "{\"term\":\"clutch\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"03058886\", \"03059144\", \"03059403\", \"08417409\", \"08417827\", \"14056219\", \"00814187\"]}");
	add("08417922", "{\"term\":\"membership\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13954660\", \"08417922\"]}");
	add("08417922", "{\"term\":\"rank\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"08417922\", \"13970595\", \"08415136\", \"14453411\", \"08448952\"]}");
	add("08418205", "{\"term\":\"arm\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"04243483\", \"08418205\", \"02740665\", \"04572661\", \"02740838\", \"05571403\"]}");
	add("08418205", "{\"term\":\"branch\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"02740838\", \"09251231\", \"11435835\", \"13936864\", \"13184148\", \"08418205\"]}");
	add("08418205", "{\"term\":\"subdivision\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"04355626\", \"06403644\", \"08418205\", \"00399235\", \"08691989\"]}");
	add("08418511", "{\"term\":\"business\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00551378\", \"08418511\", \"07983541\", \"01098150\", \"05992686\", \"05841346\", \"00583425\", \"01096649\", \"08077878\"]}");
	add("08418511", "{\"term\":\"clientele\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08418511\"]}");
	add("08418511", "{\"term\":\"patronage\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"01098359\", \"01156356\", \"06732153\", \"08418511\", \"01216376\"]}");
	add("08418668", "{\"term\":\"rank and file\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08418668\", \"08415136\"]}");
	add("08418776", "{\"term\":\"rabble\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08418776\", \"08201518\"]}");
	add("08418776", "{\"term\":\"ragtag\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08418776\"]}");
	add("08418776", "{\"term\":\"ragtag and bobtail\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08418776\"]}");
	add("08418776", "{\"term\":\"riffraff\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08418776\"]}");
	add("08418927", "{\"term\":\"smart money\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08418927\", \"13312854\", \"13364138\"]}");
	add("08419104", "{\"term\":\"scum\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04164764\", \"08419104\"]}");
	add("08419104", "{\"term\":\"trash\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03759824\", \"06624351\", \"08419104\", \"14881648\"]}");
	add("08419179", "{\"term\":\"convocation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01233339\", \"08419179\"]}");
	add("08419296", "{\"term\":\"alma mater\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08419296\"]}");
	add("08419399", "{\"term\":\"commission\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00732520\", \"00774724\", \"06490659\", \"07184131\", \"08419399\", \"14032759\", \"01142792\", \"13341882\", \"08341444\"]}");
	add("08419399", "{\"term\":\"delegacy\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00165999\", \"08419399\", \"14023888\"]}");
	add("08419399", "{\"term\":\"delegation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01143160\", \"08419399\"]}");
	add("08419399", "{\"term\":\"deputation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01143160\", \"08419399\"]}");
	add("08419399", "{\"term\":\"mission\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"08419399\", \"00732282\", \"00732520\", \"00972749\", \"08420182\"]}");
	add("08419650", "{\"term\":\"diplomatic mission\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08419650\"]}");
	add("08419785", "{\"term\":\"embassy\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08419785\", \"03287206\"]}");
	add("08419901", "{\"term\":\"high commission\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08419901\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }