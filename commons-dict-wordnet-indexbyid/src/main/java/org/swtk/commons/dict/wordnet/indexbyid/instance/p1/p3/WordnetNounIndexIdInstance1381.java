package org.swtk.commons.dict.wordnet.indexbyid.instance.p1.p3;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance1381 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("13810065", "{\"term\":\"arc cosine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13810065\"]}");
	add("13810065", "{\"term\":\"arccos\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13810065\"]}");
	add("13810065", "{\"term\":\"arccosine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13810065\"]}");
	add("13810065", "{\"term\":\"inverse cosine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13810065\"]}");
	add("13810247", "{\"term\":\"tan\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13810247\", \"04980287\", \"14314036\"]}");
	add("13810247", "{\"term\":\"tangent\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13810247\", \"13893773\"]}");
	add("13810394", "{\"term\":\"arc tangent\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13810394\"]}");
	add("13810394", "{\"term\":\"arctan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13810394\"]}");
	add("13810394", "{\"term\":\"arctangent\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13810394\"]}");
	add("13810394", "{\"term\":\"inverse tangent\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13810394\"]}");
	add("13810581", "{\"term\":\"cotan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13810581\"]}");
	add("13810581", "{\"term\":\"cotangent\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13810581\"]}");
	add("13810714", "{\"term\":\"arc cotangent\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13810714\"]}");
	add("13810714", "{\"term\":\"arccotangent\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13810714\"]}");
	add("13810714", "{\"term\":\"inverse cotangent\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13810714\"]}");
	add("13810902", "{\"term\":\"sec\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08441001\", \"13810902\", \"15259923\"]}");
	add("13810902", "{\"term\":\"secant\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13810902\", \"13893977\"]}");
	add("13811032", "{\"term\":\"arc secant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13811032\"]}");
	add("13811032", "{\"term\":\"arcsec\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13811032\"]}");
	add("13811032", "{\"term\":\"arcsecant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13811032\"]}");
	add("13811032", "{\"term\":\"inverse secant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13811032\"]}");
	add("13811214", "{\"term\":\"cosec\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13811214\"]}");
	add("13811214", "{\"term\":\"cosecant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13811214\"]}");
	add("13811348", "{\"term\":\"arc cosecant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13811348\"]}");
	add("13811348", "{\"term\":\"arccosecant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13811348\"]}");
	add("13811348", "{\"term\":\"inverse cosecant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13811348\"]}");
	add("13811493", "{\"term\":\"threshold function\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13811493\"]}");
	add("13811674", "{\"term\":\"exponential\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13811674\"]}");
	add("13811674", "{\"term\":\"exponential function\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13811674\"]}");
	add("13811839", "{\"term\":\"exponential equation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13811839\"]}");
	add("13811963", "{\"term\":\"exponential curve\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13811963\"]}");
	add("13812061", "{\"term\":\"exponential expression\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13812061\"]}");
	add("13812216", "{\"term\":\"exponential series\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13812216\"]}");
	add("13812345", "{\"term\":\"parity\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"04755666\", \"06114921\", \"13646953\", \"13812345\", \"14070653\"]}");
	add("13812704", "{\"term\":\"evenness\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04755738\", \"04776695\", \"13812704\"]}");
	add("13812804", "{\"term\":\"oddness\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04806260\", \"13812804\"]}");
	add("13812924", "{\"term\":\"foundation\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00241051\", \"03392169\", \"05801562\", \"05995479\", \"03391862\", \"08423443\", \"13812924\"]}");
	add("13813124", "{\"term\":\"basis\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13831981\", \"05801562\", \"13813124\"]}");
	add("13813124", "{\"term\":\"footing\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03384835\", \"13813124\", \"13977154\"]}");
	add("13813124", "{\"term\":\"ground\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"03365691\", \"03467526\", \"03467679\", \"05939360\", \"09358146\", \"05942570\", \"08597662\", \"13813124\", \"14867162\", \"09201896\", \"09357302\"]}");
	add("13813334", "{\"term\":\"common ground\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13813334\"]}");
	add("13813462", "{\"term\":\"grass roots\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07964375\", \"13813462\"]}");
	add("13813601", "{\"term\":\"connectedness\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13813601\", \"14442568\"]}");
	add("13813601", "{\"term\":\"connection\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00146038\", \"00317815\", \"09975514\", \"13893444\", \"05771913\", \"09975626\", \"03095830\", \"14442568\", \"13813601\"]}");
	add("13813601", "{\"term\":\"connexion\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00146038\", \"00317815\", \"03095830\", \"05771913\", \"13813601\", \"13893444\"]}");
	add("13814122", "{\"term\":\"series\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"05871305\", \"08475515\", \"13814122\", \"07480588\", \"06606007\", \"06633954\", \"08474987\"]}");
	add("13814395", "{\"term\":\"alliance\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"01083380\", \"06786485\", \"08310903\", \"13814395\", \"14442226\"]}");
	add("13814395", "{\"term\":\"bond\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"04942705\", \"09613551\", \"10875583\", \"14806688\", \"02758357\", \"04188289\", \"13371991\", \"13814395\", \"13438583\", \"11456397\"]}");
	add("13814680", "{\"term\":\"silver cord\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13814680\"]}");
	add("13814791", "{\"term\":\"linkage\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00149798\", \"03679766\", \"04930201\", \"13814791\"]}");
	add("13814904", "{\"term\":\"link\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"03679596\", \"04049875\", \"06271913\", \"06598647\", \"13676395\", \"13893444\", \"14442568\", \"03679297\", \"13814904\"]}");
	add("13814904", "{\"term\":\"nexus\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08475844\", \"13814904\"]}");
	add("13815054", "{\"term\":\"communication\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13815054\", \"00033319\", \"06262268\"]}");
	add("13815339", "{\"term\":\"concatenation\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00147263\", \"08392981\", \"13815339\", \"14443141\"]}");
	add("13815542", "{\"term\":\"bridge\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"02902540\", \"02902722\", \"02902852\", \"02902977\", \"00491580\", \"05606958\", \"13815542\", \"02903091\", \"02901994\"]}");
	add("13815716", "{\"term\":\"involvement\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"13947692\", \"13954922\", \"05690773\", \"13815716\", \"01241629\"]}");
	add("13815988", "{\"term\":\"implication\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"13815988\", \"13882478\", \"07252762\", \"05929385\", \"05788882\"]}");
	add("13816246", "{\"term\":\"comprehension\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13816246\", \"05813910\"]}");
	add("13816246", "{\"term\":\"inclusion\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00373938\", \"09333712\", \"13816246\", \"13959337\"]}");
	add("13816438", "{\"term\":\"unconnectedness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13816438\"]}");
	add("13816629", "{\"term\":\"relevance\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13816629\"]}");
	add("13816629", "{\"term\":\"relevancy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13816629\"]}");
	add("13816870", "{\"term\":\"materiality\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04768026\", \"13816870\"]}");
	add("13817005", "{\"term\":\"cogency\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04790831\", \"13817005\"]}");
	add("13817097", "{\"term\":\"point\", \"synsetCount\":26, \"upperType\":\"NOUN\", \"ids\":[\"03218529\", \"03981029\", \"03981127\", \"04739307\", \"05078725\", \"06825147\", \"06834918\", \"06856570\", \"13421323\", \"13734391\", \"13852504\", \"03980573\", \"04739165\", \"13817097\", \"06494090\", \"09419340\", \"13631405\", \"13934887\", \"13925175\", \"05992951\", \"15205381\", \"13962925\", \"05825971\", \"06619161\", \"08637636\", \"05874582\"]}");
	add("13817254", "{\"term\":\"germaneness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13817254\"]}");
	add("13817392", "{\"term\":\"applicability\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13817392\"]}");
	add("13817392", "{\"term\":\"pertinence\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13817392\"]}");
	add("13817392", "{\"term\":\"pertinency\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13817392\"]}");
	add("13817701", "{\"term\":\"relatedness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13817701\"]}");
	add("13817907", "{\"term\":\"bearing\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"02820166\", \"03012169\", \"05009987\", \"04917554\", \"08698626\", \"13817907\"]}");
	add("13818046", "{\"term\":\"irrelevance\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13818046\"]}");
	add("13818046", "{\"term\":\"irrelevancy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13818046\"]}");
	add("13818265", "{\"term\":\"inapplicability\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13818265\"]}");
	add("13818428", "{\"term\":\"immateriality\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04768772\", \"13818428\"]}");
	add("13818615", "{\"term\":\"unrelatedness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13818615\"]}");
	add("13818797", "{\"term\":\"extraneousness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13818797\"]}");
	add("13818991", "{\"term\":\"grammatical relation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13818991\"]}");
	add("13819354", "{\"term\":\"linguistic relation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13819354\"]}");
	add("13819525", "{\"term\":\"agreement\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"07189892\", \"13819525\", \"05803052\", \"13994512\", \"04720704\", \"06783066\"]}");
	add("13819525", "{\"term\":\"concord\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"01286428\", \"07194843\", \"09119495\", \"13819525\", \"13992690\", \"09134400\"]}");
	add("13819773", "{\"term\":\"number agreement\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13819773\"]}");
	add("13819959", "{\"term\":\"person agreement\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13819959\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }