package org.swtk.commons.dict.wordnet.indexbyid.instance.p0.p0;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0015 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("00150082", "{\"term\":\"undoing\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00150082\", \"00235941\"]}");
	add("00150082", "{\"term\":\"unfastening\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00150082\"]}");
	add("00150082", "{\"term\":\"untying\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00150082\"]}");
	add("00150328", "{\"term\":\"welding\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00150328\"]}");
	add("00150519", "{\"term\":\"butt-welding\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00150519\"]}");
	add("00150519", "{\"term\":\"butt welding\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00150519\"]}");
	add("00150715", "{\"term\":\"spot-welding\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00150715\"]}");
	add("00150715", "{\"term\":\"spot welding\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00150715\"]}");
	add("00150917", "{\"term\":\"flare\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"00150917\", \"00562413\", \"03362739\", \"07028111\", \"11474727\", \"11530641\", \"14105271\", \"14250839\", \"06887980\", \"13503086\", \"13885247\"]}");
	add("00151048", "{\"term\":\"texas leaguer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00151048\"]}");
	add("00151199", "{\"term\":\"flash butt welding\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00151199\"]}");
	add("00151199", "{\"term\":\"flash welding\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00151199\"]}");
	add("00151411", "{\"term\":\"lap\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00151411\", \"00296016\", \"03647020\", \"03647261\", \"14538643\", \"05570228\"]}");
	add("00151411", "{\"term\":\"lick\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00135600\", \"00151411\", \"09443567\"]}");
	add("00151582", "{\"term\":\"grazing\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00151582\", \"00842752\"]}");
	add("00151582", "{\"term\":\"shaving\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00151582\", \"09408030\", \"00255636\"]}");
	add("00151582", "{\"term\":\"skimming\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00151582\", \"00785925\", \"06611099\", \"01265067\"]}");
	add("00151752", "{\"term\":\"tracing\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00151752\", \"04470508\", \"00940235\"]}");
	add("00151907", "{\"term\":\"catching\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00078801\", \"00151907\", \"00127706\"]}");
	add("00151907", "{\"term\":\"detection\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00636448\", \"06291828\", \"00151907\", \"05718634\"]}");
	add("00151907", "{\"term\":\"espial\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00151907\"]}");
	add("00151907", "{\"term\":\"spotting\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00151907\", \"00277657\"]}");
	add("00151907", "{\"term\":\"spying\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00151907\", \"00655477\", \"00883119\"]}");
	add("00152134", "{\"term\":\"self-discovery\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00152134\"]}");
	add("00152229", "{\"term\":\"breakthrough\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00978041\", \"00152229\", \"05816226\"]}");
	add("00152317", "{\"term\":\"determination\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00163453\", \"05796557\", \"05846685\", \"04871431\", \"00152317\"]}");
	add("00152317", "{\"term\":\"finding\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"09302364\", \"01194465\", \"00152317\"]}");
	add("00152734", "{\"term\":\"rediscovery\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00152734\"]}");
	add("00152838", "{\"term\":\"designation\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00152838\", \"00164600\", \"06350278\"]}");
	add("00152838", "{\"term\":\"identification\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"04625938\", \"05770995\", \"14600591\", \"06898133\", \"00152838\"]}");
	add("00153050", "{\"term\":\"bertillon system\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00153050\"]}");
	add("00153158", "{\"term\":\"fingerprinting\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00153158\"]}");
	add("00153339", "{\"term\":\"genetic fingerprinting\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00153339\"]}");
	add("00153339", "{\"term\":\"genetic profiling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00153339\"]}");
	add("00153547", "{\"term\":\"diagnosing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00153547\"]}");
	add("00153547", "{\"term\":\"diagnosis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00153547\"]}");
	add("00153810", "{\"term\":\"blood typing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00153810\"]}");
	add("00153925", "{\"term\":\"medical diagnosis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00153925\"]}");
	add("00154108", "{\"term\":\"prenatal diagnosis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00154108\"]}");
	add("00154319", "{\"term\":\"differential diagnosis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00154319\"]}");
	add("00154485", "{\"term\":\"medical prognosis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00154485\"]}");
	add("00154485", "{\"term\":\"prognosis\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00154485\", \"06762595\"]}");
	add("00154485", "{\"term\":\"prospect\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00154485\", \"05941982\", \"09910201\", \"05953807\", \"14506552\"]}");
	add("00154629", "{\"term\":\"resolution\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"00181077\", \"06756201\", \"07041708\", \"07434817\", \"11526370\", \"05790881\", \"05797094\", \"00154629\", \"04868717\", \"11526187\", \"06523865\"]}");
	add("00154629", "{\"term\":\"solving\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00154629\"]}");
	add("00154781", "{\"term\":\"proof\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00154781\", \"04017506\", \"06603166\", \"13802392\", \"06660359\", \"05833063\"]}");
	add("00154781", "{\"term\":\"substantiation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00154781\", \"05833569\"]}");
	add("00154781", "{\"term\":\"validation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05834615\", \"00154781\"]}");
	add("00155053", "{\"term\":\"authentication\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00155053\", \"06868085\"]}");
	add("00155053", "{\"term\":\"certification\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00155053\", \"06483016\", \"06663176\", \"01142151\"]}");
	add("00155253", "{\"term\":\"documentation\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00155253\", \"06600607\", \"06663176\"]}");
	add("00155253", "{\"term\":\"support\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"13386871\", \"04366676\", \"07045239\", \"01019262\", \"04367588\", \"13386459\", \"00155253\", \"00973567\", \"05701884\", \"01215009\", \"01218392\"]}");
	add("00155509", "{\"term\":\"monetisation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00155509\"]}");
	add("00155509", "{\"term\":\"monetization\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00155509\"]}");
	add("00155714", "{\"term\":\"probate\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00155714\", \"06556423\"]}");
	add("00155905", "{\"term\":\"demonetisation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00155905\"]}");
	add("00155905", "{\"term\":\"demonetization\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00155905\"]}");
	add("00156118", "{\"term\":\"disproof\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00156118\", \"05834793\"]}");
	add("00156118", "{\"term\":\"falsification\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00156118\", \"00752233\", \"00752488\", \"05834793\"]}");
	add("00156118", "{\"term\":\"falsifying\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00156118\"]}");
	add("00156118", "{\"term\":\"refutal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00156118\"]}");
	add("00156118", "{\"term\":\"refutation\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00156118\", \"05834793\", \"07215473\"]}");
	add("00156307", "{\"term\":\"fix\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00156307\", \"00215015\", \"00267650\", \"00324088\", \"14432893\"]}");
	add("00156307", "{\"term\":\"localisation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00156307\", \"06001159\"]}");
	add("00156307", "{\"term\":\"localization\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06001159\", \"00156307\"]}");
	add("00156307", "{\"term\":\"locating\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00156307\", \"01053255\"]}");
	add("00156307", "{\"term\":\"location\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03687515\", \"00156307\", \"01053255\", \"00027365\"]}");
	add("00156617", "{\"term\":\"echo sounding\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00156617\"]}");
	add("00156617", "{\"term\":\"echolocation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00156617\"]}");
	add("00156790", "{\"term\":\"predetermination\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00156790\", \"05847039\", \"05974996\"]}");
	add("00156939", "{\"term\":\"rectification\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00156939\", \"00259697\", \"07430908\", \"13568402\"]}");
	add("00157113", "{\"term\":\"redetermination\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00157113\"]}");
	add("00157210", "{\"term\":\"induction\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00157210\", \"00239394\", \"05835577\", \"05782412\", \"11488572\", \"07467805\"]}");
	add("00157210", "{\"term\":\"initiation\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00157210\", \"04897741\", \"00241051\", \"07467805\"]}");
	add("00157210", "{\"term\":\"trigger\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00157210\", \"04490329\", \"03475752\"]}");
	add("00157445", "{\"term\":\"fomentation\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00157445\", \"00709421\", \"14897207\"]}");
	add("00157445", "{\"term\":\"instigation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00157445\", \"07266287\"]}");
	add("00157632", "{\"term\":\"coercion\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00157632\", \"01129566\"]}");
	add("00157632", "{\"term\":\"compulsion\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00157632\", \"09206152\", \"09204227\"]}");
	add("00157901", "{\"term\":\"influence\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"10481313\", \"11434722\", \"05700875\", \"00157901\", \"05201419\"]}");
	add("00158138", "{\"term\":\"cross-pollination\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00158138\", \"07453392\"]}");
	add("00158283", "{\"term\":\"exposure\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"00205508\", \"00523593\", \"00909038\", \"03931348\", \"13661685\", \"14567533\", \"05942859\", \"07230037\", \"00158283\", \"05051127\"]}");
	add("00158507", "{\"term\":\"overexposure\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00158507\", \"00909198\"]}");
	add("00158697", "{\"term\":\"underexposure\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00158697\", \"00909340\"]}");
	add("00158777", "{\"term\":\"encroachment\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00158777\", \"00734781\", \"07444576\"]}");
	add("00158777", "{\"term\":\"impact\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"01174742\", \"00158777\", \"11434525\", \"07353152\"]}");
	add("00158777", "{\"term\":\"impingement\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00127267\", \"00158777\"]}");
	add("00159005", "{\"term\":\"manipulation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00141472\", \"00159005\"]}");
	add("00159005", "{\"term\":\"use\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"05197374\", \"00159005\", \"00415192\", \"13472977\", \"05157225\", \"05156572\", \"00948944\"]}");
	add("00159263", "{\"term\":\"mind game\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00159263\", \"00461040\"]}");
	add("00159625", "{\"term\":\"auto-suggestion\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00159625\"]}");
	add("00159625", "{\"term\":\"autosuggestion\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00159625\"]}");
	add("00159625", "{\"term\":\"self-suggestion\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00159625\"]}");
	add("00159816", "{\"term\":\"hypnotism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00159816\"]}");
	add("00159816", "{\"term\":\"mesmerism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00159816\"]}");
	add("00159816", "{\"term\":\"suggestion\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00159816\", \"05779676\", \"07261242\", \"13795501\", \"07177331\", \"05924749\"]}");
	add("00159997", "{\"term\":\"inducement\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00159997\", \"09202673\"]}");
	add("00159997", "{\"term\":\"inducing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00159997\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }