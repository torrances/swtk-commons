package org.swtk.commons.dict.wordnet.indexbyid.instance.p0.p6;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0689 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("06890058", "{\"term\":\"beck\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06890058\"]}");
	add("06890128", "{\"term\":\"facial expression\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04687095\", \"06890128\"]}");
	add("06890128", "{\"term\":\"facial gesture\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06890128\"]}");
	add("06890431", "{\"term\":\"gape\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00880715\", \"06890431\"]}");
	add("06890559", "{\"term\":\"rictus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06890559\"]}");
	add("06890628", "{\"term\":\"face\", \"synsetCount\":13, \"upperType\":\"NOUN\", \"ids\":[\"03318401\", \"04845441\", \"05176322\", \"06838449\", \"06890628\", \"03318547\", \"05608953\", \"08527687\", \"09641987\", \"03318818\", \"04686776\", \"04687095\", \"05608392\"]}");
	add("06890628", "{\"term\":\"grimace\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06890628\"]}");
	add("06890792", "{\"term\":\"moue\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06890792\"]}");
	add("06890792", "{\"term\":\"pout\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02521971\", \"02619837\", \"06890792\"]}");
	add("06890792", "{\"term\":\"wry face\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06890792\"]}");
	add("06890899", "{\"term\":\"frown\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06890899\"]}");
	add("06890899", "{\"term\":\"scowl\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06890899\"]}");
	add("06891040", "{\"term\":\"simper\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06891040\"]}");
	add("06891121", "{\"term\":\"grin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06891121\"]}");
	add("06891121", "{\"term\":\"grinning\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06891121\"]}");
	add("06891121", "{\"term\":\"smile\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06891121\"]}");
	add("06891121", "{\"term\":\"smiling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06891121\"]}");
	add("06891454", "{\"term\":\"laugh\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06790941\", \"06891454\", \"07141714\"]}");
	add("06891630", "{\"term\":\"smirk\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06891630\"]}");
	add("06891756", "{\"term\":\"snarl\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"05693684\", \"06891756\", \"07144466\"]}");
	add("06891853", "{\"term\":\"straight face\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06891853\"]}");
	add("06891984", "{\"term\":\"wink\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00118779\", \"06891984\", \"15271921\"]}");
	add("06892106", "{\"term\":\"wince\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00867149\", \"06892106\"]}");
	add("06892230", "{\"term\":\"demo\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06892230\"]}");
	add("06892230", "{\"term\":\"demonstration\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"06892230\", \"06660791\", \"01180193\", \"00523026\", \"00522618\"]}");
	add("06892571", "{\"term\":\"display\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"03215838\", \"06900776\", \"07228377\", \"03215661\", \"00522265\", \"06892571\"]}");
	add("06892571", "{\"term\":\"show\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00756620\", \"06631572\", \"06892571\", \"00521313\"]}");
	add("06892816", "{\"term\":\"eye contact\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00040478\", \"06892816\"]}");
	add("06893063", "{\"term\":\"big stick\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06893063\"]}");
	add("06893184", "{\"term\":\"gaudery\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06893184\"]}");
	add("06893184", "{\"term\":\"pomp\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04822233\", \"06893184\"]}");
	add("06893299", "{\"term\":\"expression\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00359354\", \"06324641\", \"13499408\", \"06744551\", \"07083988\", \"07166088\", \"07154581\", \"06893299\", \"04687095\"]}");
	add("06893299", "{\"term\":\"manifestation\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"01180193\", \"06893299\", \"07337624\", \"06811416\", \"07337831\"]}");
	add("06893299", "{\"term\":\"reflection\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"05017811\", \"06779826\", \"13807616\", \"04076088\", \"04754355\", \"06893299\", \"11523478\", \"05793513\"]}");
	add("06893299", "{\"term\":\"reflexion\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"04076088\", \"04754355\", \"05017811\", \"05793513\", \"06779826\", \"06893299\", \"11523478\"]}");
	add("06893583", "{\"term\":\"exemplification\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05773898\", \"06893583\"]}");
	add("06893583", "{\"term\":\"illustration\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03566525\", \"05828980\", \"06893583\", \"07011893\"]}");
	add("06893714", "{\"term\":\"allegory\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06378026\", \"06893714\", \"06383718\"]}");
	add("06893714", "{\"term\":\"emblem\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06893714\", \"03287502\"]}");
	add("06894274", "{\"term\":\"cupid\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06894274\", \"09583190\"]}");
	add("06894410", "{\"term\":\"donkey\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02392211\", \"06894410\"]}");
	add("06894544", "{\"term\":\"dove\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"06894544\", \"07662012\", \"09273457\", \"10047848\", \"01814978\"]}");
	add("06894613", "{\"term\":\"eagle\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"06894613\", \"13413645\", \"13617211\", \"01615935\"]}");
	add("06894712", "{\"term\":\"elephant\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06894712\", \"02506148\"]}");
	add("06894848", "{\"term\":\"fasces\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06894848\"]}");
	add("06895059", "{\"term\":\"ensign\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03295007\", \"06895059\", \"09639752\"]}");
	add("06895059", "{\"term\":\"national flag\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06895059\"]}");
	add("06895188", "{\"term\":\"hammer and sickle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06895188\"]}");
	add("06895294", "{\"term\":\"red flag\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00426618\", \"06895294\", \"07280324\"]}");
	add("06895383", "{\"term\":\"magen david\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06895383\"]}");
	add("06895383", "{\"term\":\"mogen david\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06895383\"]}");
	add("06895383", "{\"term\":\"shield of david\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06895383\"]}");
	add("06895383", "{\"term\":\"solomon\u0027s seal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06895383\"]}");
	add("06895383", "{\"term\":\"star of david\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06895383\"]}");
	add("06895611", "{\"term\":\"badge\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05859658\", \"06895611\"]}");
	add("06896003", "{\"term\":\"merit badge\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06896003\"]}");
	add("06896123", "{\"term\":\"insignia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06896123\"]}");
	add("06896324", "{\"term\":\"agnus dei\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06467946\", \"06896324\"]}");
	add("06896324", "{\"term\":\"paschal lamb\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06896324\"]}");
	add("06896433", "{\"term\":\"maple-leaf\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06896433\"]}");
	add("06896510", "{\"term\":\"medallion\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"06719615\", \"06896510\", \"07664811\", \"13414232\"]}");
	add("06896615", "{\"term\":\"spread eagle\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00558324\", \"06896615\"]}");
	add("06896775", "{\"term\":\"hakenkreuz\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06896775\"]}");
	add("06896775", "{\"term\":\"swastika\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06896775\"]}");
	add("06897006", "{\"term\":\"mantle\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"02959203\", \"03155743\", \"03724882\", \"05251388\", \"09246632\", \"09369347\", \"11175186\", \"06897006\"]}");
	add("06897147", "{\"term\":\"crown\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"03143632\", \"03143740\", \"05547228\", \"06718654\", \"08635538\", \"13148762\", \"13411037\", \"03143185\", \"03143320\", \"03143525\", \"05315640\", \"06897147\"]}");
	add("06897387", "{\"term\":\"british crown\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06897387\"]}");
	add("06897570", "{\"term\":\"caduceus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06897570\"]}");
	add("06897720", "{\"term\":\"insignia of rank\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06897720\"]}");
	add("06897840", "{\"term\":\"shoulder flash\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06897840\"]}");
	add("06898004", "{\"term\":\"hash mark\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06898004\"]}");
	add("06898004", "{\"term\":\"hashmark\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06898004\"]}");
	add("06898004", "{\"term\":\"service stripe\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06898004\"]}");
	add("06898133", "{\"term\":\"identification\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"04625938\", \"05770995\", \"14600591\", \"06898133\", \"00152838\"]}");
	add("06898439", "{\"term\":\"positive identification\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06898439\"]}");
	add("06898956", "{\"term\":\"negative identification\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06898956\"]}");
	add("06899323", "{\"term\":\"facial profiling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06899323\"]}");
	add("06899538", "{\"term\":\"fingerprint\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04702328\", \"06899538\", \"06657156\"]}");
	add("06899705", "{\"term\":\"linguistic profiling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06899705\"]}");
	add("06899868", "{\"term\":\"profiling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06899868\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }