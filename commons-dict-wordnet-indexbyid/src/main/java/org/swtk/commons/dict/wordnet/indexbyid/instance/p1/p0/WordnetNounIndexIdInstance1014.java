package org.swtk.commons.dict.wordnet.indexbyid.instance.p1.p0;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance1014 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("10140190", "{\"term\":\"gardener\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10140328\", \"10140190\"]}");
	add("10140190", "{\"term\":\"nurseryman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10140190\"]}");
	add("10140328", "{\"term\":\"gardener\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10140328\", \"10140190\"]}");
	add("10140473", "{\"term\":\"garment-worker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10140473\"]}");
	add("10140473", "{\"term\":\"garment worker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10140473\"]}");
	add("10140473", "{\"term\":\"garmentmaker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10140473\"]}");
	add("10140683", "{\"term\":\"garment cutter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10140683\"]}");
	add("10140801", "{\"term\":\"garnishee\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10140801\"]}");
	add("10140903", "{\"term\":\"choker\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03028429\", \"03028565\", \"09939357\", \"10140903\"]}");
	add("10140903", "{\"term\":\"garroter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10140903\"]}");
	add("10140903", "{\"term\":\"garrotter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10140903\"]}");
	add("10140903", "{\"term\":\"strangler\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10140903\", \"13144190\"]}");
	add("10140903", "{\"term\":\"throttler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10140903\"]}");
	add("10141124", "{\"term\":\"gasbag\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03296874\", \"10141124\"]}");
	add("10141124", "{\"term\":\"windbag\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10141124\"]}");
	add("10141252", "{\"term\":\"gas fitter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10141252\"]}");
	add("10141371", "{\"term\":\"gasman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10141371\"]}");
	add("10141457", "{\"term\":\"gastroenterologist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10141457\"]}");
	add("10141609", "{\"term\":\"crasher\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10141609\"]}");
	add("10141609", "{\"term\":\"gatecrasher\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10141609\"]}");
	add("10141609", "{\"term\":\"unwelcome guest\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10141609\"]}");
	add("10141785", "{\"term\":\"gatekeeper\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10046278\", \"10141785\"]}");
	add("10141957", "{\"term\":\"gatherer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09955820\", \"10141957\"]}");
	add("10142098", "{\"term\":\"gaucho\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10142098\"]}");
	add("10142188", "{\"term\":\"gawker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10142188\"]}");
	add("10142302", "{\"term\":\"gazetteer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06431271\", \"10142302\"]}");
	add("10142395", "{\"term\":\"geisha\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10142395\"]}");
	add("10142395", "{\"term\":\"geisha girl\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10142395\"]}");
	add("10142563", "{\"term\":\"gem cutter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10142563\"]}");
	add("10142659", "{\"term\":\"gendarme\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10142659\"]}");
	add("10142751", "{\"term\":\"genealogist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10142751\"]}");
	add("10142849", "{\"term\":\"genevan\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09908798\", \"10142849\"]}");
	add("10142952", "{\"term\":\"genoese\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10142952\"]}");
	add("10143054", "{\"term\":\"genre painter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10143054\"]}");
	add("10143152", "{\"term\":\"geek\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10062653\", \"10143152\"]}");
	add("10143248", "{\"term\":\"geezer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10143248\"]}");
	add("10143381", "{\"term\":\"full general\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10143381\"]}");
	add("10143381", "{\"term\":\"general\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"05826532\", \"10145098\", \"10143381\"]}");
	add("10145098", "{\"term\":\"general\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"05826532\", \"10145098\", \"10143381\"]}");
	add("10145098", "{\"term\":\"superior general\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10145098\"]}");
	add("10145234", "{\"term\":\"general manager\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10145234\"]}");
	add("10145323", "{\"term\":\"general officer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10145323\"]}");
	add("10145546", "{\"term\":\"general practitioner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10145546\"]}");
	add("10145546", "{\"term\":\"gp\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10145546\"]}");
	add("10145714", "{\"term\":\"author\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10145714\", \"10813654\"]}");
	add("10145714", "{\"term\":\"generator\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03439195\", \"10145714\", \"03438787\", \"03439098\"]}");
	add("10145714", "{\"term\":\"source\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"07273332\", \"09430745\", \"13580156\", \"10145714\", \"10225604\", \"04270724\", \"05843082\", \"06687867\", \"08524579\"]}");
	add("10145961", "{\"term\":\"geneticist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10145961\"]}");
	add("10146245", "{\"term\":\"genitor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10146245\"]}");
	add("10146343", "{\"term\":\"primogenitor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10146343\"]}");
	add("10146343", "{\"term\":\"progenitor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10146343\"]}");
	add("10146463", "{\"term\":\"brain\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"07668194\", \"10146463\", \"05619057\", \"05625839\", \"05488747\"]}");
	add("10146463", "{\"term\":\"brainiac\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10146463\"]}");
	add("10146463", "{\"term\":\"einstein\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10146463\", \"10974490\"]}");
	add("10146463", "{\"term\":\"genius\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"05632244\", \"05633156\", \"09781932\", \"05627526\", \"10146463\"]}");
	add("10146463", "{\"term\":\"mastermind\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10146463\", \"10403515\"]}");
	add("10146723", "{\"term\":\"gent\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08870492\", \"09927483\", \"10146723\"]}");
	add("10146810", "{\"term\":\"gentleman\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10765000\", \"10146810\"]}");
	add("10146957", "{\"term\":\"gentleman-at-arms\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10146957\"]}");
	add("10147092", "{\"term\":\"geographer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10147092\"]}");
	add("10147226", "{\"term\":\"geologist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10147226\"]}");
	add("10147453", "{\"term\":\"geomancer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10147453\"]}");
	add("10147553", "{\"term\":\"geometer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10147553\"]}");
	add("10147553", "{\"term\":\"geometrician\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10147553\"]}");
	add("10147700", "{\"term\":\"geometry teacher\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10147700\"]}");
	add("10147791", "{\"term\":\"germanist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10147791\"]}");
	add("10147918", "{\"term\":\"geriatrician\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10147918\"]}");
	add("10147918", "{\"term\":\"gerontologist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10147918\"]}");
	add("10148056", "{\"term\":\"geophysicist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10148056\"]}");
	add("10148285", "{\"term\":\"ghost\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"07178814\", \"09569105\", \"10148285\", \"05906778\"]}");
	add("10148285", "{\"term\":\"ghostwriter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10148285\"]}");
	add("10148446", "{\"term\":\"behemoth\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09958449\", \"10148446\"]}");
	add("10148446", "{\"term\":\"colossus\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09958449\", \"10148446\"]}");
	add("10148446", "{\"term\":\"giant\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"09311675\", \"09511841\", \"10148446\", \"10148670\", \"08073223\", \"09958449\", \"01326422\"]}");
	add("10148446", "{\"term\":\"goliath\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10148446\", \"11025968\"]}");
	add("10148446", "{\"term\":\"monster\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"01462749\", \"10349658\", \"10129212\", \"10148446\", \"09515097\"]}");
	add("10148670", "{\"term\":\"giant\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"09311675\", \"09511841\", \"10148446\", \"10148670\", \"08073223\", \"09958449\", \"01326422\"]}");
	add("10148670", "{\"term\":\"heavyweight\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"09958449\", \"10148670\", \"10186635\", \"10186745\", \"10186845\"]}");
	add("10148670", "{\"term\":\"hulk\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03553713\", \"10148670\"]}");
	add("10148670", "{\"term\":\"whale\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02065397\", \"10148670\"]}");
	add("10148875", "{\"term\":\"gibson girl\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10148875\"]}");
	add("10149001", "{\"term\":\"gigolo\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10149001\"]}");
	add("10149122", "{\"term\":\"gilder\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10149122\"]}");
	add("10149256", "{\"term\":\"gillie\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03441200\", \"10149256\"]}");
	add("10149362", "{\"term\":\"fille\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10149362\"]}");
	add("10149362", "{\"term\":\"girl\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"10149967\", \"10150206\", \"10012375\", \"10104064\", \"10149362\"]}");
	add("10149362", "{\"term\":\"miss\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06352619\", \"07334374\", \"10149362\"]}");
	add("10149362", "{\"term\":\"missy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10149362\"]}");
	add("10149362", "{\"term\":\"young lady\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10149362\"]}");
	add("10149362", "{\"term\":\"young woman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10149362\"]}");
	add("10149967", "{\"term\":\"girl\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"10149967\", \"10150206\", \"10012375\", \"10104064\", \"10149362\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }