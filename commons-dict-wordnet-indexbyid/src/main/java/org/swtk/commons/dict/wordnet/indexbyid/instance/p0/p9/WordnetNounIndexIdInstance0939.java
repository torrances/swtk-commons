package org.swtk.commons.dict.wordnet.indexbyid.instance.p0.p9;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0939 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("09390034", "{\"term\":\"nebule\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09390034\"]}");
	add("09390100", "{\"term\":\"essential\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09390100\"]}");
	add("09390100", "{\"term\":\"necessary\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09390100\"]}");
	add("09390100", "{\"term\":\"necessity\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09390100\", \"14474157\"]}");
	add("09390100", "{\"term\":\"requirement\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"05901034\", \"09390100\", \"05901258\"]}");
	add("09390100", "{\"term\":\"requisite\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09390100\"]}");
	add("09390630", "{\"term\":\"neck\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"03819652\", \"03819888\", \"07677102\", \"09390630\", \"05554173\"]}");
	add("09390724", "{\"term\":\"neckar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09390724\"]}");
	add("09390724", "{\"term\":\"neckar river\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09390724\"]}");
	add("09390888", "{\"term\":\"need\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"14517300\", \"00023953\", \"09390888\", \"14472592\"]}");
	add("09390888", "{\"term\":\"want\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"07501369\", \"09390888\", \"14472871\", \"14517010\"]}");
	add("09391121", "{\"term\":\"neighbor\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09391121\", \"10372030\"]}");
	add("09391121", "{\"term\":\"neighbour\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09391121\", \"10372030\"]}");
	add("09391376", "{\"term\":\"neosho\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09391376\"]}");
	add("09391376", "{\"term\":\"neosho river\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09391376\"]}");
	add("09391596", "{\"term\":\"neptune\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09391596\", \"09592459\"]}");
	add("09391936", "{\"term\":\"neritic zone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09391936\"]}");
	add("09392066", "{\"term\":\"nest\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"03824876\", \"08261267\", \"08661304\", \"03824757\", \"09392066\"]}");
	add("09392309", "{\"term\":\"neutrino\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09392309\"]}");
	add("09392431", "{\"term\":\"neutron\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09392431\"]}");
	add("09392603", "{\"term\":\"neutron star\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09392603\"]}");
	add("09392755", "{\"term\":\"neva\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09392755\"]}");
	add("09392755", "{\"term\":\"neva river\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09392755\"]}");
	add("09392917", "{\"term\":\"neve\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09392917\"]}");
	add("09393079", "{\"term\":\"new river\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09393079\"]}");
	add("09393294", "{\"term\":\"new york bay\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09393294\"]}");
	add("09393463", "{\"term\":\"niagara\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09393463\", \"09393684\"]}");
	add("09393463", "{\"term\":\"niagara river\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09393463\"]}");
	add("09393684", "{\"term\":\"niagara\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09393463\", \"09393684\"]}");
	add("09393684", "{\"term\":\"niagara falls\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09147682\", \"09393684\"]}");
	add("09393939", "{\"term\":\"nidus\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09393939\", \"14206179\"]}");
	add("09394062", "{\"term\":\"niger\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08995681\", \"09394062\"]}");
	add("09394062", "{\"term\":\"niger river\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09394062\"]}");
	add("09394271", "{\"term\":\"nile\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09394271\"]}");
	add("09394271", "{\"term\":\"nile river\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09394271\"]}");
	add("09394597", "{\"term\":\"nimbus\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04958893\", \"09394597\"]}");
	add("09394597", "{\"term\":\"nimbus cloud\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09394597\"]}");
	add("09394597", "{\"term\":\"rain cloud\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09394597\"]}");
	add("09394727", "{\"term\":\"niobrara\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09394727\"]}");
	add("09394727", "{\"term\":\"niobrara river\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09394727\"]}");
	add("09394852", "{\"term\":\"nodule\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"09394852\", \"13109749\", \"05272537\"]}");
	add("09395087", "{\"term\":\"norma\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09395087\"]}");
	add("09395224", "{\"term\":\"common fault\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09395224\"]}");
	add("09395224", "{\"term\":\"gravity fault\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09395224\"]}");
	add("09395224", "{\"term\":\"normal fault\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09395224\"]}");
	add("09395415", "{\"term\":\"north america\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08189929\", \"09395415\"]}");
	add("09395927", "{\"term\":\"north atlantic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09395927\"]}");
	add("09396086", "{\"term\":\"north channel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09396086\"]}");
	add("09396244", "{\"term\":\"northern cross\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09396244\"]}");
	add("09396396", "{\"term\":\"north pacific\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09396396\"]}");
	add("09396534", "{\"term\":\"north peak\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09396534\"]}");
	add("09396627", "{\"term\":\"north platte\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09132736\", \"09396627\"]}");
	add("09396627", "{\"term\":\"north platte river\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09396627\"]}");
	add("09396947", "{\"term\":\"north sea\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09396947\"]}");
	add("09397217", "{\"term\":\"norwegian sea\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09397217\"]}");
	add("09397404", "{\"term\":\"nova\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09397404\"]}");
	add("09397558", "{\"term\":\"nub\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"05929717\", \"09397558\", \"13918315\"]}");
	add("09397558", "{\"term\":\"stub\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"02930783\", \"06519806\", \"06532420\", \"09397558\", \"09472806\"]}");
	add("09397685", "{\"term\":\"nubbin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09397685\"]}");
	add("09397798", "{\"term\":\"nucleon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09397798\"]}");
	add("09397997", "{\"term\":\"nucleus\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"05328312\", \"05509583\", \"09398135\", \"08259144\", \"09397997\", \"05442503\"]}");
	add("09398135", "{\"term\":\"nucleus\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"05328312\", \"05509583\", \"09398135\", \"08259144\", \"09397997\", \"05442503\"]}");
	add("09398393", "{\"term\":\"nugget\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09398393\"]}");
	add("09398518", "{\"term\":\"nullah\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09398518\"]}");
	add("09398605", "{\"term\":\"nuptse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09398605\"]}");
	add("09398803", "{\"term\":\"ob\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06062970\", \"09398803\"]}");
	add("09398803", "{\"term\":\"ob river\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09398803\"]}");
	add("09398990", "{\"term\":\"obliterator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09398990\"]}");
	add("09399110", "{\"term\":\"ocean\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13799183\", \"09399110\"]}");
	add("09399438", "{\"term\":\"davy jones\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09399438\"]}");
	add("09399438", "{\"term\":\"davy jones\u0027s locker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09399438\"]}");
	add("09399438", "{\"term\":\"ocean bottom\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09399438\"]}");
	add("09399438", "{\"term\":\"ocean floor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09399438\"]}");
	add("09399438", "{\"term\":\"sea bottom\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09399438\"]}");
	add("09399438", "{\"term\":\"sea floor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09399438\"]}");
	add("09399438", "{\"term\":\"seabed\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09399438\"]}");
	add("09399698", "{\"term\":\"oceanfront\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09399698\"]}");
	add("09399778", "{\"term\":\"octans\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09399778\"]}");
	add("09399891", "{\"term\":\"oder\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09399891\"]}");
	add("09399891", "{\"term\":\"oder river\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09399891\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }