package org.swtk.commons.dict.wordnet.indexbyid.instance.p1.p0;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance1050 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("10500168", "{\"term\":\"pro\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06661968\", \"10500168\"]}");
	add("10500168", "{\"term\":\"professional\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10318149\", \"10500168\", \"10499838\"]}");
	add("10500315", "{\"term\":\"prof\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10500315\"]}");
	add("10500315", "{\"term\":\"professor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10500315\"]}");
	add("10500588", "{\"term\":\"profiteer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10500588\"]}");
	add("10500752", "{\"term\":\"profit taker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10500752\"]}");
	add("10500853", "{\"term\":\"coder\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10500853\"]}");
	add("10500853", "{\"term\":\"computer programmer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10500853\"]}");
	add("10500853", "{\"term\":\"programmer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10500853\"]}");
	add("10500853", "{\"term\":\"software engineer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10500853\"]}");
	add("10501146", "{\"term\":\"projectionist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10501146\"]}");
	add("10501296", "{\"term\":\"prole\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10501296\"]}");
	add("10501296", "{\"term\":\"proletarian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10501296\"]}");
	add("10501296", "{\"term\":\"worker\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"09786620\", \"02210101\", \"10501296\", \"09655706\"]}");
	add("10501514", "{\"term\":\"promisee\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10501514\"]}");
	add("10501639", "{\"term\":\"promiser\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10501639\"]}");
	add("10501639", "{\"term\":\"promisor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10501639\"]}");
	add("10501805", "{\"term\":\"booster\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"02875533\", \"02875694\", \"02875890\", \"09886067\", \"10501805\", \"10697152\"]}");
	add("10501805", "{\"term\":\"plugger\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10501805\"]}");
	add("10501805", "{\"term\":\"promoter\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10613153\", \"10501805\"]}");
	add("10501999", "{\"term\":\"prompter\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04017155\", \"10501999\"]}");
	add("10501999", "{\"term\":\"theater prompter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10501999\"]}");
	add("10502172", "{\"term\":\"promulgator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10502172\"]}");
	add("10502353", "{\"term\":\"proofreader\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10502353\"]}");
	add("10502353", "{\"term\":\"reader\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"06426704\", \"10271919\", \"10272051\", \"10502353\", \"10546502\", \"10528455\", \"10689922\", \"10528303\"]}");
	add("10502506", "{\"term\":\"propagandist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10502506\"]}");
	add("10502723", "{\"term\":\"disseminator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10502723\"]}");
	add("10502723", "{\"term\":\"propagator\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10502723\", \"10502859\"]}");
	add("10502859", "{\"term\":\"propagator\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10502723\", \"10502859\"]}");
	add("10502980", "{\"term\":\"property man\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10502980\"]}");
	add("10502980", "{\"term\":\"property master\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10502980\"]}");
	add("10502980", "{\"term\":\"propman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10502980\"]}");
	add("10503115", "{\"term\":\"oracle\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03858428\", \"06763053\", \"10503115\"]}");
	add("10503115", "{\"term\":\"prophesier\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10503115\"]}");
	add("10503115", "{\"term\":\"prophet\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10503475\", \"10503115\"]}");
	add("10503115", "{\"term\":\"seer\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10503115\", \"10595515\", \"10776101\"]}");
	add("10503115", "{\"term\":\"vaticinator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10503115\"]}");
	add("10503384", "{\"term\":\"prophetess\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10503384\"]}");
	add("10503475", "{\"term\":\"prophet\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10503475\", \"10503115\"]}");
	add("10504111", "{\"term\":\"mover\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"08495493\", \"10355644\", \"10504111\", \"10355947\"]}");
	add("10504111", "{\"term\":\"proposer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10504111\", \"10692890\"]}");
	add("10504324", "{\"term\":\"propositus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10504324\"]}");
	add("10504443", "{\"term\":\"prosecuting attorney\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10504443\"]}");
	add("10504443", "{\"term\":\"prosecuting officer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10504443\"]}");
	add("10504443", "{\"term\":\"prosecutor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10504443\"]}");
	add("10504443", "{\"term\":\"public prosecutor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10504443\"]}");
	add("10504753", "{\"term\":\"proselyte\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10504753\"]}");
	add("10504883", "{\"term\":\"prospector\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10504883\"]}");
	add("10505025", "{\"term\":\"bawd\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10505025\"]}");
	add("10505025", "{\"term\":\"cocotte\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03066339\", \"10505025\"]}");
	add("10505025", "{\"term\":\"cyprian\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09718416\", \"10505025\"]}");
	add("10505025", "{\"term\":\"fancy woman\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10343410\", \"10505025\"]}");
	add("10505025", "{\"term\":\"harlot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10505025\"]}");
	add("10505025", "{\"term\":\"lady of pleasure\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10505025\"]}");
	add("10505025", "{\"term\":\"prostitute\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10505025\"]}");
	add("10505025", "{\"term\":\"sporting lady\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10505025\"]}");
	add("10505025", "{\"term\":\"tart\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07639273\", \"07639542\", \"10505025\"]}");
	add("10505025", "{\"term\":\"whore\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10505025\"]}");
	add("10505025", "{\"term\":\"woman of the street\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10505025\"]}");
	add("10505025", "{\"term\":\"working girl\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10505025\", \"10810755\"]}");
	add("10505468", "{\"term\":\"protectionist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10505468\"]}");
	add("10505574", "{\"term\":\"protege\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10505574\"]}");
	add("10505751", "{\"term\":\"protegee\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10505751\"]}");
	add("10505821", "{\"term\":\"protozoologist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10505821\"]}");
	add("10505934", "{\"term\":\"provider\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10505934\", \"10696710\"]}");
	add("10506053", "{\"term\":\"provost\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10506053\"]}");
	add("10506146", "{\"term\":\"provost marshal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10506146\"]}");
	add("10506264", "{\"term\":\"prowler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10506264\"]}");
	add("10506264", "{\"term\":\"sneak\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10110781\", \"10506264\", \"10635564\"]}");
	add("10506264", "{\"term\":\"stalker\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10506264\", \"10665872\", \"10665967\"]}");
	add("10506494", "{\"term\":\"placeholder\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07286183\", \"10506494\"]}");
	add("10506494", "{\"term\":\"procurator\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10498720\", \"10506494\"]}");
	add("10506494", "{\"term\":\"proxy\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06543132\", \"10506494\"]}");
	add("10506611", "{\"term\":\"prude\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10506611\"]}");
	add("10506611", "{\"term\":\"puritan\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10506611\", \"10513780\", \"10513958\"]}");
	add("10506767", "{\"term\":\"pruner\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04022634\", \"10506767\"]}");
	add("10506767", "{\"term\":\"trimmer\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04490840\", \"04491035\", \"04491181\", \"10506767\"]}");
	add("10506948", "{\"term\":\"psalmist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10506948\"]}");
	add("10507177", "{\"term\":\"psephologist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10507177\"]}");
	add("10507295", "{\"term\":\"pseudohermaphrodite\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10507295\"]}");
	add("10507601", "{\"term\":\"head-shrinker\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10183045\", \"10507601\"]}");
	add("10507601", "{\"term\":\"psychiatrist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10507601\"]}");
	add("10507601", "{\"term\":\"shrink\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10507601\"]}");
	add("10507894", "{\"term\":\"psychic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10507894\"]}");
	add("10508098", "{\"term\":\"spirit rapper\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10508098\"]}");
	add("10508241", "{\"term\":\"psycholinguist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10508241\"]}");
	add("10508450", "{\"term\":\"psychologist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10508450\"]}");
	add("10509011", "{\"term\":\"psychophysicist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10509011\"]}");
	add("10509149", "{\"term\":\"psychopath\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10509149\"]}");
	add("10509149", "{\"term\":\"sociopath\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10509149\"]}");
	add("10509403", "{\"term\":\"psychopomp\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10509403\"]}");
	add("10509529", "{\"term\":\"clinical psychologist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10509529\"]}");
	add("10509529", "{\"term\":\"psychotherapist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10509529\"]}");
	add("10509726", "{\"term\":\"psycho\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10509726\"]}");
	add("10509726", "{\"term\":\"psychotic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10509726\"]}");
	add("10509726", "{\"term\":\"psychotic person\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10509726\"]}");
	add("10509915", "{\"term\":\"pteridologist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10509915\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }