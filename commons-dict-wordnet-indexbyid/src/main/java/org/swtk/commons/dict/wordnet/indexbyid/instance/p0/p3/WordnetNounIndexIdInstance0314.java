package org.swtk.commons.dict.wordnet.indexbyid.instance.p0.p3;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0314 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("03140183", "{\"term\":\"cross\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00852055\", \"01329963\", \"14501251\", \"03139803\", \"04688744\", \"03140183\"]}");
	add("03140307", "{\"term\":\"crossbar\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03140307\", \"03140439\", \"03140568\"]}");
	add("03140439", "{\"term\":\"crossbar\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03140307\", \"03140439\", \"03140568\"]}");
	add("03140568", "{\"term\":\"crossbar\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03140307\", \"03140439\", \"03140568\"]}");
	add("03140702", "{\"term\":\"crossbench\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03140702\"]}");
	add("03140905", "{\"term\":\"cross bit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03140905\"]}");
	add("03141020", "{\"term\":\"crossbow\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03141020\"]}");
	add("03141155", "{\"term\":\"crosscut handsaw\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03141155\"]}");
	add("03141155", "{\"term\":\"crosscut saw\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03141155\"]}");
	add("03141155", "{\"term\":\"cutoff saw\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03141155\"]}");
	add("03141308", "{\"term\":\"crosse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03141308\"]}");
	add("03141424", "{\"term\":\"cross hair\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03141424\"]}");
	add("03141424", "{\"term\":\"cross wire\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03141424\"]}");
	add("03141695", "{\"term\":\"crosshead\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03141695\", \"06355699\"]}");
	add("03141879", "{\"term\":\"crossing\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00314071\", \"00852055\", \"03141879\", \"03586294\", \"08565513\", \"09306529\", \"00298358\"]}");
	add("03141879", "{\"term\":\"crossover\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03141879\", \"07046240\", \"10000335\", \"13475303\"]}");
	add("03141879", "{\"term\":\"crosswalk\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03141879\"]}");
	add("03142124", "{\"term\":\"crossjack\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03142124\"]}");
	add("03142124", "{\"term\":\"mizzen course\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03142124\"]}");
	add("03142230", "{\"term\":\"crosspiece\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03142230\", \"04482731\"]}");
	add("03142395", "{\"term\":\"cross-stitch\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03142395\", \"03142514\"]}");
	add("03142514", "{\"term\":\"cross-stitch\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03142395\", \"03142514\"]}");
	add("03142624", "{\"term\":\"cross street\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03142624\"]}");
	add("03142779", "{\"term\":\"crotchet\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03142779\", \"04805073\", \"06884177\", \"13892186\"]}");
	add("03142868", "{\"term\":\"croupier\u0027s rake\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03142868\"]}");
	add("03142995", "{\"term\":\"crowbar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03142995\"]}");
	add("03142995", "{\"term\":\"pry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03142995\"]}");
	add("03142995", "{\"term\":\"pry bar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03142995\"]}");
	add("03142995", "{\"term\":\"wrecking bar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03142995\"]}");
	add("03143185", "{\"term\":\"crown\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"03143632\", \"03143740\", \"05547228\", \"06718654\", \"08635538\", \"13148762\", \"13411037\", \"03143185\", \"03143320\", \"03143525\", \"05315640\", \"06897147\"]}");
	add("03143320", "{\"term\":\"crown\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"03143632\", \"03143740\", \"05547228\", \"06718654\", \"08635538\", \"13148762\", \"13411037\", \"03143185\", \"03143320\", \"03143525\", \"05315640\", \"06897147\"]}");
	add("03143320", "{\"term\":\"diadem\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03143320\"]}");
	add("03143525", "{\"term\":\"crown\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"03143632\", \"03143740\", \"05547228\", \"06718654\", \"08635538\", \"13148762\", \"13411037\", \"03143185\", \"03143320\", \"03143525\", \"05315640\", \"06897147\"]}");
	add("03143632", "{\"term\":\"crest\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"01328656\", \"03135689\", \"03143632\", \"08635538\", \"08565119\"]}");
	add("03143632", "{\"term\":\"crown\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"03143632\", \"03143740\", \"05547228\", \"06718654\", \"08635538\", \"13148762\", \"13411037\", \"03143185\", \"03143320\", \"03143525\", \"05315640\", \"06897147\"]}");
	add("03143740", "{\"term\":\"cap\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"02959683\", \"03143740\", \"06670391\", \"09328264\", \"11552802\", \"02958501\", \"03186898\", \"02958374\", \"02957776\"]}");
	add("03143740", "{\"term\":\"crown\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"03143632\", \"03143740\", \"05547228\", \"06718654\", \"08635538\", \"13148762\", \"13411037\", \"03143185\", \"03143320\", \"03143525\", \"05315640\", \"06897147\"]}");
	add("03143740", "{\"term\":\"crownwork\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03143740\"]}");
	add("03143740", "{\"term\":\"jacket\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"03595662\", \"07727216\", \"03143740\", \"03595493\", \"03594978\"]}");
	add("03143740", "{\"term\":\"jacket crown\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03143740\"]}");
	add("03143992", "{\"term\":\"crown jewel\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03143992\", \"13351447\"]}");
	add("03144115", "{\"term\":\"crown jewels\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03144115\"]}");
	add("03144291", "{\"term\":\"crown lens\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03144291\"]}");
	add("03144382", "{\"term\":\"crown of thorns\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03144382\", \"12942628\", \"14501251\"]}");
	add("03144538", "{\"term\":\"crown saw\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03144538\"]}");
	add("03144649", "{\"term\":\"crow\u0027s nest\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03144649\"]}");
	add("03144777", "{\"term\":\"crucible\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03144777\"]}");
	add("03144777", "{\"term\":\"melting pot\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03144777\", \"08616252\"]}");
	add("03144943", "{\"term\":\"crucifix\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00435784\", \"03144943\"]}");
	add("03144943", "{\"term\":\"rood\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03144943\"]}");
	add("03144943", "{\"term\":\"rood-tree\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03144943\"]}");
	add("03145082", "{\"term\":\"crewet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03145082\"]}");
	add("03145082", "{\"term\":\"cruet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03145082\"]}");
	add("03145197", "{\"term\":\"cruet-stand\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03145197\"]}");
	add("03145303", "{\"term\":\"cruise control\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03145303\"]}");
	add("03145422", "{\"term\":\"cruise missile\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03145422\"]}");
	add("03145551", "{\"term\":\"cruiser\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02936275\", \"03145551\", \"03145716\"]}");
	add("03145716", "{\"term\":\"cruiser\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02936275\", \"03145551\", \"03145716\"]}");
	add("03145716", "{\"term\":\"patrol car\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03145716\"]}");
	add("03145716", "{\"term\":\"police car\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03145716\"]}");
	add("03145716", "{\"term\":\"police cruiser\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03145716\"]}");
	add("03145716", "{\"term\":\"prowl car\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03145716\"]}");
	add("03145716", "{\"term\":\"squad car\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03145716\"]}");
	add("03145978", "{\"term\":\"cruise liner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03145978\"]}");
	add("03145978", "{\"term\":\"cruise ship\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03145978\"]}");
	add("03146106", "{\"term\":\"crupper\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03146106\"]}");
	add("03146263", "{\"term\":\"cruse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03146263\"]}");
	add("03146353", "{\"term\":\"crusher\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03146353\"]}");
	add("03146474", "{\"term\":\"crutch\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00179549\", \"03146474\"]}");
	add("03146642", "{\"term\":\"cryocautery\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00698867\", \"03146642\"]}");
	add("03146750", "{\"term\":\"cryometer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03146750\"]}");
	add("03146856", "{\"term\":\"cryoscope\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03146856\"]}");
	add("03146976", "{\"term\":\"cryostat\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03146976\"]}");
	add("03147082", "{\"term\":\"crypt\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03147082\"]}");
	add("03147230", "{\"term\":\"cryptograph\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03147230\", \"06366590\", \"06366714\"]}");
	add("03147330", "{\"term\":\"crystal\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"03147330\", \"03147485\", \"14903901\", \"09283372\", \"03147563\", \"14907357\"]}");
	add("03147330", "{\"term\":\"watch crystal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03147330\"]}");
	add("03147330", "{\"term\":\"watch glass\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03147330\", \"04563950\"]}");
	add("03147485", "{\"term\":\"crystal\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"03147330\", \"03147485\", \"14903901\", \"09283372\", \"03147563\", \"14907357\"]}");
	add("03147563", "{\"term\":\"crystal\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"03147330\", \"03147485\", \"14903901\", \"09283372\", \"03147563\", \"14907357\"]}");
	add("03147782", "{\"term\":\"crystal ball\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03147782\"]}");
	add("03147906", "{\"term\":\"crystal counter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03147906\"]}");
	add("03148051", "{\"term\":\"crystal detector\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03148051\"]}");
	add("03148223", "{\"term\":\"crystal microphone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03148223\"]}");
	add("03148223", "{\"term\":\"crystal mike\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03148223\"]}");
	add("03148420", "{\"term\":\"crystal oscillator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03148420\"]}");
	add("03148420", "{\"term\":\"quartz oscillator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03148420\"]}");
	add("03148648", "{\"term\":\"crystal pickup\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03148648\"]}");
	add("03148822", "{\"term\":\"crystal set\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03148822\"]}");
	add("03148928", "{\"term\":\"cuban heel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03148928\"]}");
	add("03149031", "{\"term\":\"cubby\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03149031\"]}");
	add("03149031", "{\"term\":\"cubbyhole\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03149031\", \"03149152\"]}");
	add("03149031", "{\"term\":\"snug\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03149031\"]}");
	add("03149031", "{\"term\":\"snuggery\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03149031\"]}");
	add("03149152", "{\"term\":\"cubbyhole\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03149031\", \"03149152\"]}");
	add("03149152", "{\"term\":\"pigeonhole\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03149152\", \"05848172\"]}");
	add("03149258", "{\"term\":\"cube\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"03149258\", \"12565367\", \"13753351\", \"13937623\", \"13939754\"]}");
	add("03149258", "{\"term\":\"square block\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03149258\"]}");
	add("03149422", "{\"term\":\"cubeb\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03149422\", \"13170955\", \"13171155\"]}");
	add("03149422", "{\"term\":\"cubeb cigarette\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03149422\"]}");
	add("03149539", "{\"term\":\"cubitiere\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03149539\"]}");
	add("03149648", "{\"term\":\"cucking stool\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03149648\"]}");
	add("03149648", "{\"term\":\"ducking stool\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03149648\"]}");
	add("03149813", "{\"term\":\"cuckoo clock\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03149813\"]}");
	add("03149943", "{\"term\":\"cuddy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03149943\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }