package org.swtk.commons.dict.wordnet.indexbyid.instance.p0.p8;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0886 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("08860067", "{\"term\":\"gilbert and ellice islands\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08860067\"]}");
	add("08860201", "{\"term\":\"nauru\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08860201\", \"08860475\"]}");
	add("08860201", "{\"term\":\"nauru island\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08860201\"]}");
	add("08860201", "{\"term\":\"pleasant island\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08860201\"]}");
	add("08860475", "{\"term\":\"nauru\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08860201\", \"08860475\"]}");
	add("08860475", "{\"term\":\"republic of nauru\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08860475\"]}");
	add("08860659", "{\"term\":\"polynesia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08860659\"]}");
	add("08860948", "{\"term\":\"east india\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08860948\"]}");
	add("08860948", "{\"term\":\"east indies\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08860948\"]}");
	add("08860948", "{\"term\":\"malay archipelago\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08860948\"]}");
	add("08861250", "{\"term\":\"sunda islands\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08861250\"]}");
	add("08861419", "{\"term\":\"greater sunda islands\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08861419\"]}");
	add("08861575", "{\"term\":\"lesser sunda islands\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08861575\"]}");
	add("08861575", "{\"term\":\"nusa tenggara\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08861575\"]}");
	add("08861811", "{\"term\":\"bismarck archipelago\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08861811\"]}");
	add("08862077", "{\"term\":\"admiralty islands\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08862077\"]}");
	add("08862207", "{\"term\":\"borneo\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08862207\"]}");
	add("08862207", "{\"term\":\"kalimantan\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08862207\", \"08929310\"]}");
	add("08862563", "{\"term\":\"bougainville\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08862563\", \"10878790\"]}");
	add("08862727", "{\"term\":\"guadalcanal\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01282548\", \"08862727\"]}");
	add("08862950", "{\"term\":\"new britain\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08862950\"]}");
	add("08863100", "{\"term\":\"new caledonia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08863100\"]}");
	add("08863271", "{\"term\":\"new guinea\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08863271\"]}");
	add("08863549", "{\"term\":\"independent state of papua new guinea\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08863549\"]}");
	add("08863549", "{\"term\":\"papua new guinea\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08863549\"]}");
	add("08863915", "{\"term\":\"papua\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08863915\"]}");
	add("08864045", "{\"term\":\"capital of papua new guinea\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08864045\"]}");
	add("08864045", "{\"term\":\"port moresby\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08864045\"]}");
	add("08864217", "{\"term\":\"new ireland\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08864217\"]}");
	add("08864358", "{\"term\":\"austria-hungary\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08864358\"]}");
	add("08864547", "{\"term\":\"austria\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08864547\"]}");
	add("08864547", "{\"term\":\"oesterreich\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08864547\"]}");
	add("08864547", "{\"term\":\"republic of austria\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08864547\"]}");
	add("08865127", "{\"term\":\"tirol\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08865127\"]}");
	add("08865127", "{\"term\":\"tyrol\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08865127\"]}");
	add("08865316", "{\"term\":\"austrian capital\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08865316\"]}");
	add("08865316", "{\"term\":\"capital of austria\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08865316\"]}");
	add("08865316", "{\"term\":\"vienna\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08865316\"]}");
	add("08865618", "{\"term\":\"graz\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08865618\"]}");
	add("08865731", "{\"term\":\"lentia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08865731\"]}");
	add("08865731", "{\"term\":\"linz\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08865731\"]}");
	add("08865877", "{\"term\":\"salzburg\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08865877\"]}");
	add("08866016", "{\"term\":\"innsbruck\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08866016\"]}");
	add("08866157", "{\"term\":\"wagram\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01301528\", \"08866157\"]}");
	add("08866260", "{\"term\":\"bahama islands\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08866260\"]}");
	add("08866260", "{\"term\":\"bahamas\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08866260\"]}");
	add("08866260", "{\"term\":\"commonwealth of the bahamas\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08866260\"]}");
	add("08866562", "{\"term\":\"capital of the bahamas\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08866562\"]}");
	add("08866562", "{\"term\":\"nassau\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08866562\"]}");
	add("08866686", "{\"term\":\"arabia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08866686\"]}");
	add("08866686", "{\"term\":\"arabian peninsula\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08866686\"]}");
	add("08867086", "{\"term\":\"bahrain\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08867086\", \"08867413\"]}");
	add("08867086", "{\"term\":\"bahrein\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08867086\", \"08867413\"]}");
	add("08867086", "{\"term\":\"state of bahrain\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08867086\"]}");
	add("08867413", "{\"term\":\"bahrain\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08867086\", \"08867413\"]}");
	add("08867413", "{\"term\":\"bahrain island\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08867413\"]}");
	add("08867413", "{\"term\":\"bahrein\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08867086\", \"08867413\"]}");
	add("08867413", "{\"term\":\"bahrein island\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08867413\"]}");
	add("08867560", "{\"term\":\"capital of bahrain\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08867560\"]}");
	add("08867560", "{\"term\":\"manama\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08867560\"]}");
	add("08867723", "{\"term\":\"bangla desh\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08867723\"]}");
	add("08867723", "{\"term\":\"bangladesh\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08867723\"]}");
	add("08867723", "{\"term\":\"east pakistan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08867723\"]}");
	add("08867723", "{\"term\":\"people\u0027s republic of bangladesh\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08867723\"]}");
	add("08868218", "{\"term\":\"capital of bangladesh\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08868218\"]}");
	add("08868218", "{\"term\":\"dacca\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08868218\"]}");
	add("08868218", "{\"term\":\"dhaka\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08868218\"]}");
	add("08868364", "{\"term\":\"chittagong\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08868364\"]}");
	add("08868541", "{\"term\":\"flanders\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08868541\"]}");
	add("08868745", "{\"term\":\"belgique\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08868745\"]}");
	add("08868745", "{\"term\":\"belgium\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08868745\"]}");
	add("08868745", "{\"term\":\"kingdom of belgium\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08868745\"]}");
	add("08869442", "{\"term\":\"belgian capital\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08869442\"]}");
	add("08869442", "{\"term\":\"brussels\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08869442\"]}");
	add("08869442", "{\"term\":\"bruxelles\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08869442\"]}");
	add("08869442", "{\"term\":\"capital of belgium\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08869442\"]}");
	add("08869655", "{\"term\":\"aalst\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08869655\"]}");
	add("08869733", "{\"term\":\"antwerp\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08869733\"]}");
	add("08869733", "{\"term\":\"antwerpen\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08869733\"]}");
	add("08869733", "{\"term\":\"anvers\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08869733\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }