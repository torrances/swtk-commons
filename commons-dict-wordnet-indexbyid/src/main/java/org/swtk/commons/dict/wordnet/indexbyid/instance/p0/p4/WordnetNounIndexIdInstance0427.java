package org.swtk.commons.dict.wordnet.indexbyid.instance.p0.p4;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexIdInstance0427 {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("04270079", "{\"term\":\"soundtrack\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04270079\"]}");
	add("04270249", "{\"term\":\"sound truck\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04270249\"]}");
	add("04270367", "{\"term\":\"soup bowl\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04270367\"]}");
	add("04270446", "{\"term\":\"soup ladle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04270446\"]}");
	add("04270527", "{\"term\":\"soup plate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04270527\"]}");
	add("04270612", "{\"term\":\"soup spoon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04270612\"]}");
	add("04270612", "{\"term\":\"soupspoon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04270612\"]}");
	add("04270724", "{\"term\":\"source\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"07273332\", \"09430745\", \"13580156\", \"10145714\", \"10225604\", \"04270724\", \"05843082\", \"06687867\", \"08524579\"]}");
	add("04270870", "{\"term\":\"source of illumination\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04270870\"]}");
	add("04271060", "{\"term\":\"sourdine\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04271060\", \"04271160\"]}");
	add("04271160", "{\"term\":\"sordino\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04271160\"]}");
	add("04271160", "{\"term\":\"sourdine\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04271060\", \"04271160\"]}");
	add("04271244", "{\"term\":\"soutache\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04271244\"]}");
	add("04271343", "{\"term\":\"soutane\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04271343\"]}");
	add("04271471", "{\"term\":\"sou\u0027wester\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04271471\", \"11468930\"]}");
	add("04271595", "{\"term\":\"soybean future\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04271595\"]}");
	add("04271738", "{\"term\":\"space bar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04271738\"]}");
	add("04271875", "{\"term\":\"capsule\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"03272379\", \"04271875\", \"05324741\", \"06479794\", \"11705648\", \"02961022\", \"02961191\"]}");
	add("04271875", "{\"term\":\"space capsule\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04271875\"]}");
	add("04272024", "{\"term\":\"ballistic capsule\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04272024\"]}");
	add("04272024", "{\"term\":\"space vehicle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04272024\"]}");
	add("04272024", "{\"term\":\"spacecraft\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04272024\"]}");
	add("04272385", "{\"term\":\"space heater\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04272385\"]}");
	add("04272538", "{\"term\":\"space helmet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04272538\"]}");
	add("04272645", "{\"term\":\"space needle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04272645\"]}");
	add("04272778", "{\"term\":\"space probe\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04272778\"]}");
	add("04273014", "{\"term\":\"space rocket\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04273014\"]}");
	add("04273124", "{\"term\":\"space shuttle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04273124\"]}");
	add("04273272", "{\"term\":\"space laboratory\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04273272\"]}");
	add("04273272", "{\"term\":\"space platform\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04273272\"]}");
	add("04273272", "{\"term\":\"space station\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04273272\"]}");
	add("04273485", "{\"term\":\"spacesuit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04273485\"]}");
	add("04273596", "{\"term\":\"spade\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04273596\", \"04273770\"]}");
	add("04273770", "{\"term\":\"spade\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04273596\", \"04273770\"]}");
	add("04273959", "{\"term\":\"spade bit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04273959\"]}");
	add("04274078", "{\"term\":\"spaghetti junction\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04274078\"]}");
	add("04274201", "{\"term\":\"spandau\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04274201\"]}");
	add("04274275", "{\"term\":\"spandex\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04274275\"]}");
	add("04274356", "{\"term\":\"spandrel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04274356\"]}");
	add("04274356", "{\"term\":\"spandril\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04274356\"]}");
	add("04274545", "{\"term\":\"spanker\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04274545\", \"10628319\"]}");
	add("04274687", "{\"term\":\"spar\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00447789\", \"04274687\", \"15073663\"]}");
	add("04274980", "{\"term\":\"spare\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00188739\", \"03339857\", \"04274980\"]}");
	add("04274980", "{\"term\":\"spare part\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04274980\"]}");
	add("04275095", "{\"term\":\"sparge pipe\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04275095\"]}");
	add("04275252", "{\"term\":\"spark arrester\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04275252\", \"04275385\"]}");
	add("04275252", "{\"term\":\"sparker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04275252\"]}");
	add("04275385", "{\"term\":\"spark arrester\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04275252\", \"04275385\"]}");
	add("04275528", "{\"term\":\"spark chamber\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04275528\"]}");
	add("04275528", "{\"term\":\"spark counter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04275528\"]}");
	add("04275675", "{\"term\":\"spark coil\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04275675\"]}");
	add("04275790", "{\"term\":\"spark gap\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04275790\", \"04275909\"]}");
	add("04275909", "{\"term\":\"spark gap\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04275790\", \"04275909\"]}");
	add("04276079", "{\"term\":\"sparkler\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04276079\", \"13393296\"]}");
	add("04276196", "{\"term\":\"spark lever\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04276196\"]}");
	add("04276380", "{\"term\":\"plug\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"02384856\", \"03351744\", \"03974625\", \"04276380\", \"07263175\", \"07594964\", \"03974274\"]}");
	add("04276380", "{\"term\":\"spark plug\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04276380\"]}");
	add("04276380", "{\"term\":\"sparking plug\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04276380\"]}");
	add("04276612", "{\"term\":\"sparkplug wrench\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04276612\"]}");
	add("04276778", "{\"term\":\"spark transmitter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04276778\"]}");
	add("04276932", "{\"term\":\"gaiter\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03415848\", \"03415989\", \"04276932\"]}");
	add("04276932", "{\"term\":\"spat\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01958985\", \"04276932\", \"07199395\"]}");
	add("04277054", "{\"term\":\"spatula\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04277054\", \"04277257\"]}");
	add("04277257", "{\"term\":\"spatula\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04277054\", \"04277257\"]}");
	add("04277386", "{\"term\":\"speakeasy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04277386\"]}");
	add("04277481", "{\"term\":\"speakerphone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04277481\"]}");
	add("04277686", "{\"term\":\"speaking trumpet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04277686\"]}");
	add("04277875", "{\"term\":\"speaking tube\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04277875\"]}");
	add("04278001", "{\"term\":\"lance\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03642932\", \"04278258\", \"04278001\"]}");
	add("04278001", "{\"term\":\"shaft\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"02471248\", \"04118284\", \"04189557\", \"04189751\", \"04189933\", \"04278001\", \"05534354\", \"05600488\", \"11448137\", \"04189365\", \"06780713\", \"06834654\"]}");
	add("04278001", "{\"term\":\"spear\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04278258\", \"04278001\"]}");
	add("04278258", "{\"term\":\"fishgig\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04278258\"]}");
	add("04278258", "{\"term\":\"fizgig\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03359662\", \"04278258\"]}");
	add("04278258", "{\"term\":\"gig\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00271999\", \"03441566\", \"03441682\", \"03441900\", \"04278258\", \"03441801\"]}");
	add("04278258", "{\"term\":\"lance\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03642932\", \"04278258\", \"04278001\"]}");
	add("04278258", "{\"term\":\"spear\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04278258\", \"04278001\"]}");
	add("04278481", "{\"term\":\"spear-point\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04278481\"]}");
	add("04278481", "{\"term\":\"spearhead\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04278481\", \"08432618\", \"10650874\"]}");
	add("04278481", "{\"term\":\"spearpoint\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04278481\"]}");
	add("04278641", "{\"term\":\"specialty store\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04278641\"]}");
	add("04278750", "{\"term\":\"specific\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04278750\", \"05826326\"]}");
	add("04278903", "{\"term\":\"specimen bottle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04278903\"]}");
	add("04279001", "{\"term\":\"spectacle\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00076291\", \"04279001\", \"06902188\"]}");
	add("04279164", "{\"term\":\"eyeglasses\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04279164\"]}");
	add("04279164", "{\"term\":\"glasses\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04279164\"]}");
	add("04279164", "{\"term\":\"specs\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04279164\"]}");
	add("04279164", "{\"term\":\"spectacles\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04279164\"]}");
	add("04279508", "{\"term\":\"spectator\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04279508\", \"10652848\"]}");
	add("04279508", "{\"term\":\"spectator pump\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04279508\"]}");
	add("04279660", "{\"term\":\"spectinomycin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04279660\"]}");
	add("04279757", "{\"term\":\"spectrogram\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04279757\"]}");
	add("04279757", "{\"term\":\"spectrograph\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04279757\", \"04279901\"]}");
	add("04279901", "{\"term\":\"spectrograph\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04279757\", \"04279901\"]}");
 	}  	private static void add(final String ID, final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(ID)) ? map.get(ID) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(ID, list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> ids() { 		return map.keySet(); 	} }