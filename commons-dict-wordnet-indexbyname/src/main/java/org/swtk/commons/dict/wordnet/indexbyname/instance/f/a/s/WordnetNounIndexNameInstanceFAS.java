package org.swtk.commons.dict.wordnet.indexbyname.instance.f.a.s;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceFAS {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"fas\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14328885\"]}");
	add("{\"term\":\"fasces\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06894848\"]}");
	add("{\"term\":\"fascia\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03167888\", \"05590163\"]}");
	add("{\"term\":\"fascicle\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05483333\", \"06403545\"]}");
	add("{\"term\":\"fasciculation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14386772\"]}");
	add("{\"term\":\"fascicule\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06403545\"]}");
	add("{\"term\":\"fasciculus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05483333\"]}");
	add("{\"term\":\"fascination\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04696799\", \"07513215\", \"14431303\"]}");
	add("{\"term\":\"fasciola\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01928888\"]}");
	add("{\"term\":\"fasciola hepatica\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01929020\"]}");
	add("{\"term\":\"fascioliasis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14199209\"]}");
	add("{\"term\":\"fasciolidae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01928731\"]}");
	add("{\"term\":\"fasciolopsiasis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14199385\"]}");
	add("{\"term\":\"fasciolopsis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01929190\"]}");
	add("{\"term\":\"fasciolopsis buski\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01929330\"]}");
	add("{\"term\":\"fasciolosis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14199209\"]}");
	add("{\"term\":\"fascism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06227881\"]}");
	add("{\"term\":\"fascist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10099673\"]}");
	add("{\"term\":\"fascista\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10099886\"]}");
	add("{\"term\":\"fashion\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03328538\", \"05758654\", \"00416239\", \"04936080\"]}");
	add("{\"term\":\"fashion arbiter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10747885\"]}");
	add("{\"term\":\"fashion business\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08083153\"]}");
	add("{\"term\":\"fashion consultant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10099975\"]}");
	add("{\"term\":\"fashion designer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09991687\"]}");
	add("{\"term\":\"fashion industry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08083153\"]}");
	add("{\"term\":\"fashion model\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10310901\"]}");
	add("{\"term\":\"fashion plate\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03328430\", \"10010564\"]}");
	add("{\"term\":\"fashioning\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00925809\"]}");
	add("{\"term\":\"fashionmonger\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10099975\"]}");
	add("{\"term\":\"fast\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01071904\"]}");
	add("{\"term\":\"fast break\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00295421\"]}");
	add("{\"term\":\"fast buck\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13281409\"]}");
	add("{\"term\":\"fast day\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15186212\"]}");
	add("{\"term\":\"fast food\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07575758\"]}");
	add("{\"term\":\"fast lane\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03329447\", \"04938027\"]}");
	add("{\"term\":\"fast of ab\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15222493\"]}");
	add("{\"term\":\"fast of av\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15222493\"]}");
	add("{\"term\":\"fast of esther\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15223236\"]}");
	add("{\"term\":\"fast of gedaliah\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15222789\"]}");
	add("{\"term\":\"fast of tammuz\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15223707\"]}");
	add("{\"term\":\"fast of tevet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15222971\"]}");
	add("{\"term\":\"fast of the firstborn\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15223497\"]}");
	add("{\"term\":\"fast one\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00172439\"]}");
	add("{\"term\":\"fast reactor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03329574\"]}");
	add("{\"term\":\"fast time scale\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15160210\"]}");
	add("{\"term\":\"fast track\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00174336\"]}");
	add("{\"term\":\"fastball\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00109001\"]}");
	add("{\"term\":\"fastener\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03328648\", \"10100106\"]}");
	add("{\"term\":\"fastening\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00148415\", \"03328648\"]}");
	add("{\"term\":\"fastidiousness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04903512\"]}");
	add("{\"term\":\"fasting\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01071904\"]}");
	add("{\"term\":\"fastnacht\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07655084\"]}");
	add("{\"term\":\"fastness\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04348013\", \"04784337\", \"05065291\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }