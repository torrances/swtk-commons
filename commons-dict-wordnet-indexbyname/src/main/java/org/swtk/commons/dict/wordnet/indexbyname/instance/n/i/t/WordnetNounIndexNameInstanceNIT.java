package org.swtk.commons.dict.wordnet.indexbyname.instance.n.i.t;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceNIT {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"nit\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01463787\", \"13662502\"]}");
	add("{\"term\":\"nitella\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01415712\"]}");
	add("{\"term\":\"niter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14885506\"]}");
	add("{\"term\":\"nitpicker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10379121\"]}");
	add("{\"term\":\"nitramine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15094151\"]}");
	add("{\"term\":\"nitrate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15040068\"]}");
	add("{\"term\":\"nitrazepam\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03831871\"]}");
	add("{\"term\":\"nitre\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14885506\"]}");
	add("{\"term\":\"nitride\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14987456\"]}");
	add("{\"term\":\"nitrification\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13542819\", \"13543076\"]}");
	add("{\"term\":\"nitril\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14851516\"]}");
	add("{\"term\":\"nitrile\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14851516\"]}");
	add("{\"term\":\"nitrite\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15040530\"]}");
	add("{\"term\":\"nitrobacter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01364837\"]}");
	add("{\"term\":\"nitrobacteria\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01364977\"]}");
	add("{\"term\":\"nitrobacteriaceae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01364614\"]}");
	add("{\"term\":\"nitrobacterium\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01377098\"]}");
	add("{\"term\":\"nitrobenzene\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14987625\"]}");
	add("{\"term\":\"nitrocalcite\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14708178\"]}");
	add("{\"term\":\"nitrocellulose\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14819163\"]}");
	add("{\"term\":\"nitrochloroform\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14834338\"]}");
	add("{\"term\":\"nitrochloromethane\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14834526\"]}");
	add("{\"term\":\"nitrocotton\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14819163\"]}");
	add("{\"term\":\"nitrofuran\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14987773\"]}");
	add("{\"term\":\"nitrofurantoin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03831983\"]}");
	add("{\"term\":\"nitrogen\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14671413\"]}");
	add("{\"term\":\"nitrogenase\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14987901\"]}");
	add("{\"term\":\"nitroglycerin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14910730\"]}");
	add("{\"term\":\"nitroglycerine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14910730\"]}");
	add("{\"term\":\"nitrosobacteria\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01365264\"]}");
	add("{\"term\":\"nitrosomonas\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01365121\"]}");
	add("{\"term\":\"nitrospan\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03832302\", \"14910730\"]}");
	add("{\"term\":\"nitrostat\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03832302\", \"14910730\"]}");
	add("{\"term\":\"nitweed\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12389154\"]}");
	add("{\"term\":\"nitwit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10032859\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }