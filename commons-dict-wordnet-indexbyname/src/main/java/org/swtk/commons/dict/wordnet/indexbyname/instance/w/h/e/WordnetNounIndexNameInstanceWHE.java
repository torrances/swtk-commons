package org.swtk.commons.dict.wordnet.indexbyname.instance.w.h.e;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceWHE {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"wheal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14322122\"]}");
	add("{\"term\":\"wheat\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04974118\", \"07819521\", \"12162602\"]}");
	add("{\"term\":\"wheat beer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07904440\"]}");
	add("{\"term\":\"wheat berry\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07819521\", \"12162874\"]}");
	add("{\"term\":\"wheat eel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01935284\"]}");
	add("{\"term\":\"wheat eelworm\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01935284\"]}");
	add("{\"term\":\"wheat field\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08701024\"]}");
	add("{\"term\":\"wheat flag smut\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13089984\"]}");
	add("{\"term\":\"wheat flour\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07585108\"]}");
	add("{\"term\":\"wheat future\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04582147\"]}");
	add("{\"term\":\"wheat germ\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07819968\"]}");
	add("{\"term\":\"wheat gluten\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07586200\"]}");
	add("{\"term\":\"wheat rust\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13085849\"]}");
	add("{\"term\":\"wheat scab\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14241063\"]}");
	add("{\"term\":\"wheatear\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01564373\"]}");
	add("{\"term\":\"wheately elm\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12428971\"]}");
	add("{\"term\":\"wheatfield\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08701024\"]}");
	add("{\"term\":\"wheatflake\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07721218\"]}");
	add("{\"term\":\"wheatgrass\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12125642\"]}");
	add("{\"term\":\"wheatley\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11402925\"]}");
	add("{\"term\":\"wheatstone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11403095\"]}");
	add("{\"term\":\"wheatstone bridge\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04582047\"]}");
	add("{\"term\":\"wheatworm\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01935284\"]}");
	add("{\"term\":\"wheedler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10795047\"]}");
	add("{\"term\":\"wheedling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00160719\"]}");
	add("{\"term\":\"wheel\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"02837983\", \"04045517\", \"04120500\", \"04583009\", \"05203188\", \"04320641\", \"04582285\"]}");
	add("{\"term\":\"wheel and axle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04583110\"]}");
	add("{\"term\":\"wheel bug\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02247449\"]}");
	add("{\"term\":\"wheel chart\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07015315\"]}");
	add("{\"term\":\"wheel fiddle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02799187\"]}");
	add("{\"term\":\"wheel horse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02390233\"]}");
	add("{\"term\":\"wheel lock\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04584147\"]}");
	add("{\"term\":\"wheel spoke\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04290516\"]}");
	add("{\"term\":\"wheel tree\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12243417\"]}");
	add("{\"term\":\"wheelbarrow\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02800454\"]}");
	add("{\"term\":\"wheelbase\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05094380\"]}");
	add("{\"term\":\"wheelchair\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04583288\"]}");
	add("{\"term\":\"wheeled vehicle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04583497\"]}");
	add("{\"term\":\"wheeler\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"02390233\", \"10005719\", \"10795204\", \"10795328\", \"11403273\"]}");
	add("{\"term\":\"wheeler dealer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10214185\"]}");
	add("{\"term\":\"wheeler peak\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09501177\"]}");
	add("{\"term\":\"wheelhouse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03945953\"]}");
	add("{\"term\":\"wheeling\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00123350\", \"09179792\"]}");
	add("{\"term\":\"wheelwork\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04584257\"]}");
	add("{\"term\":\"wheelwright\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10795328\"]}");
	add("{\"term\":\"wheeze\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05917978\", \"00838068\"]}");
	add("{\"term\":\"wheeziness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14396260\"]}");
	add("{\"term\":\"whelk\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01950037\", \"07798780\"]}");
	add("{\"term\":\"whelp\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01324834\"]}");
	add("{\"term\":\"whereabouts\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08701121\"]}");
	add("{\"term\":\"wherefore\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09202503\"]}");
	add("{\"term\":\"wherewithal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13375169\"]}");
	add("{\"term\":\"wherry\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04584425\", \"04584579\"]}");
	add("{\"term\":\"whetstone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04584712\"]}");
	add("{\"term\":\"whey\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07865709\", \"15122145\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }