package org.swtk.commons.dict.wordnet.indexbyname.controller.o.n;  import java.util.Collection; import java.util.Set; import java.util.TreeSet;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  	import org.swtk.commons.dict.wordnet.indexbyname.instance.o.n.a.WordnetNounIndexNameInstanceONA;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.o.n.c.WordnetNounIndexNameInstanceONC;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.o.n.d.WordnetNounIndexNameInstanceOND;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.o.n.e.WordnetNounIndexNameInstanceONE;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.o.n.i.WordnetNounIndexNameInstanceONI;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.o.n.l.WordnetNounIndexNameInstanceONL;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.o.n.o.WordnetNounIndexNameInstanceONO;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.o.n.r.WordnetNounIndexNameInstanceONR;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.o.n.s.WordnetNounIndexNameInstanceONS;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.o.n.t.WordnetNounIndexNameInstanceONT;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.o.n.u.WordnetNounIndexNameInstanceONU;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.o.n.y.WordnetNounIndexNameInstanceONY;
  import com.trimc.blogger.commons.exception.BusinessException;  public final class WordnetNounIndexNameControllerON {  	public static Collection<IndexNoun> get(final String TERM) throws BusinessException {  		String key = TERM.substring(0, 4).toLowerCase(); 			if ("ona".equals(key)) return WordnetNounIndexNameInstanceONA.get(TERM);
	if ("onc".equals(key)) return WordnetNounIndexNameInstanceONC.get(TERM);
	if ("ond".equals(key)) return WordnetNounIndexNameInstanceOND.get(TERM);
	if ("one".equals(key)) return WordnetNounIndexNameInstanceONE.get(TERM);
	if ("oni".equals(key)) return WordnetNounIndexNameInstanceONI.get(TERM);
	if ("onl".equals(key)) return WordnetNounIndexNameInstanceONL.get(TERM);
	if ("ono".equals(key)) return WordnetNounIndexNameInstanceONO.get(TERM);
	if ("onr".equals(key)) return WordnetNounIndexNameInstanceONR.get(TERM);
	if ("ons".equals(key)) return WordnetNounIndexNameInstanceONS.get(TERM);
	if ("ont".equals(key)) return WordnetNounIndexNameInstanceONT.get(TERM);
	if ("onu".equals(key)) return WordnetNounIndexNameInstanceONU.get(TERM);
	if ("ony".equals(key)) return WordnetNounIndexNameInstanceONY.get(TERM);
  		throw new BusinessException("TERM not found (id = %s)", TERM); 	} 	 	public static Collection<String> terms() throws BusinessException { 		Set<String> set = new TreeSet<String>();  			set.addAll(WordnetNounIndexNameInstanceONA.terms());
	set.addAll(WordnetNounIndexNameInstanceONC.terms());
	set.addAll(WordnetNounIndexNameInstanceOND.terms());
	set.addAll(WordnetNounIndexNameInstanceONE.terms());
	set.addAll(WordnetNounIndexNameInstanceONI.terms());
	set.addAll(WordnetNounIndexNameInstanceONL.terms());
	set.addAll(WordnetNounIndexNameInstanceONO.terms());
	set.addAll(WordnetNounIndexNameInstanceONR.terms());
	set.addAll(WordnetNounIndexNameInstanceONS.terms());
	set.addAll(WordnetNounIndexNameInstanceONT.terms());
	set.addAll(WordnetNounIndexNameInstanceONU.terms());
	set.addAll(WordnetNounIndexNameInstanceONY.terms());
  		return set; 	} }