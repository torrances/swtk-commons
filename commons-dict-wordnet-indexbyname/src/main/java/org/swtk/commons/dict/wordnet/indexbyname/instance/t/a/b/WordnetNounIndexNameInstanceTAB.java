package org.swtk.commons.dict.wordnet.indexbyname.instance.t.a.b;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceTAB {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"tab\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"03942844\", \"04385210\", \"04386183\", \"06278644\", \"06529933\"]}");
	add("{\"term\":\"tab key\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04386183\"]}");
	add("{\"term\":\"tabanidae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02198055\"]}");
	add("{\"term\":\"tabard\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04385576\"]}");
	add("{\"term\":\"tabasco\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07737797\", \"07842067\", \"08763520\"]}");
	add("{\"term\":\"tabasco pepper\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12922781\"]}");
	add("{\"term\":\"tabasco plant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12922781\"]}");
	add("{\"term\":\"tabasco sauce\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07842067\"]}");
	add("{\"term\":\"tabbouleh\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07824880\"]}");
	add("{\"term\":\"tabby\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02125530\", \"02125697\"]}");
	add("{\"term\":\"tabby cat\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02125697\"]}");
	add("{\"term\":\"tabernacle\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04381822\", \"04385738\", \"04385929\"]}");
	add("{\"term\":\"tabernacles\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15186919\"]}");
	add("{\"term\":\"tabernaemontana\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11796806\"]}");
	add("{\"term\":\"tabernaemontana divaricate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11796980\"]}");
	add("{\"term\":\"tabes\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14158663\"]}");
	add("{\"term\":\"tabes dorsalis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14158301\"]}");
	add("{\"term\":\"tabi\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04386043\"]}");
	add("{\"term\":\"tabis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04386043\"]}");
	add("{\"term\":\"tablature\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06829193\"]}");
	add("{\"term\":\"table\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"07580824\", \"08497146\", \"09374802\", \"04387051\", \"04386330\", \"08283156\"]}");
	add("{\"term\":\"table game\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00500077\"]}");
	add("{\"term\":\"table knife\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04387433\"]}");
	add("{\"term\":\"table lamp\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04387620\"]}");
	add("{\"term\":\"table lifting\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07272061\"]}");
	add("{\"term\":\"table linen\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04387704\"]}");
	add("{\"term\":\"table mat\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04387888\"]}");
	add("{\"term\":\"table mustard\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07835456\"]}");
	add("{\"term\":\"table napkin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03813077\"]}");
	add("{\"term\":\"table of contents\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06501650\"]}");
	add("{\"term\":\"table rapping\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07271895\"]}");
	add("{\"term\":\"table salt\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07829083\"]}");
	add("{\"term\":\"table saw\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04388003\"]}");
	add("{\"term\":\"table service\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04182441\"]}");
	add("{\"term\":\"table talk\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07156630\"]}");
	add("{\"term\":\"table tapping\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07271895\"]}");
	add("{\"term\":\"table tennis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00500274\"]}");
	add("{\"term\":\"table tilting\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07272061\"]}");
	add("{\"term\":\"table tipping\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07272061\"]}");
	add("{\"term\":\"table turning\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07272061\"]}");
	add("{\"term\":\"table wine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07914720\"]}");
	add("{\"term\":\"tableau\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05943498\", \"08389642\"]}");
	add("{\"term\":\"tableau vivant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08389642\"]}");
	add("{\"term\":\"tablecloth\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04387230\"]}");
	add("{\"term\":\"tablefork\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04387342\"]}");
	add("{\"term\":\"tableland\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09476138\"]}");
	add("{\"term\":\"tablemate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10707322\"]}");
	add("{\"term\":\"tablespoon\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04388160\", \"13792450\"]}");
	add("{\"term\":\"tablespoonful\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13792450\"]}");
	add("{\"term\":\"tablet\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03942844\", \"04388270\", \"14997692\", \"04388389\"]}");
	add("{\"term\":\"tabletop\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04388947\"]}");
	add("{\"term\":\"tableware\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04389081\"]}");
	add("{\"term\":\"tabloid\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06278546\", \"06278644\"]}");
	add("{\"term\":\"taboo\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04891497\", \"05959101\"]}");
	add("{\"term\":\"tabooli\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07824880\"]}");
	add("{\"term\":\"tabor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04389421\"]}");
	add("{\"term\":\"tabor pipe\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03951735\"]}");
	add("{\"term\":\"tabora\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09058327\"]}");
	add("{\"term\":\"taboret\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04389525\"]}");
	add("{\"term\":\"tabour\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04389421\"]}");
	add("{\"term\":\"tabouret\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04389525\"]}");
	add("{\"term\":\"tabriz\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08932200\"]}");
	add("{\"term\":\"tabu\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04891497\", \"05959101\"]}");
	add("{\"term\":\"tabuk\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09017383\"]}");
	add("{\"term\":\"tabula rasa\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"14508230\", \"05620826\"]}");
	add("{\"term\":\"tabular array\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08283156\"]}");
	add("{\"term\":\"tabular matter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07016108\"]}");
	add("{\"term\":\"tabulation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00653902\", \"07016108\"]}");
	add("{\"term\":\"tabulator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03121418\"]}");
	add("{\"term\":\"tabun\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15090692\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }