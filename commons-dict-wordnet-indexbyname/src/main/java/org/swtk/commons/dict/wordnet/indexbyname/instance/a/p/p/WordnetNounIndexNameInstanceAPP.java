package org.swtk.commons.dict.wordnet.indexbyname.instance.a.p.p;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceAPP {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"appalachia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08510503\"]}");
	add("{\"term\":\"appalachian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09819231\"]}");
	add("{\"term\":\"appalachians\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09224179\"]}");
	add("{\"term\":\"appalling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07300577\"]}");
	add("{\"term\":\"appaloosa\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02382395\"]}");
	add("{\"term\":\"appanage\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13275342\", \"13319310\"]}");
	add("{\"term\":\"apparatchik\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09819343\", \"09819479\"]}");
	add("{\"term\":\"apparatus\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05226173\", \"02730750\"]}");
	add("{\"term\":\"apparel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02731365\"]}");
	add("{\"term\":\"apparency\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04714021\"]}");
	add("{\"term\":\"apparentness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04714021\"]}");
	add("{\"term\":\"apparition\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00051304\", \"05906160\", \"07338036\", \"09570240\"]}");
	add("{\"term\":\"appeal\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"06525755\", \"01188101\", \"04694682\", \"07201488\"]}");
	add("{\"term\":\"appealingness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04694682\"]}");
	add("{\"term\":\"appearance\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00756620\", \"00051015\", \"05948150\", \"01236192\", \"07336372\", \"04681322\"]}");
	add("{\"term\":\"appearing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01236192\"]}");
	add("{\"term\":\"appeasement\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01153433\"]}");
	add("{\"term\":\"appeaser\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09819672\"]}");
	add("{\"term\":\"appellant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09819892\"]}");
	add("{\"term\":\"appellation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06347064\", \"06350278\"]}");
	add("{\"term\":\"appellative\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06350278\"]}");
	add("{\"term\":\"appendage\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02731707\", \"05477841\", \"05567541\"]}");
	add("{\"term\":\"appendectomy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00667475\"]}");
	add("{\"term\":\"appendicectomy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00667475\"]}");
	add("{\"term\":\"appendicitis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14282014\"]}");
	add("{\"term\":\"appendicle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02731912\"]}");
	add("{\"term\":\"appendicularia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01473374\"]}");
	add("{\"term\":\"appendix\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05545209\", \"06410980\"]}");
	add("{\"term\":\"appenzeller\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02110560\"]}");
	add("{\"term\":\"apperception\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05716605\"]}");
	add("{\"term\":\"appetence\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07500766\"]}");
	add("{\"term\":\"appetency\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07500766\"]}");
	add("{\"term\":\"appetiser\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07596911\"]}");
	add("{\"term\":\"appetisingness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05002696\"]}");
	add("{\"term\":\"appetite\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07500766\"]}");
	add("{\"term\":\"appetizer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07596911\"]}");
	add("{\"term\":\"appetizingness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05002696\"]}");
	add("{\"term\":\"applauder\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09945546\"]}");
	add("{\"term\":\"applause\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06704734\"]}");
	add("{\"term\":\"apple\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"12654755\", \"07755101\"]}");
	add("{\"term\":\"applecart\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02732166\", \"05803843\"]}");
	add("{\"term\":\"applejack\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07919783\"]}");
	add("{\"term\":\"applemint\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12877239\"]}");
	add("{\"term\":\"applesauce\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06624351\", \"07841826\"]}");
	add("{\"term\":\"applet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06582823\"]}");
	add("{\"term\":\"appleton\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09180341\", \"10840217\"]}");
	add("{\"term\":\"applewood\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12654627\"]}");
	add("{\"term\":\"appliance\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02732781\", \"02732963\"]}");
	add("{\"term\":\"applicability\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13817392\"]}");
	add("{\"term\":\"applicant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09630310\"]}");
	add("{\"term\":\"application\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00036782\", \"00634572\", \"03696454\", \"06582286\", \"00713478\", \"06524571\", \"00950950\"]}");
	add("{\"term\":\"applicator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02733263\"]}");
	add("{\"term\":\"applier\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02733263\", \"09630310\"]}");
	add("{\"term\":\"applique\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02733435\"]}");
	add("{\"term\":\"appoggiatura\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06885033\"]}");
	add("{\"term\":\"appointee\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09630660\", \"09820387\"]}");
	add("{\"term\":\"appointment\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00091213\", \"00587142\", \"09630660\", \"02733566\", \"08401740\", \"00164600\"]}");
	add("{\"term\":\"apportioning\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01085569\"]}");
	add("{\"term\":\"apportionment\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01085569\"]}");
	add("{\"term\":\"appositeness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04723767\"]}");
	add("{\"term\":\"apposition\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01053725\", \"13455121\", \"13823429\"]}");
	add("{\"term\":\"appraisal\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00877197\", \"06540774\", \"05741528\"]}");
	add("{\"term\":\"appraiser\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09821662\", \"09821473\"]}");
	add("{\"term\":\"appreciation\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00365266\", \"01221083\", \"07243771\", \"05757616\", \"05814631\"]}");
	add("{\"term\":\"appreciativeness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07519768\"]}");
	add("{\"term\":\"appreciator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09821868\"]}");
	add("{\"term\":\"apprehender\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09820525\", \"10259779\"]}");
	add("{\"term\":\"apprehension\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00089545\", \"05960433\", \"05813483\", \"07536913\"]}");
	add("{\"term\":\"apprehensiveness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07536913\"]}");
	add("{\"term\":\"apprentice\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09821287\"]}");
	add("{\"term\":\"apprenticeship\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00590035\"]}");
	add("{\"term\":\"apprisal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07227084\"]}");
	add("{\"term\":\"appro\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14435968\"]}");
	add("{\"term\":\"approach\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00574305\", \"04753374\", \"05053622\", \"07179000\", \"07325125\", \"08510971\", \"02673692\", \"00281697\", \"00942956\"]}");
	add("{\"term\":\"approachability\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04663006\"]}");
	add("{\"term\":\"approaching\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00281697\", \"05053622\", \"07325125\"]}");
	add("{\"term\":\"approbation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06699923\", \"07515851\"]}");
	add("{\"term\":\"appropriateness\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04723223\", \"04906208\"]}");
	add("{\"term\":\"appropriation\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00084795\", \"00374226\", \"13310868\"]}");
	add("{\"term\":\"appropriator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09822064\"]}");
	add("{\"term\":\"approval\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"06699481\", \"14435778\", \"07515398\", \"01217882\"]}");
	add("{\"term\":\"approver\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09822267\"]}");
	add("{\"term\":\"approving\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01217882\"]}");
	add("{\"term\":\"approximation\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00147097\", \"06796299\", \"04751272\", \"05811387\"]}");
	add("{\"term\":\"appurtenance\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02674051\", \"03435869\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }