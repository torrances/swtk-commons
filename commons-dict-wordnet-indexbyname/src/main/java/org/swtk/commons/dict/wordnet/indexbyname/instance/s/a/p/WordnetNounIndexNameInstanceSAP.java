package org.swtk.commons.dict.wordnet.indexbyname.instance.s.a.p;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceSAP {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"sap\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02850699\", \"10120530\", \"15062694\"]}");
	add("{\"term\":\"sapele mahogany\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12718787\"]}");
	add("{\"term\":\"saphar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15242239\"]}");
	add("{\"term\":\"saphead\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10120530\"]}");
	add("{\"term\":\"saphenous nerve\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05575982\"]}");
	add("{\"term\":\"saphenous vein\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05387077\"]}");
	add("{\"term\":\"sapidity\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05003278\", \"05723811\"]}");
	add("{\"term\":\"sapidness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05003278\"]}");
	add("{\"term\":\"sapience\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05624890\"]}");
	add("{\"term\":\"sapiential book\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06472747\"]}");
	add("{\"term\":\"sapindaceae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12761274\"]}");
	add("{\"term\":\"sapindales\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12760956\"]}");
	add("{\"term\":\"sapindus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12762169\"]}");
	add("{\"term\":\"sapindus drumondii\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12762346\"]}");
	add("{\"term\":\"sapindus marginatus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12762346\"]}");
	add("{\"term\":\"sapindus saponaria\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12762552\"]}");
	add("{\"term\":\"sapir\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11301164\"]}");
	add("{\"term\":\"sapling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13129240\"]}");
	add("{\"term\":\"sapodilla\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07780291\", \"12795401\"]}");
	add("{\"term\":\"sapodilla family\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12792841\"]}");
	add("{\"term\":\"sapodilla plum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07780291\"]}");
	add("{\"term\":\"sapodilla tree\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12795401\"]}");
	add("{\"term\":\"saponaria\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11834909\"]}");
	add("{\"term\":\"saponaria officinalis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11835053\"]}");
	add("{\"term\":\"saponaria vaccaria\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11839105\"]}");
	add("{\"term\":\"saponification\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13574061\"]}");
	add("{\"term\":\"saponin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14912076\"]}");
	add("{\"term\":\"sapota\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07780291\"]}");
	add("{\"term\":\"sapotaceae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12792841\"]}");
	add("{\"term\":\"sapote\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07780462\", \"12796679\"]}");
	add("{\"term\":\"sapper\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10571133\"]}");
	add("{\"term\":\"sapphic ode\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06395577\"]}");
	add("{\"term\":\"sapphire\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04976419\", \"13393985\", \"15044050\"]}");
	add("{\"term\":\"sapphire berry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12797534\"]}");
	add("{\"term\":\"sapphirine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15037377\"]}");
	add("{\"term\":\"sapphism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00859053\"]}");
	add("{\"term\":\"sappho\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11301335\"]}");
	add("{\"term\":\"sapporo\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08945325\"]}");
	add("{\"term\":\"sapraemia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14213614\"]}");
	add("{\"term\":\"sapremia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14213614\"]}");
	add("{\"term\":\"saprobe\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13145117\"]}");
	add("{\"term\":\"saprolegnia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13000390\"]}");
	add("{\"term\":\"saprolegnia ferax\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13000589\"]}");
	add("{\"term\":\"saprolegniales\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13000238\"]}");
	add("{\"term\":\"saprolite\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14868730\"]}");
	add("{\"term\":\"sapropel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14981060\"]}");
	add("{\"term\":\"saprophyte\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13144923\"]}");
	add("{\"term\":\"saprophytic organism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13144923\"]}");
	add("{\"term\":\"sapsago\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07871164\"]}");
	add("{\"term\":\"sapsucker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01843743\"]}");
	add("{\"term\":\"sapwood\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13118295\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }