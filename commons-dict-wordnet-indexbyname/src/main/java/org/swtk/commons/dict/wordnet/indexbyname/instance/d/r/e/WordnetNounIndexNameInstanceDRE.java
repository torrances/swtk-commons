package org.swtk.commons.dict.wordnet.indexbyname.instance.d.r.e;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceDRE {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"dread\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07536913\"]}");
	add("{\"term\":\"dreadfulness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04789380\"]}");
	add("{\"term\":\"dreadlock\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05266226\"]}");
	add("{\"term\":\"dreadnaught\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03240796\"]}");
	add("{\"term\":\"dreadnought\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03240796\"]}");
	add("{\"term\":\"dream\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"14483299\", \"05708890\", \"05640577\", \"07499687\", \"05776803\", \"05776550\"]}");
	add("{\"term\":\"dreamer\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10082803\", \"10216584\", \"10052712\"]}");
	add("{\"term\":\"dreaminess\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07531461\"]}");
	add("{\"term\":\"dreaming\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05776550\", \"05776803\"]}");
	add("{\"term\":\"dreamland\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05639087\"]}");
	add("{\"term\":\"dreamworld\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05639087\"]}");
	add("{\"term\":\"dreariness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05213274\"]}");
	add("{\"term\":\"dreck\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04152800\"]}");
	add("{\"term\":\"dredge\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03240920\"]}");
	add("{\"term\":\"dredger\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03241126\"]}");
	add("{\"term\":\"dreg\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13795111\"]}");
	add("{\"term\":\"dregs\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09292878\"]}");
	add("{\"term\":\"dreiser\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10963107\"]}");
	add("{\"term\":\"dreissena\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01968045\"]}");
	add("{\"term\":\"drenching\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00278655\"]}");
	add("{\"term\":\"drepanididae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01547185\"]}");
	add("{\"term\":\"drepanis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01547518\"]}");
	add("{\"term\":\"dresden\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08788765\"]}");
	add("{\"term\":\"dress\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02731365\", \"02759103\", \"03241438\"]}");
	add("{\"term\":\"dressage\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00288844\"]}");
	add("{\"term\":\"dresser\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"03242043\", \"03243289\", \"10052807\", \"10052950\", \"03018908\"]}");
	add("{\"term\":\"dressing\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00698135\", \"00829898\", \"00830523\", \"03242342\", \"07449073\", \"07694474\", \"07848878\"]}");
	add("{\"term\":\"dressmaker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10053137\"]}");
	add("{\"term\":\"dressmaking\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00609277\"]}");
	add("{\"term\":\"drew\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10963248\"]}");
	add("{\"term\":\"drey\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09293066\"]}");
	add("{\"term\":\"dreyfus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10963397\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }