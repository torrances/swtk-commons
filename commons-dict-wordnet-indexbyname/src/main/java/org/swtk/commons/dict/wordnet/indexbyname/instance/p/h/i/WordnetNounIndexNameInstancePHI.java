package org.swtk.commons.dict.wordnet.indexbyname.instance.p.h.i;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstancePHI {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"phi\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06849325\"]}");
	add("{\"term\":\"phial\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03929501\"]}");
	add("{\"term\":\"phidias\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11251933\"]}");
	add("{\"term\":\"philadelphaceae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12811416\"]}");
	add("{\"term\":\"philadelphia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09158883\"]}");
	add("{\"term\":\"philadelphus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12811824\"]}");
	add("{\"term\":\"philaenus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02260717\"]}");
	add("{\"term\":\"philanderer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10808758\"]}");
	add("{\"term\":\"philanthropist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10441701\"]}");
	add("{\"term\":\"philanthropy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01091407\"]}");
	add("{\"term\":\"philatelist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10442150\"]}");
	add("{\"term\":\"philately\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01018362\"]}");
	add("{\"term\":\"philemon\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06457887\", \"11252040\", \"11252219\"]}");
	add("{\"term\":\"philharmonic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08265777\"]}");
	add("{\"term\":\"philhellene\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10442285\"]}");
	add("{\"term\":\"philhellenism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07516433\"]}");
	add("{\"term\":\"philhellenist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10442285\"]}");
	add("{\"term\":\"philia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07560035\"]}");
	add("{\"term\":\"philip\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11252465\"]}");
	add("{\"term\":\"philippi\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01293333\", \"08935433\"]}");
	add("{\"term\":\"philippian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10442504\"]}");
	add("{\"term\":\"philippians\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06456128\"]}");
	add("{\"term\":\"philippic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07248075\"]}");
	add("{\"term\":\"philippine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06952518\"]}");
	add("{\"term\":\"philippines\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09002670\", \"09003614\"]}");
	add("{\"term\":\"philippopolis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08732628\"]}");
	add("{\"term\":\"philistia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08817558\"]}");
	add("{\"term\":\"philistine\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10442616\", \"10442776\"]}");
	add("{\"term\":\"philistinism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14062792\"]}");
	add("{\"term\":\"phillidae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02234582\"]}");
	add("{\"term\":\"phillipsite\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15132244\"]}");
	add("{\"term\":\"phillyrea\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12330367\"]}");
	add("{\"term\":\"philodendron\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11811810\"]}");
	add("{\"term\":\"philogyny\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07516565\"]}");
	add("{\"term\":\"philohela\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02034109\"]}");
	add("{\"term\":\"philologist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10442970\"]}");
	add("{\"term\":\"philologue\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10442970\"]}");
	add("{\"term\":\"philology\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06180756\"]}");
	add("{\"term\":\"philomachus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02032568\"]}");
	add("{\"term\":\"philomath\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10443259\"]}");
	add("{\"term\":\"philophylla\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02200673\"]}");
	add("{\"term\":\"philosopher\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10445710\", \"10443334\"]}");
	add("{\"term\":\"philosophiser\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10445948\"]}");
	add("{\"term\":\"philosophizer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10445948\"]}");
	add("{\"term\":\"philosophizing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06755467\"]}");
	add("{\"term\":\"philosophy\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"05953535\", \"06168062\", \"05952149\"]}");
	add("{\"term\":\"philter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07899636\"]}");
	add("{\"term\":\"philtre\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07899636\"]}");
	add("{\"term\":\"phimosis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14533185\"]}");
	add("{\"term\":\"phintias\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11253585\"]}");
	add("{\"term\":\"phiz\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05609112\", \"10886325\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }