package org.swtk.commons.dict.wordnet.indexbyname.controller.i.s;  import java.util.Collection; import java.util.Set; import java.util.TreeSet;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  	import org.swtk.commons.dict.wordnet.indexbyname.instance.i.s.a.WordnetNounIndexNameInstanceISA;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.i.s.c.WordnetNounIndexNameInstanceISC;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.i.s.e.WordnetNounIndexNameInstanceISE;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.i.s.f.WordnetNounIndexNameInstanceISF;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.i.s.h.WordnetNounIndexNameInstanceISH;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.i.s.i.WordnetNounIndexNameInstanceISI;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.i.s.k.WordnetNounIndexNameInstanceISK;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.i.s.l.WordnetNounIndexNameInstanceISL;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.i.s.m.WordnetNounIndexNameInstanceISM;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.i.s.o.WordnetNounIndexNameInstanceISO;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.i.s.r.WordnetNounIndexNameInstanceISR;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.i.s.s.WordnetNounIndexNameInstanceISS;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.i.s.t.WordnetNounIndexNameInstanceIST;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.i.s.u.WordnetNounIndexNameInstanceISU;
  import com.trimc.blogger.commons.exception.BusinessException;  public final class WordnetNounIndexNameControllerIS {  	public static Collection<IndexNoun> get(final String TERM) throws BusinessException {  		String key = TERM.substring(0, 4).toLowerCase(); 			if ("isa".equals(key)) return WordnetNounIndexNameInstanceISA.get(TERM);
	if ("isc".equals(key)) return WordnetNounIndexNameInstanceISC.get(TERM);
	if ("ise".equals(key)) return WordnetNounIndexNameInstanceISE.get(TERM);
	if ("isf".equals(key)) return WordnetNounIndexNameInstanceISF.get(TERM);
	if ("ish".equals(key)) return WordnetNounIndexNameInstanceISH.get(TERM);
	if ("isi".equals(key)) return WordnetNounIndexNameInstanceISI.get(TERM);
	if ("isk".equals(key)) return WordnetNounIndexNameInstanceISK.get(TERM);
	if ("isl".equals(key)) return WordnetNounIndexNameInstanceISL.get(TERM);
	if ("ism".equals(key)) return WordnetNounIndexNameInstanceISM.get(TERM);
	if ("iso".equals(key)) return WordnetNounIndexNameInstanceISO.get(TERM);
	if ("isr".equals(key)) return WordnetNounIndexNameInstanceISR.get(TERM);
	if ("iss".equals(key)) return WordnetNounIndexNameInstanceISS.get(TERM);
	if ("ist".equals(key)) return WordnetNounIndexNameInstanceIST.get(TERM);
	if ("isu".equals(key)) return WordnetNounIndexNameInstanceISU.get(TERM);
  		throw new BusinessException("TERM not found (id = %s)", TERM); 	} 	 	public static Collection<String> terms() throws BusinessException { 		Set<String> set = new TreeSet<String>();  			set.addAll(WordnetNounIndexNameInstanceISA.terms());
	set.addAll(WordnetNounIndexNameInstanceISC.terms());
	set.addAll(WordnetNounIndexNameInstanceISE.terms());
	set.addAll(WordnetNounIndexNameInstanceISF.terms());
	set.addAll(WordnetNounIndexNameInstanceISH.terms());
	set.addAll(WordnetNounIndexNameInstanceISI.terms());
	set.addAll(WordnetNounIndexNameInstanceISK.terms());
	set.addAll(WordnetNounIndexNameInstanceISL.terms());
	set.addAll(WordnetNounIndexNameInstanceISM.terms());
	set.addAll(WordnetNounIndexNameInstanceISO.terms());
	set.addAll(WordnetNounIndexNameInstanceISR.terms());
	set.addAll(WordnetNounIndexNameInstanceISS.terms());
	set.addAll(WordnetNounIndexNameInstanceIST.terms());
	set.addAll(WordnetNounIndexNameInstanceISU.terms());
  		return set; 	} }