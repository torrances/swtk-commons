package org.swtk.commons.dict.wordnet.indexbyname.instance.h.u.m;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceHUM {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"hum\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07400403\", \"08039725\", \"14031535\"]}");
	add("{\"term\":\"human\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02474924\"]}");
	add("{\"term\":\"humaneness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04836156\"]}");
	add("{\"term\":\"humanisation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00265618\"]}");
	add("{\"term\":\"humanism\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08493840\", \"05976058\", \"05976269\"]}");
	add("{\"term\":\"humanist\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10211007\", \"10210811\"]}");
	add("{\"term\":\"humanitarian\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10211007\", \"10211232\"]}");
	add("{\"term\":\"humanitarianism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05976269\"]}");
	add("{\"term\":\"humanities\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06163352\"]}");
	add("{\"term\":\"humanity\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02475618\", \"04734196\", \"04836413\"]}");
	add("{\"term\":\"humanization\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00265618\"]}");
	add("{\"term\":\"humankind\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02475618\"]}");
	add("{\"term\":\"humanness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04734196\"]}");
	add("{\"term\":\"humanoid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02713060\"]}");
	add("{\"term\":\"humans\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02475618\"]}");
	add("{\"term\":\"humate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14933128\"]}");
	add("{\"term\":\"humber\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09330046\"]}");
	add("{\"term\":\"humblebee\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02212276\"]}");
	add("{\"term\":\"humbleness\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04896722\", \"07524370\", \"14459904\"]}");
	add("{\"term\":\"humboldt\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11085933\", \"11086204\"]}");
	add("{\"term\":\"humbug\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00755028\", \"06623132\", \"06623500\"]}");
	add("{\"term\":\"humdinger\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10345322\"]}");
	add("{\"term\":\"humdrum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04747566\"]}");
	add("{\"term\":\"hume\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11086420\"]}");
	add("{\"term\":\"humectant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14932834\"]}");
	add("{\"term\":\"humerus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05600936\"]}");
	add("{\"term\":\"humidifier\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04047920\"]}");
	add("{\"term\":\"humidity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14559245\"]}");
	add("{\"term\":\"humidness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14559245\"]}");
	add("{\"term\":\"humification\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13515395\"]}");
	add("{\"term\":\"humiliation\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00274293\", \"07323841\", \"07522981\", \"14463954\"]}");
	add("{\"term\":\"humility\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07524370\", \"04896722\"]}");
	add("{\"term\":\"humin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14933631\"]}");
	add("{\"term\":\"hummer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00109001\", \"10211421\"]}");
	add("{\"term\":\"humming\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01256531\", \"07400403\"]}");
	add("{\"term\":\"hummingbird\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01836446\"]}");
	add("{\"term\":\"hummock\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09349568\"]}");
	add("{\"term\":\"hummus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07873707\"]}");
	add("{\"term\":\"humor\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"05404811\", \"05612290\", \"05218312\", \"07566518\", \"04657558\", \"06788939\"]}");
	add("{\"term\":\"humoring\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01075165\"]}");
	add("{\"term\":\"humorist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10211562\"]}");
	add("{\"term\":\"humorousness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04656408\"]}");
	add("{\"term\":\"humour\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"04657558\", \"05218312\", \"05404811\", \"05612290\", \"06788939\", \"07566518\"]}");
	add("{\"term\":\"humourist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10211562\"]}");
	add("{\"term\":\"humous\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07873707\"]}");
	add("{\"term\":\"hump\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13917127\"]}");
	add("{\"term\":\"humpback\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02068379\", \"10212031\", \"14528671\"]}");
	add("{\"term\":\"humperdinck\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11086611\"]}");
	add("{\"term\":\"humulin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05418392\"]}");
	add("{\"term\":\"humulus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12418099\"]}");
	add("{\"term\":\"humus\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07873707\", \"14932973\"]}");
	add("{\"term\":\"humvee\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03554379\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }