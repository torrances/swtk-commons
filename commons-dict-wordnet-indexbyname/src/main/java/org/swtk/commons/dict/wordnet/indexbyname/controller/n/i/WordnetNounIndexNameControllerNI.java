package org.swtk.commons.dict.wordnet.indexbyname.controller.n.i;  import java.util.Collection; import java.util.Set; import java.util.TreeSet;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  	import org.swtk.commons.dict.wordnet.indexbyname.instance.n.i.a.WordnetNounIndexNameInstanceNIA;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.n.i.b.WordnetNounIndexNameInstanceNIB;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.n.i.c.WordnetNounIndexNameInstanceNIC;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.n.i.d.WordnetNounIndexNameInstanceNID;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.n.i.e.WordnetNounIndexNameInstanceNIE;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.n.i.f.WordnetNounIndexNameInstanceNIF;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.n.i.g.WordnetNounIndexNameInstanceNIG;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.n.i.h.WordnetNounIndexNameInstanceNIH;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.n.i.j.WordnetNounIndexNameInstanceNIJ;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.n.i.k.WordnetNounIndexNameInstanceNIK;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.n.i.l.WordnetNounIndexNameInstanceNIL;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.n.i.m.WordnetNounIndexNameInstanceNIM;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.n.i.n.WordnetNounIndexNameInstanceNIN;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.n.i.o.WordnetNounIndexNameInstanceNIO;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.n.i.p.WordnetNounIndexNameInstanceNIP;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.n.i.q.WordnetNounIndexNameInstanceNIQ;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.n.i.r.WordnetNounIndexNameInstanceNIR;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.n.i.s.WordnetNounIndexNameInstanceNIS;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.n.i.t.WordnetNounIndexNameInstanceNIT;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.n.i.v.WordnetNounIndexNameInstanceNIV;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.n.i.x.WordnetNounIndexNameInstanceNIX;
  import com.trimc.blogger.commons.exception.BusinessException;  public final class WordnetNounIndexNameControllerNI {  	public static Collection<IndexNoun> get(final String TERM) throws BusinessException { 		if (TERM.length() < 3) throw new BusinessException("TERM not found (term = %s)", TERM); 		 		String key = TERM.replaceAll(" ", "").substring(0, 3).toLowerCase(); 			if ("nia".equals(key)) return WordnetNounIndexNameInstanceNIA.get(TERM);
	if ("nib".equals(key)) return WordnetNounIndexNameInstanceNIB.get(TERM);
	if ("nic".equals(key)) return WordnetNounIndexNameInstanceNIC.get(TERM);
	if ("nid".equals(key)) return WordnetNounIndexNameInstanceNID.get(TERM);
	if ("nie".equals(key)) return WordnetNounIndexNameInstanceNIE.get(TERM);
	if ("nif".equals(key)) return WordnetNounIndexNameInstanceNIF.get(TERM);
	if ("nig".equals(key)) return WordnetNounIndexNameInstanceNIG.get(TERM);
	if ("nih".equals(key)) return WordnetNounIndexNameInstanceNIH.get(TERM);
	if ("nij".equals(key)) return WordnetNounIndexNameInstanceNIJ.get(TERM);
	if ("nik".equals(key)) return WordnetNounIndexNameInstanceNIK.get(TERM);
	if ("nil".equals(key)) return WordnetNounIndexNameInstanceNIL.get(TERM);
	if ("nim".equals(key)) return WordnetNounIndexNameInstanceNIM.get(TERM);
	if ("nin".equals(key)) return WordnetNounIndexNameInstanceNIN.get(TERM);
	if ("nio".equals(key)) return WordnetNounIndexNameInstanceNIO.get(TERM);
	if ("nip".equals(key)) return WordnetNounIndexNameInstanceNIP.get(TERM);
	if ("niq".equals(key)) return WordnetNounIndexNameInstanceNIQ.get(TERM);
	if ("nir".equals(key)) return WordnetNounIndexNameInstanceNIR.get(TERM);
	if ("nis".equals(key)) return WordnetNounIndexNameInstanceNIS.get(TERM);
	if ("nit".equals(key)) return WordnetNounIndexNameInstanceNIT.get(TERM);
	if ("niv".equals(key)) return WordnetNounIndexNameInstanceNIV.get(TERM);
	if ("nix".equals(key)) return WordnetNounIndexNameInstanceNIX.get(TERM);
  		throw new BusinessException("TERM not found (term = %s)", TERM); 	}  	public static Collection<String> terms() throws BusinessException { 		Set<String> set = new TreeSet<String>();  			set.addAll(WordnetNounIndexNameInstanceNIA.terms());
	set.addAll(WordnetNounIndexNameInstanceNIB.terms());
	set.addAll(WordnetNounIndexNameInstanceNIC.terms());
	set.addAll(WordnetNounIndexNameInstanceNID.terms());
	set.addAll(WordnetNounIndexNameInstanceNIE.terms());
	set.addAll(WordnetNounIndexNameInstanceNIF.terms());
	set.addAll(WordnetNounIndexNameInstanceNIG.terms());
	set.addAll(WordnetNounIndexNameInstanceNIH.terms());
	set.addAll(WordnetNounIndexNameInstanceNIJ.terms());
	set.addAll(WordnetNounIndexNameInstanceNIK.terms());
	set.addAll(WordnetNounIndexNameInstanceNIL.terms());
	set.addAll(WordnetNounIndexNameInstanceNIM.terms());
	set.addAll(WordnetNounIndexNameInstanceNIN.terms());
	set.addAll(WordnetNounIndexNameInstanceNIO.terms());
	set.addAll(WordnetNounIndexNameInstanceNIP.terms());
	set.addAll(WordnetNounIndexNameInstanceNIQ.terms());
	set.addAll(WordnetNounIndexNameInstanceNIR.terms());
	set.addAll(WordnetNounIndexNameInstanceNIS.terms());
	set.addAll(WordnetNounIndexNameInstanceNIT.terms());
	set.addAll(WordnetNounIndexNameInstanceNIV.terms());
	set.addAll(WordnetNounIndexNameInstanceNIX.terms());
  		return set; 	} }