package org.swtk.commons.dict.wordnet.indexbyname.controller.m.y;  import java.util.Collection; import java.util.Set; import java.util.TreeSet;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  	import org.swtk.commons.dict.wordnet.indexbyname.instance.m.y.a.WordnetNounIndexNameInstanceMYA;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.m.y.c.WordnetNounIndexNameInstanceMYC;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.m.y.d.WordnetNounIndexNameInstanceMYD;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.m.y.e.WordnetNounIndexNameInstanceMYE;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.m.y.i.WordnetNounIndexNameInstanceMYI;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.m.y.l.WordnetNounIndexNameInstanceMYL;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.m.y.n.WordnetNounIndexNameInstanceMYN;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.m.y.o.WordnetNounIndexNameInstanceMYO;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.m.y.r.WordnetNounIndexNameInstanceMYR;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.m.y.s.WordnetNounIndexNameInstanceMYS;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.m.y.t.WordnetNounIndexNameInstanceMYT;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.m.y.x.WordnetNounIndexNameInstanceMYX;
  import com.trimc.blogger.commons.exception.BusinessException;  public final class WordnetNounIndexNameControllerMY {  	public static Collection<IndexNoun> get(final String TERM) throws BusinessException { 		if (TERM.length() < 3) throw new BusinessException("TERM not found (term = %s)", TERM); 		 		String key = TERM.replaceAll(" ", "").substring(0, 3).toLowerCase(); 			if ("mya".equals(key)) return WordnetNounIndexNameInstanceMYA.get(TERM);
	if ("myc".equals(key)) return WordnetNounIndexNameInstanceMYC.get(TERM);
	if ("myd".equals(key)) return WordnetNounIndexNameInstanceMYD.get(TERM);
	if ("mye".equals(key)) return WordnetNounIndexNameInstanceMYE.get(TERM);
	if ("myi".equals(key)) return WordnetNounIndexNameInstanceMYI.get(TERM);
	if ("myl".equals(key)) return WordnetNounIndexNameInstanceMYL.get(TERM);
	if ("myn".equals(key)) return WordnetNounIndexNameInstanceMYN.get(TERM);
	if ("myo".equals(key)) return WordnetNounIndexNameInstanceMYO.get(TERM);
	if ("myr".equals(key)) return WordnetNounIndexNameInstanceMYR.get(TERM);
	if ("mys".equals(key)) return WordnetNounIndexNameInstanceMYS.get(TERM);
	if ("myt".equals(key)) return WordnetNounIndexNameInstanceMYT.get(TERM);
	if ("myx".equals(key)) return WordnetNounIndexNameInstanceMYX.get(TERM);
  		throw new BusinessException("TERM not found (term = %s)", TERM); 	}  	public static Collection<String> terms() throws BusinessException { 		Set<String> set = new TreeSet<String>();  			set.addAll(WordnetNounIndexNameInstanceMYA.terms());
	set.addAll(WordnetNounIndexNameInstanceMYC.terms());
	set.addAll(WordnetNounIndexNameInstanceMYD.terms());
	set.addAll(WordnetNounIndexNameInstanceMYE.terms());
	set.addAll(WordnetNounIndexNameInstanceMYI.terms());
	set.addAll(WordnetNounIndexNameInstanceMYL.terms());
	set.addAll(WordnetNounIndexNameInstanceMYN.terms());
	set.addAll(WordnetNounIndexNameInstanceMYO.terms());
	set.addAll(WordnetNounIndexNameInstanceMYR.terms());
	set.addAll(WordnetNounIndexNameInstanceMYS.terms());
	set.addAll(WordnetNounIndexNameInstanceMYT.terms());
	set.addAll(WordnetNounIndexNameInstanceMYX.terms());
  		return set; 	} }