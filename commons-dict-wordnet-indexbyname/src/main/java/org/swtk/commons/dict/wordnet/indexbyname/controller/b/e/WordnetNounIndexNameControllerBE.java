package org.swtk.commons.dict.wordnet.indexbyname.controller.b.e;  import java.util.ArrayList; import java.util.Collection; import java.util.Set; import java.util.TreeSet;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  	import org.swtk.commons.dict.wordnet.indexbyname.instance.b.e.a.WordnetNounIndexNameInstanceBEA;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.b.e.b.WordnetNounIndexNameInstanceBEB;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.b.e.c.WordnetNounIndexNameInstanceBEC;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.b.e.d.WordnetNounIndexNameInstanceBED;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.b.e.e.WordnetNounIndexNameInstanceBEE;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.b.e.f.WordnetNounIndexNameInstanceBEF;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.b.e.g.WordnetNounIndexNameInstanceBEG;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.b.e.h.WordnetNounIndexNameInstanceBEH;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.b.e.i.WordnetNounIndexNameInstanceBEI;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.b.e.l.WordnetNounIndexNameInstanceBEL;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.b.e.m.WordnetNounIndexNameInstanceBEM;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.b.e.n.WordnetNounIndexNameInstanceBEN;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.b.e.o.WordnetNounIndexNameInstanceBEO;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.b.e.q.WordnetNounIndexNameInstanceBEQ;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.b.e.r.WordnetNounIndexNameInstanceBER;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.b.e.s.WordnetNounIndexNameInstanceBES;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.b.e.t.WordnetNounIndexNameInstanceBET;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.b.e.v.WordnetNounIndexNameInstanceBEV;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.b.e.w.WordnetNounIndexNameInstanceBEW;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.b.e.x.WordnetNounIndexNameInstanceBEX;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.b.e.z.WordnetNounIndexNameInstanceBEZ;
  import com.trimc.blogger.commons.exception.BusinessException;  public final class WordnetNounIndexNameControllerBE {  	public static Collection<IndexNoun> get(final String TERM) throws BusinessException { 		if (TERM.length() < 3) throw new BusinessException("TERM not found (term = %s)", TERM); 		 		String key = TERM.substring(0, 3).toLowerCase(); 			if ("bea".equals(key)) return WordnetNounIndexNameInstanceBEA.get(TERM);
	if ("beb".equals(key)) return WordnetNounIndexNameInstanceBEB.get(TERM);
	if ("bec".equals(key)) return WordnetNounIndexNameInstanceBEC.get(TERM);
	if ("bed".equals(key)) return WordnetNounIndexNameInstanceBED.get(TERM);
	if ("bee".equals(key)) return WordnetNounIndexNameInstanceBEE.get(TERM);
	if ("bef".equals(key)) return WordnetNounIndexNameInstanceBEF.get(TERM);
	if ("beg".equals(key)) return WordnetNounIndexNameInstanceBEG.get(TERM);
	if ("beh".equals(key)) return WordnetNounIndexNameInstanceBEH.get(TERM);
	if ("bei".equals(key)) return WordnetNounIndexNameInstanceBEI.get(TERM);
	if ("bel".equals(key)) return WordnetNounIndexNameInstanceBEL.get(TERM);
	if ("bem".equals(key)) return WordnetNounIndexNameInstanceBEM.get(TERM);
	if ("ben".equals(key)) return WordnetNounIndexNameInstanceBEN.get(TERM);
	if ("beo".equals(key)) return WordnetNounIndexNameInstanceBEO.get(TERM);
	if ("beq".equals(key)) return WordnetNounIndexNameInstanceBEQ.get(TERM);
	if ("ber".equals(key)) return WordnetNounIndexNameInstanceBER.get(TERM);
	if ("bes".equals(key)) return WordnetNounIndexNameInstanceBES.get(TERM);
	if ("bet".equals(key)) return WordnetNounIndexNameInstanceBET.get(TERM);
	if ("bev".equals(key)) return WordnetNounIndexNameInstanceBEV.get(TERM);
	if ("bew".equals(key)) return WordnetNounIndexNameInstanceBEW.get(TERM);
	if ("bex".equals(key)) return WordnetNounIndexNameInstanceBEX.get(TERM);
	if ("bez".equals(key)) return WordnetNounIndexNameInstanceBEZ.get(TERM);
  		throw new BusinessException("TERM not found (term = %s)", TERM); 	} 	 	public static Collection<String> terms() throws BusinessException { 		Set<String> set = new TreeSet<String>();  			set.addAll(WordnetNounIndexNameInstanceBEA.terms());
	set.addAll(WordnetNounIndexNameInstanceBEB.terms());
	set.addAll(WordnetNounIndexNameInstanceBEC.terms());
	set.addAll(WordnetNounIndexNameInstanceBED.terms());
	set.addAll(WordnetNounIndexNameInstanceBEE.terms());
	set.addAll(WordnetNounIndexNameInstanceBEF.terms());
	set.addAll(WordnetNounIndexNameInstanceBEG.terms());
	set.addAll(WordnetNounIndexNameInstanceBEH.terms());
	set.addAll(WordnetNounIndexNameInstanceBEI.terms());
	set.addAll(WordnetNounIndexNameInstanceBEL.terms());
	set.addAll(WordnetNounIndexNameInstanceBEM.terms());
	set.addAll(WordnetNounIndexNameInstanceBEN.terms());
	set.addAll(WordnetNounIndexNameInstanceBEO.terms());
	set.addAll(WordnetNounIndexNameInstanceBEQ.terms());
	set.addAll(WordnetNounIndexNameInstanceBER.terms());
	set.addAll(WordnetNounIndexNameInstanceBES.terms());
	set.addAll(WordnetNounIndexNameInstanceBET.terms());
	set.addAll(WordnetNounIndexNameInstanceBEV.terms());
	set.addAll(WordnetNounIndexNameInstanceBEW.terms());
	set.addAll(WordnetNounIndexNameInstanceBEX.terms());
	set.addAll(WordnetNounIndexNameInstanceBEZ.terms());
  		return set; 	} }