package org.swtk.commons.dict.wordnet.indexbyname.instance.e.l.i;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceELI {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"el iskandriyah\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08918414\"]}");
	add("{\"term\":\"eli whitney\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11405121\"]}");
	add("{\"term\":\"elia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11135019\"]}");
	add("{\"term\":\"elia kazan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11118029\"]}");
	add("{\"term\":\"elia kazanjoglous\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11118029\"]}");
	add("{\"term\":\"elias canetti\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10901021\"]}");
	add("{\"term\":\"elias howe\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11082419\"]}");
	add("{\"term\":\"elicitation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05835577\"]}");
	add("{\"term\":\"elie metchnikoff\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11197141\"]}");
	add("{\"term\":\"elie metchnikov\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11197141\"]}");
	add("{\"term\":\"elie wiesel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11405743\"]}");
	add("{\"term\":\"eliel saarinen\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11297086\"]}");
	add("{\"term\":\"eliezer wiesel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11405743\"]}");
	add("{\"term\":\"eligibility\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04724828\"]}");
	add("{\"term\":\"elihu thomson\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11360637\"]}");
	add("{\"term\":\"elihu yale\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11421613\"]}");
	add("{\"term\":\"elijah\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10976604\"]}");
	add("{\"term\":\"elijah muhammad\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11214739\"]}");
	add("{\"term\":\"elimination\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00224587\", \"00396311\", \"05790242\", \"13494300\", \"00396141\"]}");
	add("{\"term\":\"elimination reaction\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13494595\"]}");
	add("{\"term\":\"elimination tournament\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07479926\"]}");
	add("{\"term\":\"eliminator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09295374\"]}");
	add("{\"term\":\"elinor morton hoyt wylie\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11420590\"]}");
	add("{\"term\":\"elint\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00985188\"]}");
	add("{\"term\":\"elinvar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14835024\"]}");
	add("{\"term\":\"eliomys\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02355949\"]}");
	add("{\"term\":\"eliot\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10976875\", \"10977064\"]}");
	add("{\"term\":\"elisa\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00793536\"]}");
	add("{\"term\":\"elisabethville\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08753178\"]}");
	add("{\"term\":\"elisha graves otis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11238280\"]}");
	add("{\"term\":\"elision\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05715216\", \"13494739\"]}");
	add("{\"term\":\"elite\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08403286\"]}");
	add("{\"term\":\"elite group\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08403286\"]}");
	add("{\"term\":\"elitism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06227594\"]}");
	add("{\"term\":\"elitist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10070366\"]}");
	add("{\"term\":\"elixir\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07899359\", \"14607050\", \"14865226\"]}");
	add("{\"term\":\"elixir of life\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07899485\"]}");
	add("{\"term\":\"elixophyllin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04426450\"]}");
	add("{\"term\":\"elizabeth\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10977322\", \"10977740\"]}");
	add("{\"term\":\"elizabeth barrett browning\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10886470\"]}");
	add("{\"term\":\"elizabeth cady stanton\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11333502\"]}");
	add("{\"term\":\"elizabeth cleghorn stevenson gaskell\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11011736\"]}");
	add("{\"term\":\"elizabeth cochrane seaman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11310643\"]}");
	add("{\"term\":\"elizabeth gaskell\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11011736\"]}");
	add("{\"term\":\"elizabeth haldane\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11042665\"]}");
	add("{\"term\":\"elizabeth i\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10977322\"]}");
	add("{\"term\":\"elizabeth ii\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10977740\"]}");
	add("{\"term\":\"elizabeth merriwether gilmer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11020465\"]}");
	add("{\"term\":\"elizabeth palmer peabody\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11247608\"]}");
	add("{\"term\":\"elizabeth peabody\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11247608\"]}");
	add("{\"term\":\"elizabeth river\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09295501\"]}");
	add("{\"term\":\"elizabeth sanderson haldane\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11042665\"]}");
	add("{\"term\":\"elizabeth seaman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11310643\"]}");
	add("{\"term\":\"elizabeth seton\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11313962\"]}");
	add("{\"term\":\"elizabeth taylor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11353385\"]}");
	add("{\"term\":\"elizabethan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10070520\"]}");
	add("{\"term\":\"elizabethan age\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15147565\"]}");
	add("{\"term\":\"elizabethan sonnet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06394750\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }