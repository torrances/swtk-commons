package org.swtk.commons.dict.wordnet.indexbyname.instance.r.e.f;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceREF {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"ref\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10534022\"]}");
	add("{\"term\":\"refabrication\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00270700\"]}");
	add("{\"term\":\"refection\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07589991\"]}");
	add("{\"term\":\"refectory\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04074930\"]}");
	add("{\"term\":\"refectory table\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04075033\"]}");
	add("{\"term\":\"referee\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10534236\", \"10546502\", \"10534022\"]}");
	add("{\"term\":\"refereeing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01194245\"]}");
	add("{\"term\":\"reference\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"05931946\", \"06367922\", \"07273332\", \"01266543\", \"05931581\", \"06707541\", \"06429241\", \"07273000\", \"06776392\", \"06778981\"]}");
	add("{\"term\":\"reference book\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06429241\"]}");
	add("{\"term\":\"reference frame\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05735969\"]}");
	add("{\"term\":\"reference grid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03464091\"]}");
	add("{\"term\":\"reference manual\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06434007\"]}");
	add("{\"term\":\"reference point\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07273000\"]}");
	add("{\"term\":\"reference system\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05735969\"]}");
	add("{\"term\":\"reference work\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06429241\"]}");
	add("{\"term\":\"referendum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00182489\"]}");
	add("{\"term\":\"referent\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06615483\", \"06615595\", \"06615847\"]}");
	add("{\"term\":\"referral\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00122724\", \"06684785\", \"10533848\"]}");
	add("{\"term\":\"referred pain\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14354778\"]}");
	add("{\"term\":\"refill\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04075167\", \"04075373\"]}");
	add("{\"term\":\"refilling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13569128\"]}");
	add("{\"term\":\"refined sugar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07875260\"]}");
	add("{\"term\":\"refinement\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"04819244\", \"06618544\", \"13569308\", \"07372279\", \"14483408\"]}");
	add("{\"term\":\"refiner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10534377\"]}");
	add("{\"term\":\"refinery\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04075553\"]}");
	add("{\"term\":\"refining\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13569308\"]}");
	add("{\"term\":\"refining industry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08085886\"]}");
	add("{\"term\":\"refinisher\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10534555\"]}");
	add("{\"term\":\"refit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01159762\"]}");
	add("{\"term\":\"reflation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13569553\"]}");
	add("{\"term\":\"reflectance\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13610022\"]}");
	add("{\"term\":\"reflecting telescope\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04075713\"]}");
	add("{\"term\":\"reflection\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"05017811\", \"06779826\", \"13807616\", \"04076088\", \"04754355\", \"06893299\", \"11523478\", \"05793513\"]}");
	add("{\"term\":\"reflection factor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13610022\"]}");
	add("{\"term\":\"reflective power\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13842644\"]}");
	add("{\"term\":\"reflectiveness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04668903\"]}");
	add("{\"term\":\"reflectivity\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04668903\", \"05017811\", \"13610022\"]}");
	add("{\"term\":\"reflectometer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04076278\"]}");
	add("{\"term\":\"reflector\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04075713\", \"04076388\"]}");
	add("{\"term\":\"reflex\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00865191\"]}");
	add("{\"term\":\"reflex action\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00865191\"]}");
	add("{\"term\":\"reflex angle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13915255\"]}");
	add("{\"term\":\"reflex arc\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05471025\"]}");
	add("{\"term\":\"reflex camera\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04076546\"]}");
	add("{\"term\":\"reflex epilepsy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14113727\"]}");
	add("{\"term\":\"reflex response\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00865191\"]}");
	add("{\"term\":\"reflexion\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"04076088\", \"04754355\", \"05017811\", \"05793513\", \"06779826\", \"06893299\", \"11523478\"]}");
	add("{\"term\":\"reflexive\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06339200\"]}");
	add("{\"term\":\"reflexive pronoun\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06339200\"]}");
	add("{\"term\":\"reflexive verb\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06339379\"]}");
	add("{\"term\":\"reflexiveness\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13821026\", \"13821457\"]}");
	add("{\"term\":\"reflexivity\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13821026\", \"13821457\"]}");
	add("{\"term\":\"reflexology\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00661189\", \"06150648\"]}");
	add("{\"term\":\"reflux\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07416747\", \"14359409\"]}");
	add("{\"term\":\"reflux condenser\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04076694\"]}");
	add("{\"term\":\"refocusing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00376746\"]}");
	add("{\"term\":\"reforestation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00401257\"]}");
	add("{\"term\":\"reform\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00262248\", \"00802601\", \"00261465\"]}");
	add("{\"term\":\"reform jew\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10535456\"]}");
	add("{\"term\":\"reform judaism\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06244882\", \"08112392\"]}");
	add("{\"term\":\"reform movement\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08490634\"]}");
	add("{\"term\":\"reform school\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04076889\"]}");
	add("{\"term\":\"reformation\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00096791\", \"08492940\", \"14447491\"]}");
	add("{\"term\":\"reformatory\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04076889\"]}");
	add("{\"term\":\"reformer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04077115\", \"10534787\"]}");
	add("{\"term\":\"reformism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05975964\"]}");
	add("{\"term\":\"reformist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10534787\"]}");
	add("{\"term\":\"refracting telescope\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04077319\"]}");
	add("{\"term\":\"refraction\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07425483\", \"11523705\"]}");
	add("{\"term\":\"refractive index\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13847141\"]}");
	add("{\"term\":\"refractiveness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05018752\"]}");
	add("{\"term\":\"refractivity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05018752\"]}");
	add("{\"term\":\"refractometer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04077527\"]}");
	add("{\"term\":\"refractoriness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04914752\"]}");
	add("{\"term\":\"refractory\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03409810\"]}");
	add("{\"term\":\"refractory anaemia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14191658\"]}");
	add("{\"term\":\"refractory anemia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14191658\"]}");
	add("{\"term\":\"refractory period\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15252187\"]}");
	add("{\"term\":\"refractory pot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02872315\"]}");
	add("{\"term\":\"refrain\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07064217\"]}");
	add("{\"term\":\"refresher\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00893530\", \"07930368\", \"13343365\"]}");
	add("{\"term\":\"refresher course\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00893530\"]}");
	add("{\"term\":\"refreshment\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00402591\", \"07590069\"]}");
	add("{\"term\":\"refried beans\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07897600\"]}");
	add("{\"term\":\"refrigerant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15028364\"]}");
	add("{\"term\":\"refrigeration\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00708597\", \"13569734\"]}");
	add("{\"term\":\"refrigeration system\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04077657\"]}");
	add("{\"term\":\"refrigerator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04077839\"]}");
	add("{\"term\":\"refrigerator car\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04078076\"]}");
	add("{\"term\":\"refrigerator cookie\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07653117\"]}");
	add("{\"term\":\"refueling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01061643\"]}");
	add("{\"term\":\"refuge\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"01211087\", \"04078214\", \"05162506\", \"08661508\"]}");
	add("{\"term\":\"refugee\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10535609\"]}");
	add("{\"term\":\"refugee camp\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02949268\"]}");
	add("{\"term\":\"refulgence\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04961131\"]}");
	add("{\"term\":\"refulgency\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04961131\"]}");
	add("{\"term\":\"refund\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01124011\", \"13303184\"]}");
	add("{\"term\":\"refurbishment\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14447921\"]}");
	add("{\"term\":\"refusal\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06646602\", \"07220233\"]}");
	add("{\"term\":\"refuse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14881302\"]}");
	add("{\"term\":\"refuse collector\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10139987\"]}");
	add("{\"term\":\"refuse heap\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08591389\"]}");
	add("{\"term\":\"refutal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00156118\"]}");
	add("{\"term\":\"refutation\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00156118\", \"05834793\", \"07215473\"]}");
	add("{\"term\":\"refuter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10530139\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }