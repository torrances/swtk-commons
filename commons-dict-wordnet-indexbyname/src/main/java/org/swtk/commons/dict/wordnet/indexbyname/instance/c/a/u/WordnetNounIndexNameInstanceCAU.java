package org.swtk.commons.dict.wordnet.indexbyname.instance.c.a.u;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceCAU {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"caucasia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08536807\"]}");
	add("{\"term\":\"caucasian\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06990840\", \"09660255\"]}");
	add("{\"term\":\"caucasus\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08536807\", \"09261580\"]}");
	add("{\"term\":\"caucus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08325243\"]}");
	add("{\"term\":\"cauda\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05235594\"]}");
	add("{\"term\":\"caudata\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01631091\"]}");
	add("{\"term\":\"caudate\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01631411\", \"05505392\"]}");
	add("{\"term\":\"caudex\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13149837\", \"13151064\"]}");
	add("{\"term\":\"caul\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05318121\", \"05437235\"]}");
	add("{\"term\":\"cauldron\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02942602\"]}");
	add("{\"term\":\"cauliflower\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07730848\", \"11897103\"]}");
	add("{\"term\":\"caulk\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15039263\"]}");
	add("{\"term\":\"caulking\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15039263\"]}");
	add("{\"term\":\"caulophyllum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11718902\"]}");
	add("{\"term\":\"causa\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01185144\"]}");
	add("{\"term\":\"causalgia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14348984\"]}");
	add("{\"term\":\"causality\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13802818\"]}");
	add("{\"term\":\"causation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00043049\"]}");
	add("{\"term\":\"cause\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"01185144\", \"00007347\", \"00799906\", \"06753097\", \"07341157\"]}");
	add("{\"term\":\"causerie\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07149788\"]}");
	add("{\"term\":\"causeway\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02990375\"]}");
	add("{\"term\":\"causing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00043049\"]}");
	add("{\"term\":\"caustic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15039096\"]}");
	add("{\"term\":\"cauterant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02990502\"]}");
	add("{\"term\":\"cauterisation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00669355\"]}");
	add("{\"term\":\"cauterization\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00669355\"]}");
	add("{\"term\":\"cautery\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00669355\", \"02990502\"]}");
	add("{\"term\":\"caution\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04898379\", \"05623652\", \"07239827\", \"04671415\"]}");
	add("{\"term\":\"cautious\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07961176\"]}");
	add("{\"term\":\"cautiousness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04671415\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }