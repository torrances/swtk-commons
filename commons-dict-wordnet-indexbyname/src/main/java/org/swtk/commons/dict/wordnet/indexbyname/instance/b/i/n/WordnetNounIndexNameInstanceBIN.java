package org.swtk.commons.dict.wordnet.indexbyname.instance.b.i.n;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceBIN {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"bin\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06437204\", \"13787446\", \"02843139\"]}");
	add("{\"term\":\"bin laden\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10871048\"]}");
	add("{\"term\":\"bin liner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02844292\"]}");
	add("{\"term\":\"binary\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06583139\", \"09243977\"]}");
	add("{\"term\":\"binary arithmetic operation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13462108\"]}");
	add("{\"term\":\"binary code\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06368711\"]}");
	add("{\"term\":\"binary compound\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14643012\"]}");
	add("{\"term\":\"binary digit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13763652\"]}");
	add("{\"term\":\"binary file\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06521666\"]}");
	add("{\"term\":\"binary notation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06822763\"]}");
	add("{\"term\":\"binary number system\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06822878\"]}");
	add("{\"term\":\"binary numeration system\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06822878\"]}");
	add("{\"term\":\"binary operation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13462108\"]}");
	add("{\"term\":\"binary program\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06583139\"]}");
	add("{\"term\":\"binary star\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09243977\"]}");
	add("{\"term\":\"binary system\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06822878\"]}");
	add("{\"term\":\"bind\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05697606\"]}");
	add("{\"term\":\"binder\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"02843363\", \"02843474\", \"14728626\", \"02843590\"]}");
	add("{\"term\":\"binder board\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14800550\"]}");
	add("{\"term\":\"bindery\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02843744\"]}");
	add("{\"term\":\"binding\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"02843848\", \"04235277\", \"00698135\", \"02844156\", \"04696547\"]}");
	add("{\"term\":\"binding energy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11449171\"]}");
	add("{\"term\":\"bindweed\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12844619\"]}");
	add("{\"term\":\"bine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12418679\"]}");
	add("{\"term\":\"binet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10870878\"]}");
	add("{\"term\":\"binful\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13787446\"]}");
	add("{\"term\":\"bing cherry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07773487\"]}");
	add("{\"term\":\"bing crosby\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10936483\"]}");
	add("{\"term\":\"binge\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00511734\", \"01075748\"]}");
	add("{\"term\":\"binger\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09993707\"]}");
	add("{\"term\":\"binghamton\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09147255\"]}");
	add("{\"term\":\"bingle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00133421\"]}");
	add("{\"term\":\"bingo\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00505671\"]}");
	add("{\"term\":\"binnacle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02844416\"]}");
	add("{\"term\":\"binocular microscope\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02844744\"]}");
	add("{\"term\":\"binocular vision\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05663887\"]}");
	add("{\"term\":\"binoculars\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02844544\"]}");
	add("{\"term\":\"binomial\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06046036\"]}");
	add("{\"term\":\"binomial distribution\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06046209\"]}");
	add("{\"term\":\"binomial theorem\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06046451\"]}");
	add("{\"term\":\"binturong\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02138755\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }