package org.swtk.commons.dict.wordnet.indexbyname.instance.b.r.u;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceBRU {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"bruce\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10887060\", \"10887295\"]}");
	add("{\"term\":\"brucella\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01353811\"]}");
	add("{\"term\":\"brucellosis\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"14285010\", \"14151511\"]}");
	add("{\"term\":\"bruch\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10887520\"]}");
	add("{\"term\":\"bruchidae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02184515\"]}");
	add("{\"term\":\"bruchus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02184872\"]}");
	add("{\"term\":\"brucine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14739350\"]}");
	add("{\"term\":\"bruckenthalia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12253200\"]}");
	add("{\"term\":\"bruckner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10887612\"]}");
	add("{\"term\":\"bruegel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10887764\"]}");
	add("{\"term\":\"brueghel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10887764\"]}");
	add("{\"term\":\"bruges\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08870026\"]}");
	add("{\"term\":\"brugmansia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12920093\"]}");
	add("{\"term\":\"bruin\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02134788\", \"02134972\"]}");
	add("{\"term\":\"bruise\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14312373\"]}");
	add("{\"term\":\"bruiser\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09898168\"]}");
	add("{\"term\":\"brule\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09670694\"]}");
	add("{\"term\":\"brumaire\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15201208\"]}");
	add("{\"term\":\"brummagem\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08897840\"]}");
	add("{\"term\":\"brummell\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10887984\"]}");
	add("{\"term\":\"brummie\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09897216\"]}");
	add("{\"term\":\"brummy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09897216\"]}");
	add("{\"term\":\"brunanburh\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01275574\"]}");
	add("{\"term\":\"brunch\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07590488\"]}");
	add("{\"term\":\"brunei\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08916319\"]}");
	add("{\"term\":\"bruneian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09714910\"]}");
	add("{\"term\":\"brunelleschi\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10888149\"]}");
	add("{\"term\":\"brunet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09897322\"]}");
	add("{\"term\":\"brunette\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09897322\"]}");
	add("{\"term\":\"brunfelsia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12919719\"]}");
	add("{\"term\":\"brunhild\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09613669\"]}");
	add("{\"term\":\"brunn\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08776167\"]}");
	add("{\"term\":\"brunnhilde\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09613669\"]}");
	add("{\"term\":\"bruno\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10888325\", \"10888567\", \"11147555\"]}");
	add("{\"term\":\"brunswick\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08790384\", \"09099777\", \"09115650\"]}");
	add("{\"term\":\"brunt\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05042867\"]}");
	add("{\"term\":\"brusa\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09064688\"]}");
	add("{\"term\":\"brush\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00040283\", \"00257487\", \"00657629\", \"00961487\", \"02160606\", \"02911930\", \"07428314\", \"02911542\", \"08454507\"]}");
	add("{\"term\":\"brushing\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00257487\", \"00657629\"]}");
	add("{\"term\":\"brushup\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00899509\"]}");
	add("{\"term\":\"brushwood\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08454507\", \"14809356\"]}");
	add("{\"term\":\"brushwork\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05651336\"]}");
	add("{\"term\":\"brusqueness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04922639\"]}");
	add("{\"term\":\"brussels\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08869442\"]}");
	add("{\"term\":\"brutalisation\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00272723\", \"00734615\", \"14598220\"]}");
	add("{\"term\":\"brutality\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00425937\", \"04837920\"]}");
	add("{\"term\":\"brutalization\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00272723\", \"00734615\", \"14598220\"]}");
	add("{\"term\":\"brute\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00015568\", \"09864997\"]}");
	add("{\"term\":\"brutus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10888794\"]}");
	add("{\"term\":\"bruxelles\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08869442\"]}");
	add("{\"term\":\"bruxism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00280378\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }