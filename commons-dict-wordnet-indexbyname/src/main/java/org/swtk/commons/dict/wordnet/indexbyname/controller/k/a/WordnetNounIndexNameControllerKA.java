package org.swtk.commons.dict.wordnet.indexbyname.controller.k.a;  import java.util.Set; import java.util.TreeSet;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  	import org.swtk.commons.dict.wordnet.indexbyname.instance.k.a.a.WordnetNounIndexNameInstanceKAA;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.k.a.b.WordnetNounIndexNameInstanceKAB;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.k.a.c.WordnetNounIndexNameInstanceKAC;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.k.a.d.WordnetNounIndexNameInstanceKAD;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.k.a.f.WordnetNounIndexNameInstanceKAF;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.k.a.h.WordnetNounIndexNameInstanceKAH;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.k.a.i.WordnetNounIndexNameInstanceKAI;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.k.a.k.WordnetNounIndexNameInstanceKAK;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.k.a.l.WordnetNounIndexNameInstanceKAL;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.k.a.m.WordnetNounIndexNameInstanceKAM;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.k.a.n.WordnetNounIndexNameInstanceKAN;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.k.a.o.WordnetNounIndexNameInstanceKAO;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.k.a.p.WordnetNounIndexNameInstanceKAP;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.k.a.r.WordnetNounIndexNameInstanceKAR;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.k.a.s.WordnetNounIndexNameInstanceKAS;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.k.a.t.WordnetNounIndexNameInstanceKAT;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.k.a.u.WordnetNounIndexNameInstanceKAU;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.k.a.v.WordnetNounIndexNameInstanceKAV;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.k.a.w.WordnetNounIndexNameInstanceKAW;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.k.a.y.WordnetNounIndexNameInstanceKAY;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.k.a.z.WordnetNounIndexNameInstanceKAZ;
  import com.trimc.blogger.commons.exception.BusinessException;  public final class WordnetNounIndexNameControllerKA {  	public static Collection<IndexNoun> get(final String TERM) throws BusinessException { 		if (TERM.length() < 3) throw new BusinessException("TERM not found (term = %s)", TERM); 		 		String key = TERM.substring(0, 3).toLowerCase(); 			if ("kaa".equals(key)) return WordnetNounIndexNameInstanceKAA.get(TERM);
	if ("kab".equals(key)) return WordnetNounIndexNameInstanceKAB.get(TERM);
	if ("kac".equals(key)) return WordnetNounIndexNameInstanceKAC.get(TERM);
	if ("kad".equals(key)) return WordnetNounIndexNameInstanceKAD.get(TERM);
	if ("kaf".equals(key)) return WordnetNounIndexNameInstanceKAF.get(TERM);
	if ("kah".equals(key)) return WordnetNounIndexNameInstanceKAH.get(TERM);
	if ("kai".equals(key)) return WordnetNounIndexNameInstanceKAI.get(TERM);
	if ("kak".equals(key)) return WordnetNounIndexNameInstanceKAK.get(TERM);
	if ("kal".equals(key)) return WordnetNounIndexNameInstanceKAL.get(TERM);
	if ("kam".equals(key)) return WordnetNounIndexNameInstanceKAM.get(TERM);
	if ("kan".equals(key)) return WordnetNounIndexNameInstanceKAN.get(TERM);
	if ("kao".equals(key)) return WordnetNounIndexNameInstanceKAO.get(TERM);
	if ("kap".equals(key)) return WordnetNounIndexNameInstanceKAP.get(TERM);
	if ("kar".equals(key)) return WordnetNounIndexNameInstanceKAR.get(TERM);
	if ("kas".equals(key)) return WordnetNounIndexNameInstanceKAS.get(TERM);
	if ("kat".equals(key)) return WordnetNounIndexNameInstanceKAT.get(TERM);
	if ("kau".equals(key)) return WordnetNounIndexNameInstanceKAU.get(TERM);
	if ("kav".equals(key)) return WordnetNounIndexNameInstanceKAV.get(TERM);
	if ("kaw".equals(key)) return WordnetNounIndexNameInstanceKAW.get(TERM);
	if ("kay".equals(key)) return WordnetNounIndexNameInstanceKAY.get(TERM);
	if ("kaz".equals(key)) return WordnetNounIndexNameInstanceKAZ.get(TERM);
  		throw new BusinessException("TERM not found (term = %s)", TERM); 	} 	 	public static Collection<String> terms() throws BusinessException { 		Set<String> set = new TreeSet<String>();  			set.addAll(WordnetNounIndexNameInstanceKAA.terms());
	set.addAll(WordnetNounIndexNameInstanceKAB.terms());
	set.addAll(WordnetNounIndexNameInstanceKAC.terms());
	set.addAll(WordnetNounIndexNameInstanceKAD.terms());
	set.addAll(WordnetNounIndexNameInstanceKAF.terms());
	set.addAll(WordnetNounIndexNameInstanceKAH.terms());
	set.addAll(WordnetNounIndexNameInstanceKAI.terms());
	set.addAll(WordnetNounIndexNameInstanceKAK.terms());
	set.addAll(WordnetNounIndexNameInstanceKAL.terms());
	set.addAll(WordnetNounIndexNameInstanceKAM.terms());
	set.addAll(WordnetNounIndexNameInstanceKAN.terms());
	set.addAll(WordnetNounIndexNameInstanceKAO.terms());
	set.addAll(WordnetNounIndexNameInstanceKAP.terms());
	set.addAll(WordnetNounIndexNameInstanceKAR.terms());
	set.addAll(WordnetNounIndexNameInstanceKAS.terms());
	set.addAll(WordnetNounIndexNameInstanceKAT.terms());
	set.addAll(WordnetNounIndexNameInstanceKAU.terms());
	set.addAll(WordnetNounIndexNameInstanceKAV.terms());
	set.addAll(WordnetNounIndexNameInstanceKAW.terms());
	set.addAll(WordnetNounIndexNameInstanceKAY.terms());
	set.addAll(WordnetNounIndexNameInstanceKAZ.terms());
  		return set; 	} }