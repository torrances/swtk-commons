package org.swtk.commons.dict.wordnet.indexbyname.controller.o.p;  import java.util.Collection; import java.util.Set; import java.util.TreeSet;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  	import org.swtk.commons.dict.wordnet.indexbyname.instance.o.p.a.WordnetNounIndexNameInstanceOPA;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.o.p.c.WordnetNounIndexNameInstanceOPC;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.o.p.e.WordnetNounIndexNameInstanceOPE;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.o.p.h.WordnetNounIndexNameInstanceOPH;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.o.p.i.WordnetNounIndexNameInstanceOPI;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.o.p.o.WordnetNounIndexNameInstanceOPO;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.o.p.p.WordnetNounIndexNameInstanceOPP;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.o.p.s.WordnetNounIndexNameInstanceOPS;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.o.p.t.WordnetNounIndexNameInstanceOPT;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.o.p.u.WordnetNounIndexNameInstanceOPU;
  import com.trimc.blogger.commons.exception.BusinessException;  public final class WordnetNounIndexNameControllerOP {  	public static Collection<IndexNoun> get(final String TERM) throws BusinessException {  		String key = TERM.substring(0, 4).toLowerCase(); 			if ("opa".equals(key)) return WordnetNounIndexNameInstanceOPA.get(TERM);
	if ("opc".equals(key)) return WordnetNounIndexNameInstanceOPC.get(TERM);
	if ("ope".equals(key)) return WordnetNounIndexNameInstanceOPE.get(TERM);
	if ("oph".equals(key)) return WordnetNounIndexNameInstanceOPH.get(TERM);
	if ("opi".equals(key)) return WordnetNounIndexNameInstanceOPI.get(TERM);
	if ("opo".equals(key)) return WordnetNounIndexNameInstanceOPO.get(TERM);
	if ("opp".equals(key)) return WordnetNounIndexNameInstanceOPP.get(TERM);
	if ("ops".equals(key)) return WordnetNounIndexNameInstanceOPS.get(TERM);
	if ("opt".equals(key)) return WordnetNounIndexNameInstanceOPT.get(TERM);
	if ("opu".equals(key)) return WordnetNounIndexNameInstanceOPU.get(TERM);
  		throw new BusinessException("TERM not found (id = %s)", TERM); 	} 	 	public static Collection<String> terms() throws BusinessException { 		Set<String> set = new TreeSet<String>();  			set.addAll(WordnetNounIndexNameInstanceOPA.terms());
	set.addAll(WordnetNounIndexNameInstanceOPC.terms());
	set.addAll(WordnetNounIndexNameInstanceOPE.terms());
	set.addAll(WordnetNounIndexNameInstanceOPH.terms());
	set.addAll(WordnetNounIndexNameInstanceOPI.terms());
	set.addAll(WordnetNounIndexNameInstanceOPO.terms());
	set.addAll(WordnetNounIndexNameInstanceOPP.terms());
	set.addAll(WordnetNounIndexNameInstanceOPS.terms());
	set.addAll(WordnetNounIndexNameInstanceOPT.terms());
	set.addAll(WordnetNounIndexNameInstanceOPU.terms());
  		return set; 	} }