package org.swtk.commons.dict.wordnet.indexbyname.instance.a.m.p;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceAMP {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"amp\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"14731871\", \"13658855\"]}");
	add("{\"term\":\"amperage\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11444818\"]}");
	add("{\"term\":\"ampere\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13658855\", \"13659320\"]}");
	add("{\"term\":\"ampersand\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06854923\"]}");
	add("{\"term\":\"amphetamine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02707012\"]}");
	add("{\"term\":\"amphetamine sulfate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02707321\"]}");
	add("{\"term\":\"amphetamine sulphate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02707321\"]}");
	add("{\"term\":\"amphibia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01628388\"]}");
	add("{\"term\":\"amphibian\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01630065\", \"02707504\", \"02707651\"]}");
	add("{\"term\":\"amphibian family\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01628775\"]}");
	add("{\"term\":\"amphibian genus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01629241\"]}");
	add("{\"term\":\"amphibious aircraft\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02707504\"]}");
	add("{\"term\":\"amphibious assault\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00983455\"]}");
	add("{\"term\":\"amphibious demonstration\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00974423\"]}");
	add("{\"term\":\"amphibious landing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00058568\"]}");
	add("{\"term\":\"amphibious operation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00983266\"]}");
	add("{\"term\":\"amphibious vehicle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02707651\"]}");
	add("{\"term\":\"amphibole\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14689946\"]}");
	add("{\"term\":\"amphibole group\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14690191\"]}");
	add("{\"term\":\"amphibolips\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02219702\"]}");
	add("{\"term\":\"amphibolite\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14690548\"]}");
	add("{\"term\":\"amphibology\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06617096\"]}");
	add("{\"term\":\"amphiboly\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06617096\"]}");
	add("{\"term\":\"amphibrach\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07110182\"]}");
	add("{\"term\":\"amphicarpa\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12525537\"]}");
	add("{\"term\":\"amphicarpa bracteata\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12525758\"]}");
	add("{\"term\":\"amphicarpaea\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12525537\"]}");
	add("{\"term\":\"amphicarpaea bracteata\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12525758\"]}");
	add("{\"term\":\"amphictyony\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08377175\"]}");
	add("{\"term\":\"amphidiploid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01322423\"]}");
	add("{\"term\":\"amphidiploidy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14594162\"]}");
	add("{\"term\":\"amphigory\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06620388\"]}");
	add("{\"term\":\"amphimixis\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07388081\", \"13576443\"]}");
	add("{\"term\":\"amphineura\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01956843\"]}");
	add("{\"term\":\"amphioxidae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01470145\"]}");
	add("{\"term\":\"amphioxus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01470445\"]}");
	add("{\"term\":\"amphipod\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01995427\"]}");
	add("{\"term\":\"amphipoda\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01995170\"]}");
	add("{\"term\":\"amphiprion\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02609556\"]}");
	add("{\"term\":\"amphiprion percula\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02609831\"]}");
	add("{\"term\":\"amphisbaena\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01685677\", \"09515864\"]}");
	add("{\"term\":\"amphisbaenia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01685677\"]}");
	add("{\"term\":\"amphisbaenidae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01685561\"]}");
	add("{\"term\":\"amphitheater\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02707808\", \"02708060\"]}");
	add("{\"term\":\"amphitheatre\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02707808\", \"02708060\"]}");
	add("{\"term\":\"amphitheatrum flavium\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03076832\"]}");
	add("{\"term\":\"amphitropous ovule\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11699979\"]}");
	add("{\"term\":\"amphiuma\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01641363\"]}");
	add("{\"term\":\"amphiumidae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01641123\"]}");
	add("{\"term\":\"amphora\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02708288\"]}");
	add("{\"term\":\"amphotericin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02708417\"]}");
	add("{\"term\":\"ampicillin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02708510\"]}");
	add("{\"term\":\"ampleness\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05111556\", \"05120210\"]}");
	add("{\"term\":\"amplexicaul leaf\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13174327\"]}");
	add("{\"term\":\"amplification\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00366155\", \"05116624\", \"00372295\"]}");
	add("{\"term\":\"amplifier\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02708803\"]}");
	add("{\"term\":\"amplitude\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"05105573\", \"05122718\", \"07459482\"]}");
	add("{\"term\":\"amplitude distortion\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11532577\"]}");
	add("{\"term\":\"amplitude level\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05105687\"]}");
	add("{\"term\":\"amplitude modulation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06292247\"]}");
	add("{\"term\":\"ampoule\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03929501\"]}");
	add("{\"term\":\"ampul\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03929501\"]}");
	add("{\"term\":\"ampule\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03929501\"]}");
	add("{\"term\":\"ampulla\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02709080\", \"05261661\"]}");
	add("{\"term\":\"amputation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00667593\", \"14574061\"]}");
	add("{\"term\":\"amputator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09808890\"]}");
	add("{\"term\":\"amputee\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09809007\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }