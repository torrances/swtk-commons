package org.swtk.commons.dict.wordnet.indexbyname.instance.s.a.u;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceSAU {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"sauce\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07845388\"]}");
	add("{\"term\":\"sauceboat\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03460968\"]}");
	add("{\"term\":\"saucepan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04146060\"]}");
	add("{\"term\":\"saucepot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04146223\"]}");
	add("{\"term\":\"saucer\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03211323\", \"03212026\", \"04146374\", \"13897824\"]}");
	add("{\"term\":\"sauciness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04657008\"]}");
	add("{\"term\":\"saudi\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09748729\"]}");
	add("{\"term\":\"sauerbraten\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07892002\"]}");
	add("{\"term\":\"sauerkraut\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07892165\"]}");
	add("{\"term\":\"sauk\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09687420\"]}");
	add("{\"term\":\"saul\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11245651\", \"11302603\"]}");
	add("{\"term\":\"sauna\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04146478\"]}");
	add("{\"term\":\"saunter\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00284945\", \"00290581\"]}");
	add("{\"term\":\"saunterer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10572663\"]}");
	add("{\"term\":\"saurel\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02583310\", \"02583461\"]}");
	add("{\"term\":\"sauria\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01676309\"]}");
	add("{\"term\":\"saurian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01676857\"]}");
	add("{\"term\":\"saurischia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01710536\"]}");
	add("{\"term\":\"saurischian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01710747\"]}");
	add("{\"term\":\"sauromalus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01680878\"]}");
	add("{\"term\":\"sauropod\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01711639\"]}");
	add("{\"term\":\"sauropoda\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01711419\"]}");
	add("{\"term\":\"sauropodomorpha\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01710973\"]}");
	add("{\"term\":\"sauropterygia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01727881\"]}");
	add("{\"term\":\"saurosuchus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01698667\"]}");
	add("{\"term\":\"saururaceae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13172345\"]}");
	add("{\"term\":\"saururus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13172597\"]}");
	add("{\"term\":\"saury\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02554299\"]}");
	add("{\"term\":\"sausage\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02854209\", \"07691372\"]}");
	add("{\"term\":\"saussure\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10951385\"]}");
	add("{\"term\":\"saussurea\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12030490\"]}");
	add("{\"term\":\"saute\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07670872\"]}");
	add("{\"term\":\"sauteing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00247807\"]}");
	add("{\"term\":\"sauterne\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07914418\"]}");
	add("{\"term\":\"sauternes\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07914418\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }