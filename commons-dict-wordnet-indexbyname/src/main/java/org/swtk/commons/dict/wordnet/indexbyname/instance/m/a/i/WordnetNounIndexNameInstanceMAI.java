package org.swtk.commons.dict.wordnet.indexbyname.instance.m.a.i;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceMAI {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"maia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01984525\"]}");
	add("{\"term\":\"maianthemum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12493910\"]}");
	add("{\"term\":\"maid\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10302179\", \"10302369\"]}");
	add("{\"term\":\"maiden\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"15283756\", \"10302179\"]}");
	add("{\"term\":\"maidenhair\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13227715\"]}");
	add("{\"term\":\"maidenhead\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05529585\"]}");
	add("{\"term\":\"maidenhood\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15172290\"]}");
	add("{\"term\":\"maidenliness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04675280\"]}");
	add("{\"term\":\"maidhood\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15172290\"]}");
	add("{\"term\":\"maidism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14224355\"]}");
	add("{\"term\":\"maidservant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10302369\"]}");
	add("{\"term\":\"maidu\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06937672\", \"09679571\"]}");
	add("{\"term\":\"maiduguri\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08997188\"]}");
	add("{\"term\":\"maiger\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02598882\"]}");
	add("{\"term\":\"maigre\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02598882\"]}");
	add("{\"term\":\"maikoa\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12920297\"]}");
	add("{\"term\":\"mail\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"03003851\", \"08480074\", \"03715183\", \"06275051\", \"06286287\"]}");
	add("{\"term\":\"mailbag\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03715362\", \"03715499\"]}");
	add("{\"term\":\"mailboat\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03715618\"]}");
	add("{\"term\":\"mailbox\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03995432\", \"03715732\"]}");
	add("{\"term\":\"maildrop\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03715960\"]}");
	add("{\"term\":\"mailer\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03716067\", \"07264004\", \"10302617\", \"11169752\"]}");
	add("{\"term\":\"mailing\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00123158\", \"08480658\"]}");
	add("{\"term\":\"maillol\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11169857\"]}");
	add("{\"term\":\"maillot\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03716176\", \"03716260\"]}");
	add("{\"term\":\"mailman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10302734\"]}");
	add("{\"term\":\"mailsorter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03716476\"]}");
	add("{\"term\":\"maimed\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07967372\"]}");
	add("{\"term\":\"maimer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10361686\"]}");
	add("{\"term\":\"maimonides\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11169985\"]}");
	add("{\"term\":\"main\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03716684\", \"09368829\"]}");
	add("{\"term\":\"maine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09115069\"]}");
	add("{\"term\":\"mainer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09762818\"]}");
	add("{\"term\":\"mainframe\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02998952\", \"03717250\"]}");
	add("{\"term\":\"mainland\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09369017\"]}");
	add("{\"term\":\"mainmast\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03717538\"]}");
	add("{\"term\":\"mainsail\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03717876\"]}");
	add("{\"term\":\"mainsheet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04195411\"]}");
	add("{\"term\":\"mainspring\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03717983\"]}");
	add("{\"term\":\"mainstay\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03718176\", \"05702197\", \"10452721\"]}");
	add("{\"term\":\"mainstream\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05964053\"]}");
	add("{\"term\":\"maintainer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10759876\"]}");
	add("{\"term\":\"maintenance\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00767144\", \"01218681\", \"13304643\", \"13387484\", \"00268366\"]}");
	add("{\"term\":\"maintenon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11170214\"]}");
	add("{\"term\":\"maiolica\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03718975\"]}");
	add("{\"term\":\"maisonette\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03718690\", \"03718793\"]}");
	add("{\"term\":\"maisonnette\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03718690\", \"03718793\"]}");
	add("{\"term\":\"maitland\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11170461\"]}");
	add("{\"term\":\"maitreya\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09555664\"]}");
	add("{\"term\":\"maize\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04973720\", \"12164193\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }