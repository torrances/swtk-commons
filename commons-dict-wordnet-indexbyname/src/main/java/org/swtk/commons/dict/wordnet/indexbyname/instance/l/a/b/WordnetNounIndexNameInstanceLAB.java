package org.swtk.commons.dict.wordnet.indexbyname.instance.l.a.b;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceLAB {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"lab\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03635277\"]}");
	add("{\"term\":\"laban\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11133591\"]}");
	add("{\"term\":\"labanotation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06829413\"]}");
	add("{\"term\":\"labdanum\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"12395624\", \"14952656\"]}");
	add("{\"term\":\"label\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"07286877\", \"14644244\", \"06864566\", \"07217239\"]}");
	add("{\"term\":\"labetalol\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03635835\"]}");
	add("{\"term\":\"labial\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07131715\"]}");
	add("{\"term\":\"labiatae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12858787\"]}");
	add("{\"term\":\"labiodental\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07131901\"]}");
	add("{\"term\":\"labium\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05530107\"]}");
	add("{\"term\":\"lablab\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12557942\"]}");
	add("{\"term\":\"lablink\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08149305\"]}");
	add("{\"term\":\"labor\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00797381\", \"08154495\", \"08278241\", \"08489901\", \"14071923\", \"00621992\", \"08197557\"]}");
	add("{\"term\":\"laboratory\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08680308\", \"03635277\"]}");
	add("{\"term\":\"laborer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10260997\"]}");
	add("{\"term\":\"laboriousness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04717220\"]}");
	add("{\"term\":\"labour\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00621992\", \"08278241\", \"14071923\", \"08197557\"]}");
	add("{\"term\":\"labourer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10260997\"]}");
	add("{\"term\":\"labourite\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10262025\"]}");
	add("{\"term\":\"labrador\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08837735\"]}");
	add("{\"term\":\"labridae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02610260\"]}");
	add("{\"term\":\"labrocyte\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05615357\"]}");
	add("{\"term\":\"labrouste\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11133722\"]}");
	add("{\"term\":\"laburnum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12558493\"]}");
	add("{\"term\":\"labyrinth\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05328855\", \"03738772\"]}");
	add("{\"term\":\"labyrinthitis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14372162\"]}");
	add("{\"term\":\"labyrinthodont\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01658592\"]}");
	add("{\"term\":\"labyrinthodonta\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01658218\"]}");
	add("{\"term\":\"labyrinthodontia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01658218\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }