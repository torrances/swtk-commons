package org.swtk.commons.dict.wordnet.indexbyname.instance.r.e.a;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceREA {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"reabsorption\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13571707\"]}");
	add("{\"term\":\"reach\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"05631411\", \"00342069\", \"05132642\", \"08646496\"]}");
	add("{\"term\":\"reaching\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00048966\", \"00342069\"]}");
	add("{\"term\":\"reactance\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11524731\"]}");
	add("{\"term\":\"reactant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14718926\"]}");
	add("{\"term\":\"reaction\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00203665\", \"06226571\", \"11437243\", \"11518861\", \"00860679\", \"05925922\", \"13468534\"]}");
	add("{\"term\":\"reactionary\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10528068\"]}");
	add("{\"term\":\"reactionism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06230144\"]}");
	add("{\"term\":\"reactivity\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"14558059\", \"05661420\"]}");
	add("{\"term\":\"reactor\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03839580\", \"04064958\"]}");
	add("{\"term\":\"read\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06602346\"]}");
	add("{\"term\":\"readability\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04826516\", \"04827184\"]}");
	add("{\"term\":\"reader\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"06426704\", \"10271919\", \"10272051\", \"10502353\", \"10546502\", \"10528455\", \"10689922\", \"10528303\"]}");
	add("{\"term\":\"readership\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08239492\"]}");
	add("{\"term\":\"readiness\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04716072\", \"05682428\", \"04652076\", \"14054590\"]}");
	add("{\"term\":\"reading\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"01006524\", \"07249541\", \"08900450\", \"05937299\", \"06610383\", \"05824916\", \"07188417\", \"05816802\"]}");
	add("{\"term\":\"readjustment\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01001729\", \"00194976\"]}");
	add("{\"term\":\"readmission\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01250965\"]}");
	add("{\"term\":\"readout\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04065706\", \"06832564\", \"07279857\"]}");
	add("{\"term\":\"ready\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14055005\"]}");
	add("{\"term\":\"readying\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01145325\"]}");
	add("{\"term\":\"reaffiliation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01084198\"]}");
	add("{\"term\":\"reaffirmation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06745330\"]}");
	add("{\"term\":\"reagan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11275450\"]}");
	add("{\"term\":\"reagent\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14803141\"]}");
	add("{\"term\":\"reagin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15055985\"]}");
	add("{\"term\":\"real\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13410750\", \"13690013\", \"13752012\"]}");
	add("{\"term\":\"realgar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14719071\"]}");
	add("{\"term\":\"realisation\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00062737\", \"00933662\", \"00941859\", \"01121941\", \"05815548\", \"07052802\"]}");
	add("{\"term\":\"realism\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"05983431\", \"08486468\", \"05984526\", \"13978747\", \"05159116\"]}");
	add("{\"term\":\"realist\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10528982\", \"10529198\", \"10528754\"]}");
	add("{\"term\":\"reality\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04769610\", \"13979383\", \"13978747\", \"05817904\"]}");
	add("{\"term\":\"realization\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00062737\", \"00941859\", \"01121941\", \"07052802\", \"00933662\", \"05815548\"]}");
	add("{\"term\":\"reallocation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01086104\", \"13310653\"]}");
	add("{\"term\":\"reallotment\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01086104\"]}");
	add("{\"term\":\"realm\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06006992\", \"08575692\", \"14538407\"]}");
	add("{\"term\":\"realness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13978747\"]}");
	add("{\"term\":\"realpolitik\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06158489\"]}");
	add("{\"term\":\"realtor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10529671\"]}");
	add("{\"term\":\"realty\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13267374\"]}");
	add("{\"term\":\"ream\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13604340\", \"13799310\"]}");
	add("{\"term\":\"reamer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04066511\", \"04066628\"]}");
	add("{\"term\":\"reaper\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03502017\", \"09511714\", \"10180956\"]}");
	add("{\"term\":\"reappearance\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00051707\", \"07336567\"]}");
	add("{\"term\":\"reapportionment\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01086104\"]}");
	add("{\"term\":\"reappraisal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05755527\"]}");
	add("{\"term\":\"rear\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"04066813\", \"05566889\", \"08643421\", \"08647083\", \"08499711\"]}");
	add("{\"term\":\"rearguard\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08233568\"]}");
	add("{\"term\":\"rearing\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01131853\", \"04929290\"]}");
	add("{\"term\":\"rearmament\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01159871\"]}");
	add("{\"term\":\"rearrangement\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00339647\"]}");
	add("{\"term\":\"rearward\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08647321\"]}");
	add("{\"term\":\"reason\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"05827293\", \"06753097\", \"14403234\", \"05659525\", \"06752739\", \"09201896\"]}");
	add("{\"term\":\"reasonableness\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"04791152\", \"05125362\", \"05154151\", \"05167957\", \"14403234\"]}");
	add("{\"term\":\"reasoner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10529932\"]}");
	add("{\"term\":\"reasoning\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05780353\"]}");
	add("{\"term\":\"reassembly\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00270700\"]}");
	add("{\"term\":\"reassertion\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06745330\"]}");
	add("{\"term\":\"reassessment\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05755527\"]}");
	add("{\"term\":\"reassignment\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00733374\"]}");
	add("{\"term\":\"reassurance\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01218209\"]}");
	add("{\"term\":\"reata\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03649692\"]}");
	add("{\"term\":\"reaumur\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11275609\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }