package org.swtk.commons.dict.wordnet.indexbyname.instance.a.t.t;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceATT {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"attacapa\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06920343\"]}");
	add("{\"term\":\"attacapan\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06920343\", \"09667518\"]}");
	add("{\"term\":\"attache\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02758145\", \"09840488\"]}");
	add("{\"term\":\"attachment\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00148415\", \"00380230\", \"01215372\", \"02758357\", \"06566972\", \"02758249\", \"07560531\"]}");
	add("{\"term\":\"attack\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"01223108\", \"13456721\", \"14104857\", \"00237820\", \"00775311\", \"00942956\", \"06724098\", \"00458747\", \"00974725\"]}");
	add("{\"term\":\"attacker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09840655\"]}");
	add("{\"term\":\"attainability\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14506028\"]}");
	add("{\"term\":\"attainableness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14506028\"]}");
	add("{\"term\":\"attainder\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00233632\"]}");
	add("{\"term\":\"attainment\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"05645403\", \"00049397\", \"00063626\"]}");
	add("{\"term\":\"attalea\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12605731\"]}");
	add("{\"term\":\"attar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14917140\"]}");
	add("{\"term\":\"attempt\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00775311\", \"00787849\"]}");
	add("{\"term\":\"attempter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10748650\"]}");
	add("{\"term\":\"attendance\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08201981\", \"15310217\", \"01235962\"]}");
	add("{\"term\":\"attendant\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07299259\", \"09631032\", \"09841233\"]}");
	add("{\"term\":\"attendee\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09631032\"]}");
	add("{\"term\":\"attender\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"09631032\", \"09841233\", \"10185041\"]}");
	add("{\"term\":\"attending\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01235962\", \"05710222\"]}");
	add("{\"term\":\"attention\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"05089997\", \"05658424\", \"01231134\", \"05862201\", \"00656128\", \"05710222\"]}");
	add("{\"term\":\"attentiveness\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04670308\", \"04670561\", \"05710673\"]}");
	add("{\"term\":\"attenuation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05048866\", \"07442134\"]}");
	add("{\"term\":\"attenuator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02758680\"]}");
	add("{\"term\":\"attestant\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09842042\", \"10805946\"]}");
	add("{\"term\":\"attestation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06662660\", \"06749154\"]}");
	add("{\"term\":\"attestator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10805946\"]}");
	add("{\"term\":\"attester\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09842042\"]}");
	add("{\"term\":\"attestor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10805946\"]}");
	add("{\"term\":\"attic\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"02758828\", \"05547087\", \"06990270\", \"03691456\"]}");
	add("{\"term\":\"attica\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08804135\"]}");
	add("{\"term\":\"atticus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02307619\"]}");
	add("{\"term\":\"attila\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10847282\"]}");
	add("{\"term\":\"attilio\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05270947\"]}");
	add("{\"term\":\"attire\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02759103\"]}");
	add("{\"term\":\"attitude\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"13850556\", \"00757206\", \"05087073\", \"06202938\"]}");
	add("{\"term\":\"attlee\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10847477\"]}");
	add("{\"term\":\"attorney\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10269647\"]}");
	add("{\"term\":\"attorneyship\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00590254\"]}");
	add("{\"term\":\"attosecond\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15260337\"]}");
	add("{\"term\":\"attracter\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"05859350\", \"05874783\", \"10052401\"]}");
	add("{\"term\":\"attraction\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"10052401\", \"05859350\", \"04695595\", \"06627914\", \"11446644\"]}");
	add("{\"term\":\"attractiveness\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04693352\", \"04695595\"]}");
	add("{\"term\":\"attractor\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"05859350\", \"05874783\", \"10052401\"]}");
	add("{\"term\":\"attribute\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00024444\", \"05857567\"]}");
	add("{\"term\":\"attribution\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05742504\", \"05742854\"]}");
	add("{\"term\":\"attrition\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00362621\", \"07371570\", \"07550088\", \"11480462\", \"13444788\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }