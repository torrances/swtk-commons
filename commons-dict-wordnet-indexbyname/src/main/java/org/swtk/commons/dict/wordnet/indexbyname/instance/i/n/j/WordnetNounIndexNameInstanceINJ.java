package org.swtk.commons.dict.wordnet.indexbyname.instance.i.n.j;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceINJ {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"injectant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14873385\"]}");
	add("{\"term\":\"injection\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00698618\", \"14873385\", \"00323460\"]}");
	add("{\"term\":\"injector\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03576590\"]}");
	add("{\"term\":\"injudiciousness\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04898753\", \"05623875\"]}");
	add("{\"term\":\"injun\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09686910\"]}");
	add("{\"term\":\"injunction\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06554821\", \"07185118\"]}");
	add("{\"term\":\"injuriousness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05173599\"]}");
	add("{\"term\":\"injury\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00745603\", \"00745741\", \"07354849\", \"07328236\", \"14309164\"]}");
	add("{\"term\":\"injustice\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04861620\", \"00745914\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }