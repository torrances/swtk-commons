package org.swtk.commons.dict.wordnet.indexbyname.controller.z.e;  import java.util.Collection; import java.util.Set; import java.util.TreeSet;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  	import org.swtk.commons.dict.wordnet.indexbyname.instance.z.e.a.WordnetNounIndexNameInstanceZEA;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.z.e.b.WordnetNounIndexNameInstanceZEB;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.z.e.c.WordnetNounIndexNameInstanceZEC;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.z.e.e.WordnetNounIndexNameInstanceZEE;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.z.e.i.WordnetNounIndexNameInstanceZEI;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.z.e.n.WordnetNounIndexNameInstanceZEN;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.z.e.o.WordnetNounIndexNameInstanceZEO;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.z.e.p.WordnetNounIndexNameInstanceZEP;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.z.e.r.WordnetNounIndexNameInstanceZER;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.z.e.s.WordnetNounIndexNameInstanceZES;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.z.e.t.WordnetNounIndexNameInstanceZET;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.z.e.u.WordnetNounIndexNameInstanceZEU;
  import com.trimc.blogger.commons.exception.BusinessException;  public final class WordnetNounIndexNameControllerZE {  	public static Collection<IndexNoun> get(final String TERM) throws BusinessException { 		if (TERM.length() < 3) throw new BusinessException("TERM not found (term = %s)", TERM); 		 		String key = TERM.substring(0, 3).toLowerCase(); 			if ("zea".equals(key)) return WordnetNounIndexNameInstanceZEA.get(TERM);
	if ("zeb".equals(key)) return WordnetNounIndexNameInstanceZEB.get(TERM);
	if ("zec".equals(key)) return WordnetNounIndexNameInstanceZEC.get(TERM);
	if ("zee".equals(key)) return WordnetNounIndexNameInstanceZEE.get(TERM);
	if ("zei".equals(key)) return WordnetNounIndexNameInstanceZEI.get(TERM);
	if ("zen".equals(key)) return WordnetNounIndexNameInstanceZEN.get(TERM);
	if ("zeo".equals(key)) return WordnetNounIndexNameInstanceZEO.get(TERM);
	if ("zep".equals(key)) return WordnetNounIndexNameInstanceZEP.get(TERM);
	if ("zer".equals(key)) return WordnetNounIndexNameInstanceZER.get(TERM);
	if ("zes".equals(key)) return WordnetNounIndexNameInstanceZES.get(TERM);
	if ("zet".equals(key)) return WordnetNounIndexNameInstanceZET.get(TERM);
	if ("zeu".equals(key)) return WordnetNounIndexNameInstanceZEU.get(TERM);
  		throw new BusinessException("TERM not found (term = %s)", TERM); 	} 	 	public static Collection<String> terms() throws BusinessException { 		Set<String> set = new TreeSet<String>();  			set.addAll(WordnetNounIndexNameInstanceZEA.terms());
	set.addAll(WordnetNounIndexNameInstanceZEB.terms());
	set.addAll(WordnetNounIndexNameInstanceZEC.terms());
	set.addAll(WordnetNounIndexNameInstanceZEE.terms());
	set.addAll(WordnetNounIndexNameInstanceZEI.terms());
	set.addAll(WordnetNounIndexNameInstanceZEN.terms());
	set.addAll(WordnetNounIndexNameInstanceZEO.terms());
	set.addAll(WordnetNounIndexNameInstanceZEP.terms());
	set.addAll(WordnetNounIndexNameInstanceZER.terms());
	set.addAll(WordnetNounIndexNameInstanceZES.terms());
	set.addAll(WordnetNounIndexNameInstanceZET.terms());
	set.addAll(WordnetNounIndexNameInstanceZEU.terms());
  		return set; 	} }