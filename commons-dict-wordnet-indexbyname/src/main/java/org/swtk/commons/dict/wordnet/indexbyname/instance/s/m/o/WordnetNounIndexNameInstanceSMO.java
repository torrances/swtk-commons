package org.swtk.commons.dict.wordnet.indexbyname.instance.s.m.o;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceSMO {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"smock\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03263433\"]}");
	add("{\"term\":\"smocking\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04253399\"]}");
	add("{\"term\":\"smog\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14541979\"]}");
	add("{\"term\":\"smogginess\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14541979\"]}");
	add("{\"term\":\"smoke\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"00109001\", \"00836297\", \"03997192\", \"04110585\", \"04769215\", \"06815738\", \"13578096\", \"11528510\"]}");
	add("{\"term\":\"smoke alarm\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03348583\"]}");
	add("{\"term\":\"smoke bomb\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04253587\"]}");
	add("{\"term\":\"smoke bush\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"12236732\", \"12780892\"]}");
	add("{\"term\":\"smoke grenade\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04253587\"]}");
	add("{\"term\":\"smoke hole\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04253761\"]}");
	add("{\"term\":\"smoke screen\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01052796\", \"04254139\"]}");
	add("{\"term\":\"smoke tree\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"12545138\", \"12780892\"]}");
	add("{\"term\":\"smoked eel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07800173\"]}");
	add("{\"term\":\"smoked haddock\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07805721\"]}");
	add("{\"term\":\"smoked herring\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07814209\"]}");
	add("{\"term\":\"smoked mackerel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07815980\"]}");
	add("{\"term\":\"smoked salmon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07812625\"]}");
	add("{\"term\":\"smokehouse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04253859\"]}");
	add("{\"term\":\"smokeless powder\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15041070\"]}");
	add("{\"term\":\"smoker\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04253983\", \"08272926\", \"10634492\"]}");
	add("{\"term\":\"smokescreen\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01052796\", \"04254139\"]}");
	add("{\"term\":\"smokestack\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04254303\"]}");
	add("{\"term\":\"smoking\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13578096\", \"00836297\"]}");
	add("{\"term\":\"smoking car\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04253983\"]}");
	add("{\"term\":\"smoking carriage\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04253983\"]}");
	add("{\"term\":\"smoking compartment\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04253983\"]}");
	add("{\"term\":\"smoking gun\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06290897\"]}");
	add("{\"term\":\"smoking jacket\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03697462\"]}");
	add("{\"term\":\"smoking mixture\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04254464\"]}");
	add("{\"term\":\"smoking room\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04254568\"]}");
	add("{\"term\":\"smoky quartz\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14718732\"]}");
	add("{\"term\":\"smolder\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07318714\"]}");
	add("{\"term\":\"smolensk\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09032186\"]}");
	add("{\"term\":\"smollett\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11326468\"]}");
	add("{\"term\":\"smooch\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00139419\"]}");
	add("{\"term\":\"smooching\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00855630\"]}");
	add("{\"term\":\"smooth\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01266417\"]}");
	add("{\"term\":\"smooth alder\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12306417\"]}");
	add("{\"term\":\"smooth aster\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11957415\"]}");
	add("{\"term\":\"smooth bark kauri\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11668490\"]}");
	add("{\"term\":\"smooth crabgrass\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12137752\"]}");
	add("{\"term\":\"smooth darling pea\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11772443\"]}");
	add("{\"term\":\"smooth dogfish\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01494998\"]}");
	add("{\"term\":\"smooth earthball\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12990687\"]}");
	add("{\"term\":\"smooth green snake\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01732826\"]}");
	add("{\"term\":\"smooth hammerhead\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01497398\"]}");
	add("{\"term\":\"smooth lip fern\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13229863\"]}");
	add("{\"term\":\"smooth muscle\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05467867\", \"05468049\"]}");
	add("{\"term\":\"smooth muscle cell\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05468335\"]}");
	add("{\"term\":\"smooth plane\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04254758\"]}");
	add("{\"term\":\"smooth softshell\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01675252\"]}");
	add("{\"term\":\"smooth sumac\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12784289\"]}");
	add("{\"term\":\"smooth winterberry holly\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12779315\"]}");
	add("{\"term\":\"smooth woodsia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13223500\"]}");
	add("{\"term\":\"smoothbark\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12356454\"]}");
	add("{\"term\":\"smoothbore\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04254672\"]}");
	add("{\"term\":\"smoother\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03255291\"]}");
	add("{\"term\":\"smoothhound\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01495210\"]}");
	add("{\"term\":\"smoothhound shark\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01495210\"]}");
	add("{\"term\":\"smoothie\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07930511\", \"10634695\"]}");
	add("{\"term\":\"smoothing iron\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03589998\"]}");
	add("{\"term\":\"smoothing plane\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04254758\"]}");
	add("{\"term\":\"smoothness\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"04716287\", \"04776955\", \"04920499\", \"07083250\", \"04954363\"]}");
	add("{\"term\":\"smoothy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10634695\"]}");
	add("{\"term\":\"smorgasbord\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07608770\", \"08415730\"]}");
	add("{\"term\":\"smother\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11528721\", \"14524151\"]}");
	add("{\"term\":\"smotherer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10675662\"]}");
	add("{\"term\":\"smoulder\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07318714\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }