package org.swtk.commons.dict.wordnet.indexbyname.instance.w.e.a;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceWEA {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"weakener\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09499651\"]}");
	add("{\"term\":\"weakening\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00363181\", \"07441937\"]}");
	add("{\"term\":\"weakfish\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02601977\", \"07808446\"]}");
	add("{\"term\":\"weakling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10791304\"]}");
	add("{\"term\":\"weakness\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"07513853\", \"14498302\", \"05047429\", \"05212250\", \"14486530\"]}");
	add("{\"term\":\"weal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14322122\"]}");
	add("{\"term\":\"weald\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08662787\"]}");
	add("{\"term\":\"wealth\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"13271297\", \"13374295\", \"05123428\", \"14514855\"]}");
	add("{\"term\":\"wealthiness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14514855\"]}");
	add("{\"term\":\"weaning\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00199119\"]}");
	add("{\"term\":\"weapon\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07261592\", \"04572661\"]}");
	add("{\"term\":\"weaponry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04573543\"]}");
	add("{\"term\":\"wear\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00831918\", \"03055525\", \"14586275\"]}");
	add("{\"term\":\"wearable\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03055525\"]}");
	add("{\"term\":\"wearer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10791477\"]}");
	add("{\"term\":\"weariness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14039832\"]}");
	add("{\"term\":\"wearing\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00831918\", \"13496741\"]}");
	add("{\"term\":\"weasel\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02444573\", \"10791658\"]}");
	add("{\"term\":\"weather\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11545095\"]}");
	add("{\"term\":\"weatherboard\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13851933\", \"15127574\"]}");
	add("{\"term\":\"weatherboarding\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15127574\"]}");
	add("{\"term\":\"weathercock\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04574042\"]}");
	add("{\"term\":\"weatherglass\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04574384\"]}");
	add("{\"term\":\"weatherliness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04782140\"]}");
	add("{\"term\":\"weatherman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10791760\"]}");
	add("{\"term\":\"weatherstrip\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04575156\"]}");
	add("{\"term\":\"weatherstripping\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04575156\"]}");
	add("{\"term\":\"weathervane\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04575355\"]}");
	add("{\"term\":\"weave\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04575584\"]}");
	add("{\"term\":\"weaver\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01545427\", \"10791858\"]}");
	add("{\"term\":\"weaverbird\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01545427\"]}");
	add("{\"term\":\"weaving\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00910979\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }