package org.swtk.commons.dict.wordnet.indexbyname.controller.o.b;  import java.util.Collection; import java.util.Set; import java.util.TreeSet;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  	import org.swtk.commons.dict.wordnet.indexbyname.instance.o.b.a.WordnetNounIndexNameInstanceOBA;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.o.b.b.WordnetNounIndexNameInstanceOBB;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.o.b.d.WordnetNounIndexNameInstanceOBD;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.o.b.e.WordnetNounIndexNameInstanceOBE;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.o.b.f.WordnetNounIndexNameInstanceOBF;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.o.b.i.WordnetNounIndexNameInstanceOBI;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.o.b.j.WordnetNounIndexNameInstanceOBJ;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.o.b.l.WordnetNounIndexNameInstanceOBL;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.o.b.n.WordnetNounIndexNameInstanceOBN;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.o.b.o.WordnetNounIndexNameInstanceOBO;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.o.b.s.WordnetNounIndexNameInstanceOBS;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.o.b.t.WordnetNounIndexNameInstanceOBT;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.o.b.v.WordnetNounIndexNameInstanceOBV;
  import com.trimc.blogger.commons.exception.BusinessException;  public final class WordnetNounIndexNameControllerOB {  	public static Collection<IndexNoun> get(final String TERM) throws BusinessException {  		String key = TERM.substring(0, 4).toLowerCase(); 			if ("oba".equals(key)) return WordnetNounIndexNameInstanceOBA.get(TERM);
	if ("obb".equals(key)) return WordnetNounIndexNameInstanceOBB.get(TERM);
	if ("obd".equals(key)) return WordnetNounIndexNameInstanceOBD.get(TERM);
	if ("obe".equals(key)) return WordnetNounIndexNameInstanceOBE.get(TERM);
	if ("obf".equals(key)) return WordnetNounIndexNameInstanceOBF.get(TERM);
	if ("obi".equals(key)) return WordnetNounIndexNameInstanceOBI.get(TERM);
	if ("obj".equals(key)) return WordnetNounIndexNameInstanceOBJ.get(TERM);
	if ("obl".equals(key)) return WordnetNounIndexNameInstanceOBL.get(TERM);
	if ("obn".equals(key)) return WordnetNounIndexNameInstanceOBN.get(TERM);
	if ("obo".equals(key)) return WordnetNounIndexNameInstanceOBO.get(TERM);
	if ("obs".equals(key)) return WordnetNounIndexNameInstanceOBS.get(TERM);
	if ("obt".equals(key)) return WordnetNounIndexNameInstanceOBT.get(TERM);
	if ("obv".equals(key)) return WordnetNounIndexNameInstanceOBV.get(TERM);
  		throw new BusinessException("TERM not found (id = %s)", TERM); 	} 	 	public static Collection<String> terms() throws BusinessException { 		Set<String> set = new TreeSet<String>();  			set.addAll(WordnetNounIndexNameInstanceOBA.terms());
	set.addAll(WordnetNounIndexNameInstanceOBB.terms());
	set.addAll(WordnetNounIndexNameInstanceOBD.terms());
	set.addAll(WordnetNounIndexNameInstanceOBE.terms());
	set.addAll(WordnetNounIndexNameInstanceOBF.terms());
	set.addAll(WordnetNounIndexNameInstanceOBI.terms());
	set.addAll(WordnetNounIndexNameInstanceOBJ.terms());
	set.addAll(WordnetNounIndexNameInstanceOBL.terms());
	set.addAll(WordnetNounIndexNameInstanceOBN.terms());
	set.addAll(WordnetNounIndexNameInstanceOBO.terms());
	set.addAll(WordnetNounIndexNameInstanceOBS.terms());
	set.addAll(WordnetNounIndexNameInstanceOBT.terms());
	set.addAll(WordnetNounIndexNameInstanceOBV.terms());
  		return set; 	} }