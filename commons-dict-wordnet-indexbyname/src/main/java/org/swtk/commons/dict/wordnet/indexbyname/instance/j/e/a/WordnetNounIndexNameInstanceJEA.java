package org.swtk.commons.dict.wordnet.indexbyname.instance.j.e.a;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceJEA {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"jealousy\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05714023\", \"07565545\"]}");
	add("{\"term\":\"jean\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03179855\"]}");
	add("{\"term\":\"jean anouilh\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10838319\"]}");
	add("{\"term\":\"jean antoine watteau\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11396934\"]}");
	add("{\"term\":\"jean arp\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10843750\"]}");
	add("{\"term\":\"jean auguste dominique ingres\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11091828\"]}");
	add("{\"term\":\"jean baptiste camille corot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10931700\"]}");
	add("{\"term\":\"jean baptiste de lamarck\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11134781\"]}");
	add("{\"term\":\"jean baptiste donatien de vimeur\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11286693\"]}");
	add("{\"term\":\"jean baptiste joseph fourier\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10996464\"]}");
	add("{\"term\":\"jean baptiste lully\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11164850\"]}");
	add("{\"term\":\"jean baptiste racine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11271778\"]}");
	add("{\"term\":\"jean bernard leon foucault\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10996000\"]}");
	add("{\"term\":\"jean bernoulli\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10868096\"]}");
	add("{\"term\":\"jean caulvin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10900150\"]}");
	add("{\"term\":\"jean cauvin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10900150\"]}");
	add("{\"term\":\"jean chauvin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10900150\"]}");
	add("{\"term\":\"jean cocteau\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10923859\"]}");
	add("{\"term\":\"jean de la fontaine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11134627\"]}");
	add("{\"term\":\"jean edouard vuillard\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11389546\"]}");
	add("{\"term\":\"jean francois champollion\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10909963\"]}");
	add("{\"term\":\"jean francois millet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11200347\"]}");
	add("{\"term\":\"jean genet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11013932\"]}");
	add("{\"term\":\"jean giraudoux\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11021207\"]}");
	add("{\"term\":\"jean harlow\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11049128\"]}");
	add("{\"term\":\"jean honore fragonard\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10997155\"]}");
	add("{\"term\":\"jean laffite\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11134413\"]}");
	add("{\"term\":\"jean lafitte\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11134413\"]}");
	add("{\"term\":\"jean louis charles garnier\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11011299\"]}");
	add("{\"term\":\"jean louis rodolphe agassiz\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10828921\"]}");
	add("{\"term\":\"jean luc godard\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11022680\"]}");
	add("{\"term\":\"jean martin charcot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10911582\"]}");
	add("{\"term\":\"jean monnet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11205670\"]}");
	add("{\"term\":\"jean nicholas arthur rimbaud\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11282755\"]}");
	add("{\"term\":\"jean paul marat\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11175567\"]}");
	add("{\"term\":\"jean piaget\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11254282\"]}");
	add("{\"term\":\"jean racine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11271778\"]}");
	add("{\"term\":\"jean sibelius\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11319362\"]}");
	add("{\"term\":\"jeanne antoinette poisson\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11261645\"]}");
	add("{\"term\":\"jeannette rankin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11273792\"]}");
	add("{\"term\":\"jeans\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03599921\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }