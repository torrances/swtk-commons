package org.swtk.commons.dict.wordnet.indexbyname.controller.b.a;  import java.util.Collection; import java.util.Set; import java.util.TreeSet;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  	import org.swtk.commons.dict.wordnet.indexbyname.instance.b.a.a.WordnetNounIndexNameInstanceBAA;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.b.a.b.WordnetNounIndexNameInstanceBAB;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.b.a.c.WordnetNounIndexNameInstanceBAC;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.b.a.d.WordnetNounIndexNameInstanceBAD;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.b.a.e.WordnetNounIndexNameInstanceBAE;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.b.a.f.WordnetNounIndexNameInstanceBAF;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.b.a.g.WordnetNounIndexNameInstanceBAG;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.b.a.h.WordnetNounIndexNameInstanceBAH;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.b.a.i.WordnetNounIndexNameInstanceBAI;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.b.a.k.WordnetNounIndexNameInstanceBAK;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.b.a.l.WordnetNounIndexNameInstanceBAL;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.b.a.m.WordnetNounIndexNameInstanceBAM;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.b.a.n.WordnetNounIndexNameInstanceBAN;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.b.a.o.WordnetNounIndexNameInstanceBAO;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.b.a.p.WordnetNounIndexNameInstanceBAP;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.b.a.r.WordnetNounIndexNameInstanceBAR;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.b.a.s.WordnetNounIndexNameInstanceBAS;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.b.a.t.WordnetNounIndexNameInstanceBAT;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.b.a.u.WordnetNounIndexNameInstanceBAU;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.b.a.v.WordnetNounIndexNameInstanceBAV;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.b.a.w.WordnetNounIndexNameInstanceBAW;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.b.a.y.WordnetNounIndexNameInstanceBAY;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.b.a.z.WordnetNounIndexNameInstanceBAZ;
  import com.trimc.blogger.commons.exception.BusinessException;  public final class WordnetNounIndexNameControllerBA {  	public static Collection<IndexNoun> get(final String TERM) throws BusinessException {  		String key = TERM.substring(0, 4).toLowerCase(); 			if ("baa".equals(key)) return WordnetNounIndexNameInstanceBAA.get(TERM);
	if ("bab".equals(key)) return WordnetNounIndexNameInstanceBAB.get(TERM);
	if ("bac".equals(key)) return WordnetNounIndexNameInstanceBAC.get(TERM);
	if ("bad".equals(key)) return WordnetNounIndexNameInstanceBAD.get(TERM);
	if ("bae".equals(key)) return WordnetNounIndexNameInstanceBAE.get(TERM);
	if ("baf".equals(key)) return WordnetNounIndexNameInstanceBAF.get(TERM);
	if ("bag".equals(key)) return WordnetNounIndexNameInstanceBAG.get(TERM);
	if ("bah".equals(key)) return WordnetNounIndexNameInstanceBAH.get(TERM);
	if ("bai".equals(key)) return WordnetNounIndexNameInstanceBAI.get(TERM);
	if ("bak".equals(key)) return WordnetNounIndexNameInstanceBAK.get(TERM);
	if ("bal".equals(key)) return WordnetNounIndexNameInstanceBAL.get(TERM);
	if ("bam".equals(key)) return WordnetNounIndexNameInstanceBAM.get(TERM);
	if ("ban".equals(key)) return WordnetNounIndexNameInstanceBAN.get(TERM);
	if ("bao".equals(key)) return WordnetNounIndexNameInstanceBAO.get(TERM);
	if ("bap".equals(key)) return WordnetNounIndexNameInstanceBAP.get(TERM);
	if ("bar".equals(key)) return WordnetNounIndexNameInstanceBAR.get(TERM);
	if ("bas".equals(key)) return WordnetNounIndexNameInstanceBAS.get(TERM);
	if ("bat".equals(key)) return WordnetNounIndexNameInstanceBAT.get(TERM);
	if ("bau".equals(key)) return WordnetNounIndexNameInstanceBAU.get(TERM);
	if ("bav".equals(key)) return WordnetNounIndexNameInstanceBAV.get(TERM);
	if ("baw".equals(key)) return WordnetNounIndexNameInstanceBAW.get(TERM);
	if ("bay".equals(key)) return WordnetNounIndexNameInstanceBAY.get(TERM);
	if ("baz".equals(key)) return WordnetNounIndexNameInstanceBAZ.get(TERM);
  		throw new BusinessException("TERM not found (id = %s)", TERM); 	} 	 	public static Collection<String> terms() throws BusinessException { 		Set<String> set = new TreeSet<String>();  			set.addAll(WordnetNounIndexNameInstanceBAA.terms());
	set.addAll(WordnetNounIndexNameInstanceBAB.terms());
	set.addAll(WordnetNounIndexNameInstanceBAC.terms());
	set.addAll(WordnetNounIndexNameInstanceBAD.terms());
	set.addAll(WordnetNounIndexNameInstanceBAE.terms());
	set.addAll(WordnetNounIndexNameInstanceBAF.terms());
	set.addAll(WordnetNounIndexNameInstanceBAG.terms());
	set.addAll(WordnetNounIndexNameInstanceBAH.terms());
	set.addAll(WordnetNounIndexNameInstanceBAI.terms());
	set.addAll(WordnetNounIndexNameInstanceBAK.terms());
	set.addAll(WordnetNounIndexNameInstanceBAL.terms());
	set.addAll(WordnetNounIndexNameInstanceBAM.terms());
	set.addAll(WordnetNounIndexNameInstanceBAN.terms());
	set.addAll(WordnetNounIndexNameInstanceBAO.terms());
	set.addAll(WordnetNounIndexNameInstanceBAP.terms());
	set.addAll(WordnetNounIndexNameInstanceBAR.terms());
	set.addAll(WordnetNounIndexNameInstanceBAS.terms());
	set.addAll(WordnetNounIndexNameInstanceBAT.terms());
	set.addAll(WordnetNounIndexNameInstanceBAU.terms());
	set.addAll(WordnetNounIndexNameInstanceBAV.terms());
	set.addAll(WordnetNounIndexNameInstanceBAW.terms());
	set.addAll(WordnetNounIndexNameInstanceBAY.terms());
	set.addAll(WordnetNounIndexNameInstanceBAZ.terms());
  		return set; 	} }