package org.swtk.commons.dict.wordnet.indexbyname.instance.g.l.a;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceGLA {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"glabella\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05240021\"]}");
	add("{\"term\":\"glaciation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13508612\", \"14543275\"]}");
	add("{\"term\":\"glacier\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09312237\"]}");
	add("{\"term\":\"glad\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12437887\"]}");
	add("{\"term\":\"gladdon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12434147\"]}");
	add("{\"term\":\"glade\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08558851\"]}");
	add("{\"term\":\"gladfulness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07542406\"]}");
	add("{\"term\":\"gladiator\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10496662\", \"10151335\"]}");
	add("{\"term\":\"gladiola\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12437887\"]}");
	add("{\"term\":\"gladiolus\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05288951\", \"12437887\"]}");
	add("{\"term\":\"gladness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07542406\"]}");
	add("{\"term\":\"gladsomeness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07542406\"]}");
	add("{\"term\":\"gladstone\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03993307\", \"11021664\"]}");
	add("{\"term\":\"glamor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04692544\"]}");
	add("{\"term\":\"glamorisation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00262815\"]}");
	add("{\"term\":\"glamorization\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00262815\"]}");
	add("{\"term\":\"glamour\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04692544\"]}");
	add("{\"term\":\"glamourisation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00262815\"]}");
	add("{\"term\":\"glamourization\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00262815\"]}");
	add("{\"term\":\"glance\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00879303\"]}");
	add("{\"term\":\"gland\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05335315\"]}");
	add("{\"term\":\"glanders\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14288707\"]}");
	add("{\"term\":\"glans\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05375621\"]}");
	add("{\"term\":\"glare\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"14457235\", \"00880475\", \"04959747\"]}");
	add("{\"term\":\"glareola\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02041491\"]}");
	add("{\"term\":\"glareole\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02041647\"]}");
	add("{\"term\":\"glareolidae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02041271\"]}");
	add("{\"term\":\"glaser\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11021844\"]}");
	add("{\"term\":\"glasgow\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08913198\"]}");
	add("{\"term\":\"glasnost\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06672142\"]}");
	add("{\"term\":\"glass\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"03443585\", \"03694158\", \"03759824\", \"03338074\", \"13789379\", \"03443167\", \"14905454\"]}");
	add("{\"term\":\"glassblower\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10151555\"]}");
	add("{\"term\":\"glasses\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04279164\"]}");
	add("{\"term\":\"glassful\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13789379\"]}");
	add("{\"term\":\"glasshouse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03462844\"]}");
	add("{\"term\":\"glassmaker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10151942\"]}");
	add("{\"term\":\"glassware\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03443988\"]}");
	add("{\"term\":\"glasswork\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03443988\"]}");
	add("{\"term\":\"glassworker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10151665\"]}");
	add("{\"term\":\"glassworks\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03444184\"]}");
	add("{\"term\":\"glasswort\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11854741\", \"11855123\"]}");
	add("{\"term\":\"glaswegian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09768473\"]}");
	add("{\"term\":\"glaucium\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11926053\"]}");
	add("{\"term\":\"glaucoma\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14278716\"]}");
	add("{\"term\":\"glaucomys\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02363295\"]}");
	add("{\"term\":\"glauconite\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14701305\"]}");
	add("{\"term\":\"glaux\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12114286\"]}");
	add("{\"term\":\"glaze\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04708387\", \"04962731\", \"07636610\"]}");
	add("{\"term\":\"glazer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10151665\"]}");
	add("{\"term\":\"glazier\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10151665\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }