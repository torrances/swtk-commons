package org.swtk.commons.dict.wordnet.indexbyname.instance.o.r.t;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceORT {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"ortalis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01802927\"]}");
	add("{\"term\":\"ortega\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11237172\"]}");
	add("{\"term\":\"orthicon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03862248\"]}");
	add("{\"term\":\"orthilia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12277657\"]}");
	add("{\"term\":\"orthochorea\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14118921\"]}");
	add("{\"term\":\"orthoclase\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14889372\"]}");
	add("{\"term\":\"orthodontia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06058083\"]}");
	add("{\"term\":\"orthodontics\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06058083\"]}");
	add("{\"term\":\"orthodontist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10404309\"]}");
	add("{\"term\":\"orthodonture\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06058083\"]}");
	add("{\"term\":\"orthodoxy\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06221546\", \"04808562\"]}");
	add("{\"term\":\"orthoepist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10404634\"]}");
	add("{\"term\":\"orthoepy\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06186553\", \"07143400\"]}");
	add("{\"term\":\"orthogonality\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05079247\", \"13851260\"]}");
	add("{\"term\":\"orthography\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06362609\"]}");
	add("{\"term\":\"orthomyxovirus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01339719\"]}");
	add("{\"term\":\"orthopaedics\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06073656\"]}");
	add("{\"term\":\"orthopaedist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10404858\"]}");
	add("{\"term\":\"orthopedics\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06073656\"]}");
	add("{\"term\":\"orthopedist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10404858\"]}");
	add("{\"term\":\"orthophosphate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15006824\"]}");
	add("{\"term\":\"orthopnea\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14393318\"]}");
	add("{\"term\":\"orthopristis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02592585\"]}");
	add("{\"term\":\"orthopter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03862676\"]}");
	add("{\"term\":\"orthoptera\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02228611\"]}");
	add("{\"term\":\"orthopteran\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02228835\"]}");
	add("{\"term\":\"orthopteron\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02228835\"]}");
	add("{\"term\":\"orthoptics\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00710210\"]}");
	add("{\"term\":\"orthoptist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10405053\"]}");
	add("{\"term\":\"orthoscope\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03862811\"]}");
	add("{\"term\":\"orthotomus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01568723\"]}");
	add("{\"term\":\"ortolan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01540536\"]}");
	add("{\"term\":\"ortygan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02022999\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }