package org.swtk.commons.dict.wordnet.indexbyname.instance.f.r.a;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceFRA {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"fracas\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07199205\"]}");
	add("{\"term\":\"fractal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05939938\"]}");
	add("{\"term\":\"fraction\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13754218\", \"03395053\", \"14946245\"]}");
	add("{\"term\":\"fractionation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00390316\", \"13505285\"]}");
	add("{\"term\":\"fractiousness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04915573\"]}");
	add("{\"term\":\"fracture\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00377802\", \"09301443\", \"14315592\"]}");
	add("{\"term\":\"fradicin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03823630\"]}");
	add("{\"term\":\"fragaria\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12650707\"]}");
	add("{\"term\":\"fragility\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05048657\", \"05050909\"]}");
	add("{\"term\":\"fragment\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07021796\", \"04191744\", \"09308160\"]}");
	add("{\"term\":\"fragmentation\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"07423721\", \"13505506\", \"14017002\", \"00389018\"]}");
	add("{\"term\":\"fragonard\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10997155\"]}");
	add("{\"term\":\"fragrance\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04987712\", \"05722413\"]}");
	add("{\"term\":\"fragrancy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04987712\"]}");
	add("{\"term\":\"frail\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03395519\", \"13740151\"]}");
	add("{\"term\":\"frailness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14571235\"]}");
	add("{\"term\":\"frailty\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04861104\", \"14571235\"]}");
	add("{\"term\":\"fraise\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03395632\", \"03395732\"]}");
	add("{\"term\":\"frambesia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14168243\"]}");
	add("{\"term\":\"framboesia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14168243\"]}");
	add("{\"term\":\"framboise\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12677130\"]}");
	add("{\"term\":\"frame\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"00463177\", \"03395829\", \"03396616\", \"04233599\", \"05593033\", \"05670948\", \"06582981\", \"07016684\", \"15280615\", \"05224424\", \"03396310\", \"03396147\"]}");
	add("{\"term\":\"framer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10128233\", \"10128375\"]}");
	add("{\"term\":\"framework\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03396616\", \"04940540\", \"05898856\"]}");
	add("{\"term\":\"framing\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03395829\", \"00943267\"]}");
	add("{\"term\":\"franc\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13684295\"]}");
	add("{\"term\":\"france\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10997364\", \"08949695\"]}");
	add("{\"term\":\"franchise\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"05194714\", \"08077029\", \"06538802\"]}");
	add("{\"term\":\"franciscan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10798221\"]}");
	add("{\"term\":\"francisella\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01368115\"]}");
	add("{\"term\":\"francium\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14662042\"]}");
	add("{\"term\":\"franck\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10998418\", \"10998689\"]}");
	add("{\"term\":\"franco\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10998838\"]}");
	add("{\"term\":\"francoa\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12818453\"]}");
	add("{\"term\":\"francophil\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10128488\"]}");
	add("{\"term\":\"francophile\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10128488\"]}");
	add("{\"term\":\"francophobe\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10128601\"]}");
	add("{\"term\":\"frangibility\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05050909\"]}");
	add("{\"term\":\"frangibleness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05050909\"]}");
	add("{\"term\":\"frangipane\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07639084\"]}");
	add("{\"term\":\"frangipani\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11794982\"]}");
	add("{\"term\":\"frangipanni\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11794982\"]}");
	add("{\"term\":\"frank\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07692347\", \"09708200\"]}");
	add("{\"term\":\"frankenstein\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"09622369\", \"09622575\", \"14031235\"]}");
	add("{\"term\":\"frankfort\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08790755\", \"09112196\"]}");
	add("{\"term\":\"frankfurt\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08790755\"]}");
	add("{\"term\":\"frankfurter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07692347\"]}");
	add("{\"term\":\"frankincense\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14898102\"]}");
	add("{\"term\":\"franklin\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10128819\", \"10999075\", \"10999531\"]}");
	add("{\"term\":\"frankliniella\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02274804\"]}");
	add("{\"term\":\"frankness\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04658088\", \"04878915\"]}");
	add("{\"term\":\"frappe\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07629807\", \"07939816\", \"07939905\"]}");
	add("{\"term\":\"frasera\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12313172\"]}");
	add("{\"term\":\"frat\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08246388\"]}");
	add("{\"term\":\"fratercula\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02050489\"]}");
	add("{\"term\":\"fraternisation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01083791\"]}");
	add("{\"term\":\"fraternity\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08092224\", \"08246388\"]}");
	add("{\"term\":\"fraternization\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01083791\"]}");
	add("{\"term\":\"fratricide\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00222848\", \"00993049\", \"10129111\"]}");
	add("{\"term\":\"frau\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06352077\"]}");
	add("{\"term\":\"fraud\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00755028\", \"10221154\", \"00770581\"]}");
	add("{\"term\":\"fraudulence\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00755028\", \"04882547\", \"06773680\"]}");
	add("{\"term\":\"fraulein\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06352208\"]}");
	add("{\"term\":\"fraxinella\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12733386\"]}");
	add("{\"term\":\"fraxinus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12323866\"]}");
	add("{\"term\":\"fray\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01178825\"]}");
	add("{\"term\":\"frazer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10999690\"]}");
	add("{\"term\":\"frazzle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14041526\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }