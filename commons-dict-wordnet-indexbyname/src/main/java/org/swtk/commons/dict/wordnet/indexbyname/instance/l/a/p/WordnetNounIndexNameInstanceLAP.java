package org.swtk.commons.dict.wordnet.indexbyname.instance.l.a.p;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceLAP {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"lap\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00151411\", \"00296016\", \"03647020\", \"03647261\", \"14538643\", \"05570228\"]}");
	add("{\"term\":\"laparocele\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14320908\"]}");
	add("{\"term\":\"laparoscope\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03647458\"]}");
	add("{\"term\":\"laparoscopy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00684265\"]}");
	add("{\"term\":\"laparotomy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00684109\"]}");
	add("{\"term\":\"lapboard\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03647655\"]}");
	add("{\"term\":\"lapdog\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02087924\"]}");
	add("{\"term\":\"lapel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03647758\"]}");
	add("{\"term\":\"lapful\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13790390\"]}");
	add("{\"term\":\"lapidarist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10266400\"]}");
	add("{\"term\":\"lapidary\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10266208\", \"10266400\"]}");
	add("{\"term\":\"lapidation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01166884\"]}");
	add("{\"term\":\"lapidator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10678832\"]}");
	add("{\"term\":\"lapidist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10266208\"]}");
	add("{\"term\":\"lapin\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02327166\", \"14789503\"]}");
	add("{\"term\":\"laplace\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11137441\"]}");
	add("{\"term\":\"lapland\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08976985\"]}");
	add("{\"term\":\"laportea\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12414459\"]}");
	add("{\"term\":\"lapp\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06972167\", \"09739429\"]}");
	add("{\"term\":\"lappet\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02310562\", \"03648030\", \"05479079\"]}");
	add("{\"term\":\"lappic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06972001\"]}");
	add("{\"term\":\"lapping\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03566837\"]}");
	add("{\"term\":\"lappish\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06972001\"]}");
	add("{\"term\":\"lappland\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08976985\"]}");
	add("{\"term\":\"lapplander\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09739429\"]}");
	add("{\"term\":\"lappula\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12840713\"]}");
	add("{\"term\":\"lapse\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00069153\", \"15296403\", \"00075344\"]}");
	add("{\"term\":\"lapsing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00069153\"]}");
	add("{\"term\":\"laptop\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03648120\"]}");
	add("{\"term\":\"laputa\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05638322\"]}");
	add("{\"term\":\"lapwing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02027417\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }