package org.swtk.commons.dict.wordnet.indexbyname.instance.t.w.i;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceTWI {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"twiddle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00341815\"]}");
	add("{\"term\":\"twiddler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10753892\"]}");
	add("{\"term\":\"twig\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13184889\"]}");
	add("{\"term\":\"twig blight\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14242772\"]}");
	add("{\"term\":\"twilight\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"14447144\", \"11536368\", \"15194468\"]}");
	add("{\"term\":\"twilight of the gods\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06384548\"]}");
	add("{\"term\":\"twilight sleep\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14053566\"]}");
	add("{\"term\":\"twilight vision\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05664842\"]}");
	add("{\"term\":\"twilight zone\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04833046\", \"09487351\"]}");
	add("{\"term\":\"twill\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04510450\", \"04510564\"]}");
	add("{\"term\":\"twill weave\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04510564\"]}");
	add("{\"term\":\"twin\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03122590\", \"09487465\", \"09771850\", \"10754051\"]}");
	add("{\"term\":\"twin bed\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04510708\"]}");
	add("{\"term\":\"twin bill\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00462012\"]}");
	add("{\"term\":\"twin cities\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09126256\"]}");
	add("{\"term\":\"twin falls\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09104926\", \"09487465\"]}");
	add("{\"term\":\"twin towers\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04611367\"]}");
	add("{\"term\":\"twinberry\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"12689278\", \"12696477\"]}");
	add("{\"term\":\"twine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04345112\"]}");
	add("{\"term\":\"twiner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10754225\"]}");
	add("{\"term\":\"twinflower\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12694089\"]}");
	add("{\"term\":\"twinge\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05733214\", \"07510112\"]}");
	add("{\"term\":\"twinjet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04510794\"]}");
	add("{\"term\":\"twinkie\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07648288\"]}");
	add("{\"term\":\"twinkle\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04960557\", \"07426245\"]}");
	add("{\"term\":\"twinkler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09487616\"]}");
	add("{\"term\":\"twinkling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15271921\"]}");
	add("{\"term\":\"twins\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08704233\", \"14907668\"]}");
	add("{\"term\":\"twirl\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00344075\", \"13900557\"]}");
	add("{\"term\":\"twirler\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10455755\", \"09863232\"]}");
	add("{\"term\":\"twirp\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10753786\"]}");
	add("{\"term\":\"twist\", \"synsetCount\":13, \"upperType\":\"NOUN\", \"ids\":[\"00346280\", \"00346467\", \"00535668\", \"05266995\", \"07366509\", \"07447573\", \"13891966\", \"13900557\", \"14322572\", \"00344075\", \"00172070\", \"07188610\", \"07437965\"]}");
	add("{\"term\":\"twist bit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04510888\"]}");
	add("{\"term\":\"twist drill\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04510888\"]}");
	add("{\"term\":\"twist wood\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12701413\"]}");
	add("{\"term\":\"twister\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07655186\", \"11539883\"]}");
	add("{\"term\":\"twisting\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00344075\", \"00752872\"]}");
	add("{\"term\":\"twistwood\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12701413\"]}");
	add("{\"term\":\"twit\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01225348\", \"10753786\"]}");
	add("{\"term\":\"twitch\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14385069\"]}");
	add("{\"term\":\"twitching\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14385069\"]}");
	add("{\"term\":\"twitter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07394177\"]}");
	add("{\"term\":\"twitterer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02514361\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }