package org.swtk.commons.dict.wordnet.indexbyname.instance.l.a.u;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceLAU {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"laudability\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04814594\"]}");
	add("{\"term\":\"laudableness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04814594\"]}");
	add("{\"term\":\"laudanum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03652422\"]}");
	add("{\"term\":\"laudator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10268408\"]}");
	add("{\"term\":\"lauder\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10268408\", \"11138876\"]}");
	add("{\"term\":\"laudo\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09359608\"]}");
	add("{\"term\":\"laugh\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06790941\", \"06891454\", \"07141714\"]}");
	add("{\"term\":\"laugh line\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06791616\", \"13929359\"]}");
	add("{\"term\":\"laugh track\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03652605\"]}");
	add("{\"term\":\"laugher\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07490247\", \"10268573\"]}");
	add("{\"term\":\"laughing gas\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03832485\"]}");
	add("{\"term\":\"laughing gull\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02044834\"]}");
	add("{\"term\":\"laughing hyena\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02120552\"]}");
	add("{\"term\":\"laughing jackass\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01627762\", \"01831197\"]}");
	add("{\"term\":\"laughing owl\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01627762\"]}");
	add("{\"term\":\"laughingstock\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09904118\"]}");
	add("{\"term\":\"laughter\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01074326\", \"07141714\"]}");
	add("{\"term\":\"laughton\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11139051\"]}");
	add("{\"term\":\"lauhala\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12175526\"]}");
	add("{\"term\":\"launce\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02621143\"]}");
	add("{\"term\":\"launch\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00103960\", \"03652737\"]}");
	add("{\"term\":\"launch area\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03653005\"]}");
	add("{\"term\":\"launch pad\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03653005\"]}");
	add("{\"term\":\"launcher\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02985687\", \"03652834\"]}");
	add("{\"term\":\"launching\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00103960\", \"00238889\", \"00104111\"]}");
	add("{\"term\":\"launching pad\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03653005\"]}");
	add("{\"term\":\"launching site\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08609042\"]}");
	add("{\"term\":\"launchpad\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03653005\"]}");
	add("{\"term\":\"launderette\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03653186\"]}");
	add("{\"term\":\"laundering\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00579745\"]}");
	add("{\"term\":\"laundress\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10788856\"]}");
	add("{\"term\":\"laundromat\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03653186\"]}");
	add("{\"term\":\"laundry\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03653380\", \"03653533\"]}");
	add("{\"term\":\"laundry basket\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03054849\"]}");
	add("{\"term\":\"laundry cart\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03653745\"]}");
	add("{\"term\":\"laundry detergent\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03653841\"]}");
	add("{\"term\":\"laundry truck\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03653981\"]}");
	add("{\"term\":\"laundryman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10788752\"]}");
	add("{\"term\":\"laundrywoman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10788856\"]}");
	add("{\"term\":\"lauraceae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11723855\"]}");
	add("{\"term\":\"laurasia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09359759\"]}");
	add("{\"term\":\"laureate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10268708\"]}");
	add("{\"term\":\"laurel\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03654118\", \"11139180\", \"11724138\"]}");
	add("{\"term\":\"laurel and hardy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08198293\"]}");
	add("{\"term\":\"laurel cherry\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"12663874\", \"12667711\"]}");
	add("{\"term\":\"laurel family\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11723855\"]}");
	add("{\"term\":\"laurel oak\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"12293400\", \"12294285\"]}");
	add("{\"term\":\"laurel sumac\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12781635\"]}");
	add("{\"term\":\"laurel willow\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12750281\"]}");
	add("{\"term\":\"laurel wreath\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03654118\", \"06719615\"]}");
	add("{\"term\":\"laurels\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"14460341\", \"06709228\"]}");
	add("{\"term\":\"laurelwood\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12385802\"]}");
	add("{\"term\":\"laurence olivier\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11234310\"]}");
	add("{\"term\":\"laurence stephen lowry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11163034\"]}");
	add("{\"term\":\"laurence sterne\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11336965\"]}");
	add("{\"term\":\"laurens\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11139466\"]}");
	add("{\"term\":\"laurentian highlands\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08840311\"]}");
	add("{\"term\":\"laurentian plateau\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08840311\"]}");
	add("{\"term\":\"laurentius\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11141098\"]}");
	add("{\"term\":\"lauric acid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14954614\"]}");
	add("{\"term\":\"lauritz lebrecht hommel melchior\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11192401\"]}");
	add("{\"term\":\"lauritz melchior\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11192401\"]}");
	add("{\"term\":\"laurus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11724404\"]}");
	add("{\"term\":\"laurus nobilis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11724562\"]}");
	add("{\"term\":\"lauryl alcohol\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14954808\"]}");
	add("{\"term\":\"lausanne\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09055456\"]}");
	add("{\"term\":\"lautaro faction of the united popular action movement\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08048416\"]}");
	add("{\"term\":\"lautaro popular rebel forces\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08048416\"]}");
	add("{\"term\":\"lautaro youth movement\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08048416\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }