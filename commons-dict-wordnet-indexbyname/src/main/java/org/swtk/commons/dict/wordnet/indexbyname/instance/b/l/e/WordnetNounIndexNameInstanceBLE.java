package org.swtk.commons.dict.wordnet.indexbyname.instance.b.l.e;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceBLE {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"bleach\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00274853\", \"14803364\", \"04968313\"]}");
	add("{\"term\":\"bleacher\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09879090\"]}");
	add("{\"term\":\"bleachers\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02853790\"]}");
	add("{\"term\":\"bleakness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14549150\"]}");
	add("{\"term\":\"bleat\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07392531\"]}");
	add("{\"term\":\"bleb\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05525488\"]}");
	add("{\"term\":\"blechnaceae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13205390\"]}");
	add("{\"term\":\"blechnum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13205771\"]}");
	add("{\"term\":\"bleeder\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10190661\"]}");
	add("{\"term\":\"bleeding\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14311737\"]}");
	add("{\"term\":\"bleep\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07391682\"]}");
	add("{\"term\":\"blemish\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04699505\"]}");
	add("{\"term\":\"blend\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00381504\", \"06299307\", \"07390005\"]}");
	add("{\"term\":\"blende\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15132443\"]}");
	add("{\"term\":\"blender\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02853991\"]}");
	add("{\"term\":\"blending\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01005878\", \"00381504\"]}");
	add("{\"term\":\"blenheim\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01274408\"]}");
	add("{\"term\":\"blenniidae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02615612\"]}");
	add("{\"term\":\"blennioid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02615287\"]}");
	add("{\"term\":\"blennioidea\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02615023\"]}");
	add("{\"term\":\"blennius\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02616064\"]}");
	add("{\"term\":\"blenny\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02615811\"]}");
	add("{\"term\":\"blepharism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14385480\"]}");
	add("{\"term\":\"blepharitis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14284746\"]}");
	add("{\"term\":\"blepharospasm\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14384469\"]}");
	add("{\"term\":\"blephilia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12862865\"]}");
	add("{\"term\":\"bleriot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10872399\"]}");
	add("{\"term\":\"blessedness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14011204\"]}");
	add("{\"term\":\"blessing\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"01045725\", \"07204071\", \"07204699\", \"14497848\", \"01217882\"]}");
	add("{\"term\":\"blether\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07151837\"]}");
	add("{\"term\":\"bletia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12066897\"]}");
	add("{\"term\":\"bletilla\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12067089\"]}");
	add("{\"term\":\"bleu\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07868021\"]}");
	add("{\"term\":\"blewits\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13037862\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }