package org.swtk.commons.dict.wordnet.indexbyname.instance.j.u.m;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceJUM {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"jumada i\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15242583\"]}");
	add("{\"term\":\"jumada ii\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15242707\"]}");
	add("{\"term\":\"jumbal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07649470\"]}");
	add("{\"term\":\"jumbie bead\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12574534\"]}");
	add("{\"term\":\"jumble\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"05962283\", \"07649470\", \"14524151\"]}");
	add("{\"term\":\"jumble sale\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01122171\"]}");
	add("{\"term\":\"jumbo jet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03609524\"]}");
	add("{\"term\":\"jumbojet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03609524\"]}");
	add("{\"term\":\"jumby bead\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12574534\"]}");
	add("{\"term\":\"jumby bean\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12574247\"]}");
	add("{\"term\":\"jumby tree\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12574247\"]}");
	add("{\"term\":\"jument\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01319580\"]}");
	add("{\"term\":\"jump\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00120388\", \"00304675\", \"00869035\", \"06630934\", \"07373585\", \"07428822\"]}");
	add("{\"term\":\"jump ball\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00242112\"]}");
	add("{\"term\":\"jump cut\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06631056\"]}");
	add("{\"term\":\"jump rope\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00486643\", \"03610446\"]}");
	add("{\"term\":\"jump seat\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03610630\"]}");
	add("{\"term\":\"jump shot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00112323\"]}");
	add("{\"term\":\"jump suit\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03610717\", \"03610811\"]}");
	add("{\"term\":\"jumper\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"00112323\", \"03609613\", \"03609749\", \"03609842\", \"03609976\", \"04377135\", \"10246473\", \"10246663\"]}");
	add("{\"term\":\"jumper cable\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03610056\"]}");
	add("{\"term\":\"jumper lead\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03610056\"]}");
	add("{\"term\":\"jumpiness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07540999\"]}");
	add("{\"term\":\"jumping\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00120388\", \"00441158\"]}");
	add("{\"term\":\"jumping bean\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12949579\"]}");
	add("{\"term\":\"jumping bristletail\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02273874\"]}");
	add("{\"term\":\"jumping gene\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14855982\"]}");
	add("{\"term\":\"jumping jack\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03610286\"]}");
	add("{\"term\":\"jumping mouse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02353641\"]}");
	add("{\"term\":\"jumping orchid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12070483\"]}");
	add("{\"term\":\"jumping plant louse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02258824\"]}");
	add("{\"term\":\"jumping seed\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12949579\"]}");
	add("{\"term\":\"jumping up and down\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00121467\"]}");
	add("{\"term\":\"jumpstart\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01268414\"]}");
	add("{\"term\":\"jumpsuit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03610811\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }