package org.swtk.commons.dict.wordnet.indexbyname.instance.r.u.b;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceRUB {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"rub\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00125946\", \"05699109\"]}");
	add("{\"term\":\"rub up\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00899687\"]}");
	add("{\"term\":\"rubato\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15290234\"]}");
	add("{\"term\":\"rubber\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"02738543\", \"03092620\", \"04123606\", \"07480405\", \"15031356\", \"15030825\"]}");
	add("{\"term\":\"rubber band\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04123192\"]}");
	add("{\"term\":\"rubber boa\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01745088\"]}");
	add("{\"term\":\"rubber boot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04123388\"]}");
	add("{\"term\":\"rubber bullet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04123483\"]}");
	add("{\"term\":\"rubber cement\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14729547\"]}");
	add("{\"term\":\"rubber eraser\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04123606\"]}");
	add("{\"term\":\"rubber plant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12423345\"]}");
	add("{\"term\":\"rubber stamp\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01143803\", \"03493970\"]}");
	add("{\"term\":\"rubber tire\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02974626\"]}");
	add("{\"term\":\"rubber tree\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12946596\"]}");
	add("{\"term\":\"rubberneck\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10560663\", \"10616097\"]}");
	add("{\"term\":\"rubbernecker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10560663\"]}");
	add("{\"term\":\"rubbing\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00713284\", \"04123838\", \"11479937\"]}");
	add("{\"term\":\"rubbing alcohol\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04124013\"]}");
	add("{\"term\":\"rubbish\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06624351\", \"14881648\"]}");
	add("{\"term\":\"rubbish dump\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08577564\"]}");
	add("{\"term\":\"rubbish heap\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08591389\"]}");
	add("{\"term\":\"rubble\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14882048\"]}");
	add("{\"term\":\"rubdown\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00259538\"]}");
	add("{\"term\":\"rube\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10823706\"]}");
	add("{\"term\":\"rube goldberg\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11024481\"]}");
	add("{\"term\":\"rubefacient\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04124183\"]}");
	add("{\"term\":\"rubel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13722161\"]}");
	add("{\"term\":\"rubella\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14146741\"]}");
	add("{\"term\":\"rubella panencephalitis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14368125\"]}");
	add("{\"term\":\"rubens\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11293094\"]}");
	add("{\"term\":\"rubeola\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14146526\"]}");
	add("{\"term\":\"rubia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12681557\"]}");
	add("{\"term\":\"rubia cordifolia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12681806\"]}");
	add("{\"term\":\"rubia tinctorum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12681988\"]}");
	add("{\"term\":\"rubiaceae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12680770\"]}");
	add("{\"term\":\"rubiaceous plant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12681362\"]}");
	add("{\"term\":\"rubiales\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12680491\"]}");
	add("{\"term\":\"rubicelle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15076175\"]}");
	add("{\"term\":\"rubicon\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05757039\", \"08662127\"]}");
	add("{\"term\":\"rubidium\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14677133\"]}");
	add("{\"term\":\"rubin test\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05752921\"]}");
	add("{\"term\":\"rubinstein\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11293276\", \"11293469\"]}");
	add("{\"term\":\"ruble\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13721181\", \"13724636\"]}");
	add("{\"term\":\"rubor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14359944\"]}");
	add("{\"term\":\"rubric\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"05848285\", \"06356368\", \"06357363\", \"06665457\", \"06756695\", \"06665359\"]}");
	add("{\"term\":\"rubus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12673817\"]}");
	add("{\"term\":\"rubus australis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12674197\"]}");
	add("{\"term\":\"rubus caesius\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12676487\"]}");
	add("{\"term\":\"rubus canadensis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12676006\"]}");
	add("{\"term\":\"rubus chamaemorus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12678055\"]}");
	add("{\"term\":\"rubus cissoides\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12674197\"]}");
	add("{\"term\":\"rubus cuneifolius\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12674988\"]}");
	add("{\"term\":\"rubus flagellaris\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12676112\"]}");
	add("{\"term\":\"rubus fruticosus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12674773\"]}");
	add("{\"term\":\"rubus hispidus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12676366\"]}");
	add("{\"term\":\"rubus idaeus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12677130\"]}");
	add("{\"term\":\"rubus idaeus strigosus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12677289\"]}");
	add("{\"term\":\"rubus loganobaccus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12675823\"]}");
	add("{\"term\":\"rubus occidentalis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12677446\"]}");
	add("{\"term\":\"rubus odoratus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12678270\"]}");
	add("{\"term\":\"rubus parviflorus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12677843\"]}");
	add("{\"term\":\"rubus phoenicolasius\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12678516\"]}");
	add("{\"term\":\"rubus saxatilis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12674394\"]}");
	add("{\"term\":\"rubus spectabilis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12677670\"]}");
	add("{\"term\":\"rubus strigosus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12677289\"]}");
	add("{\"term\":\"rubus trivialis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12676259\"]}");
	add("{\"term\":\"rubus ursinus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12675420\"]}");
	add("{\"term\":\"rubus ursinus loganobaccus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12675823\"]}");
	add("{\"term\":\"ruby\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04970765\", \"15032709\", \"13393435\"]}");
	add("{\"term\":\"ruby spinel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15075696\"]}");
	add("{\"term\":\"ruby wood\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12587132\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }