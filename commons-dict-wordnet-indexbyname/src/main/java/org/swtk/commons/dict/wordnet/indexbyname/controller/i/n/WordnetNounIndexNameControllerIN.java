package org.swtk.commons.dict.wordnet.indexbyname.controller.i.n;  import java.util.Collection; import java.util.Set; import java.util.TreeSet;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  	import org.swtk.commons.dict.wordnet.indexbyname.instance.i.n.a.WordnetNounIndexNameInstanceINA;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.i.n.b.WordnetNounIndexNameInstanceINB;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.i.n.c.WordnetNounIndexNameInstanceINC;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.i.n.d.WordnetNounIndexNameInstanceIND;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.i.n.e.WordnetNounIndexNameInstanceINE;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.i.n.f.WordnetNounIndexNameInstanceINF;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.i.n.g.WordnetNounIndexNameInstanceING;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.i.n.h.WordnetNounIndexNameInstanceINH;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.i.n.i.WordnetNounIndexNameInstanceINI;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.i.n.j.WordnetNounIndexNameInstanceINJ;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.i.n.k.WordnetNounIndexNameInstanceINK;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.i.n.l.WordnetNounIndexNameInstanceINL;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.i.n.m.WordnetNounIndexNameInstanceINM;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.i.n.n.WordnetNounIndexNameInstanceINN;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.i.n.o.WordnetNounIndexNameInstanceINO;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.i.n.p.WordnetNounIndexNameInstanceINP;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.i.n.q.WordnetNounIndexNameInstanceINQ;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.i.n.r.WordnetNounIndexNameInstanceINR;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.i.n.s.WordnetNounIndexNameInstanceINS;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.i.n.t.WordnetNounIndexNameInstanceINT;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.i.n.u.WordnetNounIndexNameInstanceINU;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.i.n.v.WordnetNounIndexNameInstanceINV;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.i.n.w.WordnetNounIndexNameInstanceINW;
  import com.trimc.blogger.commons.exception.BusinessException;  public final class WordnetNounIndexNameControllerIN {  	public static Collection<IndexNoun> get(final String TERM) throws BusinessException { 		if (TERM.length() < 3) throw new BusinessException("TERM not found (term = %s)", TERM); 		 		String key = TERM.replaceAll(" ", "").substring(0, 3).toLowerCase(); 			if ("ina".equals(key)) return WordnetNounIndexNameInstanceINA.get(TERM);
	if ("inb".equals(key)) return WordnetNounIndexNameInstanceINB.get(TERM);
	if ("inc".equals(key)) return WordnetNounIndexNameInstanceINC.get(TERM);
	if ("ind".equals(key)) return WordnetNounIndexNameInstanceIND.get(TERM);
	if ("ine".equals(key)) return WordnetNounIndexNameInstanceINE.get(TERM);
	if ("inf".equals(key)) return WordnetNounIndexNameInstanceINF.get(TERM);
	if ("ing".equals(key)) return WordnetNounIndexNameInstanceING.get(TERM);
	if ("inh".equals(key)) return WordnetNounIndexNameInstanceINH.get(TERM);
	if ("ini".equals(key)) return WordnetNounIndexNameInstanceINI.get(TERM);
	if ("inj".equals(key)) return WordnetNounIndexNameInstanceINJ.get(TERM);
	if ("ink".equals(key)) return WordnetNounIndexNameInstanceINK.get(TERM);
	if ("inl".equals(key)) return WordnetNounIndexNameInstanceINL.get(TERM);
	if ("inm".equals(key)) return WordnetNounIndexNameInstanceINM.get(TERM);
	if ("inn".equals(key)) return WordnetNounIndexNameInstanceINN.get(TERM);
	if ("ino".equals(key)) return WordnetNounIndexNameInstanceINO.get(TERM);
	if ("inp".equals(key)) return WordnetNounIndexNameInstanceINP.get(TERM);
	if ("inq".equals(key)) return WordnetNounIndexNameInstanceINQ.get(TERM);
	if ("inr".equals(key)) return WordnetNounIndexNameInstanceINR.get(TERM);
	if ("ins".equals(key)) return WordnetNounIndexNameInstanceINS.get(TERM);
	if ("int".equals(key)) return WordnetNounIndexNameInstanceINT.get(TERM);
	if ("inu".equals(key)) return WordnetNounIndexNameInstanceINU.get(TERM);
	if ("inv".equals(key)) return WordnetNounIndexNameInstanceINV.get(TERM);
	if ("inw".equals(key)) return WordnetNounIndexNameInstanceINW.get(TERM);
  		throw new BusinessException("TERM not found (term = %s)", TERM); 	}  	public static Collection<String> terms() throws BusinessException { 		Set<String> set = new TreeSet<String>();  			set.addAll(WordnetNounIndexNameInstanceINA.terms());
	set.addAll(WordnetNounIndexNameInstanceINB.terms());
	set.addAll(WordnetNounIndexNameInstanceINC.terms());
	set.addAll(WordnetNounIndexNameInstanceIND.terms());
	set.addAll(WordnetNounIndexNameInstanceINE.terms());
	set.addAll(WordnetNounIndexNameInstanceINF.terms());
	set.addAll(WordnetNounIndexNameInstanceING.terms());
	set.addAll(WordnetNounIndexNameInstanceINH.terms());
	set.addAll(WordnetNounIndexNameInstanceINI.terms());
	set.addAll(WordnetNounIndexNameInstanceINJ.terms());
	set.addAll(WordnetNounIndexNameInstanceINK.terms());
	set.addAll(WordnetNounIndexNameInstanceINL.terms());
	set.addAll(WordnetNounIndexNameInstanceINM.terms());
	set.addAll(WordnetNounIndexNameInstanceINN.terms());
	set.addAll(WordnetNounIndexNameInstanceINO.terms());
	set.addAll(WordnetNounIndexNameInstanceINP.terms());
	set.addAll(WordnetNounIndexNameInstanceINQ.terms());
	set.addAll(WordnetNounIndexNameInstanceINR.terms());
	set.addAll(WordnetNounIndexNameInstanceINS.terms());
	set.addAll(WordnetNounIndexNameInstanceINT.terms());
	set.addAll(WordnetNounIndexNameInstanceINU.terms());
	set.addAll(WordnetNounIndexNameInstanceINV.terms());
	set.addAll(WordnetNounIndexNameInstanceINW.terms());
  		return set; 	} }