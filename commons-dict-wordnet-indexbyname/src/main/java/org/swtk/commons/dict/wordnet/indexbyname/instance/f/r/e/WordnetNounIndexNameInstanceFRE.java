package org.swtk.commons.dict.wordnet.indexbyname.instance.f.r.e;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceFRE {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"freak\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09788499\", \"10129212\"]}");
	add("{\"term\":\"freakishness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04805434\"]}");
	add("{\"term\":\"freckle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05252535\"]}");
	add("{\"term\":\"frederick\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09117375\"]}");
	add("{\"term\":\"fredericksburg\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01281835\", \"09174835\"]}");
	add("{\"term\":\"fredericton\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08843646\"]}");
	add("{\"term\":\"free\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07964544\"]}");
	add("{\"term\":\"freebee\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13293568\"]}");
	add("{\"term\":\"freebie\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13293568\"]}");
	add("{\"term\":\"freebooter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10462744\"]}");
	add("{\"term\":\"freedman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10129754\"]}");
	add("{\"term\":\"freedom\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"14552475\", \"14015308\"]}");
	add("{\"term\":\"freedwoman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10129754\"]}");
	add("{\"term\":\"freehold\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13264032\", \"13264159\"]}");
	add("{\"term\":\"freeholder\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10130056\"]}");
	add("{\"term\":\"freeing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00096322\"]}");
	add("{\"term\":\"freelance\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10130190\"]}");
	add("{\"term\":\"freelancer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10130190\"]}");
	add("{\"term\":\"freeloader\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10130662\"]}");
	add("{\"term\":\"freemail\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06290458\"]}");
	add("{\"term\":\"freeman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10130792\"]}");
	add("{\"term\":\"freemason\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10130913\"]}");
	add("{\"term\":\"freemasonry\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08252434\", \"13953106\"]}");
	add("{\"term\":\"freesia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12437567\"]}");
	add("{\"term\":\"freestone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07754081\"]}");
	add("{\"term\":\"freestyle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07475608\"]}");
	add("{\"term\":\"freetail\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02152072\"]}");
	add("{\"term\":\"freethinker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10020122\"]}");
	add("{\"term\":\"freethinking\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05975825\"]}");
	add("{\"term\":\"freetown\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09019502\"]}");
	add("{\"term\":\"freeware\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06580041\"]}");
	add("{\"term\":\"freeway\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03311555\"]}");
	add("{\"term\":\"freewheel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03398597\"]}");
	add("{\"term\":\"freewheeler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10129431\"]}");
	add("{\"term\":\"freewoman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10130792\"]}");
	add("{\"term\":\"freeze\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00810428\", \"01065621\", \"11460617\", \"13505847\"]}");
	add("{\"term\":\"freezer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03175301\"]}");
	add("{\"term\":\"freezing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13505847\"]}");
	add("{\"term\":\"fregata\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02055293\"]}");
	add("{\"term\":\"fregatidae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02055165\"]}");
	add("{\"term\":\"freight\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13347220\", \"01108177\", \"02967841\"]}");
	add("{\"term\":\"freightage\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01108177\", \"13347220\"]}");
	add("{\"term\":\"freighter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02881464\"]}");
	add("{\"term\":\"fremont\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11001565\"]}");
	add("{\"term\":\"fremontia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12219145\"]}");
	add("{\"term\":\"fremontodendron\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12219145\"]}");
	add("{\"term\":\"french\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"11001746\", \"09752317\", \"06977643\"]}");
	add("{\"term\":\"frenchman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09727801\"]}");
	add("{\"term\":\"frenchwoman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09727801\"]}");
	add("{\"term\":\"frenzy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14415281\"]}");
	add("{\"term\":\"freon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14898882\"]}");
	add("{\"term\":\"frequence\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15303267\"]}");
	add("{\"term\":\"frequency\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"13619480\", \"13843782\", \"15303267\"]}");
	add("{\"term\":\"frequentative\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06484712\"]}");
	add("{\"term\":\"frequenter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10427471\"]}");
	add("{\"term\":\"fresco\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00938921\", \"03400466\"]}");
	add("{\"term\":\"freshener\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03400581\"]}");
	add("{\"term\":\"fresher\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10131457\"]}");
	add("{\"term\":\"freshet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07421737\"]}");
	add("{\"term\":\"freshman\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10375148\", \"10131457\"]}");
	add("{\"term\":\"freshness\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"04923043\", \"05642900\", \"14074538\", \"04807845\", \"04933905\"]}");
	add("{\"term\":\"freshwater\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15033893\"]}");
	add("{\"term\":\"fresnel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11001957\"]}");
	add("{\"term\":\"fresno\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09085729\"]}");
	add("{\"term\":\"fret\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03400910\", \"03401147\", \"04690359\", \"14426964\"]}");
	add("{\"term\":\"fretfulness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07568195\"]}");
	add("{\"term\":\"fretsaw\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03603976\"]}");
	add("{\"term\":\"fretwork\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03652230\"]}");
	add("{\"term\":\"freud\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11002123\"]}");
	add("{\"term\":\"freudian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10131548\"]}");
	add("{\"term\":\"frey\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09603299\"]}");
	add("{\"term\":\"freya\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09603528\"]}");
	add("{\"term\":\"freyja\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09603528\"]}");
	add("{\"term\":\"freyr\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09603299\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }