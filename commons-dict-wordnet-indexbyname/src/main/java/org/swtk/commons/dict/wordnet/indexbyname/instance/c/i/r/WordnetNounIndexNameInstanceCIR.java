package org.swtk.commons.dict.wordnet.indexbyname.instance.c.i.r;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceCIR {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"cira\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08036034\"]}");
	add("{\"term\":\"circadian rhythm\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15160652\"]}");
	add("{\"term\":\"circaea\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12361929\"]}");
	add("{\"term\":\"circaea alpina\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12362312\"]}");
	add("{\"term\":\"circaea lutetiana\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12362448\"]}");
	add("{\"term\":\"circaetus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01613067\"]}");
	add("{\"term\":\"circassian\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06991187\", \"08505685\", \"09660561\"]}");
	add("{\"term\":\"circassian walnut\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12339931\"]}");
	add("{\"term\":\"circe\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09517114\"]}");
	add("{\"term\":\"circinus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09268276\"]}");
	add("{\"term\":\"circis siliquastrum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12534118\"]}");
	add("{\"term\":\"circle\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"03036796\", \"03037004\", \"04042970\", \"04473168\", \"00296016\", \"13896556\", \"08257090\", \"13896141\"]}");
	add("{\"term\":\"circle of curvature\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05110189\"]}");
	add("{\"term\":\"circle of willis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05349922\"]}");
	add("{\"term\":\"circlet\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03037252\", \"13896488\"]}");
	add("{\"term\":\"circuit\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00296016\", \"04044585\", \"08347441\", \"08531740\", \"08634560\", \"00311492\", \"03037347\"]}");
	add("{\"term\":\"circuit board\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03037971\"]}");
	add("{\"term\":\"circuit breaker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03038229\"]}");
	add("{\"term\":\"circuit card\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03037971\"]}");
	add("{\"term\":\"circuit court of appeals\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08347225\"]}");
	add("{\"term\":\"circuitry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03038390\"]}");
	add("{\"term\":\"circular\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07265007\"]}");
	add("{\"term\":\"circular file\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04562986\"]}");
	add("{\"term\":\"circular function\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13809172\"]}");
	add("{\"term\":\"circular measure\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13632230\"]}");
	add("{\"term\":\"circular plane\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03038501\"]}");
	add("{\"term\":\"circular saw\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03038648\"]}");
	add("{\"term\":\"circularisation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01103658\"]}");
	add("{\"term\":\"circularity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05080728\"]}");
	add("{\"term\":\"circularization\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01103658\"]}");
	add("{\"term\":\"circulating decimal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13758516\"]}");
	add("{\"term\":\"circulating library\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03661417\"]}");
	add("{\"term\":\"circulation\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00369128\", \"07326839\", \"13613587\", \"13613801\", \"11459145\", \"06263501\"]}");
	add("{\"term\":\"circulatory failure\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14135583\"]}");
	add("{\"term\":\"circulatory system\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05519269\"]}");
	add("{\"term\":\"circumcision\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00396462\", \"01033226\", \"15218106\"]}");
	add("{\"term\":\"circumduction\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00334559\"]}");
	add("{\"term\":\"circumference\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"05108937\", \"08531740\", \"05108523\"]}");
	add("{\"term\":\"circumflex\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06835982\"]}");
	add("{\"term\":\"circumflex artery\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05350047\"]}");
	add("{\"term\":\"circumflex artery of the thigh\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05350221\"]}");
	add("{\"term\":\"circumflex femoral vein\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05371548\"]}");
	add("{\"term\":\"circumflex humeral artery\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05350402\"]}");
	add("{\"term\":\"circumflex iliac artery\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05350585\"]}");
	add("{\"term\":\"circumflex iliac vein\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05371416\"]}");
	add("{\"term\":\"circumflex scapular artery\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05350766\"]}");
	add("{\"term\":\"circumflex vein\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05371224\"]}");
	add("{\"term\":\"circumlocution\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06774053\", \"07104571\"]}");
	add("{\"term\":\"circumnavigation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00297089\"]}");
	add("{\"term\":\"circumscription\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01151975\"]}");
	add("{\"term\":\"circumspection\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04898379\", \"05623283\"]}");
	add("{\"term\":\"circumstance\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"07465938\", \"05831106\", \"14536419\", \"13965927\"]}");
	add("{\"term\":\"circumstances\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13350511\", \"14496806\"]}");
	add("{\"term\":\"circumstantial evidence\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06748282\"]}");
	add("{\"term\":\"circumvention\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00742983\"]}");
	add("{\"term\":\"circumvolution\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00343250\"]}");
	add("{\"term\":\"circus\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"01612190\", \"03038845\", \"03039074\", \"00553716\", \"00520795\", \"08206141\"]}");
	add("{\"term\":\"circus acrobat\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09943019\"]}");
	add("{\"term\":\"circus aeruginosus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01612597\"]}");
	add("{\"term\":\"circus cyaneus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01612867\"]}");
	add("{\"term\":\"circus pygargus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01612741\"]}");
	add("{\"term\":\"circus tent\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03039237\"]}");
	add("{\"term\":\"cirio\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12402750\"]}");
	add("{\"term\":\"cirque\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09268421\"]}");
	add("{\"term\":\"cirrhosis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14139964\"]}");
	add("{\"term\":\"cirrhosis of the liver\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14139964\"]}");
	add("{\"term\":\"cirrhus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13123705\"]}");
	add("{\"term\":\"cirriped\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02000837\"]}");
	add("{\"term\":\"cirripede\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02000837\"]}");
	add("{\"term\":\"cirripedia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02000673\"]}");
	add("{\"term\":\"cirrocumulus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09268556\"]}");
	add("{\"term\":\"cirrocumulus cloud\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09268556\"]}");
	add("{\"term\":\"cirrostratus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09268739\"]}");
	add("{\"term\":\"cirrostratus cloud\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09268739\"]}");
	add("{\"term\":\"cirrus\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01902982\", \"09268870\", \"13123705\"]}");
	add("{\"term\":\"cirrus cloud\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09268870\"]}");
	add("{\"term\":\"cirsium\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11974231\"]}");
	add("{\"term\":\"cirsium arvense\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11974630\"]}");
	add("{\"term\":\"cirsium discolor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11974814\"]}");
	add("{\"term\":\"cirsium eriophorum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11975111\"]}");
	add("{\"term\":\"cirsium flodmanii\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11974953\"]}");
	add("{\"term\":\"cirsium helenioides\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11975267\"]}");
	add("{\"term\":\"cirsium heterophylum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11975267\"]}");
	add("{\"term\":\"cirsium lanceolatum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11975622\"]}");
	add("{\"term\":\"cirsium rivulare\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11975509\"]}");
	add("{\"term\":\"cirsium vulgare\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11975622\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }