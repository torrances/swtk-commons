package org.swtk.commons.dict.wordnet.indexbyname.controller.a.n;  import java.util.Collection; import java.util.Set; import java.util.TreeSet;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.n.a.WordnetNounIndexNameInstanceANA;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.n.c.WordnetNounIndexNameInstanceANC;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.n.d.WordnetNounIndexNameInstanceAND;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.n.e.WordnetNounIndexNameInstanceANE;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.n.g.WordnetNounIndexNameInstanceANG;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.n.h.WordnetNounIndexNameInstanceANH;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.n.i.WordnetNounIndexNameInstanceANI;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.n.j.WordnetNounIndexNameInstanceANJ;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.n.k.WordnetNounIndexNameInstanceANK;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.n.l.WordnetNounIndexNameInstanceANL;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.n.n.WordnetNounIndexNameInstanceANN;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.n.o.WordnetNounIndexNameInstanceANO;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.n.p.WordnetNounIndexNameInstanceANP;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.n.s.WordnetNounIndexNameInstanceANS;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.n.t.WordnetNounIndexNameInstanceANT;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.n.u.WordnetNounIndexNameInstanceANU;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.n.v.WordnetNounIndexNameInstanceANV;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.n.x.WordnetNounIndexNameInstanceANX;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.n.z.WordnetNounIndexNameInstanceANZ;
  import com.trimc.blogger.commons.exception.BusinessException;  public final class WordnetNounIndexNameControllerAN {  	public static Collection<IndexNoun> get(final String TERM) throws BusinessException { 		if (TERM.length() < 3) throw new BusinessException("TERM not found (term = %s)", TERM); 		 		String key = TERM.substring(0, 3).toLowerCase(); 			if ("ana".equals(key)) return WordnetNounIndexNameInstanceANA.get(TERM);
	if ("anc".equals(key)) return WordnetNounIndexNameInstanceANC.get(TERM);
	if ("and".equals(key)) return WordnetNounIndexNameInstanceAND.get(TERM);
	if ("ane".equals(key)) return WordnetNounIndexNameInstanceANE.get(TERM);
	if ("ang".equals(key)) return WordnetNounIndexNameInstanceANG.get(TERM);
	if ("anh".equals(key)) return WordnetNounIndexNameInstanceANH.get(TERM);
	if ("ani".equals(key)) return WordnetNounIndexNameInstanceANI.get(TERM);
	if ("anj".equals(key)) return WordnetNounIndexNameInstanceANJ.get(TERM);
	if ("ank".equals(key)) return WordnetNounIndexNameInstanceANK.get(TERM);
	if ("anl".equals(key)) return WordnetNounIndexNameInstanceANL.get(TERM);
	if ("ann".equals(key)) return WordnetNounIndexNameInstanceANN.get(TERM);
	if ("ano".equals(key)) return WordnetNounIndexNameInstanceANO.get(TERM);
	if ("anp".equals(key)) return WordnetNounIndexNameInstanceANP.get(TERM);
	if ("ans".equals(key)) return WordnetNounIndexNameInstanceANS.get(TERM);
	if ("ant".equals(key)) return WordnetNounIndexNameInstanceANT.get(TERM);
	if ("anu".equals(key)) return WordnetNounIndexNameInstanceANU.get(TERM);
	if ("anv".equals(key)) return WordnetNounIndexNameInstanceANV.get(TERM);
	if ("anx".equals(key)) return WordnetNounIndexNameInstanceANX.get(TERM);
	if ("anz".equals(key)) return WordnetNounIndexNameInstanceANZ.get(TERM);
  		throw new BusinessException("TERM not found (term = %s)", TERM); 	} 	 	public static Collection<String> terms() throws BusinessException { 		Set<String> set = new TreeSet<String>();  			set.addAll(WordnetNounIndexNameInstanceANA.terms());
	set.addAll(WordnetNounIndexNameInstanceANC.terms());
	set.addAll(WordnetNounIndexNameInstanceAND.terms());
	set.addAll(WordnetNounIndexNameInstanceANE.terms());
	set.addAll(WordnetNounIndexNameInstanceANG.terms());
	set.addAll(WordnetNounIndexNameInstanceANH.terms());
	set.addAll(WordnetNounIndexNameInstanceANI.terms());
	set.addAll(WordnetNounIndexNameInstanceANJ.terms());
	set.addAll(WordnetNounIndexNameInstanceANK.terms());
	set.addAll(WordnetNounIndexNameInstanceANL.terms());
	set.addAll(WordnetNounIndexNameInstanceANN.terms());
	set.addAll(WordnetNounIndexNameInstanceANO.terms());
	set.addAll(WordnetNounIndexNameInstanceANP.terms());
	set.addAll(WordnetNounIndexNameInstanceANS.terms());
	set.addAll(WordnetNounIndexNameInstanceANT.terms());
	set.addAll(WordnetNounIndexNameInstanceANU.terms());
	set.addAll(WordnetNounIndexNameInstanceANV.terms());
	set.addAll(WordnetNounIndexNameInstanceANX.terms());
	set.addAll(WordnetNounIndexNameInstanceANZ.terms());
  		return set; 	} }