package org.swtk.commons.dict.wordnet.indexbyname.instance.u.p.p;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceUPP {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"upper\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02707012\", \"04521654\", \"04521943\"]}");
	add("{\"term\":\"upper avon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09234851\"]}");
	add("{\"term\":\"upper avon river\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09234851\"]}");
	add("{\"term\":\"upper balcony\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04171260\"]}");
	add("{\"term\":\"upper berth\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04521943\"]}");
	add("{\"term\":\"upper bound\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13926861\"]}");
	add("{\"term\":\"upper cannon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04084706\"]}");
	add("{\"term\":\"upper carboniferous\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15152459\"]}");
	add("{\"term\":\"upper carboniferous period\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15152459\"]}");
	add("{\"term\":\"upper class\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08403096\"]}");
	add("{\"term\":\"upper crust\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08403096\"]}");
	add("{\"term\":\"upper deck\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04522033\"]}");
	add("{\"term\":\"upper egypt\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08918229\"]}");
	add("{\"term\":\"upper hand\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05166506\"]}");
	add("{\"term\":\"upper jaw\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05291631\"]}");
	add("{\"term\":\"upper jawbone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05291631\"]}");
	add("{\"term\":\"upper limit\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08610454\", \"13798337\"]}");
	add("{\"term\":\"upper mantle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09489887\"]}");
	add("{\"term\":\"upper paleolithic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15257844\"]}");
	add("{\"term\":\"upper peninsula\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09489993\"]}");
	add("{\"term\":\"upper respiratory infection\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14203695\"]}");
	add("{\"term\":\"upper respiratory tract\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05518157\"]}");
	add("{\"term\":\"upper side\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08681092\"]}");
	add("{\"term\":\"upper surface\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04522194\"]}");
	add("{\"term\":\"upper tunguska\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09220310\"]}");
	add("{\"term\":\"upper volta\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08916686\"]}");
	add("{\"term\":\"uppercase\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06837277\"]}");
	add("{\"term\":\"uppercut\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01177685\"]}");
	add("{\"term\":\"uppishness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04846240\"]}");
	add("{\"term\":\"uppityness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04846240\"]}");
	add("{\"term\":\"uppp\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00690982\"]}");
	add("{\"term\":\"uppsala\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08784679\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }