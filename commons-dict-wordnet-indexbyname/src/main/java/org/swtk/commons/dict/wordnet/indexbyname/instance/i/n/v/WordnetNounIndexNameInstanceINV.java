package org.swtk.commons.dict.wordnet.indexbyname.instance.i.n.v;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceINV {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"invader\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10233732\"]}");
	add("{\"term\":\"invagination\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13523144\", \"14085814\"]}");
	add("{\"term\":\"invalid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10233900\"]}");
	add("{\"term\":\"invalidation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01243544\"]}");
	add("{\"term\":\"invalidator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10234060\"]}");
	add("{\"term\":\"invalidism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14085972\"]}");
	add("{\"term\":\"invalidity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04817762\"]}");
	add("{\"term\":\"invalidness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04817762\"]}");
	add("{\"term\":\"invaluableness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05148469\"]}");
	add("{\"term\":\"invar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14945552\"]}");
	add("{\"term\":\"invariability\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04747172\", \"04776695\"]}");
	add("{\"term\":\"invariable\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05867520\"]}");
	add("{\"term\":\"invariableness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04747172\"]}");
	add("{\"term\":\"invariance\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04746235\", \"04747172\"]}");
	add("{\"term\":\"invariant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05858959\"]}");
	add("{\"term\":\"invasion\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07346913\", \"07444576\", \"00978617\"]}");
	add("{\"term\":\"invasion of iwo\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01284515\"]}");
	add("{\"term\":\"invasion of privacy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00735601\"]}");
	add("{\"term\":\"invective\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06734353\"]}");
	add("{\"term\":\"invention\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00942228\", \"03587827\", \"05641230\"]}");
	add("{\"term\":\"inventiveness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05641517\"]}");
	add("{\"term\":\"inventor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10234307\"]}");
	add("{\"term\":\"inventory\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"01013367\", \"05641904\", \"13433706\", \"04328672\", \"06504655\"]}");
	add("{\"term\":\"inventory accounting\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00620978\"]}");
	add("{\"term\":\"inventory control\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00621129\"]}");
	add("{\"term\":\"inventory item\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06494750\"]}");
	add("{\"term\":\"inventorying\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01013367\"]}");
	add("{\"term\":\"inverse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13881030\"]}");
	add("{\"term\":\"inverse cosecant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13811348\"]}");
	add("{\"term\":\"inverse cosine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13810065\"]}");
	add("{\"term\":\"inverse cotangent\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13810714\"]}");
	add("{\"term\":\"inverse function\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13806749\"]}");
	add("{\"term\":\"inverse secant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13811032\"]}");
	add("{\"term\":\"inverse sine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13809763\"]}");
	add("{\"term\":\"inverse tangent\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13810394\"]}");
	add("{\"term\":\"inversion\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00336479\", \"00336640\", \"00858904\", \"07043661\", \"07115806\", \"07440326\", \"13523408\", \"14127267\", \"11481962\"]}");
	add("{\"term\":\"invert soap\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14827865\"]}");
	add("{\"term\":\"invert sugar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14945915\"]}");
	add("{\"term\":\"invertase\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14945760\"]}");
	add("{\"term\":\"invertebrate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01908302\"]}");
	add("{\"term\":\"invertebrate foot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02324865\"]}");
	add("{\"term\":\"inverted comma\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06857249\"]}");
	add("{\"term\":\"inverted hang\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00437642\"]}");
	add("{\"term\":\"inverted pleat\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03588009\"]}");
	add("{\"term\":\"inverter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03588128\"]}");
	add("{\"term\":\"investigating\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00635107\"]}");
	add("{\"term\":\"investigation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00635107\", \"05808619\"]}");
	add("{\"term\":\"investigator\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10028930\", \"10235293\", \"10542669\"]}");
	add("{\"term\":\"investing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01101341\"]}");
	add("{\"term\":\"investiture\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00199768\", \"07468248\"]}");
	add("{\"term\":\"investment\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00199768\", \"00830123\", \"01461257\", \"04654542\", \"13354252\", \"01101341\"]}");
	add("{\"term\":\"investment adviser\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10235485\"]}");
	add("{\"term\":\"investment advisor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10235485\"]}");
	add("{\"term\":\"investment banker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10235623\"]}");
	add("{\"term\":\"investment company\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08087686\"]}");
	add("{\"term\":\"investment firm\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08087686\"]}");
	add("{\"term\":\"investment funds\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13354252\"]}");
	add("{\"term\":\"investment letter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13440928\"]}");
	add("{\"term\":\"investment trust\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08087686\"]}");
	add("{\"term\":\"investor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10235776\"]}");
	add("{\"term\":\"investors club\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08246808\"]}");
	add("{\"term\":\"invidia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00759688\"]}");
	add("{\"term\":\"invigilation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01138116\"]}");
	add("{\"term\":\"invigilator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10236073\"]}");
	add("{\"term\":\"invigoration\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01050390\", \"04639057\"]}");
	add("{\"term\":\"invigorator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09425579\"]}");
	add("{\"term\":\"invincibility\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05039183\"]}");
	add("{\"term\":\"invincible armada\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08310009\"]}");
	add("{\"term\":\"invirase\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04300746\"]}");
	add("{\"term\":\"invisibility\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05025075\"]}");
	add("{\"term\":\"invisible balance\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13431442\"]}");
	add("{\"term\":\"invisibleness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05025075\"]}");
	add("{\"term\":\"invitation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04696397\", \"07200808\"]}");
	add("{\"term\":\"invite\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07201321\"]}");
	add("{\"term\":\"invitee\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10170460\"]}");
	add("{\"term\":\"invocation\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00098064\", \"05987026\", \"07174947\", \"07204950\"]}");
	add("{\"term\":\"invoice\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06528946\"]}");
	add("{\"term\":\"involucre\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13176100\"]}");
	add("{\"term\":\"involuntariness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04652956\"]}");
	add("{\"term\":\"involuntary muscle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05468049\"]}");
	add("{\"term\":\"involuntary trust\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13383135\"]}");
	add("{\"term\":\"involution\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00407186\", \"00874089\", \"01241629\", \"04774107\", \"06326748\", \"13523600\"]}");
	add("{\"term\":\"involutional depression\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14414244\"]}");
	add("{\"term\":\"involvement\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"13947692\", \"13954922\", \"05690773\", \"13815716\", \"01241629\"]}");
	add("{\"term\":\"invulnerability\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05040836\", \"14562631\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }