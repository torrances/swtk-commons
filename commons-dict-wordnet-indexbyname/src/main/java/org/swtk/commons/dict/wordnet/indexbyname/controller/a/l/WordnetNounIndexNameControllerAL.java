package org.swtk.commons.dict.wordnet.indexbyname.controller.a.l;  import java.util.Collection; import java.util.Set; import java.util.TreeSet;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.l.a.WordnetNounIndexNameInstanceALA;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.l.b.WordnetNounIndexNameInstanceALB;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.l.c.WordnetNounIndexNameInstanceALC;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.l.d.WordnetNounIndexNameInstanceALD;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.l.e.WordnetNounIndexNameInstanceALE;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.l.f.WordnetNounIndexNameInstanceALF;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.l.g.WordnetNounIndexNameInstanceALG;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.l.h.WordnetNounIndexNameInstanceALH;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.l.i.WordnetNounIndexNameInstanceALI;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.l.k.WordnetNounIndexNameInstanceALK;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.l.l.WordnetNounIndexNameInstanceALL;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.l.m.WordnetNounIndexNameInstanceALM;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.l.n.WordnetNounIndexNameInstanceALN;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.l.o.WordnetNounIndexNameInstanceALO;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.l.p.WordnetNounIndexNameInstanceALP;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.l.s.WordnetNounIndexNameInstanceALS;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.l.t.WordnetNounIndexNameInstanceALT;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.l.u.WordnetNounIndexNameInstanceALU;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.l.v.WordnetNounIndexNameInstanceALV;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.l.y.WordnetNounIndexNameInstanceALY;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.l.z.WordnetNounIndexNameInstanceALZ;
  import com.trimc.blogger.commons.exception.BusinessException;  public final class WordnetNounIndexNameControllerAL {  	public static Collection<IndexNoun> get(final String TERM) throws BusinessException { 		if (TERM.length() < 3) throw new BusinessException("TERM not found (term = %s)", TERM); 		 		String key = TERM.substring(0, 3).toLowerCase(); 			if ("ala".equals(key)) return WordnetNounIndexNameInstanceALA.get(TERM);
	if ("alb".equals(key)) return WordnetNounIndexNameInstanceALB.get(TERM);
	if ("alc".equals(key)) return WordnetNounIndexNameInstanceALC.get(TERM);
	if ("ald".equals(key)) return WordnetNounIndexNameInstanceALD.get(TERM);
	if ("ale".equals(key)) return WordnetNounIndexNameInstanceALE.get(TERM);
	if ("alf".equals(key)) return WordnetNounIndexNameInstanceALF.get(TERM);
	if ("alg".equals(key)) return WordnetNounIndexNameInstanceALG.get(TERM);
	if ("alh".equals(key)) return WordnetNounIndexNameInstanceALH.get(TERM);
	if ("ali".equals(key)) return WordnetNounIndexNameInstanceALI.get(TERM);
	if ("alk".equals(key)) return WordnetNounIndexNameInstanceALK.get(TERM);
	if ("all".equals(key)) return WordnetNounIndexNameInstanceALL.get(TERM);
	if ("alm".equals(key)) return WordnetNounIndexNameInstanceALM.get(TERM);
	if ("aln".equals(key)) return WordnetNounIndexNameInstanceALN.get(TERM);
	if ("alo".equals(key)) return WordnetNounIndexNameInstanceALO.get(TERM);
	if ("alp".equals(key)) return WordnetNounIndexNameInstanceALP.get(TERM);
	if ("als".equals(key)) return WordnetNounIndexNameInstanceALS.get(TERM);
	if ("alt".equals(key)) return WordnetNounIndexNameInstanceALT.get(TERM);
	if ("alu".equals(key)) return WordnetNounIndexNameInstanceALU.get(TERM);
	if ("alv".equals(key)) return WordnetNounIndexNameInstanceALV.get(TERM);
	if ("aly".equals(key)) return WordnetNounIndexNameInstanceALY.get(TERM);
	if ("alz".equals(key)) return WordnetNounIndexNameInstanceALZ.get(TERM);
  		throw new BusinessException("TERM not found (term = %s)", TERM); 	} 	 	public static Collection<String> terms() throws BusinessException { 		Set<String> set = new TreeSet<String>();  			set.addAll(WordnetNounIndexNameInstanceALA.terms());
	set.addAll(WordnetNounIndexNameInstanceALB.terms());
	set.addAll(WordnetNounIndexNameInstanceALC.terms());
	set.addAll(WordnetNounIndexNameInstanceALD.terms());
	set.addAll(WordnetNounIndexNameInstanceALE.terms());
	set.addAll(WordnetNounIndexNameInstanceALF.terms());
	set.addAll(WordnetNounIndexNameInstanceALG.terms());
	set.addAll(WordnetNounIndexNameInstanceALH.terms());
	set.addAll(WordnetNounIndexNameInstanceALI.terms());
	set.addAll(WordnetNounIndexNameInstanceALK.terms());
	set.addAll(WordnetNounIndexNameInstanceALL.terms());
	set.addAll(WordnetNounIndexNameInstanceALM.terms());
	set.addAll(WordnetNounIndexNameInstanceALN.terms());
	set.addAll(WordnetNounIndexNameInstanceALO.terms());
	set.addAll(WordnetNounIndexNameInstanceALP.terms());
	set.addAll(WordnetNounIndexNameInstanceALS.terms());
	set.addAll(WordnetNounIndexNameInstanceALT.terms());
	set.addAll(WordnetNounIndexNameInstanceALU.terms());
	set.addAll(WordnetNounIndexNameInstanceALV.terms());
	set.addAll(WordnetNounIndexNameInstanceALY.terms());
	set.addAll(WordnetNounIndexNameInstanceALZ.terms());
  		return set; 	} }