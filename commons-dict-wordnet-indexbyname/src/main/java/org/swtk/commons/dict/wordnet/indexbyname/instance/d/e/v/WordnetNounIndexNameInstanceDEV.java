package org.swtk.commons.dict.wordnet.indexbyname.instance.d.e.v;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceDEV {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"de valera\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10951995\"]}");
	add("{\"term\":\"de vries\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10952246\"]}");
	add("{\"term\":\"devaluation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00354818\", \"00807185\"]}");
	add("{\"term\":\"devanagari\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06364189\"]}");
	add("{\"term\":\"devanagari script\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06364189\"]}");
	add("{\"term\":\"devastation\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00217881\", \"00969261\", \"07350014\", \"07525066\", \"14585734\"]}");
	add("{\"term\":\"developer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03187578\", \"10029716\"]}");
	add("{\"term\":\"developing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13485760\"]}");
	add("{\"term\":\"developing country\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08183945\"]}");
	add("{\"term\":\"development\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"07082671\", \"13485760\", \"14446275\", \"08566645\", \"00950022\", \"07438160\", \"13510240\", \"13486023\", \"00251126\"]}");
	add("{\"term\":\"developmental age\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04932055\"]}");
	add("{\"term\":\"developmental anatomy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06069090\"]}");
	add("{\"term\":\"developmental learning\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05761204\"]}");
	add("{\"term\":\"developmental psychology\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06148392\"]}");
	add("{\"term\":\"developmentally challenged\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07965557\"]}");
	add("{\"term\":\"deverbal noun\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06331307\"]}");
	add("{\"term\":\"devi\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09548414\"]}");
	add("{\"term\":\"deviance\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00738697\", \"14527267\"]}");
	add("{\"term\":\"deviant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10438792\"]}");
	add("{\"term\":\"deviate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10438792\"]}");
	add("{\"term\":\"deviated nasal septum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14116578\"]}");
	add("{\"term\":\"deviated septum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14116407\"]}");
	add("{\"term\":\"deviation\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00351206\", \"00738697\", \"04810025\", \"06031640\", \"07380889\"]}");
	add("{\"term\":\"deviationism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00056752\"]}");
	add("{\"term\":\"deviationist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10029897\"]}");
	add("{\"term\":\"device\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"03190246\", \"03190430\", \"00172070\", \"07082884\", \"03187746\"]}");
	add("{\"term\":\"device characteristic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04925047\"]}");
	add("{\"term\":\"device driver\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06586649\"]}");
	add("{\"term\":\"devices\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06208611\"]}");
	add("{\"term\":\"devil\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"10349658\", \"10189012\", \"07140494\", \"09565450\", \"09566482\"]}");
	add("{\"term\":\"devil dog\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10313800\"]}");
	add("{\"term\":\"devil grass\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12136265\"]}");
	add("{\"term\":\"devil lily\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12448071\"]}");
	add("{\"term\":\"devil nettle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12945939\"]}");
	add("{\"term\":\"devil ray\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01503495\"]}");
	add("{\"term\":\"devil tree\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11790725\"]}");
	add("{\"term\":\"devil worshiper\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10030179\"]}");
	add("{\"term\":\"deviled egg\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07858409\"]}");
	add("{\"term\":\"devilfish\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01502732\", \"01972805\", \"02068898\"]}");
	add("{\"term\":\"devilment\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00737673\"]}");
	add("{\"term\":\"devilry\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00737673\", \"00747241\"]}");
	add("{\"term\":\"deviltry\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00737673\", \"00747241\"]}");
	add("{\"term\":\"devilwood\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12330147\"]}");
	add("{\"term\":\"deviousness\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04882751\", \"04926889\"]}");
	add("{\"term\":\"devisal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00942525\"]}");
	add("{\"term\":\"devise\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13284975\", \"13437414\"]}");
	add("{\"term\":\"devisee\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10030286\"]}");
	add("{\"term\":\"deviser\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10457939\"]}");
	add("{\"term\":\"devising\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00925809\"]}");
	add("{\"term\":\"devisor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10030421\"]}");
	add("{\"term\":\"devitalisation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00355009\"]}");
	add("{\"term\":\"devitalization\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00355009\"]}");
	add("{\"term\":\"devoir\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01232201\"]}");
	add("{\"term\":\"devolution\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01143481\", \"13481502\"]}");
	add("{\"term\":\"devolvement\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01143481\"]}");
	add("{\"term\":\"devon\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02409511\", \"08902171\"]}");
	add("{\"term\":\"devonian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15152934\"]}");
	add("{\"term\":\"devonian period\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15152934\"]}");
	add("{\"term\":\"devonshire\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08902171\"]}");
	add("{\"term\":\"devonshire cream\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07863429\"]}");
	add("{\"term\":\"devotedness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07559879\"]}");
	add("{\"term\":\"devotee\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10097373\"]}");
	add("{\"term\":\"devotion\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"01044796\", \"01046545\", \"01209043\", \"07559879\"]}");
	add("{\"term\":\"devotional\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01034842\"]}");
	add("{\"term\":\"devourer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10030518\"]}");
	add("{\"term\":\"devoutness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04834230\"]}");
	add("{\"term\":\"devries\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10952246\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }