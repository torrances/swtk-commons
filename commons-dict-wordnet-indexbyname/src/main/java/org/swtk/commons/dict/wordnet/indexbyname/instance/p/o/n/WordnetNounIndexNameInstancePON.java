package org.swtk.commons.dict.wordnet.indexbyname.instance.p.o.n;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstancePON {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"ponca\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06924534\", \"09685911\"]}");
	add("{\"term\":\"ponce\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10453501\", \"10472308\"]}");
	add("{\"term\":\"poncho\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03987232\"]}");
	add("{\"term\":\"poncirus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12734874\"]}");
	add("{\"term\":\"pond\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09420266\"]}");
	add("{\"term\":\"ponderer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10359217\"]}");
	add("{\"term\":\"ponderosa\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11634871\"]}");
	add("{\"term\":\"ponderosity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05035003\"]}");
	add("{\"term\":\"ponderousness\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05035003\", \"05214097\"]}");
	add("{\"term\":\"pondweed\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"12635078\", \"12636471\"]}");
	add("{\"term\":\"pone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07704369\"]}");
	add("{\"term\":\"pong\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05723097\"]}");
	add("{\"term\":\"pongamia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12584072\"]}");
	add("{\"term\":\"pongee\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03987344\"]}");
	add("{\"term\":\"pongid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02482784\"]}");
	add("{\"term\":\"pongidae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02482527\"]}");
	add("{\"term\":\"pongo\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02482977\"]}");
	add("{\"term\":\"poniard\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03987452\"]}");
	add("{\"term\":\"ponka\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06924534\", \"09685911\"]}");
	add("{\"term\":\"pons\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05508643\", \"11262311\"]}");
	add("{\"term\":\"ponselle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11262459\"]}");
	add("{\"term\":\"ponstel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03748022\"]}");
	add("{\"term\":\"pontederia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12630603\"]}");
	add("{\"term\":\"pontederiaceae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12630399\"]}");
	add("{\"term\":\"pontiac\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11262586\"]}");
	add("{\"term\":\"pontifex\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10472448\"]}");
	add("{\"term\":\"pontiff\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10473089\"]}");
	add("{\"term\":\"pontifical\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03987698\"]}");
	add("{\"term\":\"pontificate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08070012\"]}");
	add("{\"term\":\"pontoon\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03987822\", \"03987924\"]}");
	add("{\"term\":\"pontos\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09591905\"]}");
	add("{\"term\":\"pontus\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08719533\", \"09591905\"]}");
	add("{\"term\":\"pony\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"02385089\", \"04213292\", \"06358595\", \"02387750\", \"02382987\"]}");
	add("{\"term\":\"ponycart\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03988282\"]}");
	add("{\"term\":\"ponytail\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05267863\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }