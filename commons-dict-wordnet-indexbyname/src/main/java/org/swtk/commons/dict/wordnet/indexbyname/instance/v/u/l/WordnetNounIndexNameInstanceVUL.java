package org.swtk.commons.dict.wordnet.indexbyname.instance.v.u.l;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceVUL {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"vulcan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09585295\"]}");
	add("{\"term\":\"vulcanisation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13595118\"]}");
	add("{\"term\":\"vulcaniser\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10781187\"]}");
	add("{\"term\":\"vulcanite\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15032101\"]}");
	add("{\"term\":\"vulcanization\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13595118\"]}");
	add("{\"term\":\"vulcanized fiber\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03336189\"]}");
	add("{\"term\":\"vulcanizer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10781187\"]}");
	add("{\"term\":\"vulcanology\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06130260\"]}");
	add("{\"term\":\"vulgar latin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06976171\"]}");
	add("{\"term\":\"vulgarian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10781361\"]}");
	add("{\"term\":\"vulgarisation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00273921\", \"01270513\"]}");
	add("{\"term\":\"vulgariser\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10474308\", \"10781526\"]}");
	add("{\"term\":\"vulgarism\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04824511\", \"07139048\"]}");
	add("{\"term\":\"vulgarity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04824511\"]}");
	add("{\"term\":\"vulgarization\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00273921\", \"01270513\"]}");
	add("{\"term\":\"vulgarizer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10474308\", \"10781526\"]}");
	add("{\"term\":\"vulgate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06460264\"]}");
	add("{\"term\":\"vulnerability\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05050025\", \"14567533\"]}");
	add("{\"term\":\"vulpecula\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09496815\"]}");
	add("{\"term\":\"vulpes\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02121506\"]}");
	add("{\"term\":\"vulpes fulva\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02122129\"]}");
	add("{\"term\":\"vulpes macrotis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02122441\"]}");
	add("{\"term\":\"vulpes velox\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02122286\"]}");
	add("{\"term\":\"vulpes vulpes\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02121674\"]}");
	add("{\"term\":\"vultur\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01622316\"]}");
	add("{\"term\":\"vultur gryphus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01622476\"]}");
	add("{\"term\":\"vulture\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10312833\", \"01618959\"]}");
	add("{\"term\":\"vulva\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05529287\"]}");
	add("{\"term\":\"vulvar slit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05530435\"]}");
	add("{\"term\":\"vulvectomy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00717928\"]}");
	add("{\"term\":\"vulvitis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14382398\"]}");
	add("{\"term\":\"vulvovaginitis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14382478\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }