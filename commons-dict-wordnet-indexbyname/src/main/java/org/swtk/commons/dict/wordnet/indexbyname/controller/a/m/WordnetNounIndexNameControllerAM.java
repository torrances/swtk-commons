package org.swtk.commons.dict.wordnet.indexbyname.controller.a.m;  import java.util.Collection; import java.util.Set; import java.util.TreeSet;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.m.a.WordnetNounIndexNameInstanceAMA;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.m.b.WordnetNounIndexNameInstanceAMB;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.m.e.WordnetNounIndexNameInstanceAME;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.m.h.WordnetNounIndexNameInstanceAMH;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.m.i.WordnetNounIndexNameInstanceAMI;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.m.m.WordnetNounIndexNameInstanceAMM;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.m.n.WordnetNounIndexNameInstanceAMN;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.m.o.WordnetNounIndexNameInstanceAMO;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.m.p.WordnetNounIndexNameInstanceAMP;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.m.r.WordnetNounIndexNameInstanceAMR;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.m.s.WordnetNounIndexNameInstanceAMS;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.m.u.WordnetNounIndexNameInstanceAMU;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.m.y.WordnetNounIndexNameInstanceAMY;
  import com.trimc.blogger.commons.exception.BusinessException;  public final class WordnetNounIndexNameControllerAM {  	public static Collection<IndexNoun> get(final String TERM) throws BusinessException { 		if (TERM.length() < 3) throw new BusinessException("TERM not found (term = %s)", TERM); 		 		String key = TERM.substring(0, 3).toLowerCase(); 			if ("ama".equals(key)) return WordnetNounIndexNameInstanceAMA.get(TERM);
	if ("amb".equals(key)) return WordnetNounIndexNameInstanceAMB.get(TERM);
	if ("ame".equals(key)) return WordnetNounIndexNameInstanceAME.get(TERM);
	if ("amh".equals(key)) return WordnetNounIndexNameInstanceAMH.get(TERM);
	if ("ami".equals(key)) return WordnetNounIndexNameInstanceAMI.get(TERM);
	if ("amm".equals(key)) return WordnetNounIndexNameInstanceAMM.get(TERM);
	if ("amn".equals(key)) return WordnetNounIndexNameInstanceAMN.get(TERM);
	if ("amo".equals(key)) return WordnetNounIndexNameInstanceAMO.get(TERM);
	if ("amp".equals(key)) return WordnetNounIndexNameInstanceAMP.get(TERM);
	if ("amr".equals(key)) return WordnetNounIndexNameInstanceAMR.get(TERM);
	if ("ams".equals(key)) return WordnetNounIndexNameInstanceAMS.get(TERM);
	if ("amu".equals(key)) return WordnetNounIndexNameInstanceAMU.get(TERM);
	if ("amy".equals(key)) return WordnetNounIndexNameInstanceAMY.get(TERM);
  		throw new BusinessException("TERM not found (term = %s)", TERM); 	} 	 	public static Collection<String> terms() throws BusinessException { 		Set<String> set = new TreeSet<String>();  			set.addAll(WordnetNounIndexNameInstanceAMA.terms());
	set.addAll(WordnetNounIndexNameInstanceAMB.terms());
	set.addAll(WordnetNounIndexNameInstanceAME.terms());
	set.addAll(WordnetNounIndexNameInstanceAMH.terms());
	set.addAll(WordnetNounIndexNameInstanceAMI.terms());
	set.addAll(WordnetNounIndexNameInstanceAMM.terms());
	set.addAll(WordnetNounIndexNameInstanceAMN.terms());
	set.addAll(WordnetNounIndexNameInstanceAMO.terms());
	set.addAll(WordnetNounIndexNameInstanceAMP.terms());
	set.addAll(WordnetNounIndexNameInstanceAMR.terms());
	set.addAll(WordnetNounIndexNameInstanceAMS.terms());
	set.addAll(WordnetNounIndexNameInstanceAMU.terms());
	set.addAll(WordnetNounIndexNameInstanceAMY.terms());
  		return set; 	} }