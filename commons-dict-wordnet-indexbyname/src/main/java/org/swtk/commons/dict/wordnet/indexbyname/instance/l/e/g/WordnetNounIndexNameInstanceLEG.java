package org.swtk.commons.dict.wordnet.indexbyname.instance.l.e.g;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceLEG {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"le gallienne\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11144821\"]}");
	add("{\"term\":\"leg\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"00307726\", \"00308002\", \"03659902\", \"03912225\", \"07671114\", \"13936864\", \"03660152\", \"05569140\", \"05568420\"]}");
	add("{\"term\":\"leg bone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05601792\"]}");
	add("{\"term\":\"leg covering\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03660398\"]}");
	add("{\"term\":\"leg curl\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00631508\"]}");
	add("{\"term\":\"leg curling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00631508\"]}");
	add("{\"term\":\"leg exercise\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00631151\"]}");
	add("{\"term\":\"leg extensor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00631641\"]}");
	add("{\"term\":\"leg of lamb\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07684333\"]}");
	add("{\"term\":\"legacy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13284678\"]}");
	add("{\"term\":\"legal action\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01184392\"]}");
	add("{\"term\":\"legal age\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15177022\"]}");
	add("{\"term\":\"legal assistant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10417585\"]}");
	add("{\"term\":\"legal blindness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14150390\"]}");
	add("{\"term\":\"legal brief\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06555772\"]}");
	add("{\"term\":\"legal code\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06680537\"]}");
	add("{\"term\":\"legal community\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08129368\"]}");
	add("{\"term\":\"legal document\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06491336\"]}");
	add("{\"term\":\"legal duty\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01133836\"]}");
	add("{\"term\":\"legal expert\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10247655\"]}");
	add("{\"term\":\"legal fee\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13343014\"]}");
	add("{\"term\":\"legal fraud\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00779303\"]}");
	add("{\"term\":\"legal guardian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10751971\"]}");
	add("{\"term\":\"legal holiday\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15224427\"]}");
	add("{\"term\":\"legal injury\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00745429\"]}");
	add("{\"term\":\"legal instrument\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06491336\"]}");
	add("{\"term\":\"legal jointure\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13285241\"]}");
	add("{\"term\":\"legal opinion\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06563775\"]}");
	add("{\"term\":\"legal ouster\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01196821\"]}");
	add("{\"term\":\"legal philosophy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06171434\"]}");
	add("{\"term\":\"legal power\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05205695\"]}");
	add("{\"term\":\"legal principle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05965518\"]}");
	add("{\"term\":\"legal proceeding\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01187304\"]}");
	add("{\"term\":\"legal profession\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08129368\"]}");
	add("{\"term\":\"legal relation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13860404\"]}");
	add("{\"term\":\"legal representation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14024305\"]}");
	add("{\"term\":\"legal representative\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10272993\"]}");
	add("{\"term\":\"legal residence\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08576692\"]}");
	add("{\"term\":\"legal right\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05184812\"]}");
	add("{\"term\":\"legal separation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01203919\", \"06553372\"]}");
	add("{\"term\":\"legal status\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13975819\"]}");
	add("{\"term\":\"legal system\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05911823\"]}");
	add("{\"term\":\"legal tender\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13395181\"]}");
	add("{\"term\":\"legal transfer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01110658\"]}");
	add("{\"term\":\"legalese\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07085406\"]}");
	add("{\"term\":\"legalisation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01197870\"]}");
	add("{\"term\":\"legalism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06222037\"]}");
	add("{\"term\":\"legality\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04816489\"]}");
	add("{\"term\":\"legalization\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01197870\"]}");
	add("{\"term\":\"legate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10273176\"]}");
	add("{\"term\":\"legatee\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10273308\"]}");
	add("{\"term\":\"legateship\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00595375\"]}");
	add("{\"term\":\"legation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08420039\", \"00595375\"]}");
	add("{\"term\":\"legend\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06358261\", \"06383036\"]}");
	add("{\"term\":\"legendary creature\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09510152\"]}");
	add("{\"term\":\"leger\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11144951\", \"13425421\"]}");
	add("{\"term\":\"leger line\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06875449\"]}");
	add("{\"term\":\"legerdemain\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00100771\"]}");
	add("{\"term\":\"legerity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05011015\"]}");
	add("{\"term\":\"legging\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03660398\"]}");
	add("{\"term\":\"leghorn\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02862524\"]}");
	add("{\"term\":\"legibility\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04826516\", \"04710452\"]}");
	add("{\"term\":\"leging\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03660398\"]}");
	add("{\"term\":\"legion\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"08199880\", \"08288722\", \"08289169\", \"08200720\"]}");
	add("{\"term\":\"legionary\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10273400\"]}");
	add("{\"term\":\"legionary ant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02223170\"]}");
	add("{\"term\":\"legionella\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01376865\"]}");
	add("{\"term\":\"legionella pneumophilia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01376865\"]}");
	add("{\"term\":\"legionnaire\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10273400\", \"10273584\"]}");
	add("{\"term\":\"legislating\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01128014\"]}");
	add("{\"term\":\"legislation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01128014\", \"06547213\"]}");
	add("{\"term\":\"legislative act\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06576378\"]}");
	add("{\"term\":\"legislative assembly\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08180172\"]}");
	add("{\"term\":\"legislative body\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08180172\"]}");
	add("{\"term\":\"legislative branch\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08373302\"]}");
	add("{\"term\":\"legislative council\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08180601\"]}");
	add("{\"term\":\"legislator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10273692\"]}");
	add("{\"term\":\"legislatorship\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00595489\"]}");
	add("{\"term\":\"legislature\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08180172\"]}");
	add("{\"term\":\"legitimacy\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04790511\", \"04817287\"]}");
	add("{\"term\":\"legitimation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01197870\", \"01198074\"]}");
	add("{\"term\":\"legless lizard\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01693858\"]}");
	add("{\"term\":\"lego\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03660621\"]}");
	add("{\"term\":\"lego set\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03660621\"]}");
	add("{\"term\":\"legs\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05040201\"]}");
	add("{\"term\":\"legume\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07724543\", \"11768471\", \"11767937\"]}");
	add("{\"term\":\"legume family\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11767245\"]}");
	add("{\"term\":\"leguminosae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11767245\"]}");
	add("{\"term\":\"leguminous plant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11767937\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }