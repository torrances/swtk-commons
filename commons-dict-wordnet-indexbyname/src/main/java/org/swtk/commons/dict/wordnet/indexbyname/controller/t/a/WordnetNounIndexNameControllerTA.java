package org.swtk.commons.dict.wordnet.indexbyname.controller.t.a;  import java.util.Collection; import java.util.Set; import java.util.TreeSet;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  	import org.swtk.commons.dict.wordnet.indexbyname.instance.t.a.a.WordnetNounIndexNameInstanceTAA;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.t.a.b.WordnetNounIndexNameInstanceTAB;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.t.a.c.WordnetNounIndexNameInstanceTAC;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.t.a.d.WordnetNounIndexNameInstanceTAD;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.t.a.e.WordnetNounIndexNameInstanceTAE;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.t.a.f.WordnetNounIndexNameInstanceTAF;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.t.a.g.WordnetNounIndexNameInstanceTAG;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.t.a.h.WordnetNounIndexNameInstanceTAH;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.t.a.i.WordnetNounIndexNameInstanceTAI;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.t.a.j.WordnetNounIndexNameInstanceTAJ;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.t.a.k.WordnetNounIndexNameInstanceTAK;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.t.a.l.WordnetNounIndexNameInstanceTAL;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.t.a.m.WordnetNounIndexNameInstanceTAM;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.t.a.n.WordnetNounIndexNameInstanceTAN;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.t.a.o.WordnetNounIndexNameInstanceTAO;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.t.a.p.WordnetNounIndexNameInstanceTAP;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.t.a.r.WordnetNounIndexNameInstanceTAR;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.t.a.s.WordnetNounIndexNameInstanceTAS;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.t.a.t.WordnetNounIndexNameInstanceTAT;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.t.a.u.WordnetNounIndexNameInstanceTAU;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.t.a.v.WordnetNounIndexNameInstanceTAV;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.t.a.w.WordnetNounIndexNameInstanceTAW;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.t.a.x.WordnetNounIndexNameInstanceTAX;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.t.a.y.WordnetNounIndexNameInstanceTAY;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.t.a.z.WordnetNounIndexNameInstanceTAZ;
  import com.trimc.blogger.commons.exception.BusinessException;  public final class WordnetNounIndexNameControllerTA {  	public static Collection<IndexNoun> get(final String TERM) throws BusinessException { 		if (TERM.length() < 3) throw new BusinessException("TERM not found (term = %s)", TERM); 		 		String key = TERM.substring(0, 3).toLowerCase(); 			if ("taa".equals(key)) return WordnetNounIndexNameInstanceTAA.get(TERM);
	if ("tab".equals(key)) return WordnetNounIndexNameInstanceTAB.get(TERM);
	if ("tac".equals(key)) return WordnetNounIndexNameInstanceTAC.get(TERM);
	if ("tad".equals(key)) return WordnetNounIndexNameInstanceTAD.get(TERM);
	if ("tae".equals(key)) return WordnetNounIndexNameInstanceTAE.get(TERM);
	if ("taf".equals(key)) return WordnetNounIndexNameInstanceTAF.get(TERM);
	if ("tag".equals(key)) return WordnetNounIndexNameInstanceTAG.get(TERM);
	if ("tah".equals(key)) return WordnetNounIndexNameInstanceTAH.get(TERM);
	if ("tai".equals(key)) return WordnetNounIndexNameInstanceTAI.get(TERM);
	if ("taj".equals(key)) return WordnetNounIndexNameInstanceTAJ.get(TERM);
	if ("tak".equals(key)) return WordnetNounIndexNameInstanceTAK.get(TERM);
	if ("tal".equals(key)) return WordnetNounIndexNameInstanceTAL.get(TERM);
	if ("tam".equals(key)) return WordnetNounIndexNameInstanceTAM.get(TERM);
	if ("tan".equals(key)) return WordnetNounIndexNameInstanceTAN.get(TERM);
	if ("tao".equals(key)) return WordnetNounIndexNameInstanceTAO.get(TERM);
	if ("tap".equals(key)) return WordnetNounIndexNameInstanceTAP.get(TERM);
	if ("tar".equals(key)) return WordnetNounIndexNameInstanceTAR.get(TERM);
	if ("tas".equals(key)) return WordnetNounIndexNameInstanceTAS.get(TERM);
	if ("tat".equals(key)) return WordnetNounIndexNameInstanceTAT.get(TERM);
	if ("tau".equals(key)) return WordnetNounIndexNameInstanceTAU.get(TERM);
	if ("tav".equals(key)) return WordnetNounIndexNameInstanceTAV.get(TERM);
	if ("taw".equals(key)) return WordnetNounIndexNameInstanceTAW.get(TERM);
	if ("tax".equals(key)) return WordnetNounIndexNameInstanceTAX.get(TERM);
	if ("tay".equals(key)) return WordnetNounIndexNameInstanceTAY.get(TERM);
	if ("taz".equals(key)) return WordnetNounIndexNameInstanceTAZ.get(TERM);
  		throw new BusinessException("TERM not found (term = %s)", TERM); 	} 	 	public static Collection<String> terms() throws BusinessException { 		Set<String> set = new TreeSet<String>();  			set.addAll(WordnetNounIndexNameInstanceTAA.terms());
	set.addAll(WordnetNounIndexNameInstanceTAB.terms());
	set.addAll(WordnetNounIndexNameInstanceTAC.terms());
	set.addAll(WordnetNounIndexNameInstanceTAD.terms());
	set.addAll(WordnetNounIndexNameInstanceTAE.terms());
	set.addAll(WordnetNounIndexNameInstanceTAF.terms());
	set.addAll(WordnetNounIndexNameInstanceTAG.terms());
	set.addAll(WordnetNounIndexNameInstanceTAH.terms());
	set.addAll(WordnetNounIndexNameInstanceTAI.terms());
	set.addAll(WordnetNounIndexNameInstanceTAJ.terms());
	set.addAll(WordnetNounIndexNameInstanceTAK.terms());
	set.addAll(WordnetNounIndexNameInstanceTAL.terms());
	set.addAll(WordnetNounIndexNameInstanceTAM.terms());
	set.addAll(WordnetNounIndexNameInstanceTAN.terms());
	set.addAll(WordnetNounIndexNameInstanceTAO.terms());
	set.addAll(WordnetNounIndexNameInstanceTAP.terms());
	set.addAll(WordnetNounIndexNameInstanceTAR.terms());
	set.addAll(WordnetNounIndexNameInstanceTAS.terms());
	set.addAll(WordnetNounIndexNameInstanceTAT.terms());
	set.addAll(WordnetNounIndexNameInstanceTAU.terms());
	set.addAll(WordnetNounIndexNameInstanceTAV.terms());
	set.addAll(WordnetNounIndexNameInstanceTAW.terms());
	set.addAll(WordnetNounIndexNameInstanceTAX.terms());
	set.addAll(WordnetNounIndexNameInstanceTAY.terms());
	set.addAll(WordnetNounIndexNameInstanceTAZ.terms());
  		return set; 	} }