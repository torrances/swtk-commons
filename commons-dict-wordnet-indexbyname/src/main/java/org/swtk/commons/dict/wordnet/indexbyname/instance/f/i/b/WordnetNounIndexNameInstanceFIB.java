package org.swtk.commons.dict.wordnet.indexbyname.instance.f.i.b;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceFIB {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"fib\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06769768\"]}");
	add("{\"term\":\"fibber\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10679772\"]}");
	add("{\"term\":\"fibbing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00753487\"]}");
	add("{\"term\":\"fiber\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"03336189\", \"04627573\", \"05236952\", \"07584383\", \"14891040\"]}");
	add("{\"term\":\"fiber bundle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05483333\"]}");
	add("{\"term\":\"fiber optic cable\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03336544\"]}");
	add("{\"term\":\"fiber optics\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06291469\"]}");
	add("{\"term\":\"fiberboard\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03336335\"]}");
	add("{\"term\":\"fiberglass\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14890920\"]}");
	add("{\"term\":\"fiberoptics\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06291469\"]}");
	add("{\"term\":\"fiberscope\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03336950\"]}");
	add("{\"term\":\"fibonacci number\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13615111\"]}");
	add("{\"term\":\"fibonacci sequence\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08390745\"]}");
	add("{\"term\":\"fibre\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"03336189\", \"04627573\", \"05236952\", \"14891040\"]}");
	add("{\"term\":\"fibre bundle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05483333\"]}");
	add("{\"term\":\"fibre optic cable\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03336544\"]}");
	add("{\"term\":\"fibre optics\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06291469\"]}");
	add("{\"term\":\"fibreboard\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03336335\"]}");
	add("{\"term\":\"fibreglass\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14890920\"]}");
	add("{\"term\":\"fibreoptics\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06291469\"]}");
	add("{\"term\":\"fibril\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14892009\"]}");
	add("{\"term\":\"fibrillation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00389851\", \"14385584\"]}");
	add("{\"term\":\"fibrin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14758120\"]}");
	add("{\"term\":\"fibrinase\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15097224\"]}");
	add("{\"term\":\"fibrinogen\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15047723\"]}");
	add("{\"term\":\"fibrinolysin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15008333\"]}");
	add("{\"term\":\"fibrinolysis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13501379\"]}");
	add("{\"term\":\"fibrinopeptide\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14766916\"]}");
	add("{\"term\":\"fibroadenoma\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14261693\"]}");
	add("{\"term\":\"fibroblast\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05455976\"]}");
	add("{\"term\":\"fibrocartilage\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05296092\"]}");
	add("{\"term\":\"fibrocystic breast disease\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14221862\"]}");
	add("{\"term\":\"fibrocystic disease of the breast\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14221862\"]}");
	add("{\"term\":\"fibrocystic disease of the pancreas\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14178988\"]}");
	add("{\"term\":\"fibroid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14261875\"]}");
	add("{\"term\":\"fibroid tumor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14261875\"]}");
	add("{\"term\":\"fibroma\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14262010\"]}");
	add("{\"term\":\"fibromyositis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14369485\"]}");
	add("{\"term\":\"fibrosis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14231291\"]}");
	add("{\"term\":\"fibrositis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14369363\"]}");
	add("{\"term\":\"fibrosity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05029525\"]}");
	add("{\"term\":\"fibrous astrocyte\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05475574\"]}");
	add("{\"term\":\"fibrous dysplasia of bone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14389630\"]}");
	add("{\"term\":\"fibrous joint\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05550526\"]}");
	add("{\"term\":\"fibrous tissue\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05302494\"]}");
	add("{\"term\":\"fibrousness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05029525\"]}");
	add("{\"term\":\"fibrovascular bundle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13118708\"]}");
	add("{\"term\":\"fibula\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05601956\"]}");
	add("{\"term\":\"fibular vein\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05384187\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }