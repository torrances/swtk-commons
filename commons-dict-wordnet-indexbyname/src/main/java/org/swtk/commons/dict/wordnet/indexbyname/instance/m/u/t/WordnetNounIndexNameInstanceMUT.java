package org.swtk.commons.dict.wordnet.indexbyname.instance.m.u.t;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceMUT {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"mutability\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04748551\"]}");
	add("{\"term\":\"mutableness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04748551\"]}");
	add("{\"term\":\"mutagen\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09386983\"]}");
	add("{\"term\":\"mutagenesis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07440708\"]}");
	add("{\"term\":\"mutamycin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03780375\"]}");
	add("{\"term\":\"mutant\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01326946\", \"10361391\"]}");
	add("{\"term\":\"mutation\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07312429\", \"07439611\", \"10361391\"]}");
	add("{\"term\":\"mutawa\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08227332\"]}");
	add("{\"term\":\"mutchkin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13639579\"]}");
	add("{\"term\":\"mute\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03808513\", \"10362098\"]}");
	add("{\"term\":\"muteness\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04659331\", \"14575578\"]}");
	add("{\"term\":\"mutilation\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00404274\", \"07448262\"]}");
	add("{\"term\":\"mutilator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10361686\"]}");
	add("{\"term\":\"mutillidae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02217312\"]}");
	add("{\"term\":\"mutineer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10361911\"]}");
	add("{\"term\":\"mutinus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13061932\"]}");
	add("{\"term\":\"mutiny\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00966007\"]}");
	add("{\"term\":\"mutisia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12017146\"]}");
	add("{\"term\":\"mutism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14575578\"]}");
	add("{\"term\":\"muton\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14981685\"]}");
	add("{\"term\":\"mutsuhito\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11191147\"]}");
	add("{\"term\":\"mutt\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02087513\"]}");
	add("{\"term\":\"mutter\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07225752\", \"07401520\"]}");
	add("{\"term\":\"mutterer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10362274\"]}");
	add("{\"term\":\"muttering\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07225752\", \"07401520\"]}");
	add("{\"term\":\"mutton\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07682478\"]}");
	add("{\"term\":\"muttonfish\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02590110\"]}");
	add("{\"term\":\"muttonhead\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10059388\"]}");
	add("{\"term\":\"mutualism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13864821\"]}");
	add("{\"term\":\"mutuality\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13864062\", \"13865600\"]}");
	add("{\"term\":\"mutualness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13865600\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }