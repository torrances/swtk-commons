package org.swtk.commons.dict.wordnet.indexbyname.instance.v.i.n;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceVIN {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"vin ordinaire\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07914978\"]}");
	add("{\"term\":\"vina del mar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08740103\"]}");
	add("{\"term\":\"vinaigrette\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07849792\"]}");
	add("{\"term\":\"vinblastine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04542929\"]}");
	add("{\"term\":\"vinca\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11798248\"]}");
	add("{\"term\":\"vinca major\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11798726\"]}");
	add("{\"term\":\"vinca minor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11798561\"]}");
	add("{\"term\":\"vinca rosea\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11792877\"]}");
	add("{\"term\":\"vincent van gogh\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11380017\"]}");
	add("{\"term\":\"vincenzo bellini\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10862519\"]}");
	add("{\"term\":\"vincetoxicum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13260369\"]}");
	add("{\"term\":\"vincetoxicum hirsutum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13260634\"]}");
	add("{\"term\":\"vincetoxicum negrum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13260634\"]}");
	add("{\"term\":\"vincristine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04543121\"]}");
	add("{\"term\":\"vindication\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06753339\", \"01243896\"]}");
	add("{\"term\":\"vindicator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09817975\"]}");
	add("{\"term\":\"vindictiveness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07566357\"]}");
	add("{\"term\":\"vine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13121436\"]}");
	add("{\"term\":\"vine cactus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12402448\"]}");
	add("{\"term\":\"vine maple\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12775228\"]}");
	add("{\"term\":\"vine snake\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01742022\"]}");
	add("{\"term\":\"vinegar\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"15112678\", \"07844963\"]}");
	add("{\"term\":\"vinegar eel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01934792\"]}");
	add("{\"term\":\"vinegar fly\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02200529\"]}");
	add("{\"term\":\"vinegar joe stilwell\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11338457\"]}");
	add("{\"term\":\"vinegar tree\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"12784289\", \"12784962\"]}");
	add("{\"term\":\"vinegar worm\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01934792\"]}");
	add("{\"term\":\"vinegariness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05001442\"]}");
	add("{\"term\":\"vinegarishness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05001442\"]}");
	add("{\"term\":\"vinegarroon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01774407\"]}");
	add("{\"term\":\"vinegarweed\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12892456\"]}");
	add("{\"term\":\"vinery\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04543333\"]}");
	add("{\"term\":\"vineyard\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04543333\"]}");
	add("{\"term\":\"viniculture\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01129030\"]}");
	add("{\"term\":\"vinifera\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13166221\"]}");
	add("{\"term\":\"vinifera grape\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07775792\", \"13166221\"]}");
	add("{\"term\":\"vinification\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13594869\"]}");
	add("{\"term\":\"vino\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07907701\"]}");
	add("{\"term\":\"vinogradoff\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11386890\"]}");
	add("{\"term\":\"vinson\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11387030\"]}");
	add("{\"term\":\"vintage\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04933394\", \"07908393\"]}");
	add("{\"term\":\"vintager\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10773657\"]}");
	add("{\"term\":\"vintner\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10773756\", \"10773857\"]}");
	add("{\"term\":\"vinyl\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"15112750\", \"15112875\"]}");
	add("{\"term\":\"vinyl cyanide\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15023244\"]}");
	add("{\"term\":\"vinyl ether\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03304876\"]}");
	add("{\"term\":\"vinyl group\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15112875\"]}");
	add("{\"term\":\"vinyl polymer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15113007\"]}");
	add("{\"term\":\"vinyl radical\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15112875\"]}");
	add("{\"term\":\"vinyl resin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15113007\"]}");
	add("{\"term\":\"vinylbenzene\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14619723\"]}");
	add("{\"term\":\"vinylite\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14620779\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }