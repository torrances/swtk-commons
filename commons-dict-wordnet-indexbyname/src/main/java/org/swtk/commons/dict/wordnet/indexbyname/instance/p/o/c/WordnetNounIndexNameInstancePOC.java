package org.swtk.commons.dict.wordnet.indexbyname.instance.p.o.c;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstancePOC {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"pocahontas\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11260239\"]}");
	add("{\"term\":\"pocatello\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09104689\"]}");
	add("{\"term\":\"pochard\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01853679\"]}");
	add("{\"term\":\"pock\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14357916\"]}");
	add("{\"term\":\"pocket\", \"synsetCount\":9, \"upperType\":\"NOUN\", \"ids\":[\"03979157\", \"05524499\", \"07966676\", \"11443142\", \"13916999\", \"13934675\", \"13377947\", \"13937488\", \"03978882\"]}");
	add("{\"term\":\"pocketbook\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"02777157\", \"03979528\", \"04555648\", \"13375036\"]}");
	add("{\"term\":\"pocketcomb\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03979643\"]}");
	add("{\"term\":\"pocketful\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13791086\"]}");
	add("{\"term\":\"pocketknife\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03979986\"]}");
	add("{\"term\":\"pockmark\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14387470\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }