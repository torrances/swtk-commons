package org.swtk.commons.dict.wordnet.indexbyname.controller.z.a;  import java.util.Collection; import java.util.Set; import java.util.TreeSet;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  	import org.swtk.commons.dict.wordnet.indexbyname.instance.z.a.a.WordnetNounIndexNameInstanceZAA;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.z.a.b.WordnetNounIndexNameInstanceZAB;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.z.a.c.WordnetNounIndexNameInstanceZAC;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.z.a.g.WordnetNounIndexNameInstanceZAG;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.z.a.h.WordnetNounIndexNameInstanceZAH;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.z.a.i.WordnetNounIndexNameInstanceZAI;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.z.a.k.WordnetNounIndexNameInstanceZAK;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.z.a.l.WordnetNounIndexNameInstanceZAL;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.z.a.m.WordnetNounIndexNameInstanceZAM;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.z.a.n.WordnetNounIndexNameInstanceZAN;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.z.a.p.WordnetNounIndexNameInstanceZAP;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.z.a.r.WordnetNounIndexNameInstanceZAR;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.z.a.y.WordnetNounIndexNameInstanceZAY;
  import com.trimc.blogger.commons.exception.BusinessException;  public final class WordnetNounIndexNameControllerZA {  	public static Collection<IndexNoun> get(final String TERM) throws BusinessException { 		if (TERM.length() < 3) throw new BusinessException("TERM not found (term = %s)", TERM); 		 		String key = TERM.replaceAll(" ", "").substring(0, 3).toLowerCase(); 			if ("zaa".equals(key)) return WordnetNounIndexNameInstanceZAA.get(TERM);
	if ("zab".equals(key)) return WordnetNounIndexNameInstanceZAB.get(TERM);
	if ("zac".equals(key)) return WordnetNounIndexNameInstanceZAC.get(TERM);
	if ("zag".equals(key)) return WordnetNounIndexNameInstanceZAG.get(TERM);
	if ("zah".equals(key)) return WordnetNounIndexNameInstanceZAH.get(TERM);
	if ("zai".equals(key)) return WordnetNounIndexNameInstanceZAI.get(TERM);
	if ("zak".equals(key)) return WordnetNounIndexNameInstanceZAK.get(TERM);
	if ("zal".equals(key)) return WordnetNounIndexNameInstanceZAL.get(TERM);
	if ("zam".equals(key)) return WordnetNounIndexNameInstanceZAM.get(TERM);
	if ("zan".equals(key)) return WordnetNounIndexNameInstanceZAN.get(TERM);
	if ("zap".equals(key)) return WordnetNounIndexNameInstanceZAP.get(TERM);
	if ("zar".equals(key)) return WordnetNounIndexNameInstanceZAR.get(TERM);
	if ("zay".equals(key)) return WordnetNounIndexNameInstanceZAY.get(TERM);
  		throw new BusinessException("TERM not found (term = %s)", TERM); 	}  	public static Collection<String> terms() throws BusinessException { 		Set<String> set = new TreeSet<String>();  			set.addAll(WordnetNounIndexNameInstanceZAA.terms());
	set.addAll(WordnetNounIndexNameInstanceZAB.terms());
	set.addAll(WordnetNounIndexNameInstanceZAC.terms());
	set.addAll(WordnetNounIndexNameInstanceZAG.terms());
	set.addAll(WordnetNounIndexNameInstanceZAH.terms());
	set.addAll(WordnetNounIndexNameInstanceZAI.terms());
	set.addAll(WordnetNounIndexNameInstanceZAK.terms());
	set.addAll(WordnetNounIndexNameInstanceZAL.terms());
	set.addAll(WordnetNounIndexNameInstanceZAM.terms());
	set.addAll(WordnetNounIndexNameInstanceZAN.terms());
	set.addAll(WordnetNounIndexNameInstanceZAP.terms());
	set.addAll(WordnetNounIndexNameInstanceZAR.terms());
	set.addAll(WordnetNounIndexNameInstanceZAY.terms());
  		return set; 	} }