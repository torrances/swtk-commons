package org.swtk.commons.dict.wordnet.indexbyname.instance.b.o.t;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceBOT {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"bot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02314531\"]}");
	add("{\"term\":\"bota\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02879699\"]}");
	add("{\"term\":\"botanical\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02879779\"]}");
	add("{\"term\":\"botanist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09887676\"]}");
	add("{\"term\":\"botany\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06076105\", \"08453769\"]}");
	add("{\"term\":\"botaurus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02014322\"]}");
	add("{\"term\":\"botch\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00075610\"]}");
	add("{\"term\":\"botcher\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09899210\"]}");
	add("{\"term\":\"botfly\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02195815\"]}");
	add("{\"term\":\"bother\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05838383\", \"07387165\"]}");
	add("{\"term\":\"botheration\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05838383\", \"14429977\"]}");
	add("{\"term\":\"bothidae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02663399\"]}");
	add("{\"term\":\"bothrops\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01760660\"]}");
	add("{\"term\":\"botox\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14612066\"]}");
	add("{\"term\":\"botrychium\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12981489\"]}");
	add("{\"term\":\"botswana\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08871381\"]}");
	add("{\"term\":\"botticelli\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10878608\"]}");
	add("{\"term\":\"bottle\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02880508\", \"13787536\", \"02879899\"]}");
	add("{\"term\":\"bottlebrush\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02880884\"]}");
	add("{\"term\":\"bottlecap\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02881007\"]}");
	add("{\"term\":\"bottleful\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13787536\"]}");
	add("{\"term\":\"bottleneck\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02881107\", \"13936007\"]}");
	add("{\"term\":\"bottlenose\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02071194\", \"02072353\"]}");
	add("{\"term\":\"bottler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08083480\"]}");
	add("{\"term\":\"bottom\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"02881464\", \"09250335\", \"09240545\", \"15281056\", \"05566889\", \"08529042\", \"08528313\"]}");
	add("{\"term\":\"bottomland\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09250335\"]}");
	add("{\"term\":\"bottomlessness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05142847\"]}");
	add("{\"term\":\"botulin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15059690\"]}");
	add("{\"term\":\"botulinum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01359969\"]}");
	add("{\"term\":\"botulinus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01359969\"]}");
	add("{\"term\":\"botulism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14092376\"]}");
	add("{\"term\":\"botulismotoxin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15059690\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }