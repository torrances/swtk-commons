package org.swtk.commons.dict.wordnet.indexbyname.instance.t.o.w;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceTOW {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"tow\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00116112\"]}");
	add("{\"term\":\"tow car\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04468931\"]}");
	add("{\"term\":\"tow truck\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04468931\"]}");
	add("{\"term\":\"towage\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00116112\"]}");
	add("{\"term\":\"towboat\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04503138\"]}");
	add("{\"term\":\"towel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04466597\"]}");
	add("{\"term\":\"towel bar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04467144\"]}");
	add("{\"term\":\"towel horse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04467008\"]}");
	add("{\"term\":\"towel rack\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04467008\"]}");
	add("{\"term\":\"towel rail\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04467144\"]}");
	add("{\"term\":\"towel ring\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04467273\"]}");
	add("{\"term\":\"toweling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04466845\"]}");
	add("{\"term\":\"towelling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04466845\"]}");
	add("{\"term\":\"tower\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04503138\", \"13923115\", \"04467365\"]}");
	add("{\"term\":\"tower block\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03524550\"]}");
	add("{\"term\":\"tower cress\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11892942\", \"11893127\"]}");
	add("{\"term\":\"tower mustard\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11892942\", \"11893127\"]}");
	add("{\"term\":\"tower of babel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04467869\"]}");
	add("{\"term\":\"tower of london\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04468182\"]}");
	add("{\"term\":\"tower of pharos\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04468383\"]}");
	add("{\"term\":\"tower of strength\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10738443\"]}");
	add("{\"term\":\"towhead\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10738601\"]}");
	add("{\"term\":\"towhee\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01544563\"]}");
	add("{\"term\":\"towing line\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04468529\"]}");
	add("{\"term\":\"towing path\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04468805\"]}");
	add("{\"term\":\"towing rope\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04468529\"]}");
	add("{\"term\":\"towline\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04468529\"]}");
	add("{\"term\":\"town\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"11366705\", \"08689937\", \"08243435\", \"08683242\"]}");
	add("{\"term\":\"town clerk\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10738685\"]}");
	add("{\"term\":\"town crier\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10738781\"]}");
	add("{\"term\":\"town gas\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14709802\"]}");
	add("{\"term\":\"town hall\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04468672\"]}");
	add("{\"term\":\"town house\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04122350\"]}");
	add("{\"term\":\"town meeting\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08329392\", \"08329171\"]}");
	add("{\"term\":\"town planning\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00930357\"]}");
	add("{\"term\":\"townee\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10739044\"]}");
	add("{\"term\":\"towner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10738916\"]}");
	add("{\"term\":\"townes\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11366868\"]}");
	add("{\"term\":\"townie\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10739222\"]}");
	add("{\"term\":\"townsend\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11367075\"]}");
	add("{\"term\":\"townsend harris\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11050851\"]}");
	add("{\"term\":\"townsendia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12046775\"]}");
	add("{\"term\":\"townsendia exscapa\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12046945\"]}");
	add("{\"term\":\"townsfolk\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08243435\"]}");
	add("{\"term\":\"township\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08689937\"]}");
	add("{\"term\":\"townsman\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10738916\", \"10739341\"]}");
	add("{\"term\":\"townspeople\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08243435\"]}");
	add("{\"term\":\"towny\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10739222\"]}");
	add("{\"term\":\"towpath\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04468805\"]}");
	add("{\"term\":\"towrope\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04468529\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }