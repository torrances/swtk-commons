package org.swtk.commons.dict.wordnet.indexbyname.instance.q.u.e;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceQUE {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"queasiness\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04632641\", \"14383725\"]}");
	add("{\"term\":\"quebec\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08848063\", \"08848309\"]}");
	add("{\"term\":\"quebecois\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10518817\"]}");
	add("{\"term\":\"quechua\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06929859\", \"08506131\", \"09746312\"]}");
	add("{\"term\":\"quechuan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06929859\"]}");
	add("{\"term\":\"queen\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"02125530\", \"02372587\", \"04039763\", \"04039901\", \"10095821\", \"10254721\", \"10519802\", \"10519442\", \"10518940\", \"02315660\"]}");
	add("{\"term\":\"queenfish\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02601508\"]}");
	add("{\"term\":\"queens\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09145849\"]}");
	add("{\"term\":\"queensland\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08851683\"]}");
	add("{\"term\":\"queer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10095821\"]}");
	add("{\"term\":\"queerness\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00858476\", \"04805073\"]}");
	add("{\"term\":\"quelling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01081528\"]}");
	add("{\"term\":\"quellung\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13565740\"]}");
	add("{\"term\":\"quenching\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00230801\"]}");
	add("{\"term\":\"quercitron\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"12299975\", \"15025425\"]}");
	add("{\"term\":\"quercus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12288613\"]}");
	add("{\"term\":\"querier\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10227450\"]}");
	add("{\"term\":\"quern\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04040277\"]}");
	add("{\"term\":\"querulousness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04650337\"]}");
	add("{\"term\":\"query\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07208256\"]}");
	add("{\"term\":\"quesadilla\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07897180\"]}");
	add("{\"term\":\"quest\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00948466\", \"05778388\"]}");
	add("{\"term\":\"quester\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10595231\"]}");
	add("{\"term\":\"question\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"07176710\", \"07178244\", \"04764777\", \"07211342\", \"06796625\", \"07208256\"]}");
	add("{\"term\":\"questioner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10227450\"]}");
	add("{\"term\":\"questioning\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07207844\"]}");
	add("{\"term\":\"questionnaire\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06485793\"]}");
	add("{\"term\":\"quetzal\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01847192\", \"13718375\"]}");
	add("{\"term\":\"quetzalcoatl\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10520682\"]}");
	add("{\"term\":\"queue\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"05267306\", \"06506807\", \"08449355\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }