package org.swtk.commons.dict.wordnet.indexbyname.instance.h.i.p;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceHIP {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"hip\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"12641307\", \"13913372\", \"05603759\", \"05604406\", \"05563958\"]}");
	add("{\"term\":\"hip bath\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04232093\"]}");
	add("{\"term\":\"hip boot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03526707\"]}");
	add("{\"term\":\"hip joint\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05603759\"]}");
	add("{\"term\":\"hip pad\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03526934\"]}");
	add("{\"term\":\"hip pocket\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03527062\"]}");
	add("{\"term\":\"hip roof\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03527263\"]}");
	add("{\"term\":\"hip socket\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05292600\"]}");
	add("{\"term\":\"hip tile\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14932178\"]}");
	add("{\"term\":\"hipbone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05282458\"]}");
	add("{\"term\":\"hipflask\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03526838\"]}");
	add("{\"term\":\"hipline\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08601081\", \"08601209\"]}");
	add("{\"term\":\"hipparchus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11071371\"]}");
	add("{\"term\":\"hippeastrum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12441642\"]}");
	add("{\"term\":\"hippeastrum puniceum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12441642\"]}");
	add("{\"term\":\"hipped roof\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03527263\"]}");
	add("{\"term\":\"hipped tile\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14932178\"]}");
	add("{\"term\":\"hippie\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10196106\"]}");
	add("{\"term\":\"hippies\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08306762\"]}");
	add("{\"term\":\"hippo\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02401173\", \"08724959\"]}");
	add("{\"term\":\"hippo regius\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08724959\"]}");
	add("{\"term\":\"hippobosca\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02201366\"]}");
	add("{\"term\":\"hippobosca equina\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02201511\"]}");
	add("{\"term\":\"hippoboscid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02201184\"]}");
	add("{\"term\":\"hippoboscidae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02200984\"]}");
	add("{\"term\":\"hippocampus\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01459272\", \"05503912\"]}");
	add("{\"term\":\"hippocastanaceae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12788711\"]}");
	add("{\"term\":\"hippocrates\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11071627\"]}");
	add("{\"term\":\"hippocratic oath\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07241818\"]}");
	add("{\"term\":\"hippocrepis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12555606\"]}");
	add("{\"term\":\"hippocrepis comosa\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12555759\"]}");
	add("{\"term\":\"hippodamia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02169088\"]}");
	add("{\"term\":\"hippodamia convergens\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02169219\"]}");
	add("{\"term\":\"hippodrome\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03527166\"]}");
	add("{\"term\":\"hippoglossoides\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02662591\"]}");
	add("{\"term\":\"hippoglossoides platessoides\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02662721\"]}");
	add("{\"term\":\"hippoglossus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02663042\"]}");
	add("{\"term\":\"hippoglossus hippoglossus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02663149\"]}");
	add("{\"term\":\"hippoglossus stenolepsis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02663270\"]}");
	add("{\"term\":\"hippolyte jean giraudoux\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11021207\"]}");
	add("{\"term\":\"hippopotamidae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02400904\"]}");
	add("{\"term\":\"hippopotamus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02401173\"]}");
	add("{\"term\":\"hippopotamus amphibius\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02401173\"]}");
	add("{\"term\":\"hipposideridae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02146246\"]}");
	add("{\"term\":\"hipposideros\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02146411\"]}");
	add("{\"term\":\"hippotragus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02428402\"]}");
	add("{\"term\":\"hippotragus niger\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02428533\"]}");
	add("{\"term\":\"hippy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10196106\"]}");
	add("{\"term\":\"hipster\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10196106\"]}");
	add("{\"term\":\"hipsters\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08306762\"]}");
	add("{\"term\":\"hipsurus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02573665\"]}");
	add("{\"term\":\"hipsurus caryi\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02573798\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }