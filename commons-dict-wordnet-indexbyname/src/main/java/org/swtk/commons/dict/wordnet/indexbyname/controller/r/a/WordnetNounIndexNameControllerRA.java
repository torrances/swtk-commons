package org.swtk.commons.dict.wordnet.indexbyname.controller.r.a;  import java.util.ArrayList; import java.util.Collection; import java.util.Set; import java.util.TreeSet;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  	import org.swtk.commons.dict.wordnet.indexbyname.instance.r.a.b.WordnetNounIndexNameInstanceRAB;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.r.a.c.WordnetNounIndexNameInstanceRAC;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.r.a.d.WordnetNounIndexNameInstanceRAD;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.r.a.e.WordnetNounIndexNameInstanceRAE;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.r.a.f.WordnetNounIndexNameInstanceRAF;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.r.a.g.WordnetNounIndexNameInstanceRAG;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.r.a.h.WordnetNounIndexNameInstanceRAH;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.r.a.i.WordnetNounIndexNameInstanceRAI;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.r.a.j.WordnetNounIndexNameInstanceRAJ;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.r.a.k.WordnetNounIndexNameInstanceRAK;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.r.a.l.WordnetNounIndexNameInstanceRAL;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.r.a.m.WordnetNounIndexNameInstanceRAM;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.r.a.n.WordnetNounIndexNameInstanceRAN;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.r.a.o.WordnetNounIndexNameInstanceRAO;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.r.a.p.WordnetNounIndexNameInstanceRAP;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.r.a.r.WordnetNounIndexNameInstanceRAR;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.r.a.s.WordnetNounIndexNameInstanceRAS;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.r.a.t.WordnetNounIndexNameInstanceRAT;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.r.a.u.WordnetNounIndexNameInstanceRAU;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.r.a.v.WordnetNounIndexNameInstanceRAV;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.r.a.w.WordnetNounIndexNameInstanceRAW;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.r.a.y.WordnetNounIndexNameInstanceRAY;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.r.a.z.WordnetNounIndexNameInstanceRAZ;
  import com.trimc.blogger.commons.exception.BusinessException;  public final class WordnetNounIndexNameControllerRA {  	public static Collection<IndexNoun> get(final String TERM) throws BusinessException { 		if (TERM.length() < 3) throw new BusinessException("TERM not found (term = %s)", TERM); 		 		String key = TERM.substring(0, 3).toLowerCase(); 			if ("rab".equals(key)) return WordnetNounIndexNameInstanceRAB.get(TERM);
	if ("rac".equals(key)) return WordnetNounIndexNameInstanceRAC.get(TERM);
	if ("rad".equals(key)) return WordnetNounIndexNameInstanceRAD.get(TERM);
	if ("rae".equals(key)) return WordnetNounIndexNameInstanceRAE.get(TERM);
	if ("raf".equals(key)) return WordnetNounIndexNameInstanceRAF.get(TERM);
	if ("rag".equals(key)) return WordnetNounIndexNameInstanceRAG.get(TERM);
	if ("rah".equals(key)) return WordnetNounIndexNameInstanceRAH.get(TERM);
	if ("rai".equals(key)) return WordnetNounIndexNameInstanceRAI.get(TERM);
	if ("raj".equals(key)) return WordnetNounIndexNameInstanceRAJ.get(TERM);
	if ("rak".equals(key)) return WordnetNounIndexNameInstanceRAK.get(TERM);
	if ("ral".equals(key)) return WordnetNounIndexNameInstanceRAL.get(TERM);
	if ("ram".equals(key)) return WordnetNounIndexNameInstanceRAM.get(TERM);
	if ("ran".equals(key)) return WordnetNounIndexNameInstanceRAN.get(TERM);
	if ("rao".equals(key)) return WordnetNounIndexNameInstanceRAO.get(TERM);
	if ("rap".equals(key)) return WordnetNounIndexNameInstanceRAP.get(TERM);
	if ("rar".equals(key)) return WordnetNounIndexNameInstanceRAR.get(TERM);
	if ("ras".equals(key)) return WordnetNounIndexNameInstanceRAS.get(TERM);
	if ("rat".equals(key)) return WordnetNounIndexNameInstanceRAT.get(TERM);
	if ("rau".equals(key)) return WordnetNounIndexNameInstanceRAU.get(TERM);
	if ("rav".equals(key)) return WordnetNounIndexNameInstanceRAV.get(TERM);
	if ("raw".equals(key)) return WordnetNounIndexNameInstanceRAW.get(TERM);
	if ("ray".equals(key)) return WordnetNounIndexNameInstanceRAY.get(TERM);
	if ("raz".equals(key)) return WordnetNounIndexNameInstanceRAZ.get(TERM);
  		throw new BusinessException("TERM not found (term = %s)", TERM); 	} 	 	public static Collection<String> terms() throws BusinessException { 		Set<String> set = new TreeSet<String>();  			set.addAll(WordnetNounIndexNameInstanceRAB.terms());
	set.addAll(WordnetNounIndexNameInstanceRAC.terms());
	set.addAll(WordnetNounIndexNameInstanceRAD.terms());
	set.addAll(WordnetNounIndexNameInstanceRAE.terms());
	set.addAll(WordnetNounIndexNameInstanceRAF.terms());
	set.addAll(WordnetNounIndexNameInstanceRAG.terms());
	set.addAll(WordnetNounIndexNameInstanceRAH.terms());
	set.addAll(WordnetNounIndexNameInstanceRAI.terms());
	set.addAll(WordnetNounIndexNameInstanceRAJ.terms());
	set.addAll(WordnetNounIndexNameInstanceRAK.terms());
	set.addAll(WordnetNounIndexNameInstanceRAL.terms());
	set.addAll(WordnetNounIndexNameInstanceRAM.terms());
	set.addAll(WordnetNounIndexNameInstanceRAN.terms());
	set.addAll(WordnetNounIndexNameInstanceRAO.terms());
	set.addAll(WordnetNounIndexNameInstanceRAP.terms());
	set.addAll(WordnetNounIndexNameInstanceRAR.terms());
	set.addAll(WordnetNounIndexNameInstanceRAS.terms());
	set.addAll(WordnetNounIndexNameInstanceRAT.terms());
	set.addAll(WordnetNounIndexNameInstanceRAU.terms());
	set.addAll(WordnetNounIndexNameInstanceRAV.terms());
	set.addAll(WordnetNounIndexNameInstanceRAW.terms());
	set.addAll(WordnetNounIndexNameInstanceRAY.terms());
	set.addAll(WordnetNounIndexNameInstanceRAZ.terms());
  		return set; 	} }