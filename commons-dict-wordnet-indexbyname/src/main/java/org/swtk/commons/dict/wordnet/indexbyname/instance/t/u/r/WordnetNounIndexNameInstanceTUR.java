package org.swtk.commons.dict.wordnet.indexbyname.instance.t.u.r;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceTUR {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"turaco\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01827919\"]}");
	add("{\"term\":\"turacou\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01827919\"]}");
	add("{\"term\":\"turakoo\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01827919\"]}");
	add("{\"term\":\"turban\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03944111\", \"04505684\"]}");
	add("{\"term\":\"turbatrix\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01934625\"]}");
	add("{\"term\":\"turbellaria\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01927774\"]}");
	add("{\"term\":\"turbidity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04711280\"]}");
	add("{\"term\":\"turbidness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04711280\"]}");
	add("{\"term\":\"turbinal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05291315\"]}");
	add("{\"term\":\"turbinate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05291315\"]}");
	add("{\"term\":\"turbine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04505818\"]}");
	add("{\"term\":\"turbofan\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03326048\", \"03326364\"]}");
	add("{\"term\":\"turbogenerator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04506168\"]}");
	add("{\"term\":\"turbojet\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03326048\", \"03326364\"]}");
	add("{\"term\":\"turboprop\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04018858\"]}");
	add("{\"term\":\"turbot\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02665841\", \"07807015\"]}");
	add("{\"term\":\"turbulence\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"14002658\", \"14547985\", \"11541422\"]}");
	add("{\"term\":\"turbulency\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11541422\"]}");
	add("{\"term\":\"turcoman\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06939666\", \"09755870\"]}");
	add("{\"term\":\"turd\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14878732\"]}");
	add("{\"term\":\"turdidae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01559312\"]}");
	add("{\"term\":\"turdinae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01559669\"]}");
	add("{\"term\":\"turdus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01560338\"]}");
	add("{\"term\":\"tureen\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04506357\"]}");
	add("{\"term\":\"turf\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08608275\", \"08707509\", \"09487049\"]}");
	add("{\"term\":\"turfan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06981583\"]}");
	add("{\"term\":\"turgenev\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11372030\"]}");
	add("{\"term\":\"turgidity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07104765\"]}");
	add("{\"term\":\"turgidness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07104765\"]}");
	add("{\"term\":\"turgor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14592343\"]}");
	add("{\"term\":\"turgot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11372187\"]}");
	add("{\"term\":\"turin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08828072\"]}");
	add("{\"term\":\"turing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11372493\"]}");
	add("{\"term\":\"turk\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09754317\"]}");
	add("{\"term\":\"turkestan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08742378\"]}");
	add("{\"term\":\"turkey\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"07379793\", \"07663340\", \"10243965\", \"09061886\", \"01796799\"]}");
	add("{\"term\":\"turki\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06939235\", \"09754690\"]}");
	add("{\"term\":\"turkic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06939235\"]}");
	add("{\"term\":\"turkish\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06939575\"]}");
	add("{\"term\":\"turkistan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08742378\"]}");
	add("{\"term\":\"turkmen\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06939666\", \"09043873\", \"09755870\"]}");
	add("{\"term\":\"turkmenia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09043873\"]}");
	add("{\"term\":\"turkmenistan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09043873\"]}");
	add("{\"term\":\"turkoman\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06939666\", \"09755870\"]}");
	add("{\"term\":\"turkomen\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09043873\"]}");
	add("{\"term\":\"turmeric\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07837895\", \"12376912\"]}");
	add("{\"term\":\"turmoil\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00555337\", \"07529759\", \"14001179\"]}");
	add("{\"term\":\"turn\", \"synsetCount\":12, \"upperType\":\"NOUN\", \"ids\":[\"00293443\", \"01229572\", \"06905066\", \"15281525\", \"15317305\", \"00346280\", \"00347358\", \"07366212\", \"07437965\", \"00458406\", \"00350856\", \"13891966\"]}");
	add("{\"term\":\"turnabout\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00347519\", \"05797813\"]}");
	add("{\"term\":\"turnaround\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00347519\", \"01147068\", \"04506955\", \"05797813\", \"15162247\"]}");
	add("{\"term\":\"turnbuckle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04507105\"]}");
	add("{\"term\":\"turncoat\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10026763\"]}");
	add("{\"term\":\"turncock\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04334820\", \"10752882\"]}");
	add("{\"term\":\"turndown\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00206198\"]}");
	add("{\"term\":\"turner\", \"synsetCount\":8, \"upperType\":\"NOUN\", \"ids\":[\"04507355\", \"10753007\", \"10753144\", \"10753231\", \"11372696\", \"11372878\", \"11373073\", \"11373190\"]}");
	add("{\"term\":\"turnery\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04507589\", \"04507685\"]}");
	add("{\"term\":\"turnicidae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02022220\"]}");
	add("{\"term\":\"turning\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"00927993\", \"04507799\", \"07366212\", \"09487228\", \"00196264\", \"00350856\"]}");
	add("{\"term\":\"turnip\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07751779\", \"11898115\"]}");
	add("{\"term\":\"turnix\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02022416\"]}");
	add("{\"term\":\"turnkey\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10169387\"]}");
	add("{\"term\":\"turnoff\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04507999\", \"05836587\"]}");
	add("{\"term\":\"turnout\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00535517\", \"01236482\", \"03865478\", \"03866402\", \"04223173\", \"04508161\", \"08003658\"]}");
	add("{\"term\":\"turnover\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00349138\", \"05119608\", \"07640075\", \"13848434\"]}");
	add("{\"term\":\"turnpike\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04508313\", \"04508422\"]}");
	add("{\"term\":\"turnround\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01147068\"]}");
	add("{\"term\":\"turnspit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04508576\"]}");
	add("{\"term\":\"turnstile\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04508665\"]}");
	add("{\"term\":\"turnstone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02027697\"]}");
	add("{\"term\":\"turntable\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04509008\", \"04509132\", \"04508845\"]}");
	add("{\"term\":\"turnup\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03150509\"]}");
	add("{\"term\":\"turnverein\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08247600\"]}");
	add("{\"term\":\"turp\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00695341\"]}");
	add("{\"term\":\"turpentine\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"14917803\", \"14921520\"]}");
	add("{\"term\":\"turpin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11373407\"]}");
	add("{\"term\":\"turpitude\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00748164\"]}");
	add("{\"term\":\"turps\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14917803\"]}");
	add("{\"term\":\"turquoise\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04976975\", \"15106765\"]}");
	add("{\"term\":\"turreae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12721756\"]}");
	add("{\"term\":\"turret\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03474107\", \"04509242\"]}");
	add("{\"term\":\"turritis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11919901\"]}");
	add("{\"term\":\"tursiops\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02072221\"]}");
	add("{\"term\":\"turtle\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01665425\", \"04509492\"]}");
	add("{\"term\":\"turtledove\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01816026\", \"01816589\"]}");
	add("{\"term\":\"turtlehead\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12901865\"]}");
	add("{\"term\":\"turtleneck\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04509492\"]}");
	add("{\"term\":\"turtler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10753362\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }