package org.swtk.commons.dict.wordnet.indexbyname.instance.i.s.o;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceISO {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"isoagglutination\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13524548\"]}");
	add("{\"term\":\"isoagglutinin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15053385\"]}");
	add("{\"term\":\"isoagglutinogen\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15053714\"]}");
	add("{\"term\":\"isoantibody\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15054049\"]}");
	add("{\"term\":\"isobar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08606907\"]}");
	add("{\"term\":\"isobutyl nitrite\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02933133\"]}");
	add("{\"term\":\"isobutylene\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14811440\"]}");
	add("{\"term\":\"isobutylphenyl propionic acid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03561461\"]}");
	add("{\"term\":\"isocarboxazid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03592611\"]}");
	add("{\"term\":\"isochrone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08607088\"]}");
	add("{\"term\":\"isoclinal\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08607226\"]}");
	add("{\"term\":\"isoclinic line\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08607226\"]}");
	add("{\"term\":\"isocrates\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11094759\"]}");
	add("{\"term\":\"isocyanate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14948010\"]}");
	add("{\"term\":\"isocyanic acid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14948100\"]}");
	add("{\"term\":\"isoetaceae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13246853\"]}");
	add("{\"term\":\"isoetales\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13246627\"]}");
	add("{\"term\":\"isoetes\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13247033\"]}");
	add("{\"term\":\"isoflurane\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03592792\"]}");
	add("{\"term\":\"isogamete\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05464919\"]}");
	add("{\"term\":\"isogamy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13524716\"]}");
	add("{\"term\":\"isogon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13889136\"]}");
	add("{\"term\":\"isogonal line\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08507850\"]}");
	add("{\"term\":\"isogone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08507850\"]}");
	add("{\"term\":\"isogonic line\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08507850\"]}");
	add("{\"term\":\"isogram\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08607357\"]}");
	add("{\"term\":\"isohel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08607611\"]}");
	add("{\"term\":\"isolation\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"01242282\", \"13524876\", \"01204519\", \"07517815\", \"14438119\"]}");
	add("{\"term\":\"isolationism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06674938\"]}");
	add("{\"term\":\"isolationist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10237354\"]}");
	add("{\"term\":\"isolde\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10570822\"]}");
	add("{\"term\":\"isole egadi\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08802757\"]}");
	add("{\"term\":\"isoleucine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14948205\"]}");
	add("{\"term\":\"isomer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14948326\"]}");
	add("{\"term\":\"isomerase\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14948497\"]}");
	add("{\"term\":\"isomerisation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07430707\"]}");
	add("{\"term\":\"isomerism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13962767\"]}");
	add("{\"term\":\"isomerization\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07430707\"]}");
	add("{\"term\":\"isometric\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06814598\"]}");
	add("{\"term\":\"isometric exercise\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00629089\"]}");
	add("{\"term\":\"isometric line\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06814598\"]}");
	add("{\"term\":\"isometrics\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00629089\"]}");
	add("{\"term\":\"isometropia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14579280\"]}");
	add("{\"term\":\"isometry\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04755894\", \"05138802\", \"13808399\", \"15303946\"]}");
	add("{\"term\":\"isomorphism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04751885\"]}");
	add("{\"term\":\"isomorphy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04751885\"]}");
	add("{\"term\":\"isoniazid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03592884\"]}");
	add("{\"term\":\"isopleth\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08607357\"]}");
	add("{\"term\":\"isopod\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01993441\"]}");
	add("{\"term\":\"isopoda\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01993268\"]}");
	add("{\"term\":\"isopropanol\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14734068\"]}");
	add("{\"term\":\"isopropyl alcohol\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14734068\"]}");
	add("{\"term\":\"isoproterenol\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03593043\"]}");
	add("{\"term\":\"isoptera\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02225370\"]}");
	add("{\"term\":\"isoptin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04535103\"]}");
	add("{\"term\":\"isopyrum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11756291\"]}");
	add("{\"term\":\"isopyrum biternatum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11756446\"]}");
	add("{\"term\":\"isordil\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03593215\"]}");
	add("{\"term\":\"isoroku yamamoto\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11421793\"]}");
	add("{\"term\":\"isosceles triangle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13902856\"]}");
	add("{\"term\":\"isosmotic solution\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14873537\"]}");
	add("{\"term\":\"isosorbide\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03593215\"]}");
	add("{\"term\":\"isospondyli\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02531165\"]}");
	add("{\"term\":\"isostasy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14026917\"]}");
	add("{\"term\":\"isotherm\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08607728\"]}");
	add("{\"term\":\"isothiocyanate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15057934\"]}");
	add("{\"term\":\"isotonic exercise\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00629371\"]}");
	add("{\"term\":\"isotonic solution\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14873537\"]}");
	add("{\"term\":\"isotope\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14643836\"]}");
	add("{\"term\":\"isotropy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04924616\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }