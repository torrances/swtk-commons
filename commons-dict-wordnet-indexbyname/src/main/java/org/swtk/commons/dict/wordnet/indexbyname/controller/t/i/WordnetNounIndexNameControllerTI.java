package org.swtk.commons.dict.wordnet.indexbyname.controller.t.i;  import java.util.ArrayList; import java.util.Collection; import java.util.Set; import java.util.TreeSet;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  	import org.swtk.commons.dict.wordnet.indexbyname.instance.t.i.a.WordnetNounIndexNameInstanceTIA;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.t.i.b.WordnetNounIndexNameInstanceTIB;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.t.i.c.WordnetNounIndexNameInstanceTIC;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.t.i.d.WordnetNounIndexNameInstanceTID;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.t.i.e.WordnetNounIndexNameInstanceTIE;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.t.i.f.WordnetNounIndexNameInstanceTIF;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.t.i.g.WordnetNounIndexNameInstanceTIG;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.t.i.j.WordnetNounIndexNameInstanceTIJ;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.t.i.k.WordnetNounIndexNameInstanceTIK;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.t.i.l.WordnetNounIndexNameInstanceTIL;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.t.i.m.WordnetNounIndexNameInstanceTIM;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.t.i.n.WordnetNounIndexNameInstanceTIN;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.t.i.p.WordnetNounIndexNameInstanceTIP;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.t.i.r.WordnetNounIndexNameInstanceTIR;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.t.i.s.WordnetNounIndexNameInstanceTIS;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.t.i.t.WordnetNounIndexNameInstanceTIT;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.t.i.v.WordnetNounIndexNameInstanceTIV;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.t.i.y.WordnetNounIndexNameInstanceTIY;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.t.i.z.WordnetNounIndexNameInstanceTIZ;
  import com.trimc.blogger.commons.exception.BusinessException;  public final class WordnetNounIndexNameControllerTI {  	public static Collection<IndexNoun> get(final String TERM) throws BusinessException { 		if (TERM.length() < 3) throw new BusinessException("TERM not found (term = %s)", TERM); 		 		String key = TERM.substring(0, 3).toLowerCase(); 			if ("tia".equals(key)) return WordnetNounIndexNameInstanceTIA.get(TERM);
	if ("tib".equals(key)) return WordnetNounIndexNameInstanceTIB.get(TERM);
	if ("tic".equals(key)) return WordnetNounIndexNameInstanceTIC.get(TERM);
	if ("tid".equals(key)) return WordnetNounIndexNameInstanceTID.get(TERM);
	if ("tie".equals(key)) return WordnetNounIndexNameInstanceTIE.get(TERM);
	if ("tif".equals(key)) return WordnetNounIndexNameInstanceTIF.get(TERM);
	if ("tig".equals(key)) return WordnetNounIndexNameInstanceTIG.get(TERM);
	if ("tij".equals(key)) return WordnetNounIndexNameInstanceTIJ.get(TERM);
	if ("tik".equals(key)) return WordnetNounIndexNameInstanceTIK.get(TERM);
	if ("til".equals(key)) return WordnetNounIndexNameInstanceTIL.get(TERM);
	if ("tim".equals(key)) return WordnetNounIndexNameInstanceTIM.get(TERM);
	if ("tin".equals(key)) return WordnetNounIndexNameInstanceTIN.get(TERM);
	if ("tip".equals(key)) return WordnetNounIndexNameInstanceTIP.get(TERM);
	if ("tir".equals(key)) return WordnetNounIndexNameInstanceTIR.get(TERM);
	if ("tis".equals(key)) return WordnetNounIndexNameInstanceTIS.get(TERM);
	if ("tit".equals(key)) return WordnetNounIndexNameInstanceTIT.get(TERM);
	if ("tiv".equals(key)) return WordnetNounIndexNameInstanceTIV.get(TERM);
	if ("tiy".equals(key)) return WordnetNounIndexNameInstanceTIY.get(TERM);
	if ("tiz".equals(key)) return WordnetNounIndexNameInstanceTIZ.get(TERM);
  		throw new BusinessException("TERM not found (term = %s)", TERM); 	} 	 	public static Collection<String> terms() throws BusinessException { 		Set<String> set = new TreeSet<String>();  			set.addAll(WordnetNounIndexNameInstanceTIA.terms());
	set.addAll(WordnetNounIndexNameInstanceTIB.terms());
	set.addAll(WordnetNounIndexNameInstanceTIC.terms());
	set.addAll(WordnetNounIndexNameInstanceTID.terms());
	set.addAll(WordnetNounIndexNameInstanceTIE.terms());
	set.addAll(WordnetNounIndexNameInstanceTIF.terms());
	set.addAll(WordnetNounIndexNameInstanceTIG.terms());
	set.addAll(WordnetNounIndexNameInstanceTIJ.terms());
	set.addAll(WordnetNounIndexNameInstanceTIK.terms());
	set.addAll(WordnetNounIndexNameInstanceTIL.terms());
	set.addAll(WordnetNounIndexNameInstanceTIM.terms());
	set.addAll(WordnetNounIndexNameInstanceTIN.terms());
	set.addAll(WordnetNounIndexNameInstanceTIP.terms());
	set.addAll(WordnetNounIndexNameInstanceTIR.terms());
	set.addAll(WordnetNounIndexNameInstanceTIS.terms());
	set.addAll(WordnetNounIndexNameInstanceTIT.terms());
	set.addAll(WordnetNounIndexNameInstanceTIV.terms());
	set.addAll(WordnetNounIndexNameInstanceTIY.terms());
	set.addAll(WordnetNounIndexNameInstanceTIZ.terms());
  		return set; 	} }