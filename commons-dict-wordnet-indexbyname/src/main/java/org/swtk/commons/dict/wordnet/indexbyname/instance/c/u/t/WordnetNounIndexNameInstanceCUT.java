package org.swtk.commons.dict.wordnet.indexbyname.instance.c.u.t;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceCUT {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"cut\", \"synsetCount\":20, \"upperType\":\"NOUN\", \"ids\":[\"00068074\", \"00353157\", \"00360064\", \"00387723\", \"00388465\", \"00490486\", \"00566846\", \"00572481\", \"01228486\", \"03157409\", \"05758945\", \"06439886\", \"06625218\", \"06734210\", \"07669003\", \"14310615\", \"14453311\", \"03157285\", \"06630741\", \"13310182\"]}");
	add("{\"term\":\"cutaway\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03157496\", \"03157617\"]}");
	add("{\"term\":\"cutback\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00354608\"]}");
	add("{\"term\":\"cutch\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12972091\"]}");
	add("{\"term\":\"cuteness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04692998\"]}");
	add("{\"term\":\"cuterebra\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02196607\"]}");
	add("{\"term\":\"cuterebridae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02196451\"]}");
	add("{\"term\":\"cuticle\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01906397\", \"05247554\", \"05589582\"]}");
	add("{\"term\":\"cuticula\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01898271\"]}");
	add("{\"term\":\"cutin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14697623\"]}");
	add("{\"term\":\"cutis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05245612\"]}");
	add("{\"term\":\"cutlas\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03157912\"]}");
	add("{\"term\":\"cutlass\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03157912\"]}");
	add("{\"term\":\"cutlassfish\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02625585\"]}");
	add("{\"term\":\"cutler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10004737\"]}");
	add("{\"term\":\"cutlery\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03158041\", \"03158739\"]}");
	add("{\"term\":\"cutlet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07670495\"]}");
	add("{\"term\":\"cutoff\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03158251\", \"04211999\", \"13781154\"]}");
	add("{\"term\":\"cutout\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03158347\", \"03158487\", \"03158614\"]}");
	add("{\"term\":\"cutpurse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10451671\"]}");
	add("{\"term\":\"cutter\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"03158739\", \"03158982\", \"04416263\", \"10004809\", \"10005000\", \"10678733\"]}");
	add("{\"term\":\"cutthroat\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10005107\"]}");
	add("{\"term\":\"cutting\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"00360064\", \"00363878\", \"00388465\", \"00490486\", \"00944050\", \"06625002\", \"09285277\", \"00387723\", \"13148232\", \"00947021\"]}");
	add("{\"term\":\"cuttle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01975182\"]}");
	add("{\"term\":\"cuttlefish\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01975182\"]}");
	add("{\"term\":\"cutwork\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03159561\"]}");
	add("{\"term\":\"cutworm\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02298042\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }