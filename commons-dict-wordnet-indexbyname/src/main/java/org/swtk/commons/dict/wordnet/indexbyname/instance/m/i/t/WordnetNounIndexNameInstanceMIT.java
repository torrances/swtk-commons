package org.swtk.commons.dict.wordnet.indexbyname.instance.m.i.t;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceMIT {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"mit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03731459\"]}");
	add("{\"term\":\"mitchell\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"11201927\", \"11202088\", \"11202265\", \"11202469\", \"11202611\", \"11202815\"]}");
	add("{\"term\":\"mitchella\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12689125\"]}");
	add("{\"term\":\"mitchum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11202956\"]}");
	add("{\"term\":\"mite\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01782270\", \"13796315\"]}");
	add("{\"term\":\"mitella\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12821087\"]}");
	add("{\"term\":\"miter\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03779503\", \"03779657\", \"03779994\"]}");
	add("{\"term\":\"miterwort\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12821346\"]}");
	add("{\"term\":\"mitford\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11203064\", \"11203201\"]}");
	add("{\"term\":\"mithan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02412787\"]}");
	add("{\"term\":\"mithra\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09554958\"]}");
	add("{\"term\":\"mithracin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03780206\"]}");
	add("{\"term\":\"mithraicism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06254093\"]}");
	add("{\"term\":\"mithraism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06254093\"]}");
	add("{\"term\":\"mithraist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09705429\"]}");
	add("{\"term\":\"mithramycin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03780206\"]}");
	add("{\"term\":\"mithras\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09554958\"]}");
	add("{\"term\":\"mithridates\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11203377\"]}");
	add("{\"term\":\"mitigation\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00354075\", \"06754423\", \"00355409\"]}");
	add("{\"term\":\"mitochondrion\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05452965\"]}");
	add("{\"term\":\"mitogen\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14977496\"]}");
	add("{\"term\":\"mitomycin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03780375\"]}");
	add("{\"term\":\"mitosis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13537800\"]}");
	add("{\"term\":\"mitra\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09550425\"]}");
	add("{\"term\":\"mitre\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03779503\", \"03779657\", \"03779994\"]}");
	add("{\"term\":\"mitrewort\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12821346\"]}");
	add("{\"term\":\"mitsvah\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00045855\", \"06195901\"]}");
	add("{\"term\":\"mitt\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02803372\", \"05572223\"]}");
	add("{\"term\":\"mittelschmerz\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05732910\"]}");
	add("{\"term\":\"mitten\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03780604\"]}");
	add("{\"term\":\"mitterrand\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11203595\"]}");
	add("{\"term\":\"mitzvah\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00045855\", \"06195901\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }