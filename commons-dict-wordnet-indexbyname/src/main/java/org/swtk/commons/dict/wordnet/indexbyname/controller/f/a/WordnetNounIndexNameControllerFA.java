package org.swtk.commons.dict.wordnet.indexbyname.controller.f.a;  import java.util.ArrayList; import java.util.Collection; import java.util.Set; import java.util.TreeSet;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  	import org.swtk.commons.dict.wordnet.indexbyname.instance.f.a.b.WordnetNounIndexNameInstanceFAB;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.f.a.c.WordnetNounIndexNameInstanceFAC;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.f.a.d.WordnetNounIndexNameInstanceFAD;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.f.a.e.WordnetNounIndexNameInstanceFAE;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.f.a.f.WordnetNounIndexNameInstanceFAF;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.f.a.g.WordnetNounIndexNameInstanceFAG;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.f.a.h.WordnetNounIndexNameInstanceFAH;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.f.a.i.WordnetNounIndexNameInstanceFAI;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.f.a.k.WordnetNounIndexNameInstanceFAK;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.f.a.l.WordnetNounIndexNameInstanceFAL;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.f.a.m.WordnetNounIndexNameInstanceFAM;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.f.a.n.WordnetNounIndexNameInstanceFAN;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.f.a.q.WordnetNounIndexNameInstanceFAQ;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.f.a.r.WordnetNounIndexNameInstanceFAR;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.f.a.s.WordnetNounIndexNameInstanceFAS;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.f.a.t.WordnetNounIndexNameInstanceFAT;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.f.a.u.WordnetNounIndexNameInstanceFAU;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.f.a.v.WordnetNounIndexNameInstanceFAV;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.f.a.w.WordnetNounIndexNameInstanceFAW;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.f.a.y.WordnetNounIndexNameInstanceFAY;
  import com.trimc.blogger.commons.exception.BusinessException;  public final class WordnetNounIndexNameControllerFA {  	public static Collection<IndexNoun> get(final String TERM) throws BusinessException { 		if (TERM.length() < 3) throw new BusinessException("TERM not found (term = %s)", TERM); 		 		String key = TERM.substring(0, 3).toLowerCase(); 			if ("fab".equals(key)) return WordnetNounIndexNameInstanceFAB.get(TERM);
	if ("fac".equals(key)) return WordnetNounIndexNameInstanceFAC.get(TERM);
	if ("fad".equals(key)) return WordnetNounIndexNameInstanceFAD.get(TERM);
	if ("fae".equals(key)) return WordnetNounIndexNameInstanceFAE.get(TERM);
	if ("faf".equals(key)) return WordnetNounIndexNameInstanceFAF.get(TERM);
	if ("fag".equals(key)) return WordnetNounIndexNameInstanceFAG.get(TERM);
	if ("fah".equals(key)) return WordnetNounIndexNameInstanceFAH.get(TERM);
	if ("fai".equals(key)) return WordnetNounIndexNameInstanceFAI.get(TERM);
	if ("fak".equals(key)) return WordnetNounIndexNameInstanceFAK.get(TERM);
	if ("fal".equals(key)) return WordnetNounIndexNameInstanceFAL.get(TERM);
	if ("fam".equals(key)) return WordnetNounIndexNameInstanceFAM.get(TERM);
	if ("fan".equals(key)) return WordnetNounIndexNameInstanceFAN.get(TERM);
	if ("faq".equals(key)) return WordnetNounIndexNameInstanceFAQ.get(TERM);
	if ("far".equals(key)) return WordnetNounIndexNameInstanceFAR.get(TERM);
	if ("fas".equals(key)) return WordnetNounIndexNameInstanceFAS.get(TERM);
	if ("fat".equals(key)) return WordnetNounIndexNameInstanceFAT.get(TERM);
	if ("fau".equals(key)) return WordnetNounIndexNameInstanceFAU.get(TERM);
	if ("fav".equals(key)) return WordnetNounIndexNameInstanceFAV.get(TERM);
	if ("faw".equals(key)) return WordnetNounIndexNameInstanceFAW.get(TERM);
	if ("fay".equals(key)) return WordnetNounIndexNameInstanceFAY.get(TERM);
  		throw new BusinessException("TERM not found (term = %s)", TERM); 	} 	 	public static Collection<String> terms() throws BusinessException { 		Set<String> set = new TreeSet<String>();  			set.addAll(WordnetNounIndexNameInstanceFAB.terms());
	set.addAll(WordnetNounIndexNameInstanceFAC.terms());
	set.addAll(WordnetNounIndexNameInstanceFAD.terms());
	set.addAll(WordnetNounIndexNameInstanceFAE.terms());
	set.addAll(WordnetNounIndexNameInstanceFAF.terms());
	set.addAll(WordnetNounIndexNameInstanceFAG.terms());
	set.addAll(WordnetNounIndexNameInstanceFAH.terms());
	set.addAll(WordnetNounIndexNameInstanceFAI.terms());
	set.addAll(WordnetNounIndexNameInstanceFAK.terms());
	set.addAll(WordnetNounIndexNameInstanceFAL.terms());
	set.addAll(WordnetNounIndexNameInstanceFAM.terms());
	set.addAll(WordnetNounIndexNameInstanceFAN.terms());
	set.addAll(WordnetNounIndexNameInstanceFAQ.terms());
	set.addAll(WordnetNounIndexNameInstanceFAR.terms());
	set.addAll(WordnetNounIndexNameInstanceFAS.terms());
	set.addAll(WordnetNounIndexNameInstanceFAT.terms());
	set.addAll(WordnetNounIndexNameInstanceFAU.terms());
	set.addAll(WordnetNounIndexNameInstanceFAV.terms());
	set.addAll(WordnetNounIndexNameInstanceFAW.terms());
	set.addAll(WordnetNounIndexNameInstanceFAY.terms());
  		return set; 	} }