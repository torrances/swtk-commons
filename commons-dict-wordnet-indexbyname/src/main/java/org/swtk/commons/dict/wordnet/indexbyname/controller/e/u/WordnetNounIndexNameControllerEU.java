package org.swtk.commons.dict.wordnet.indexbyname.controller.e.u;  import java.util.Collection; import java.util.Set; import java.util.TreeSet;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  	import org.swtk.commons.dict.wordnet.indexbyname.instance.e.u.a.WordnetNounIndexNameInstanceEUA;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.e.u.b.WordnetNounIndexNameInstanceEUB;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.e.u.c.WordnetNounIndexNameInstanceEUC;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.e.u.d.WordnetNounIndexNameInstanceEUD;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.e.u.g.WordnetNounIndexNameInstanceEUG;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.e.u.k.WordnetNounIndexNameInstanceEUK;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.e.u.l.WordnetNounIndexNameInstanceEUL;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.e.u.m.WordnetNounIndexNameInstanceEUM;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.e.u.n.WordnetNounIndexNameInstanceEUN;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.e.u.o.WordnetNounIndexNameInstanceEUO;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.e.u.p.WordnetNounIndexNameInstanceEUP;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.e.u.r.WordnetNounIndexNameInstanceEUR;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.e.u.s.WordnetNounIndexNameInstanceEUS;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.e.u.t.WordnetNounIndexNameInstanceEUT;
  import com.trimc.blogger.commons.exception.BusinessException;  public final class WordnetNounIndexNameControllerEU {  	public static Collection<IndexNoun> get(final String TERM) throws BusinessException { 		if (TERM.length() < 3) throw new BusinessException("TERM not found (term = %s)", TERM); 		 		String key = TERM.substring(0, 3).toLowerCase(); 			if ("eua".equals(key)) return WordnetNounIndexNameInstanceEUA.get(TERM);
	if ("eub".equals(key)) return WordnetNounIndexNameInstanceEUB.get(TERM);
	if ("euc".equals(key)) return WordnetNounIndexNameInstanceEUC.get(TERM);
	if ("eud".equals(key)) return WordnetNounIndexNameInstanceEUD.get(TERM);
	if ("eug".equals(key)) return WordnetNounIndexNameInstanceEUG.get(TERM);
	if ("euk".equals(key)) return WordnetNounIndexNameInstanceEUK.get(TERM);
	if ("eul".equals(key)) return WordnetNounIndexNameInstanceEUL.get(TERM);
	if ("eum".equals(key)) return WordnetNounIndexNameInstanceEUM.get(TERM);
	if ("eun".equals(key)) return WordnetNounIndexNameInstanceEUN.get(TERM);
	if ("euo".equals(key)) return WordnetNounIndexNameInstanceEUO.get(TERM);
	if ("eup".equals(key)) return WordnetNounIndexNameInstanceEUP.get(TERM);
	if ("eur".equals(key)) return WordnetNounIndexNameInstanceEUR.get(TERM);
	if ("eus".equals(key)) return WordnetNounIndexNameInstanceEUS.get(TERM);
	if ("eut".equals(key)) return WordnetNounIndexNameInstanceEUT.get(TERM);
  		throw new BusinessException("TERM not found (term = %s)", TERM); 	} 	 	public static Collection<String> terms() throws BusinessException { 		Set<String> set = new TreeSet<String>();  			set.addAll(WordnetNounIndexNameInstanceEUA.terms());
	set.addAll(WordnetNounIndexNameInstanceEUB.terms());
	set.addAll(WordnetNounIndexNameInstanceEUC.terms());
	set.addAll(WordnetNounIndexNameInstanceEUD.terms());
	set.addAll(WordnetNounIndexNameInstanceEUG.terms());
	set.addAll(WordnetNounIndexNameInstanceEUK.terms());
	set.addAll(WordnetNounIndexNameInstanceEUL.terms());
	set.addAll(WordnetNounIndexNameInstanceEUM.terms());
	set.addAll(WordnetNounIndexNameInstanceEUN.terms());
	set.addAll(WordnetNounIndexNameInstanceEUO.terms());
	set.addAll(WordnetNounIndexNameInstanceEUP.terms());
	set.addAll(WordnetNounIndexNameInstanceEUR.terms());
	set.addAll(WordnetNounIndexNameInstanceEUS.terms());
	set.addAll(WordnetNounIndexNameInstanceEUT.terms());
  		return set; 	} }