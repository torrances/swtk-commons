package org.swtk.commons.dict.wordnet.indexbyname.controller.u.r;  import java.util.Set; import java.util.TreeSet;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  	import org.swtk.commons.dict.wordnet.indexbyname.instance.u.r.a.WordnetNounIndexNameInstanceURA;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.u.r.b.WordnetNounIndexNameInstanceURB;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.u.r.c.WordnetNounIndexNameInstanceURC;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.u.r.d.WordnetNounIndexNameInstanceURD;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.u.r.e.WordnetNounIndexNameInstanceURE;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.u.r.g.WordnetNounIndexNameInstanceURG;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.u.r.i.WordnetNounIndexNameInstanceURI;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.u.r.m.WordnetNounIndexNameInstanceURM;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.u.r.o.WordnetNounIndexNameInstanceURO;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.u.r.s.WordnetNounIndexNameInstanceURS;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.u.r.t.WordnetNounIndexNameInstanceURT;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.u.r.u.WordnetNounIndexNameInstanceURU;
  import com.trimc.blogger.commons.exception.BusinessException;  public final class WordnetNounIndexNameControllerUR {  	public static Collection<IndexNoun> get(final String TERM) throws BusinessException { 		if (TERM.length() < 3) throw new BusinessException("TERM not found (term = %s)", TERM); 		 		String key = TERM.substring(0, 3).toLowerCase(); 			if ("ura".equals(key)) return WordnetNounIndexNameInstanceURA.get(TERM);
	if ("urb".equals(key)) return WordnetNounIndexNameInstanceURB.get(TERM);
	if ("urc".equals(key)) return WordnetNounIndexNameInstanceURC.get(TERM);
	if ("urd".equals(key)) return WordnetNounIndexNameInstanceURD.get(TERM);
	if ("ure".equals(key)) return WordnetNounIndexNameInstanceURE.get(TERM);
	if ("urg".equals(key)) return WordnetNounIndexNameInstanceURG.get(TERM);
	if ("uri".equals(key)) return WordnetNounIndexNameInstanceURI.get(TERM);
	if ("urm".equals(key)) return WordnetNounIndexNameInstanceURM.get(TERM);
	if ("uro".equals(key)) return WordnetNounIndexNameInstanceURO.get(TERM);
	if ("urs".equals(key)) return WordnetNounIndexNameInstanceURS.get(TERM);
	if ("urt".equals(key)) return WordnetNounIndexNameInstanceURT.get(TERM);
	if ("uru".equals(key)) return WordnetNounIndexNameInstanceURU.get(TERM);
  		throw new BusinessException("TERM not found (term = %s)", TERM); 	} 	 	public static Collection<String> terms() throws BusinessException { 		Set<String> set = new TreeSet<String>();  			set.addAll(WordnetNounIndexNameInstanceURA.terms());
	set.addAll(WordnetNounIndexNameInstanceURB.terms());
	set.addAll(WordnetNounIndexNameInstanceURC.terms());
	set.addAll(WordnetNounIndexNameInstanceURD.terms());
	set.addAll(WordnetNounIndexNameInstanceURE.terms());
	set.addAll(WordnetNounIndexNameInstanceURG.terms());
	set.addAll(WordnetNounIndexNameInstanceURI.terms());
	set.addAll(WordnetNounIndexNameInstanceURM.terms());
	set.addAll(WordnetNounIndexNameInstanceURO.terms());
	set.addAll(WordnetNounIndexNameInstanceURS.terms());
	set.addAll(WordnetNounIndexNameInstanceURT.terms());
	set.addAll(WordnetNounIndexNameInstanceURU.terms());
  		return set; 	} }