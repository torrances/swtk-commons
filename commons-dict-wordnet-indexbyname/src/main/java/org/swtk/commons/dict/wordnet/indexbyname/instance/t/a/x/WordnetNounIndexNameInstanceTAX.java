package org.swtk.commons.dict.wordnet.indexbyname.instance.t.a.x;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceTAX {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"tax\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13330021\"]}");
	add("{\"term\":\"tax advantage\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13334613\"]}");
	add("{\"term\":\"tax assessment\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05153425\"]}");
	add("{\"term\":\"tax assessor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10712379\"]}");
	add("{\"term\":\"tax avoidance\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01081875\"]}");
	add("{\"term\":\"tax base\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13330798\"]}");
	add("{\"term\":\"tax benefit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13319560\"]}");
	add("{\"term\":\"tax bill\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06529858\"]}");
	add("{\"term\":\"tax boost\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05118288\"]}");
	add("{\"term\":\"tax bracket\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08022692\"]}");
	add("{\"term\":\"tax break\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13319560\"]}");
	add("{\"term\":\"tax collection\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01018690\"]}");
	add("{\"term\":\"tax collector\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10712548\"]}");
	add("{\"term\":\"tax credit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13400141\"]}");
	add("{\"term\":\"tax cut\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00353926\"]}");
	add("{\"term\":\"tax deduction\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13350069\"]}");
	add("{\"term\":\"tax evasion\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00743095\"]}");
	add("{\"term\":\"tax form\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06488055\"]}");
	add("{\"term\":\"tax haven\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08678908\"]}");
	add("{\"term\":\"tax hike\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05118288\"]}");
	add("{\"term\":\"tax income\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13282815\"]}");
	add("{\"term\":\"tax law\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08473630\"]}");
	add("{\"term\":\"tax liability\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13330978\"]}");
	add("{\"term\":\"tax lien\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13423863\"]}");
	add("{\"term\":\"tax policy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05910017\"]}");
	add("{\"term\":\"tax program\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05910017\"]}");
	add("{\"term\":\"tax rate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13330887\"]}");
	add("{\"term\":\"tax return\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06560662\"]}");
	add("{\"term\":\"tax revenue\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13282815\"]}");
	add("{\"term\":\"tax shelter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13334755\"]}");
	add("{\"term\":\"tax system\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05912604\"]}");
	add("{\"term\":\"taxability\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14554165\"]}");
	add("{\"term\":\"taxaceae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11681430\"]}");
	add("{\"term\":\"taxales\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11681299\"]}");
	add("{\"term\":\"taxation\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01162657\", \"13282815\", \"13330021\"]}");
	add("{\"term\":\"taxer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10712731\"]}");
	add("{\"term\":\"taxi\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02934150\"]}");
	add("{\"term\":\"taxi dancer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10712830\"]}");
	add("{\"term\":\"taxi fare\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13329565\"]}");
	add("{\"term\":\"taxi rank\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08535244\"]}");
	add("{\"term\":\"taxi strip\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04403601\"]}");
	add("{\"term\":\"taxicab\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02934150\"]}");
	add("{\"term\":\"taxidea\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02450222\"]}");
	add("{\"term\":\"taxidea taxus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02450393\"]}");
	add("{\"term\":\"taxidermist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10712955\"]}");
	add("{\"term\":\"taxidermy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05644247\"]}");
	add("{\"term\":\"taxidriver\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10713142\"]}");
	add("{\"term\":\"taximan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10713142\"]}");
	add("{\"term\":\"taximeter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04403470\"]}");
	add("{\"term\":\"taxis\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00694244\", \"00864364\"]}");
	add("{\"term\":\"taxistand\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08535244\"]}");
	add("{\"term\":\"taxiway\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04403601\"]}");
	add("{\"term\":\"taxman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10712548\"]}");
	add("{\"term\":\"taxodiaceae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11660060\"]}");
	add("{\"term\":\"taxodium\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11662239\"]}");
	add("{\"term\":\"taxodium ascendens\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11662694\"]}");
	add("{\"term\":\"taxodium distichum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11662414\"]}");
	add("{\"term\":\"taxodium mucronatum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11662881\"]}");
	add("{\"term\":\"taxon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08008892\"]}");
	add("{\"term\":\"taxonomer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10713320\"]}");
	add("{\"term\":\"taxonomic category\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08008892\"]}");
	add("{\"term\":\"taxonomic group\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08008892\"]}");
	add("{\"term\":\"taxonomist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10713320\"]}");
	add("{\"term\":\"taxonomy\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01015712\", \"06162674\", \"08395087\"]}");
	add("{\"term\":\"taxophytina\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11680988\"]}");
	add("{\"term\":\"taxopsida\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11680988\"]}");
	add("{\"term\":\"taxpayer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10713659\"]}");
	add("{\"term\":\"taxus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11681658\"]}");
	add("{\"term\":\"taxus baccata\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11682360\"]}");
	add("{\"term\":\"taxus brevifolia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11682579\"]}");
	add("{\"term\":\"taxus cuspidata\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11682822\"]}");
	add("{\"term\":\"taxus floridana\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11683036\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }