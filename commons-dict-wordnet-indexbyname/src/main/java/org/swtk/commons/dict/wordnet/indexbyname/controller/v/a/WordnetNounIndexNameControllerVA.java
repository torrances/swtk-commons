package org.swtk.commons.dict.wordnet.indexbyname.controller.v.a;  import java.util.Collection; import java.util.Set; import java.util.TreeSet;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  	import org.swtk.commons.dict.wordnet.indexbyname.instance.v.a.c.WordnetNounIndexNameInstanceVAC;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.v.a.d.WordnetNounIndexNameInstanceVAD;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.v.a.g.WordnetNounIndexNameInstanceVAG;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.v.a.i.WordnetNounIndexNameInstanceVAI;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.v.a.j.WordnetNounIndexNameInstanceVAJ;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.v.a.l.WordnetNounIndexNameInstanceVAL;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.v.a.m.WordnetNounIndexNameInstanceVAM;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.v.a.n.WordnetNounIndexNameInstanceVAN;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.v.a.p.WordnetNounIndexNameInstanceVAP;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.v.a.q.WordnetNounIndexNameInstanceVAQ;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.v.a.r.WordnetNounIndexNameInstanceVAR;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.v.a.s.WordnetNounIndexNameInstanceVAS;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.v.a.t.WordnetNounIndexNameInstanceVAT;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.v.a.u.WordnetNounIndexNameInstanceVAU;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.v.a.y.WordnetNounIndexNameInstanceVAY;
  import com.trimc.blogger.commons.exception.BusinessException;  public final class WordnetNounIndexNameControllerVA {  	public static Collection<IndexNoun> get(final String TERM) throws BusinessException {  		String key = TERM.substring(0, 4).toLowerCase(); 			if ("vac".equals(key)) return WordnetNounIndexNameInstanceVAC.get(TERM);
	if ("vad".equals(key)) return WordnetNounIndexNameInstanceVAD.get(TERM);
	if ("vag".equals(key)) return WordnetNounIndexNameInstanceVAG.get(TERM);
	if ("vai".equals(key)) return WordnetNounIndexNameInstanceVAI.get(TERM);
	if ("vaj".equals(key)) return WordnetNounIndexNameInstanceVAJ.get(TERM);
	if ("val".equals(key)) return WordnetNounIndexNameInstanceVAL.get(TERM);
	if ("vam".equals(key)) return WordnetNounIndexNameInstanceVAM.get(TERM);
	if ("van".equals(key)) return WordnetNounIndexNameInstanceVAN.get(TERM);
	if ("vap".equals(key)) return WordnetNounIndexNameInstanceVAP.get(TERM);
	if ("vaq".equals(key)) return WordnetNounIndexNameInstanceVAQ.get(TERM);
	if ("var".equals(key)) return WordnetNounIndexNameInstanceVAR.get(TERM);
	if ("vas".equals(key)) return WordnetNounIndexNameInstanceVAS.get(TERM);
	if ("vat".equals(key)) return WordnetNounIndexNameInstanceVAT.get(TERM);
	if ("vau".equals(key)) return WordnetNounIndexNameInstanceVAU.get(TERM);
	if ("vay".equals(key)) return WordnetNounIndexNameInstanceVAY.get(TERM);
  		throw new BusinessException("TERM not found (id = %s)", TERM); 	} 	 	public static Collection<String> terms() throws BusinessException { 		Set<String> set = new TreeSet<String>();  			set.addAll(WordnetNounIndexNameInstanceVAC.terms());
	set.addAll(WordnetNounIndexNameInstanceVAD.terms());
	set.addAll(WordnetNounIndexNameInstanceVAG.terms());
	set.addAll(WordnetNounIndexNameInstanceVAI.terms());
	set.addAll(WordnetNounIndexNameInstanceVAJ.terms());
	set.addAll(WordnetNounIndexNameInstanceVAL.terms());
	set.addAll(WordnetNounIndexNameInstanceVAM.terms());
	set.addAll(WordnetNounIndexNameInstanceVAN.terms());
	set.addAll(WordnetNounIndexNameInstanceVAP.terms());
	set.addAll(WordnetNounIndexNameInstanceVAQ.terms());
	set.addAll(WordnetNounIndexNameInstanceVAR.terms());
	set.addAll(WordnetNounIndexNameInstanceVAS.terms());
	set.addAll(WordnetNounIndexNameInstanceVAT.terms());
	set.addAll(WordnetNounIndexNameInstanceVAU.terms());
	set.addAll(WordnetNounIndexNameInstanceVAY.terms());
  		return set; 	} }