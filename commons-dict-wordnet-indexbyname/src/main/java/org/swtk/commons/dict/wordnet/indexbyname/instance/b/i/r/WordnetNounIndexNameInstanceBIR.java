package org.swtk.commons.dict.wordnet.indexbyname.instance.b.i.r;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceBIR {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"birch\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"02846047\", \"12301758\", \"12302117\"]}");
	add("{\"term\":\"birchbark\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02846267\"]}");
	add("{\"term\":\"bird\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"04219349\", \"07138578\", \"10008583\", \"07659991\", \"01505702\"]}");
	add("{\"term\":\"birdbath\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02846396\"]}");
	add("{\"term\":\"birdbrain\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10618312\"]}");
	add("{\"term\":\"birdcage\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02846514\"]}");
	add("{\"term\":\"birdcall\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02846703\", \"06809500\"]}");
	add("{\"term\":\"birder\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09875906\"]}");
	add("{\"term\":\"birdfeeder\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02846791\"]}");
	add("{\"term\":\"birdhouse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02846922\"]}");
	add("{\"term\":\"birdie\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04219349\", \"13616519\"]}");
	add("{\"term\":\"birdlime\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14726864\"]}");
	add("{\"term\":\"birdnest\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09244478\"]}");
	add("{\"term\":\"birdnesting\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00713052\"]}");
	add("{\"term\":\"birdseed\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07821570\"]}");
	add("{\"term\":\"birdsong\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06809500\"]}");
	add("{\"term\":\"birefringence\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11523900\"]}");
	add("{\"term\":\"biretta\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02847147\"]}");
	add("{\"term\":\"biriani\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07669907\"]}");
	add("{\"term\":\"birling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00344720\"]}");
	add("{\"term\":\"birmingham\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08897840\", \"09076410\"]}");
	add("{\"term\":\"biro\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02786184\"]}");
	add("{\"term\":\"birr\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07414517\", \"13686501\"]}");
	add("{\"term\":\"birretta\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02847147\"]}");
	add("{\"term\":\"birth\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"09876077\", \"13835977\", \"13554089\", \"07334902\", \"15167127\"]}");
	add("{\"term\":\"birthday\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"15277233\", \"15274989\"]}");
	add("{\"term\":\"birthing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13554089\"]}");
	add("{\"term\":\"birthmark\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04699986\"]}");
	add("{\"term\":\"birthplace\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08527477\", \"08527371\"]}");
	add("{\"term\":\"birthrate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15301413\"]}");
	add("{\"term\":\"birthright\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04928485\", \"13284819\", \"04928753\"]}");
	add("{\"term\":\"birthroot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12489405\"]}");
	add("{\"term\":\"birthwort\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11821861\"]}");
	add("{\"term\":\"biryani\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07669907\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }