package org.swtk.commons.dict.wordnet.indexbyname.instance.f.u.n;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceFUN {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"fun\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04656618\", \"01263236\", \"06793739\", \"00430934\"]}");
	add("{\"term\":\"fun run\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07475360\"]}");
	add("{\"term\":\"funafuti\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08859649\"]}");
	add("{\"term\":\"funambulism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00325804\"]}");
	add("{\"term\":\"funambulist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10135603\"]}");
	add("{\"term\":\"function\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"06594579\", \"07461861\", \"08269388\", \"13803376\", \"00721817\", \"05156572\", \"13806028\"]}");
	add("{\"term\":\"function call\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06595162\"]}");
	add("{\"term\":\"function word\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06302098\"]}");
	add("{\"term\":\"functional anatomy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06069259\"]}");
	add("{\"term\":\"functional calculus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06175080\"]}");
	add("{\"term\":\"functional disorder\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14076866\"]}");
	add("{\"term\":\"functional genomics\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06084768\"]}");
	add("{\"term\":\"functional illiterate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10135750\"]}");
	add("{\"term\":\"functional magnetic resonance imaging\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00904455\"]}");
	add("{\"term\":\"functionalism\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05970910\", \"06149505\"]}");
	add("{\"term\":\"functionalist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10135903\"]}");
	add("{\"term\":\"functionality\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05158619\"]}");
	add("{\"term\":\"functionary\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10392072\"]}");
	add("{\"term\":\"functioning\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13546752\"]}");
	add("{\"term\":\"fund\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"08087686\", \"13388243\", \"13379722\"]}");
	add("{\"term\":\"fundament\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03391862\", \"05566889\", \"05801562\"]}");
	add("{\"term\":\"fundamental\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05727905\", \"07342658\"]}");
	add("{\"term\":\"fundamental analysis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00650333\"]}");
	add("{\"term\":\"fundamental frequency\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05727905\"]}");
	add("{\"term\":\"fundamental interaction\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11536546\"]}");
	add("{\"term\":\"fundamental law\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06545639\"]}");
	add("{\"term\":\"fundamental measure\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13597072\"]}");
	add("{\"term\":\"fundamental particle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09294991\"]}");
	add("{\"term\":\"fundamental principle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05879984\"]}");
	add("{\"term\":\"fundamental quantity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13597072\"]}");
	add("{\"term\":\"fundamentalism\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06226161\", \"06241447\"]}");
	add("{\"term\":\"fundamentalist\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10136027\", \"11428554\"]}");
	add("{\"term\":\"fundamentals\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05879984\"]}");
	add("{\"term\":\"fundamentals analysis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00650333\"]}");
	add("{\"term\":\"funding\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01101014\", \"13386871\"]}");
	add("{\"term\":\"fundraiser\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07470250\", \"10136135\"]}");
	add("{\"term\":\"funds\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13377127\"]}");
	add("{\"term\":\"fundulus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01449642\"]}");
	add("{\"term\":\"fundulus heteroclitus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01449780\"]}");
	add("{\"term\":\"fundulus majalis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01449972\"]}");
	add("{\"term\":\"fundus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05272044\"]}");
	add("{\"term\":\"funeral\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07466063\"]}");
	add("{\"term\":\"funeral chapel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03407856\"]}");
	add("{\"term\":\"funeral church\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03407856\"]}");
	add("{\"term\":\"funeral director\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10351554\"]}");
	add("{\"term\":\"funeral home\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03407856\"]}");
	add("{\"term\":\"funeral march\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07073068\"]}");
	add("{\"term\":\"funeral parlor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03407856\"]}");
	add("{\"term\":\"funeral parlour\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03407856\"]}");
	add("{\"term\":\"funeral pyre\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07980108\"]}");
	add("{\"term\":\"funeral undertaker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10351554\"]}");
	add("{\"term\":\"funfair\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00520389\", \"08511241\"]}");
	add("{\"term\":\"fungal infection\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14200377\"]}");
	add("{\"term\":\"fungi\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13013224\"]}");
	add("{\"term\":\"fungi imperfecti\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13016484\"]}");
	add("{\"term\":\"fungia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01920392\"]}");
	add("{\"term\":\"fungibility\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04743169\"]}");
	add("{\"term\":\"fungible\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03408084\"]}");
	add("{\"term\":\"fungicide\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02723112\"]}");
	add("{\"term\":\"fungus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13013628\"]}");
	add("{\"term\":\"fungus family\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11611234\"]}");
	add("{\"term\":\"fungus genus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11612597\"]}");
	add("{\"term\":\"fungus gnat\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02206244\", \"02207374\"]}");
	add("{\"term\":\"fungus kingdom\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13013224\"]}");
	add("{\"term\":\"fungus order\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11615127\"]}");
	add("{\"term\":\"funicle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11698650\"]}");
	add("{\"term\":\"funicular\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02938025\"]}");
	add("{\"term\":\"funicular railway\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02938025\"]}");
	add("{\"term\":\"funiculitis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14369685\"]}");
	add("{\"term\":\"funiculus\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05272255\", \"11698650\"]}");
	add("{\"term\":\"funk\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"07077625\", \"11006018\", \"14428014\"]}");
	add("{\"term\":\"funk hole\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03408240\"]}");
	add("{\"term\":\"funka\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12478024\"]}");
	add("{\"term\":\"funkaceae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12477755\"]}");
	add("{\"term\":\"funnel\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03408346\", \"03408558\", \"13895461\"]}");
	add("{\"term\":\"funnel shape\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13895461\"]}");
	add("{\"term\":\"funnel web\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03408788\"]}");
	add("{\"term\":\"funnies\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07016468\"]}");
	add("{\"term\":\"funniness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06794240\"]}");
	add("{\"term\":\"funny\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06792149\"]}");
	add("{\"term\":\"funny bone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05588293\"]}");
	add("{\"term\":\"funny farm\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02823933\"]}");
	add("{\"term\":\"funny house\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02823933\"]}");
	add("{\"term\":\"funny remark\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06792149\"]}");
	add("{\"term\":\"funny story\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06792149\"]}");
	add("{\"term\":\"funny wagon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03408927\"]}");
	add("{\"term\":\"funrun\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07475360\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }