package org.swtk.commons.dict.wordnet.indexbyname.instance.r.u.s;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceRUS {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"rus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09025000\"]}");
	add("{\"term\":\"ruscaceae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12485408\"]}");
	add("{\"term\":\"ruscus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12483456\"]}");
	add("{\"term\":\"ruse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00173419\"]}");
	add("{\"term\":\"rush\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"00561330\", \"07450952\", \"07543858\", \"11294259\", \"11763763\", \"07454840\", \"00556685\"]}");
	add("{\"term\":\"rushdie\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11294444\"]}");
	add("{\"term\":\"rusher\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"10563352\", \"10563494\", \"10563624\"]}");
	add("{\"term\":\"rushing\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00556685\", \"00561330\"]}");
	add("{\"term\":\"rushlight\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04128322\"]}");
	add("{\"term\":\"rushmore\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09440546\"]}");
	add("{\"term\":\"rusk\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07705587\"]}");
	add("{\"term\":\"ruskin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11294704\"]}");
	add("{\"term\":\"russell\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"11294802\", \"11295025\", \"11295160\", \"11295334\", \"11295485\", \"11295626\", \"11295762\"]}");
	add("{\"term\":\"russet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04128436\"]}");
	add("{\"term\":\"russia\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"09028783\", \"09025184\", \"09030093\", \"09025654\"]}");
	add("{\"term\":\"russian\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06957110\", \"09747745\"]}");
	add("{\"term\":\"russula\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13030540\"]}");
	add("{\"term\":\"russulaceae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13030824\"]}");
	add("{\"term\":\"rust\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"13084029\", \"13573473\", \"14301157\", \"14913630\"]}");
	add("{\"term\":\"rustbelt\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08582535\"]}");
	add("{\"term\":\"rustic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10563789\"]}");
	add("{\"term\":\"rustication\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00209543\", \"00210150\", \"00213400\", \"00915105\", \"14602760\"]}");
	add("{\"term\":\"rusticism\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07169374\"]}");
	add("{\"term\":\"rusticity\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04823356\"]}");
	add("{\"term\":\"rustiness\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05656601\", \"14602910\"]}");
	add("{\"term\":\"rusting\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13573473\"]}");
	add("{\"term\":\"rustle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07407383\"]}");
	add("{\"term\":\"rustler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10564037\"]}");
	add("{\"term\":\"rustling\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07407383\", \"00968608\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }