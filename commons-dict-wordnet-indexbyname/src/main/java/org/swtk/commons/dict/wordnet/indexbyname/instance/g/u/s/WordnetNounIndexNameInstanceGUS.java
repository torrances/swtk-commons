package org.swtk.commons.dict.wordnet.indexbyname.instance.g.u.s;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceGUS {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"gush\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07027434\", \"07454170\"]}");
	add("{\"term\":\"gusher\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03476153\"]}");
	add("{\"term\":\"gusset\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03476313\", \"03476470\", \"04546934\"]}");
	add("{\"term\":\"gusset plate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03476470\"]}");
	add("{\"term\":\"gust\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11485416\"]}");
	add("{\"term\":\"gustation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05666071\"]}");
	add("{\"term\":\"gustatory cell\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05312888\"]}");
	add("{\"term\":\"gustatory modality\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05666071\"]}");
	add("{\"term\":\"gustatory organ\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05312635\"]}");
	add("{\"term\":\"gustatory perception\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05723230\"]}");
	add("{\"term\":\"gustatory sensation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05723230\"]}");
	add("{\"term\":\"gustav hertz\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11066717\"]}");
	add("{\"term\":\"gustav klimt\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11127625\"]}");
	add("{\"term\":\"gustav ludwig hertz\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11066717\"]}");
	add("{\"term\":\"gustav mahler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11169620\"]}");
	add("{\"term\":\"gustav robert kirchhoff\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11125935\"]}");
	add("{\"term\":\"gustav theodor fechner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10988050\"]}");
	add("{\"term\":\"gustave courbet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10932955\"]}");
	add("{\"term\":\"gustave flaubert\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10992689\"]}");
	add("{\"term\":\"gustavus\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"11039421\", \"11039566\", \"11039896\", \"11040065\", \"11040221\", \"11040371\"]}");
	add("{\"term\":\"gustavus adolphus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11039566\"]}");
	add("{\"term\":\"gustavus franklin swift\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11346994\"]}");
	add("{\"term\":\"gustavus i\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11039421\"]}");
	add("{\"term\":\"gustavus ii\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11039566\"]}");
	add("{\"term\":\"gustavus iii\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11039896\"]}");
	add("{\"term\":\"gustavus iv\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11040065\"]}");
	add("{\"term\":\"gustavus v\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11040221\"]}");
	add("{\"term\":\"gustavus vi\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11040371\"]}");
	add("{\"term\":\"gusto\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07507121\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }