package org.swtk.commons.dict.wordnet.indexbyname.instance.a.l.e;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceALE {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"ale\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07905485\"]}");
	add("{\"term\":\"alecost\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12041968\"]}");
	add("{\"term\":\"alectis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02580454\"]}");
	add("{\"term\":\"alecto\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09529730\"]}");
	add("{\"term\":\"alectoria\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13011167\"]}");
	add("{\"term\":\"alectoris\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01810629\"]}");
	add("{\"term\":\"alectura\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01804394\"]}");
	add("{\"term\":\"alehoof\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12868134\"]}");
	add("{\"term\":\"alehouse\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02699024\"]}");
	add("{\"term\":\"alembic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02699105\"]}");
	add("{\"term\":\"alendronate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02699243\"]}");
	add("{\"term\":\"alep\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09056761\"]}");
	add("{\"term\":\"aleph\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06849764\"]}");
	add("{\"term\":\"alepisaurus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02546717\"]}");
	add("{\"term\":\"aleppo\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09056761\"]}");
	add("{\"term\":\"alert\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06816015\", \"07239434\", \"14055142\"]}");
	add("{\"term\":\"alerting\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"07239434\", \"14059525\"]}");
	add("{\"term\":\"alertness\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04671985\", \"14059525\", \"05713669\"]}");
	add("{\"term\":\"aletris\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12450447\"]}");
	add("{\"term\":\"aleurites\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12948114\"]}");
	add("{\"term\":\"aleurone\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14754132\"]}");
	add("{\"term\":\"aleut\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06931088\", \"08505421\", \"09802030\"]}");
	add("{\"term\":\"aleutian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09802030\"]}");
	add("{\"term\":\"aleutians\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08854667\"]}");
	add("{\"term\":\"aleve\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03813684\"]}");
	add("{\"term\":\"alewife\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02533745\", \"07801607\"]}");
	add("{\"term\":\"alexander\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10831964\", \"12966588\"]}");
	add("{\"term\":\"alexanders\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12966588\"]}");
	add("{\"term\":\"alexandria\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08918414\", \"09113857\"]}");
	add("{\"term\":\"alexandrian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09802171\"]}");
	add("{\"term\":\"alexandrine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06359743\"]}");
	add("{\"term\":\"alexandrite\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14739840\"]}");
	add("{\"term\":\"alexia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14122532\"]}");
	add("{\"term\":\"alexic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09802296\"]}");
	add("{\"term\":\"aleyrodes\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02249139\"]}");
	add("{\"term\":\"aleyrodidae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02248936\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }