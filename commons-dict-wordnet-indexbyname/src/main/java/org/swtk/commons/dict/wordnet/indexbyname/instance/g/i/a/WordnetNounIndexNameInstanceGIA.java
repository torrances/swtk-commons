package org.swtk.commons.dict.wordnet.indexbyname.instance.g.i.a;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceGIA {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"gia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08032788\"]}");
	add("{\"term\":\"giacometti\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11017549\"]}");
	add("{\"term\":\"giacomo della chiesa\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10863827\"]}");
	add("{\"term\":\"giacomo meyerbeer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11197685\"]}");
	add("{\"term\":\"giacomo puccini\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11268067\"]}");
	add("{\"term\":\"giambattista lulli\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11164850\"]}");
	add("{\"term\":\"giambattista marini\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11176802\"]}");
	add("{\"term\":\"giambattista marino\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11176802\"]}");
	add("{\"term\":\"gian carlo menotti\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11194891\"]}");
	add("{\"term\":\"gianbattista bodoni\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10873861\"]}");
	add("{\"term\":\"giannangelo braschi\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11257265\"]}");
	add("{\"term\":\"gianni versace\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11384130\"]}");
	add("{\"term\":\"giant\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"09311675\", \"09511841\", \"10148446\", \"10148670\", \"08073223\", \"09958449\", \"01326422\"]}");
	add("{\"term\":\"giant anteater\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02463082\"]}");
	add("{\"term\":\"giant armadillo\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02458639\"]}");
	add("{\"term\":\"giant bamboo\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12169274\"]}");
	add("{\"term\":\"giant buttercup\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11756831\"]}");
	add("{\"term\":\"giant cane\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12168770\"]}");
	add("{\"term\":\"giant chinkapin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12285303\"]}");
	add("{\"term\":\"giant clam\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01962133\"]}");
	add("{\"term\":\"giant cockroach\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02237857\"]}");
	add("{\"term\":\"giant conch\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01946759\"]}");
	add("{\"term\":\"giant coreopsis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11977786\"]}");
	add("{\"term\":\"giant crab\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01984988\"]}");
	add("{\"term\":\"giant eland\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02429829\"]}");
	add("{\"term\":\"giant fern\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13236484\"]}");
	add("{\"term\":\"giant fir\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11642819\"]}");
	add("{\"term\":\"giant foxtail\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12155212\"]}");
	add("{\"term\":\"giant fulmar\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02062505\"]}");
	add("{\"term\":\"giant garlic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12455490\"]}");
	add("{\"term\":\"giant granadilla\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12404554\"]}");
	add("{\"term\":\"giant helleborine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12083282\"]}");
	add("{\"term\":\"giant hives\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14143792\"]}");
	add("{\"term\":\"giant hornet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02215891\"]}");
	add("{\"term\":\"giant hyssop\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12860739\"]}");
	add("{\"term\":\"giant kangaroo\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01880247\"]}");
	add("{\"term\":\"giant lizard\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01697701\"]}");
	add("{\"term\":\"giant moa\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01525889\"]}");
	add("{\"term\":\"giant northwest shipworm\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01970158\"]}");
	add("{\"term\":\"giant panda\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02513086\"]}");
	add("{\"term\":\"giant perch\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02563177\"]}");
	add("{\"term\":\"giant petrel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02062505\"]}");
	add("{\"term\":\"giant pigfish\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02610914\"]}");
	add("{\"term\":\"giant potato creeper\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12918548\"]}");
	add("{\"term\":\"giant puffball\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13065135\"]}");
	add("{\"term\":\"giant red paintbrush\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12901222\"]}");
	add("{\"term\":\"giant reed\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12130015\"]}");
	add("{\"term\":\"giant ryegrass\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12139907\"]}");
	add("{\"term\":\"giant salamander\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01636422\"]}");
	add("{\"term\":\"giant scallop\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01969227\"]}");
	add("{\"term\":\"giant schnauzer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02099782\"]}");
	add("{\"term\":\"giant scrambling fern\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13191738\"]}");
	add("{\"term\":\"giant seaperch\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02563177\"]}");
	add("{\"term\":\"giant sequoia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11661945\"]}");
	add("{\"term\":\"giant silkworm\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02305272\"]}");
	add("{\"term\":\"giant silkworm moth\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02305111\"]}");
	add("{\"term\":\"giant squid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01974772\"]}");
	add("{\"term\":\"giant star\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09311675\"]}");
	add("{\"term\":\"giant star grass\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12136575\"]}");
	add("{\"term\":\"giant stock bean\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12531744\"]}");
	add("{\"term\":\"giant sunflower\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11999430\"]}");
	add("{\"term\":\"giant taro\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11802735\"]}");
	add("{\"term\":\"giant timber bamboo\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12170038\"]}");
	add("{\"term\":\"giant tortoise\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01673443\"]}");
	add("{\"term\":\"giant water bug\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02244789\"]}");
	add("{\"term\":\"giant willowherb\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12363015\"]}");
	add("{\"term\":\"giantess\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09513887\"]}");
	add("{\"term\":\"giantism\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05113520\", \"14391693\"]}");
	add("{\"term\":\"giardia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01422529\"]}");
	add("{\"term\":\"giardiasis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14200692\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }