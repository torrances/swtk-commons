package org.swtk.commons.dict.wordnet.indexbyname.instance.p.r.a;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstancePRA {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"practicability\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05159397\"]}");
	add("{\"term\":\"practicableness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05159397\"]}");
	add("{\"term\":\"practicality\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05158335\"]}");
	add("{\"term\":\"practice\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"05675040\", \"00632621\", \"00412061\", \"00896250\", \"00411260\"]}");
	add("{\"term\":\"practician\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10482426\"]}");
	add("{\"term\":\"practitioner\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10482426\"]}");
	add("{\"term\":\"praenomen\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06348964\"]}");
	add("{\"term\":\"praesidium\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08344320\"]}");
	add("{\"term\":\"praetor\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10482594\"]}");
	add("{\"term\":\"praetorian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10482825\"]}");
	add("{\"term\":\"praetorium\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04004233\"]}");
	add("{\"term\":\"praetorship\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00597308\"]}");
	add("{\"term\":\"prag\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08775759\"]}");
	add("{\"term\":\"pragmatic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06553569\"]}");
	add("{\"term\":\"pragmatics\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06189208\"]}");
	add("{\"term\":\"pragmatism\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05159116\", \"05983665\"]}");
	add("{\"term\":\"pragmatist\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"10482952\", \"10483148\"]}");
	add("{\"term\":\"prague\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08775759\"]}");
	add("{\"term\":\"praha\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08775759\"]}");
	add("{\"term\":\"praia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08735927\"]}");
	add("{\"term\":\"prairial\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15202291\"]}");
	add("{\"term\":\"prairie\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08637099\"]}");
	add("{\"term\":\"praise\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06706247\", \"06705943\"]}");
	add("{\"term\":\"praiseworthiness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04814594\"]}");
	add("{\"term\":\"praisworthiness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05146607\"]}");
	add("{\"term\":\"prajapati\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09550841\"]}");
	add("{\"term\":\"prakrit\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06985752\", \"06986165\"]}");
	add("{\"term\":\"praline\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07624475\"]}");
	add("{\"term\":\"pram\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02769539\"]}");
	add("{\"term\":\"prance\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00290969\"]}");
	add("{\"term\":\"prancer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02381522\"]}");
	add("{\"term\":\"prang\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07316782\"]}");
	add("{\"term\":\"prank\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00428583\", \"00514412\"]}");
	add("{\"term\":\"prankishness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04916898\"]}");
	add("{\"term\":\"prankster\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10483280\"]}");
	add("{\"term\":\"praseodymium\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14675391\"]}");
	add("{\"term\":\"prat\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05566889\"]}");
	add("{\"term\":\"prate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07151837\"]}");
	add("{\"term\":\"prater\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09931028\"]}");
	add("{\"term\":\"pratfall\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00075610\", \"00077989\"]}");
	add("{\"term\":\"pratincole\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02041647\"]}");
	add("{\"term\":\"prattle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07151837\"]}");
	add("{\"term\":\"prattler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10483509\"]}");
	add("{\"term\":\"praunus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01992031\"]}");
	add("{\"term\":\"pravachol\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04004338\"]}");
	add("{\"term\":\"pravastatin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04004338\"]}");
	add("{\"term\":\"prawn\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01990186\", \"07810135\"]}");
	add("{\"term\":\"praxis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00412061\"]}");
	add("{\"term\":\"praxiteles\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09550959\"]}");
	add("{\"term\":\"praya\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01915987\"]}");
	add("{\"term\":\"prayer\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"10483618\", \"06467660\", \"07201488\", \"07203790\", \"01044000\"]}");
	add("{\"term\":\"prayerbook\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06428589\"]}");
	add("{\"term\":\"prazosin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04004883\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }