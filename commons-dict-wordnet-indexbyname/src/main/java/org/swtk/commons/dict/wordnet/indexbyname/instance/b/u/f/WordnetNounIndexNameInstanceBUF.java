package org.swtk.commons.dict.wordnet.indexbyname.instance.b.u.f;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceBUF {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"buff\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"02914310\", \"04981224\", \"05246919\", \"14784875\", \"10097373\"]}");
	add("{\"term\":\"buffalo\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"02410605\", \"07679237\", \"09141172\", \"02413348\"]}");
	add("{\"term\":\"buffalofish\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01448070\", \"07795239\"]}");
	add("{\"term\":\"buffer\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"02914310\", \"02914504\", \"02914678\", \"02914831\", \"03333146\", \"08706162\", \"14810100\"]}");
	add("{\"term\":\"bufferin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02915236\"]}");
	add("{\"term\":\"buffet\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04254864\", \"07591747\", \"02915411\"]}");
	add("{\"term\":\"buffeting\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07425126\"]}");
	add("{\"term\":\"bufflehead\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01852833\"]}");
	add("{\"term\":\"buffoon\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09950334\", \"09950623\"]}");
	add("{\"term\":\"buffoonery\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00514412\"]}");
	add("{\"term\":\"bufo\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01648933\"]}");
	add("{\"term\":\"bufonidae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01648275\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }