package org.swtk.commons.dict.wordnet.indexbyname.instance.w.a.n;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceWAN {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"wan\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04590763\"]}");
	add("{\"term\":\"wanamaker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11393374\"]}");
	add("{\"term\":\"wand\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"02812499\", \"07282278\", \"13185183\", \"04556915\"]}");
	add("{\"term\":\"wanda landowska\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11135919\"]}");
	add("{\"term\":\"wandala\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06996761\"]}");
	add("{\"term\":\"wanderer\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06591891\", \"10785347\"]}");
	add("{\"term\":\"wandering\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00297888\"]}");
	add("{\"term\":\"wandering albatross\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02061248\"]}");
	add("{\"term\":\"wandering jew\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10785553\"]}");
	add("{\"term\":\"wandering nerve\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05487728\"]}");
	add("{\"term\":\"wanderlust\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09206037\"]}");
	add("{\"term\":\"wandflower\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"12271795\", \"12439012\"]}");
	add("{\"term\":\"wane\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13491694\"]}");
	add("{\"term\":\"wangle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05915148\"]}");
	add("{\"term\":\"wangler\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10109384\"]}");
	add("{\"term\":\"wangling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05915148\"]}");
	add("{\"term\":\"waning\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07437601\"]}");
	add("{\"term\":\"wank\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00857822\"]}");
	add("{\"term\":\"wankel engine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04557007\"]}");
	add("{\"term\":\"wankel rotary engine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04557007\"]}");
	add("{\"term\":\"wanker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10736845\"]}");
	add("{\"term\":\"wannabe\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09820956\"]}");
	add("{\"term\":\"wannabee\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09820956\"]}");
	add("{\"term\":\"wanness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04984828\"]}");
	add("{\"term\":\"want\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"07501369\", \"09390888\", \"14472871\", \"14517010\"]}");
	add("{\"term\":\"want ad\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07264600\"]}");
	add("{\"term\":\"wanted notice\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07291243\"]}");
	add("{\"term\":\"wanted poster\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07291243\"]}");
	add("{\"term\":\"wanter\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10785693\"]}");
	add("{\"term\":\"wanton\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10785928\"]}");
	add("{\"term\":\"wantonness\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04858946\", \"04892593\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }