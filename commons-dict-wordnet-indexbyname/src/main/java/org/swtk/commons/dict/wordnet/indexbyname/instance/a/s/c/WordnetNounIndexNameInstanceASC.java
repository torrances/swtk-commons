package org.swtk.commons.dict.wordnet.indexbyname.instance.a.s.c;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceASC {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"ascaphidae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01647183\"]}");
	add("{\"term\":\"ascaphus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01647340\"]}");
	add("{\"term\":\"ascaphus trui\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01647541\"]}");
	add("{\"term\":\"ascariasis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14476641\"]}");
	add("{\"term\":\"ascaridae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01933126\"]}");
	add("{\"term\":\"ascaridia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01933636\"]}");
	add("{\"term\":\"ascaridia galli\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01933781\"]}");
	add("{\"term\":\"ascaris\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01933313\"]}");
	add("{\"term\":\"ascaris lumbricoides\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01933493\"]}");
	add("{\"term\":\"ascendance\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14465291\"]}");
	add("{\"term\":\"ascendancy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14465291\"]}");
	add("{\"term\":\"ascendant\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09811996\", \"14465827\"]}");
	add("{\"term\":\"ascendence\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14465291\"]}");
	add("{\"term\":\"ascendency\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14465291\"]}");
	add("{\"term\":\"ascendent\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09811996\", \"14465827\"]}");
	add("{\"term\":\"ascender\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06813390\", \"06843611\", \"09832927\"]}");
	add("{\"term\":\"ascending\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00325210\"]}");
	add("{\"term\":\"ascending aorta\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05343794\"]}");
	add("{\"term\":\"ascending artery\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05345403\"]}");
	add("{\"term\":\"ascending colon\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05544693\"]}");
	add("{\"term\":\"ascending node\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08515307\"]}");
	add("{\"term\":\"ascension\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00325210\", \"07326279\", \"07326440\", \"07460080\", \"15217887\"]}");
	add("{\"term\":\"ascension day\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15217887\"]}");
	add("{\"term\":\"ascension of christ\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07326440\"]}");
	add("{\"term\":\"ascension of the lord\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15217887\"]}");
	add("{\"term\":\"ascent\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"00325210\", \"07460080\", \"09229873\"]}");
	add("{\"term\":\"ascesis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01070936\"]}");
	add("{\"term\":\"ascetic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09777504\"]}");
	add("{\"term\":\"asceticism\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01070936\", \"04889193\", \"05967949\"]}");
	add("{\"term\":\"asch\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10845158\"]}");
	add("{\"term\":\"aschelminthes\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01932037\"]}");
	add("{\"term\":\"ascidiaceae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01471173\"]}");
	add("{\"term\":\"ascidian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01471353\"]}");
	add("{\"term\":\"ascidian tadpole\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01473536\"]}");
	add("{\"term\":\"ascii\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06368162\"]}");
	add("{\"term\":\"ascii character\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06833291\"]}");
	add("{\"term\":\"ascii character set\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06368485\"]}");
	add("{\"term\":\"ascii control character\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06833467\"]}");
	add("{\"term\":\"ascii text file\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06523233\"]}");
	add("{\"term\":\"ascites\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14133507\"]}");
	add("{\"term\":\"asclepia meadii\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13255755\"]}");
	add("{\"term\":\"asclepiad\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13254333\"]}");
	add("{\"term\":\"asclepiadaceae\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13253910\"]}");
	add("{\"term\":\"asclepias\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13254446\"]}");
	add("{\"term\":\"asclepias albicans\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13255012\"]}");
	add("{\"term\":\"asclepias curassavica\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13255191\"]}");
	add("{\"term\":\"asclepias exaltata\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13255417\"]}");
	add("{\"term\":\"asclepias incarnata\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13255576\"]}");
	add("{\"term\":\"asclepias meadii\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13255755\"]}");
	add("{\"term\":\"asclepias purpurascens\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13255909\"]}");
	add("{\"term\":\"asclepias speciosa\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13256057\"]}");
	add("{\"term\":\"asclepias subverticillata\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13256217\"]}");
	add("{\"term\":\"asclepias tuberosa\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13256401\"]}");
	add("{\"term\":\"asclepias verticillata\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13256664\"]}");
	add("{\"term\":\"asclepius\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09582330\"]}");
	add("{\"term\":\"ascocarp\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11553267\"]}");
	add("{\"term\":\"ascolichen\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13008183\"]}");
	add("{\"term\":\"ascoma\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11553923\"]}");
	add("{\"term\":\"ascomycete\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13044772\"]}");
	add("{\"term\":\"ascomycetes\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13044543\"]}");
	add("{\"term\":\"ascomycetous fungus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13044772\"]}");
	add("{\"term\":\"ascomycota\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13044052\"]}");
	add("{\"term\":\"ascomycotina\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13044052\"]}");
	add("{\"term\":\"ascophyllum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01408083\"]}");
	add("{\"term\":\"ascophyllum nodosum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01408257\"]}");
	add("{\"term\":\"ascorbic acid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15117865\"]}");
	add("{\"term\":\"ascospore\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13112999\"]}");
	add("{\"term\":\"ascot\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02750068\"]}");
	add("{\"term\":\"ascription\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05742504\", \"05742854\"]}");
	add("{\"term\":\"ascus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13112837\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }