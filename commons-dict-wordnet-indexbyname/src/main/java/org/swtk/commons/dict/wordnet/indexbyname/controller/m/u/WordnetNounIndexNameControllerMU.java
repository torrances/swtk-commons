package org.swtk.commons.dict.wordnet.indexbyname.controller.m.u;  import java.util.Set; import java.util.TreeSet;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  	import org.swtk.commons.dict.wordnet.indexbyname.instance.m.u.a.WordnetNounIndexNameInstanceMUA;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.m.u.b.WordnetNounIndexNameInstanceMUB;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.m.u.c.WordnetNounIndexNameInstanceMUC;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.m.u.d.WordnetNounIndexNameInstanceMUD;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.m.u.e.WordnetNounIndexNameInstanceMUE;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.m.u.f.WordnetNounIndexNameInstanceMUF;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.m.u.g.WordnetNounIndexNameInstanceMUG;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.m.u.h.WordnetNounIndexNameInstanceMUH;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.m.u.i.WordnetNounIndexNameInstanceMUI;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.m.u.j.WordnetNounIndexNameInstanceMUJ;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.m.u.k.WordnetNounIndexNameInstanceMUK;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.m.u.l.WordnetNounIndexNameInstanceMUL;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.m.u.m.WordnetNounIndexNameInstanceMUM;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.m.u.n.WordnetNounIndexNameInstanceMUN;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.m.u.o.WordnetNounIndexNameInstanceMUO;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.m.u.r.WordnetNounIndexNameInstanceMUR;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.m.u.s.WordnetNounIndexNameInstanceMUS;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.m.u.t.WordnetNounIndexNameInstanceMUT;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.m.u.u.WordnetNounIndexNameInstanceMUU;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.m.u.y.WordnetNounIndexNameInstanceMUY;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.m.u.z.WordnetNounIndexNameInstanceMUZ;
  import com.trimc.blogger.commons.exception.BusinessException;  public final class WordnetNounIndexNameControllerMU {  	public static Collection<IndexNoun> get(final String TERM) throws BusinessException { 		if (TERM.length() < 3) throw new BusinessException("TERM not found (term = %s)", TERM); 		 		String key = TERM.substring(0, 3).toLowerCase(); 			if ("mua".equals(key)) return WordnetNounIndexNameInstanceMUA.get(TERM);
	if ("mub".equals(key)) return WordnetNounIndexNameInstanceMUB.get(TERM);
	if ("muc".equals(key)) return WordnetNounIndexNameInstanceMUC.get(TERM);
	if ("mud".equals(key)) return WordnetNounIndexNameInstanceMUD.get(TERM);
	if ("mue".equals(key)) return WordnetNounIndexNameInstanceMUE.get(TERM);
	if ("muf".equals(key)) return WordnetNounIndexNameInstanceMUF.get(TERM);
	if ("mug".equals(key)) return WordnetNounIndexNameInstanceMUG.get(TERM);
	if ("muh".equals(key)) return WordnetNounIndexNameInstanceMUH.get(TERM);
	if ("mui".equals(key)) return WordnetNounIndexNameInstanceMUI.get(TERM);
	if ("muj".equals(key)) return WordnetNounIndexNameInstanceMUJ.get(TERM);
	if ("muk".equals(key)) return WordnetNounIndexNameInstanceMUK.get(TERM);
	if ("mul".equals(key)) return WordnetNounIndexNameInstanceMUL.get(TERM);
	if ("mum".equals(key)) return WordnetNounIndexNameInstanceMUM.get(TERM);
	if ("mun".equals(key)) return WordnetNounIndexNameInstanceMUN.get(TERM);
	if ("muo".equals(key)) return WordnetNounIndexNameInstanceMUO.get(TERM);
	if ("mur".equals(key)) return WordnetNounIndexNameInstanceMUR.get(TERM);
	if ("mus".equals(key)) return WordnetNounIndexNameInstanceMUS.get(TERM);
	if ("mut".equals(key)) return WordnetNounIndexNameInstanceMUT.get(TERM);
	if ("muu".equals(key)) return WordnetNounIndexNameInstanceMUU.get(TERM);
	if ("muy".equals(key)) return WordnetNounIndexNameInstanceMUY.get(TERM);
	if ("muz".equals(key)) return WordnetNounIndexNameInstanceMUZ.get(TERM);
  		throw new BusinessException("TERM not found (term = %s)", TERM); 	} 	 	public static Collection<String> terms() throws BusinessException { 		Set<String> set = new TreeSet<String>();  			set.addAll(WordnetNounIndexNameInstanceMUA.terms());
	set.addAll(WordnetNounIndexNameInstanceMUB.terms());
	set.addAll(WordnetNounIndexNameInstanceMUC.terms());
	set.addAll(WordnetNounIndexNameInstanceMUD.terms());
	set.addAll(WordnetNounIndexNameInstanceMUE.terms());
	set.addAll(WordnetNounIndexNameInstanceMUF.terms());
	set.addAll(WordnetNounIndexNameInstanceMUG.terms());
	set.addAll(WordnetNounIndexNameInstanceMUH.terms());
	set.addAll(WordnetNounIndexNameInstanceMUI.terms());
	set.addAll(WordnetNounIndexNameInstanceMUJ.terms());
	set.addAll(WordnetNounIndexNameInstanceMUK.terms());
	set.addAll(WordnetNounIndexNameInstanceMUL.terms());
	set.addAll(WordnetNounIndexNameInstanceMUM.terms());
	set.addAll(WordnetNounIndexNameInstanceMUN.terms());
	set.addAll(WordnetNounIndexNameInstanceMUO.terms());
	set.addAll(WordnetNounIndexNameInstanceMUR.terms());
	set.addAll(WordnetNounIndexNameInstanceMUS.terms());
	set.addAll(WordnetNounIndexNameInstanceMUT.terms());
	set.addAll(WordnetNounIndexNameInstanceMUU.terms());
	set.addAll(WordnetNounIndexNameInstanceMUY.terms());
	set.addAll(WordnetNounIndexNameInstanceMUZ.terms());
  		return set; 	} }