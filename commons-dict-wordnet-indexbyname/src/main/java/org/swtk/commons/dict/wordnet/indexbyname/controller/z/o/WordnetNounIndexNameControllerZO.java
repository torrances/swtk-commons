package org.swtk.commons.dict.wordnet.indexbyname.controller.z.o;  import java.util.Collection; import java.util.Set; import java.util.TreeSet;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  	import org.swtk.commons.dict.wordnet.indexbyname.instance.z.o.a.WordnetNounIndexNameInstanceZOA;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.z.o.c.WordnetNounIndexNameInstanceZOC;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.z.o.d.WordnetNounIndexNameInstanceZOD;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.z.o.i.WordnetNounIndexNameInstanceZOI;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.z.o.l.WordnetNounIndexNameInstanceZOL;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.z.o.m.WordnetNounIndexNameInstanceZOM;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.z.o.n.WordnetNounIndexNameInstanceZON;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.z.o.o.WordnetNounIndexNameInstanceZOO;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.z.o.r.WordnetNounIndexNameInstanceZOR;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.z.o.s.WordnetNounIndexNameInstanceZOS;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.z.o.v.WordnetNounIndexNameInstanceZOV;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.z.o.y.WordnetNounIndexNameInstanceZOY;
  import com.trimc.blogger.commons.exception.BusinessException;  public final class WordnetNounIndexNameControllerZO {  	public static Collection<IndexNoun> get(final String TERM) throws BusinessException { 		if (TERM.length() < 3) throw new BusinessException("TERM not found (term = %s)", TERM); 		 		String key = TERM.replaceAll(" ", "").substring(0, 3).toLowerCase(); 			if ("zoa".equals(key)) return WordnetNounIndexNameInstanceZOA.get(TERM);
	if ("zoc".equals(key)) return WordnetNounIndexNameInstanceZOC.get(TERM);
	if ("zod".equals(key)) return WordnetNounIndexNameInstanceZOD.get(TERM);
	if ("zoi".equals(key)) return WordnetNounIndexNameInstanceZOI.get(TERM);
	if ("zol".equals(key)) return WordnetNounIndexNameInstanceZOL.get(TERM);
	if ("zom".equals(key)) return WordnetNounIndexNameInstanceZOM.get(TERM);
	if ("zon".equals(key)) return WordnetNounIndexNameInstanceZON.get(TERM);
	if ("zoo".equals(key)) return WordnetNounIndexNameInstanceZOO.get(TERM);
	if ("zor".equals(key)) return WordnetNounIndexNameInstanceZOR.get(TERM);
	if ("zos".equals(key)) return WordnetNounIndexNameInstanceZOS.get(TERM);
	if ("zov".equals(key)) return WordnetNounIndexNameInstanceZOV.get(TERM);
	if ("zoy".equals(key)) return WordnetNounIndexNameInstanceZOY.get(TERM);
  		throw new BusinessException("TERM not found (term = %s)", TERM); 	}  	public static Collection<String> terms() throws BusinessException { 		Set<String> set = new TreeSet<String>();  			set.addAll(WordnetNounIndexNameInstanceZOA.terms());
	set.addAll(WordnetNounIndexNameInstanceZOC.terms());
	set.addAll(WordnetNounIndexNameInstanceZOD.terms());
	set.addAll(WordnetNounIndexNameInstanceZOI.terms());
	set.addAll(WordnetNounIndexNameInstanceZOL.terms());
	set.addAll(WordnetNounIndexNameInstanceZOM.terms());
	set.addAll(WordnetNounIndexNameInstanceZON.terms());
	set.addAll(WordnetNounIndexNameInstanceZOO.terms());
	set.addAll(WordnetNounIndexNameInstanceZOR.terms());
	set.addAll(WordnetNounIndexNameInstanceZOS.terms());
	set.addAll(WordnetNounIndexNameInstanceZOV.terms());
	set.addAll(WordnetNounIndexNameInstanceZOY.terms());
  		return set; 	} }