package org.swtk.commons.dict.wordnet.indexbyname.instance.f.a.c;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceFAC {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"facade\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06771409\", \"03318278\"]}");
	add("{\"term\":\"face\", \"synsetCount\":13, \"upperType\":\"NOUN\", \"ids\":[\"03318401\", \"04845441\", \"05176322\", \"06838449\", \"06890628\", \"03318547\", \"05608953\", \"08527687\", \"09641987\", \"03318818\", \"04686776\", \"04687095\", \"05608392\"]}");
	add("{\"term\":\"face angle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13939528\"]}");
	add("{\"term\":\"face card\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03318973\"]}");
	add("{\"term\":\"face cloth\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04561809\"]}");
	add("{\"term\":\"face cream\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03071343\"]}");
	add("{\"term\":\"face fungus\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05269065\"]}");
	add("{\"term\":\"face guard\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03319172\"]}");
	add("{\"term\":\"face lift\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00266316\", \"00675401\"]}");
	add("{\"term\":\"face lifting\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00675401\", \"00266316\"]}");
	add("{\"term\":\"face mask\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03319323\"]}");
	add("{\"term\":\"face of the earth\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13977471\"]}");
	add("{\"term\":\"face pack\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03876658\"]}");
	add("{\"term\":\"face powder\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03319725\"]}");
	add("{\"term\":\"face recognition\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05719153\", \"06656868\"]}");
	add("{\"term\":\"face saver\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01266075\"]}");
	add("{\"term\":\"face saving\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01266075\"]}");
	add("{\"term\":\"face soap\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04455236\"]}");
	add("{\"term\":\"face time\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15143666\"]}");
	add("{\"term\":\"face towel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03495107\"]}");
	add("{\"term\":\"face value\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04686161\", \"13356650\"]}");
	add("{\"term\":\"face veil\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03319829\"]}");
	add("{\"term\":\"facelift\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00266316\", \"00675401\"]}");
	add("{\"term\":\"faceplate\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03319553\"]}");
	add("{\"term\":\"facer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05696291\"]}");
	add("{\"term\":\"facet\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"13936179\", \"05859151\"]}");
	add("{\"term\":\"facet plane\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13884183\"]}");
	add("{\"term\":\"facetiousness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04656917\"]}");
	add("{\"term\":\"facia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05590163\"]}");
	add("{\"term\":\"facial\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00667024\", \"05486966\"]}");
	add("{\"term\":\"facial artery\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05352586\"]}");
	add("{\"term\":\"facial expression\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04687095\", \"06890128\"]}");
	add("{\"term\":\"facial gesture\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06890128\"]}");
	add("{\"term\":\"facial hair\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05268903\"]}");
	add("{\"term\":\"facial index\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13843484\"]}");
	add("{\"term\":\"facial muscle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05609887\"]}");
	add("{\"term\":\"facial nerve\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05486966\"]}");
	add("{\"term\":\"facial profiling\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06899323\"]}");
	add("{\"term\":\"facial recognition\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06656868\"]}");
	add("{\"term\":\"facial tissue\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14888410\"]}");
	add("{\"term\":\"facial vein\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05374684\"]}");
	add("{\"term\":\"facilitation\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"01210781\", \"11474459\", \"14599076\"]}");
	add("{\"term\":\"facilitator\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10095481\"]}");
	add("{\"term\":\"facility\", \"synsetCount\":5, \"upperType\":\"NOUN\", \"ids\":[\"00579586\", \"00586443\", \"04716072\", \"05650020\", \"03319968\"]}");
	add("{\"term\":\"facing\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"00829040\", \"03320589\", \"03320935\", \"03320750\"]}");
	add("{\"term\":\"facing pages\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06268608\"]}");
	add("{\"term\":\"facsimile\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03321050\", \"03321219\"]}");
	add("{\"term\":\"facsimile machine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03321050\"]}");
	add("{\"term\":\"fact\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"05898503\", \"13979160\", \"06648784\", \"05825522\"]}");
	add("{\"term\":\"fact mood\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13823912\"]}");
	add("{\"term\":\"faction\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08268798\", \"08258719\"]}");
	add("{\"term\":\"factoid\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06496576\", \"06496690\"]}");
	add("{\"term\":\"factor\", \"synsetCount\":7, \"upperType\":\"NOUN\", \"ids\":[\"05444328\", \"05866901\", \"13614422\", \"09796453\", \"13755542\", \"05877576\", \"07342405\"]}");
	add("{\"term\":\"factor analysis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06039726\"]}");
	add("{\"term\":\"factor i\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15047723\"]}");
	add("{\"term\":\"factor ii\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15095464\"]}");
	add("{\"term\":\"factor iii\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15095602\"]}");
	add("{\"term\":\"factor iv\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15095796\"]}");
	add("{\"term\":\"factor ix\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15096527\"]}");
	add("{\"term\":\"factor of proportionality\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13614837\"]}");
	add("{\"term\":\"factor of safety\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13847703\"]}");
	add("{\"term\":\"factor v\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15095933\"]}");
	add("{\"term\":\"factor vii\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15096070\"]}");
	add("{\"term\":\"factor viii\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15096251\"]}");
	add("{\"term\":\"factor x\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15096666\"]}");
	add("{\"term\":\"factor xi\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15096898\"]}");
	add("{\"term\":\"factor xii\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15097058\"]}");
	add("{\"term\":\"factor xiii\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15097224\"]}");
	add("{\"term\":\"factorial\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05868395\"]}");
	add("{\"term\":\"factoring\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05791038\"]}");
	add("{\"term\":\"factorisation\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05791038\"]}");
	add("{\"term\":\"factorization\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05791038\"]}");
	add("{\"term\":\"factory\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03321351\"]}");
	add("{\"term\":\"factory farm\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01106311\"]}");
	add("{\"term\":\"factory price\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13325841\"]}");
	add("{\"term\":\"factory ship\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03321818\"]}");
	add("{\"term\":\"factory whistle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03321933\"]}");
	add("{\"term\":\"factory worker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10337951\"]}");
	add("{\"term\":\"factotum\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10095590\"]}");
	add("{\"term\":\"facts of life\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00851153\"]}");
	add("{\"term\":\"factuality\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04766683\"]}");
	add("{\"term\":\"factualness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04766683\"]}");
	add("{\"term\":\"facula\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"11531594\", \"11531760\"]}");
	add("{\"term\":\"faculty\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08304507\", \"05658174\"]}");
	add("{\"term\":\"faculty member\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09778400\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }