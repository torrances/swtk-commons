package org.swtk.commons.dict.wordnet.indexbyname.instance.t.o.p;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceTOP {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"top\", \"synsetCount\":11, \"upperType\":\"NOUN\", \"ids\":[\"03039237\", \"04460937\", \"04461181\", \"04461511\", \"04461811\", \"05044772\", \"13963489\", \"15280833\", \"08635538\", \"08681092\", \"08681598\"]}");
	add("{\"term\":\"topaz\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"04980287\", \"15100916\", \"15101090\"]}");
	add("{\"term\":\"topcoat\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03461607\"]}");
	add("{\"term\":\"tope\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04353406\"]}");
	add("{\"term\":\"topee\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03957175\"]}");
	add("{\"term\":\"topeka\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09111373\"]}");
	add("{\"term\":\"toper\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10053926\"]}");
	add("{\"term\":\"topgallant\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04461925\", \"04462063\"]}");
	add("{\"term\":\"tophus\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"09478055\", \"15110492\"]}");
	add("{\"term\":\"topi\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02425037\", \"03957175\"]}");
	add("{\"term\":\"topiary\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00939950\", \"04462179\"]}");
	add("{\"term\":\"topic\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05822417\", \"06612141\"]}");
	add("{\"term\":\"topicality\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05200428\"]}");
	add("{\"term\":\"topicalization\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06495968\"]}");
	add("{\"term\":\"topknot\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01328839\", \"04462319\"]}");
	add("{\"term\":\"topmast\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04462521\"]}");
	add("{\"term\":\"topminnow\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01450932\", \"01451592\"]}");
	add("{\"term\":\"topognosia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05732179\"]}");
	add("{\"term\":\"topognosis\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05732179\"]}");
	add("{\"term\":\"topography\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06132185\", \"05071710\"]}");
	add("{\"term\":\"topolatry\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01047545\"]}");
	add("{\"term\":\"topology\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"05738310\", \"06026943\", \"06070013\", \"06132354\"]}");
	add("{\"term\":\"toponomy\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06188861\", \"06801320\"]}");
	add("{\"term\":\"toponym\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06355208\"]}");
	add("{\"term\":\"toponymy\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06188861\", \"06801320\"]}");
	add("{\"term\":\"topos\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05929076\"]}");
	add("{\"term\":\"topper\", \"synsetCount\":6, \"upperType\":\"NOUN\", \"ids\":[\"03242119\", \"04462850\", \"06794735\", \"09870573\", \"10735193\", \"10735320\"]}");
	add("{\"term\":\"topping\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07637385\"]}");
	add("{\"term\":\"topsail\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04462923\"]}");
	add("{\"term\":\"topside\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04463106\"]}");
	add("{\"term\":\"topsoil\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14719898\"]}");
	add("{\"term\":\"topspin\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07457344\"]}");
	add("{\"term\":\"topv\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04129105\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }