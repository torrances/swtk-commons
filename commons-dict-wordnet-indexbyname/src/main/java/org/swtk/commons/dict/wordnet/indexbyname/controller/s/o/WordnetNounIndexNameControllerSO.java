package org.swtk.commons.dict.wordnet.indexbyname.controller.s.o;  import java.util.ArrayList; import java.util.Collection; import java.util.Set; import java.util.TreeSet;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  	import org.swtk.commons.dict.wordnet.indexbyname.instance.s.o.a.WordnetNounIndexNameInstanceSOA;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.s.o.b.WordnetNounIndexNameInstanceSOB;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.s.o.c.WordnetNounIndexNameInstanceSOC;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.s.o.d.WordnetNounIndexNameInstanceSOD;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.s.o.f.WordnetNounIndexNameInstanceSOF;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.s.o.g.WordnetNounIndexNameInstanceSOG;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.s.o.h.WordnetNounIndexNameInstanceSOH;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.s.o.i.WordnetNounIndexNameInstanceSOI;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.s.o.j.WordnetNounIndexNameInstanceSOJ;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.s.o.k.WordnetNounIndexNameInstanceSOK;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.s.o.l.WordnetNounIndexNameInstanceSOL;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.s.o.m.WordnetNounIndexNameInstanceSOM;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.s.o.n.WordnetNounIndexNameInstanceSON;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.s.o.o.WordnetNounIndexNameInstanceSOO;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.s.o.p.WordnetNounIndexNameInstanceSOP;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.s.o.r.WordnetNounIndexNameInstanceSOR;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.s.o.t.WordnetNounIndexNameInstanceSOT;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.s.o.u.WordnetNounIndexNameInstanceSOU;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.s.o.v.WordnetNounIndexNameInstanceSOV;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.s.o.w.WordnetNounIndexNameInstanceSOW;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.s.o.y.WordnetNounIndexNameInstanceSOY;
  import com.trimc.blogger.commons.exception.BusinessException;  public final class WordnetNounIndexNameControllerSO {  	public static Collection<IndexNoun> get(final String TERM) throws BusinessException { 		if (TERM.length() < 3) throw new BusinessException("TERM not found (term = %s)", TERM); 		 		String key = TERM.substring(0, 3).toLowerCase(); 			if ("soa".equals(key)) return WordnetNounIndexNameInstanceSOA.get(TERM);
	if ("sob".equals(key)) return WordnetNounIndexNameInstanceSOB.get(TERM);
	if ("soc".equals(key)) return WordnetNounIndexNameInstanceSOC.get(TERM);
	if ("sod".equals(key)) return WordnetNounIndexNameInstanceSOD.get(TERM);
	if ("sof".equals(key)) return WordnetNounIndexNameInstanceSOF.get(TERM);
	if ("sog".equals(key)) return WordnetNounIndexNameInstanceSOG.get(TERM);
	if ("soh".equals(key)) return WordnetNounIndexNameInstanceSOH.get(TERM);
	if ("soi".equals(key)) return WordnetNounIndexNameInstanceSOI.get(TERM);
	if ("soj".equals(key)) return WordnetNounIndexNameInstanceSOJ.get(TERM);
	if ("sok".equals(key)) return WordnetNounIndexNameInstanceSOK.get(TERM);
	if ("sol".equals(key)) return WordnetNounIndexNameInstanceSOL.get(TERM);
	if ("som".equals(key)) return WordnetNounIndexNameInstanceSOM.get(TERM);
	if ("son".equals(key)) return WordnetNounIndexNameInstanceSON.get(TERM);
	if ("soo".equals(key)) return WordnetNounIndexNameInstanceSOO.get(TERM);
	if ("sop".equals(key)) return WordnetNounIndexNameInstanceSOP.get(TERM);
	if ("sor".equals(key)) return WordnetNounIndexNameInstanceSOR.get(TERM);
	if ("sot".equals(key)) return WordnetNounIndexNameInstanceSOT.get(TERM);
	if ("sou".equals(key)) return WordnetNounIndexNameInstanceSOU.get(TERM);
	if ("sov".equals(key)) return WordnetNounIndexNameInstanceSOV.get(TERM);
	if ("sow".equals(key)) return WordnetNounIndexNameInstanceSOW.get(TERM);
	if ("soy".equals(key)) return WordnetNounIndexNameInstanceSOY.get(TERM);
  		throw new BusinessException("TERM not found (term = %s)", TERM); 	} 	 	public static Collection<String> terms() throws BusinessException { 		Set<String> set = new TreeSet<String>();  			set.addAll(WordnetNounIndexNameInstanceSOA.terms());
	set.addAll(WordnetNounIndexNameInstanceSOB.terms());
	set.addAll(WordnetNounIndexNameInstanceSOC.terms());
	set.addAll(WordnetNounIndexNameInstanceSOD.terms());
	set.addAll(WordnetNounIndexNameInstanceSOF.terms());
	set.addAll(WordnetNounIndexNameInstanceSOG.terms());
	set.addAll(WordnetNounIndexNameInstanceSOH.terms());
	set.addAll(WordnetNounIndexNameInstanceSOI.terms());
	set.addAll(WordnetNounIndexNameInstanceSOJ.terms());
	set.addAll(WordnetNounIndexNameInstanceSOK.terms());
	set.addAll(WordnetNounIndexNameInstanceSOL.terms());
	set.addAll(WordnetNounIndexNameInstanceSOM.terms());
	set.addAll(WordnetNounIndexNameInstanceSON.terms());
	set.addAll(WordnetNounIndexNameInstanceSOO.terms());
	set.addAll(WordnetNounIndexNameInstanceSOP.terms());
	set.addAll(WordnetNounIndexNameInstanceSOR.terms());
	set.addAll(WordnetNounIndexNameInstanceSOT.terms());
	set.addAll(WordnetNounIndexNameInstanceSOU.terms());
	set.addAll(WordnetNounIndexNameInstanceSOV.terms());
	set.addAll(WordnetNounIndexNameInstanceSOW.terms());
	set.addAll(WordnetNounIndexNameInstanceSOY.terms());
  		return set; 	} }