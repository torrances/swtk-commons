package org.swtk.commons.dict.wordnet.indexbyname.instance.c.i.v;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceCIV {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"cive\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12455657\"]}");
	add("{\"term\":\"civet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02137872\"]}");
	add("{\"term\":\"civet bean\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07745201\"]}");
	add("{\"term\":\"civet cat\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"02137872\", \"02511373\"]}");
	add("{\"term\":\"civic center\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"08561059\", \"03082510\"]}");
	add("{\"term\":\"civic duty\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01133325\"]}");
	add("{\"term\":\"civic leader\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09943895\"]}");
	add("{\"term\":\"civic pride\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04893985\"]}");
	add("{\"term\":\"civic responsibility\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01133325\"]}");
	add("{\"term\":\"civic spirit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04893985\"]}");
	add("{\"term\":\"civics\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06152905\"]}");
	add("{\"term\":\"civies\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03040326\"]}");
	add("{\"term\":\"civil action\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01186720\"]}");
	add("{\"term\":\"civil authority\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10561390\"]}");
	add("{\"term\":\"civil censorship\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00823179\"]}");
	add("{\"term\":\"civil contempt\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01183208\"]}");
	add("{\"term\":\"civil day\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15182001\"]}");
	add("{\"term\":\"civil death\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"00233632\", \"13976010\"]}");
	add("{\"term\":\"civil defense\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00962799\"]}");
	add("{\"term\":\"civil disobedience\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01182417\"]}");
	add("{\"term\":\"civil engineer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09943998\"]}");
	add("{\"term\":\"civil engineering\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06137134\"]}");
	add("{\"term\":\"civil law\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06546650\", \"08470475\"]}");
	add("{\"term\":\"civil leader\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09943895\"]}");
	add("{\"term\":\"civil libertarian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09944312\"]}");
	add("{\"term\":\"civil liberty\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"05190510\", \"14019147\"]}");
	add("{\"term\":\"civil list\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13443234\"]}");
	add("{\"term\":\"civil marriage\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01039609\"]}");
	add("{\"term\":\"civil officer\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10561390\"]}");
	add("{\"term\":\"civil order\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13992306\"]}");
	add("{\"term\":\"civil right\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"05189831\"]}");
	add("{\"term\":\"civil rights activist\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09944454\"]}");
	add("{\"term\":\"civil rights leader\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09944454\"]}");
	add("{\"term\":\"civil rights movement\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08488380\"]}");
	add("{\"term\":\"civil rights worker\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09944454\"]}");
	add("{\"term\":\"civil servant\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09944917\"]}");
	add("{\"term\":\"civil service\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08374185\"]}");
	add("{\"term\":\"civil suit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01185521\"]}");
	add("{\"term\":\"civil time\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15141495\"]}");
	add("{\"term\":\"civil union\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13987940\"]}");
	add("{\"term\":\"civil war\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00964678\"]}");
	add("{\"term\":\"civil wrong\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00735181\"]}");
	add("{\"term\":\"civil year\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15227430\"]}");
	add("{\"term\":\"civilian\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09944200\"]}");
	add("{\"term\":\"civilian clothing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03040454\"]}");
	add("{\"term\":\"civilian dress\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03040454\"]}");
	add("{\"term\":\"civilian garb\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03040454\"]}");
	add("{\"term\":\"civilisation\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04819244\", \"08128749\", \"08304765\", \"13470143\"]}");
	add("{\"term\":\"civility\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"01230397\", \"04921310\"]}");
	add("{\"term\":\"civilization\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"04819244\", \"08304765\", \"13470143\", \"08128749\"]}");
	add("{\"term\":\"civvies\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03040326\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }