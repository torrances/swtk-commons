package org.swtk.commons.dict.wordnet.indexbyname.instance.i.t.a;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceITA {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"itaconic acid\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14948611\"]}");
	add("{\"term\":\"italia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08819530\"]}");
	add("{\"term\":\"italian\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"06976989\", \"09735443\"]}");
	add("{\"term\":\"italian bee\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02211763\"]}");
	add("{\"term\":\"italian bread\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07703371\"]}");
	add("{\"term\":\"italian capital\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08824749\"]}");
	add("{\"term\":\"italian clover\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11773612\"]}");
	add("{\"term\":\"italian cypress\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11653070\"]}");
	add("{\"term\":\"italian dressing\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07850136\"]}");
	add("{\"term\":\"italian greyhound\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02093684\"]}");
	add("{\"term\":\"italian honeysuckle\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12695656\"]}");
	add("{\"term\":\"italian lira\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13708481\"]}");
	add("{\"term\":\"italian millet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12155787\"]}");
	add("{\"term\":\"italian monetary unit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13708373\"]}");
	add("{\"term\":\"italian parsley\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12963332\"]}");
	add("{\"term\":\"italian peninsula\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08819216\"]}");
	add("{\"term\":\"italian region\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08821234\"]}");
	add("{\"term\":\"italian renaissance\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"15284941\"]}");
	add("{\"term\":\"italian republic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08819530\"]}");
	add("{\"term\":\"italian rice\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07891412\"]}");
	add("{\"term\":\"italian rye\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12145518\"]}");
	add("{\"term\":\"italian ryegrass\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12145518\"]}");
	add("{\"term\":\"italian sandwich\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07713570\"]}");
	add("{\"term\":\"italian sonnet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06394359\"]}");
	add("{\"term\":\"italian vegetable marrow\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12180459\"]}");
	add("{\"term\":\"italian vermouth\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07915267\"]}");
	add("{\"term\":\"italian woodbine\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12695656\"]}");
	add("{\"term\":\"italic\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06840394\", \"06974593\", \"06362325\"]}");
	add("{\"term\":\"italic language\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06974593\"]}");
	add("{\"term\":\"italo calvino\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10900593\"]}");
	add("{\"term\":\"italy\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"08819530\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }