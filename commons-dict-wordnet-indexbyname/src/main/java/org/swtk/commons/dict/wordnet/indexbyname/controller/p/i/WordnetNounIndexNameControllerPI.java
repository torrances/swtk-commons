package org.swtk.commons.dict.wordnet.indexbyname.controller.p.i;  import java.util.Collection; import java.util.Set; import java.util.TreeSet;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  	import org.swtk.commons.dict.wordnet.indexbyname.instance.p.i.a.WordnetNounIndexNameInstancePIA;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.p.i.b.WordnetNounIndexNameInstancePIB;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.p.i.c.WordnetNounIndexNameInstancePIC;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.p.i.d.WordnetNounIndexNameInstancePID;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.p.i.e.WordnetNounIndexNameInstancePIE;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.p.i.f.WordnetNounIndexNameInstancePIF;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.p.i.g.WordnetNounIndexNameInstancePIG;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.p.i.k.WordnetNounIndexNameInstancePIK;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.p.i.l.WordnetNounIndexNameInstancePIL;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.p.i.m.WordnetNounIndexNameInstancePIM;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.p.i.n.WordnetNounIndexNameInstancePIN;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.p.i.o.WordnetNounIndexNameInstancePIO;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.p.i.p.WordnetNounIndexNameInstancePIP;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.p.i.q.WordnetNounIndexNameInstancePIQ;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.p.i.r.WordnetNounIndexNameInstancePIR;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.p.i.s.WordnetNounIndexNameInstancePIS;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.p.i.t.WordnetNounIndexNameInstancePIT;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.p.i.u.WordnetNounIndexNameInstancePIU;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.p.i.v.WordnetNounIndexNameInstancePIV;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.p.i.x.WordnetNounIndexNameInstancePIX;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.p.i.z.WordnetNounIndexNameInstancePIZ;
  import com.trimc.blogger.commons.exception.BusinessException;  public final class WordnetNounIndexNameControllerPI {  	public static Collection<IndexNoun> get(final String TERM) throws BusinessException { 		if (TERM.length() < 3) throw new BusinessException("TERM not found (term = %s)", TERM); 		 		String key = TERM.replaceAll(" ", "").substring(0, 3).toLowerCase(); 			if ("pia".equals(key)) return WordnetNounIndexNameInstancePIA.get(TERM);
	if ("pib".equals(key)) return WordnetNounIndexNameInstancePIB.get(TERM);
	if ("pic".equals(key)) return WordnetNounIndexNameInstancePIC.get(TERM);
	if ("pid".equals(key)) return WordnetNounIndexNameInstancePID.get(TERM);
	if ("pie".equals(key)) return WordnetNounIndexNameInstancePIE.get(TERM);
	if ("pif".equals(key)) return WordnetNounIndexNameInstancePIF.get(TERM);
	if ("pig".equals(key)) return WordnetNounIndexNameInstancePIG.get(TERM);
	if ("pik".equals(key)) return WordnetNounIndexNameInstancePIK.get(TERM);
	if ("pil".equals(key)) return WordnetNounIndexNameInstancePIL.get(TERM);
	if ("pim".equals(key)) return WordnetNounIndexNameInstancePIM.get(TERM);
	if ("pin".equals(key)) return WordnetNounIndexNameInstancePIN.get(TERM);
	if ("pio".equals(key)) return WordnetNounIndexNameInstancePIO.get(TERM);
	if ("pip".equals(key)) return WordnetNounIndexNameInstancePIP.get(TERM);
	if ("piq".equals(key)) return WordnetNounIndexNameInstancePIQ.get(TERM);
	if ("pir".equals(key)) return WordnetNounIndexNameInstancePIR.get(TERM);
	if ("pis".equals(key)) return WordnetNounIndexNameInstancePIS.get(TERM);
	if ("pit".equals(key)) return WordnetNounIndexNameInstancePIT.get(TERM);
	if ("piu".equals(key)) return WordnetNounIndexNameInstancePIU.get(TERM);
	if ("piv".equals(key)) return WordnetNounIndexNameInstancePIV.get(TERM);
	if ("pix".equals(key)) return WordnetNounIndexNameInstancePIX.get(TERM);
	if ("piz".equals(key)) return WordnetNounIndexNameInstancePIZ.get(TERM);
  		throw new BusinessException("TERM not found (term = %s)", TERM); 	}  	public static Collection<String> terms() throws BusinessException { 		Set<String> set = new TreeSet<String>();  			set.addAll(WordnetNounIndexNameInstancePIA.terms());
	set.addAll(WordnetNounIndexNameInstancePIB.terms());
	set.addAll(WordnetNounIndexNameInstancePIC.terms());
	set.addAll(WordnetNounIndexNameInstancePID.terms());
	set.addAll(WordnetNounIndexNameInstancePIE.terms());
	set.addAll(WordnetNounIndexNameInstancePIF.terms());
	set.addAll(WordnetNounIndexNameInstancePIG.terms());
	set.addAll(WordnetNounIndexNameInstancePIK.terms());
	set.addAll(WordnetNounIndexNameInstancePIL.terms());
	set.addAll(WordnetNounIndexNameInstancePIM.terms());
	set.addAll(WordnetNounIndexNameInstancePIN.terms());
	set.addAll(WordnetNounIndexNameInstancePIO.terms());
	set.addAll(WordnetNounIndexNameInstancePIP.terms());
	set.addAll(WordnetNounIndexNameInstancePIQ.terms());
	set.addAll(WordnetNounIndexNameInstancePIR.terms());
	set.addAll(WordnetNounIndexNameInstancePIS.terms());
	set.addAll(WordnetNounIndexNameInstancePIT.terms());
	set.addAll(WordnetNounIndexNameInstancePIU.terms());
	set.addAll(WordnetNounIndexNameInstancePIV.terms());
	set.addAll(WordnetNounIndexNameInstancePIX.terms());
	set.addAll(WordnetNounIndexNameInstancePIZ.terms());
  		return set; 	} }