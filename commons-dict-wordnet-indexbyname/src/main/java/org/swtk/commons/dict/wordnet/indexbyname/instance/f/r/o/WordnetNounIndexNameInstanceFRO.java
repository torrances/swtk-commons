package org.swtk.commons.dict.wordnet.indexbyname.instance.f.r.o;  import java.util.ArrayList; import java.util.Collection; import java.util.Map; import java.util.TreeMap;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  import com.trimc.blogger.commons.utils.GsonUtils;  public final class WordnetNounIndexNameInstanceFRO {  	private static Map<String, Collection<IndexNoun>> map = new TreeMap<String, Collection<IndexNoun>>();  	static { 			add("{\"term\":\"frobisher\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11003499\"]}");
	add("{\"term\":\"frock\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03241438\", \"03402989\", \"03403064\"]}");
	add("{\"term\":\"froebel\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11003754\"]}");
	add("{\"term\":\"froelichia\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"11846004\"]}");
	add("{\"term\":\"frog\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03403297\", \"09728044\", \"01642406\"]}");
	add("{\"term\":\"frogbit\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12634169\"]}");
	add("{\"term\":\"frogfish\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02551879\"]}");
	add("{\"term\":\"froghopper\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"02260637\"]}");
	add("{\"term\":\"frogman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10039277\"]}");
	add("{\"term\":\"frogmouth\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"01839713\"]}");
	add("{\"term\":\"frolic\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00512828\"]}");
	add("{\"term\":\"frolicsomeness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04657192\"]}");
	add("{\"term\":\"frond\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"13175289\"]}");
	add("{\"term\":\"front\", \"synsetCount\":10, \"upperType\":\"NOUN\", \"ids\":[\"08481612\", \"08643655\", \"08660207\", \"11480887\", \"14538093\", \"10133352\", \"03403382\", \"05949020\", \"08591221\", \"08591019\"]}");
	add("{\"term\":\"frontage\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03318278\", \"13850156\", \"05131200\"]}");
	add("{\"term\":\"frontal\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"03318278\", \"03403865\", \"03404494\"]}");
	add("{\"term\":\"frontbencher\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10133131\"]}");
	add("{\"term\":\"frontier\", \"synsetCount\":3, \"upperType\":\"NOUN\", \"ids\":[\"06007230\", \"08518135\", \"08522423\"]}");
	add("{\"term\":\"frontiersman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10132841\"]}");
	add("{\"term\":\"frontierswoman\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10133018\"]}");
	add("{\"term\":\"frontispiece\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"03404306\", \"03404415\"]}");
	add("{\"term\":\"frontlet\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03404494\"]}");
	add("{\"term\":\"frontstall\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"03009223\"]}");
	add("{\"term\":\"frost\", \"synsetCount\":4, \"upperType\":\"NOUN\", \"ids\":[\"11003927\", \"13506473\", \"11460617\", \"14939773\"]}");
	add("{\"term\":\"frostbite\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"14318180\"]}");
	add("{\"term\":\"frostiness\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"04968760\", \"05023062\"]}");
	add("{\"term\":\"frosting\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"07636431\"]}");
	add("{\"term\":\"frostweed\", \"synsetCount\":2, \"upperType\":\"NOUN\", \"ids\":[\"12052016\", \"12396286\"]}");
	add("{\"term\":\"frostwort\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"12396286\"]}");
	add("{\"term\":\"froth\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"09305630\"]}");
	add("{\"term\":\"frothiness\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"04740587\"]}");
	add("{\"term\":\"frottage\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"00857705\"]}");
	add("{\"term\":\"frotteur\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"10133638\"]}");
	add("{\"term\":\"frown\", \"synsetCount\":1, \"upperType\":\"NOUN\", \"ids\":[\"06890899\"]}");
 	}  	private static void add(final String JSON) { 		IndexNoun indexNoun = GsonUtils.toObject(JSON, IndexNoun.class); 		Collection<IndexNoun> list = (map.containsKey(indexNoun.getTerm())) ? map.get(indexNoun.getTerm()) : new ArrayList<IndexNoun>(); 		list.add(indexNoun); 		map.put(indexNoun.getTerm(), list); 	} 	 	public static Collection<IndexNoun> get(final String TERM) { 		return map.get(TERM); 	}  	public static boolean has(final String TERM) { 		return map.containsKey(TERM); 	} 	 	public static Collection<String> terms() { 		return map.keySet(); 	} }