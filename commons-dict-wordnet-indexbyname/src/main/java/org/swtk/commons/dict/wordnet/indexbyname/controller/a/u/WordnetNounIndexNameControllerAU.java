package org.swtk.commons.dict.wordnet.indexbyname.controller.a.u;  import java.util.Collection; import java.util.Set; import java.util.TreeSet;  import org.swtk.common.dict.dto.wordnet.IndexNoun;  	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.u.b.WordnetNounIndexNameInstanceAUB;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.u.c.WordnetNounIndexNameInstanceAUC;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.u.d.WordnetNounIndexNameInstanceAUD;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.u.g.WordnetNounIndexNameInstanceAUG;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.u.k.WordnetNounIndexNameInstanceAUK;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.u.l.WordnetNounIndexNameInstanceAUL;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.u.n.WordnetNounIndexNameInstanceAUN;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.u.r.WordnetNounIndexNameInstanceAUR;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.u.s.WordnetNounIndexNameInstanceAUS;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.u.t.WordnetNounIndexNameInstanceAUT;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.u.v.WordnetNounIndexNameInstanceAUV;
	import org.swtk.commons.dict.wordnet.indexbyname.instance.a.u.x.WordnetNounIndexNameInstanceAUX;
  import com.trimc.blogger.commons.exception.BusinessException;  public final class WordnetNounIndexNameControllerAU {  	public static Collection<IndexNoun> get(final String TERM) throws BusinessException { 		if (TERM.length() < 3) throw new BusinessException("TERM not found (term = %s)", TERM); 		 		String key = TERM.substring(0, 3).toLowerCase(); 			if ("aub".equals(key)) return WordnetNounIndexNameInstanceAUB.get(TERM);
	if ("auc".equals(key)) return WordnetNounIndexNameInstanceAUC.get(TERM);
	if ("aud".equals(key)) return WordnetNounIndexNameInstanceAUD.get(TERM);
	if ("aug".equals(key)) return WordnetNounIndexNameInstanceAUG.get(TERM);
	if ("auk".equals(key)) return WordnetNounIndexNameInstanceAUK.get(TERM);
	if ("aul".equals(key)) return WordnetNounIndexNameInstanceAUL.get(TERM);
	if ("aun".equals(key)) return WordnetNounIndexNameInstanceAUN.get(TERM);
	if ("aur".equals(key)) return WordnetNounIndexNameInstanceAUR.get(TERM);
	if ("aus".equals(key)) return WordnetNounIndexNameInstanceAUS.get(TERM);
	if ("aut".equals(key)) return WordnetNounIndexNameInstanceAUT.get(TERM);
	if ("auv".equals(key)) return WordnetNounIndexNameInstanceAUV.get(TERM);
	if ("aux".equals(key)) return WordnetNounIndexNameInstanceAUX.get(TERM);
  		throw new BusinessException("TERM not found (term = %s)", TERM); 	} 	 	public static Collection<String> terms() throws BusinessException { 		Set<String> set = new TreeSet<String>();  			set.addAll(WordnetNounIndexNameInstanceAUB.terms());
	set.addAll(WordnetNounIndexNameInstanceAUC.terms());
	set.addAll(WordnetNounIndexNameInstanceAUD.terms());
	set.addAll(WordnetNounIndexNameInstanceAUG.terms());
	set.addAll(WordnetNounIndexNameInstanceAUK.terms());
	set.addAll(WordnetNounIndexNameInstanceAUL.terms());
	set.addAll(WordnetNounIndexNameInstanceAUN.terms());
	set.addAll(WordnetNounIndexNameInstanceAUR.terms());
	set.addAll(WordnetNounIndexNameInstanceAUS.terms());
	set.addAll(WordnetNounIndexNameInstanceAUT.terms());
	set.addAll(WordnetNounIndexNameInstanceAUV.terms());
	set.addAll(WordnetNounIndexNameInstanceAUX.terms());
  		return set; 	} }